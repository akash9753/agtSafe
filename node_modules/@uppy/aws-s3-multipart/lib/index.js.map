{"version":3,"names":["BasePlugin","Socket","Provider","RequestClient","EventTracker","emitSocketProgress","getSocketHost","RateLimitedQueue","packageJson","MultipartUploader","assertServerError","res","error","Error","message","Object","assign","Symbol","for","AwsS3Multipart","constructor","uppy","opts","file","Client","remote","providerOptions","provider","client","tus","post","url","body","protocol","size","data","metadata","meta","token","setCompanionHeaders","companionHeaders","Promise","resolve","type","id","title","defaultOptions","timeout","limit","retryDelays","createMultipartUpload","bind","listParts","prepareUploadParts","abortMultipartUpload","completeMultipartUpload","upload","requests","uploaders","create","uploaderEvents","uploaderSockets","wrapPromiseFunction","resetUploaderReferences","fileID","abort","really","remove","close","assertHost","method","companionUrl","keys","forEach","key","toString","filename","name","then","uploadId","encodeURIComponent","get","parts","partNumbers","map","part","number","join","uploadIdEnc","delete","uploadFile","reject","queuedRequest","onStart","cFile","getFile","setFileState","s3Multipart","onProgress","bytesUploaded","bytesTotal","emit","uploader","onError","err","log","done","onSuccess","result","uploadObject","uploadResp","uploadURL","location","onPartComplete","getChunkSize","run","isPaused","start","onFileRemove","removed","onCancelAll","reason","onFilePause","pause","onPauseAll","onResumeAll","progress","uploadStarted","isRestored","uploadRemote","serverToken","connectToServerSocket","host","socket","target","send","onRetry","isOpen","onRetryAll","on","progressData","errData","fileIDs","length","promises","isRemote","all","cb","targetFileID","eventHandler","install","capabilities","getState","setState","resumableUploads","addPreProcessor","addUploader","uninstall","removePreProcessor","removeUploader","VERSION","version"],"sources":["index.js"],"sourcesContent":["import BasePlugin from '@uppy/core/lib/BasePlugin.js'\nimport { Socket, Provider, RequestClient } from '@uppy/companion-client'\nimport EventTracker from '@uppy/utils/lib/EventTracker'\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress'\nimport getSocketHost from '@uppy/utils/lib/getSocketHost'\nimport { RateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\n\nimport packageJson from '../package.json'\nimport MultipartUploader from './MultipartUploader.js'\n\nfunction assertServerError (res) {\n  if (res && res.error) {\n    const error = new Error(res.message)\n    Object.assign(error, res.error)\n    throw error\n  }\n  return res\n}\n\nexport default class AwsS3Multipart extends BasePlugin {\n  static VERSION = packageJson.version\n\n  #queueRequestSocketToken\n\n  #client\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = this.opts.id || 'AwsS3Multipart'\n    this.title = 'AWS S3 Multipart'\n    this.#client = new RequestClient(uppy, opts)\n\n    const defaultOptions = {\n      timeout: 30 * 1000,\n      limit: 0,\n      retryDelays: [0, 1000, 3000, 5000],\n      createMultipartUpload: this.createMultipartUpload.bind(this),\n      listParts: this.listParts.bind(this),\n      prepareUploadParts: this.prepareUploadParts.bind(this),\n      abortMultipartUpload: this.abortMultipartUpload.bind(this),\n      completeMultipartUpload: this.completeMultipartUpload.bind(this),\n      companionHeaders: {},\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.upload = this.upload.bind(this)\n\n    this.requests = new RateLimitedQueue(this.opts.limit)\n\n    this.uploaders = Object.create(null)\n    this.uploaderEvents = Object.create(null)\n    this.uploaderSockets = Object.create(null)\n\n    this.#queueRequestSocketToken = this.requests.wrapPromiseFunction(this.#requestSocketToken)\n  }\n\n  [Symbol.for('uppy test: getClient')] () { return this.#client }\n\n  /**\n   * Clean up all references for a file's upload: the MultipartUploader instance,\n   * any events related to the file, and the Companion WebSocket connection.\n   *\n   * Set `opts.abort` to tell S3 that the multipart upload is cancelled and must be removed.\n   * This should be done when the user cancels the upload, not when the upload is completed or errored.\n   */\n  resetUploaderReferences (fileID, opts = {}) {\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort({ really: opts.abort || false })\n      this.uploaders[fileID] = null\n    }\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove()\n      this.uploaderEvents[fileID] = null\n    }\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close()\n      this.uploaderSockets[fileID] = null\n    }\n  }\n\n  assertHost (method) {\n    if (!this.opts.companionUrl) {\n      throw new Error(`Expected a \\`companionUrl\\` option containing a Companion address, or if you are not using Companion, a custom \\`${method}\\` implementation.`)\n    }\n  }\n\n  createMultipartUpload (file) {\n    this.assertHost('createMultipartUpload')\n\n    const metadata = {}\n\n    Object.keys(file.meta).forEach(key => {\n      if (file.meta[key] != null) {\n        metadata[key] = file.meta[key].toString()\n      }\n    })\n\n    return this.#client.post('s3/multipart', {\n      filename: file.name,\n      type: file.type,\n      metadata,\n    }).then(assertServerError)\n  }\n\n  listParts (file, { key, uploadId }) {\n    this.assertHost('listParts')\n\n    const filename = encodeURIComponent(key)\n    return this.#client.get(`s3/multipart/${uploadId}?key=${filename}`)\n      .then(assertServerError)\n  }\n\n  prepareUploadParts (file, { key, uploadId, parts }) {\n    this.assertHost('prepareUploadParts')\n\n    const filename = encodeURIComponent(key)\n    const partNumbers = parts.map((part) => part.number).join(',')\n    return this.#client.get(`s3/multipart/${uploadId}/batch?key=${filename}&partNumbers=${partNumbers}`)\n      .then(assertServerError)\n  }\n\n  completeMultipartUpload (file, { key, uploadId, parts }) {\n    this.assertHost('completeMultipartUpload')\n\n    const filename = encodeURIComponent(key)\n    const uploadIdEnc = encodeURIComponent(uploadId)\n    return this.#client.post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, { parts })\n      .then(assertServerError)\n  }\n\n  abortMultipartUpload (file, { key, uploadId }) {\n    this.assertHost('abortMultipartUpload')\n\n    const filename = encodeURIComponent(key)\n    const uploadIdEnc = encodeURIComponent(uploadId)\n    return this.#client.delete(`s3/multipart/${uploadIdEnc}?key=${filename}`)\n      .then(assertServerError)\n  }\n\n  uploadFile (file) {\n    return new Promise((resolve, reject) => {\n      let queuedRequest\n\n      const onStart = (data) => {\n        const cFile = this.uppy.getFile(file.id)\n        this.uppy.setFileState(file.id, {\n          s3Multipart: {\n            ...cFile.s3Multipart,\n            key: data.key,\n            uploadId: data.uploadId,\n          },\n        })\n      }\n\n      const onProgress = (bytesUploaded, bytesTotal) => {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded,\n          bytesTotal,\n        })\n      }\n\n      const onError = (err) => {\n        this.uppy.log(err)\n        this.uppy.emit('upload-error', file, err)\n\n        queuedRequest.done()\n        this.resetUploaderReferences(file.id)\n        reject(err)\n      }\n\n      const onSuccess = (result) => {\n        const uploadObject = upload // eslint-disable-line no-use-before-define\n        const uploadResp = {\n          body: {\n            ...result,\n          },\n          uploadURL: result.location,\n        }\n\n        queuedRequest.done()\n        this.resetUploaderReferences(file.id)\n\n        const cFile = this.uppy.getFile(file.id)\n        this.uppy.emit('upload-success', cFile || file, uploadResp)\n\n        if (result.location) {\n          this.uppy.log(`Download ${uploadObject.file.name} from ${result.location}`)\n        }\n\n        resolve(uploadObject)\n      }\n\n      const onPartComplete = (part) => {\n        const cFile = this.uppy.getFile(file.id)\n        if (!cFile) {\n          return\n        }\n\n        this.uppy.emit('s3-multipart:part-uploaded', cFile, part)\n      }\n\n      const upload = new MultipartUploader(file.data, {\n        // .bind to pass the file object to each handler.\n        createMultipartUpload: this.opts.createMultipartUpload.bind(this, file),\n        listParts: this.opts.listParts.bind(this, file),\n        prepareUploadParts: this.opts.prepareUploadParts.bind(this, file),\n        completeMultipartUpload: this.opts.completeMultipartUpload.bind(this, file),\n        abortMultipartUpload: this.opts.abortMultipartUpload.bind(this, file),\n        getChunkSize: this.opts.getChunkSize ? this.opts.getChunkSize.bind(this) : null,\n\n        onStart,\n        onProgress,\n        onError,\n        onSuccess,\n        onPartComplete,\n\n        limit: this.opts.limit || 5,\n        retryDelays: this.opts.retryDelays || [],\n        ...file.s3Multipart,\n      })\n\n      this.uploaders[file.id] = upload\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      queuedRequest = this.requests.run(() => {\n        if (!file.isPaused) {\n          upload.start()\n        }\n        // Don't do anything here, the caller will take care of cancelling the upload itself\n        // using resetUploaderReferences(). This is because resetUploaderReferences() has to be\n        // called when this request is still in the queue, and has not been started yet, too. At\n        // that point this cancellation function is not going to be called.\n        return () => {}\n      })\n\n      this.onFileRemove(file.id, (removed) => {\n        queuedRequest.abort()\n        this.resetUploaderReferences(file.id, { abort: true })\n        resolve(`upload ${removed.id} was removed`)\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n          this.resetUploaderReferences(file.id, { abort: true })\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.onFilePause(file.id, (isPaused) => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort()\n          upload.pause()\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort()\n          queuedRequest = this.requests.run(() => {\n            upload.start()\n            return () => {}\n          })\n        }\n      })\n\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort()\n        upload.pause()\n      })\n\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort()\n        if (file.error) {\n          upload.abort()\n        }\n        queuedRequest = this.requests.run(() => {\n          upload.start()\n          return () => {}\n        })\n      })\n\n      // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n      if (!file.progress.uploadStarted || !file.isRestored) {\n        this.uppy.emit('upload-started', file)\n      }\n    })\n  }\n\n  #requestSocketToken = async (file) => {\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    const opts = { ...this.opts }\n\n    if (file.tus) {\n      // Install file-specific upload overrides.\n      Object.assign(opts, file.tus)\n    }\n\n    const res = await client.post(file.remote.url, {\n      ...file.remote.body,\n      protocol: 's3-multipart',\n      size: file.data.size,\n      metadata: file.meta,\n    })\n    return res.token\n  }\n\n  async uploadRemote (file) {\n    this.resetUploaderReferences(file.id)\n\n    // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n    if (!file.progress.uploadStarted || !file.isRestored) {\n      this.uppy.emit('upload-started', file)\n    }\n\n    try {\n      if (file.serverToken) {\n        return this.connectToServerSocket(file)\n      }\n      const serverToken = await this.#queueRequestSocketToken(file)\n\n      this.uppy.setFileState(file.id, { serverToken })\n      return this.connectToServerSocket(this.uppy.getFile(file.id))\n    } catch (err) {\n      this.uppy.emit('upload-error', file, err)\n      throw err\n    }\n  }\n\n  connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      let queuedRequest\n\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.companionUrl)\n      const socket = new Socket({ target: `${host}/api/${token}` })\n      this.uploaderSockets[file.id] = socket\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort()\n        socket.send('cancel', {})\n        this.resetUploaderReferences(file.id, { abort: true })\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.onFilePause(file.id, (isPaused) => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort()\n          socket.send('pause', {})\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort()\n          queuedRequest = this.requests.run(() => {\n            socket.send('resume', {})\n            return () => {}\n          })\n        }\n      })\n\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort()\n        socket.send('pause', {})\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n          socket.send('cancel', {})\n          this.resetUploaderReferences(file.id)\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort()\n        if (file.error) {\n          socket.send('pause', {})\n        }\n        queuedRequest = this.requests.run(() => {\n          socket.send('resume', {})\n        })\n      })\n\n      this.onRetry(file.id, () => {\n        // Only do the retry if the upload is actually in progress;\n        // else we could try to send these messages when the upload is still queued.\n        // We may need a better check for this since the socket may also be closed\n        // for other reasons, like network failures.\n        if (socket.isOpen) {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        }\n      })\n\n      this.onRetryAll(file.id, () => {\n        if (socket.isOpen) {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        }\n      })\n\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n      socket.on('error', (errData) => {\n        this.uppy.emit('upload-error', file, new Error(errData.error))\n        this.resetUploaderReferences(file.id)\n        queuedRequest.done()\n        reject(new Error(errData.error))\n      })\n\n      socket.on('success', (data) => {\n        const uploadResp = {\n          uploadURL: data.url,\n        }\n\n        this.uppy.emit('upload-success', file, uploadResp)\n        this.resetUploaderReferences(file.id)\n        queuedRequest.done()\n        resolve()\n      })\n\n      queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket.send('pause', {})\n        }\n\n        return () => {}\n      })\n    })\n  }\n\n  upload (fileIDs) {\n    if (fileIDs.length === 0) return Promise.resolve()\n\n    const promises = fileIDs.map((id) => {\n      const file = this.uppy.getFile(id)\n      if (file.isRemote) {\n        return this.uploadRemote(file)\n      }\n      return this.uploadFile(file)\n    })\n\n    return Promise.all(promises)\n  }\n\n  #setCompanionHeaders = () => {\n    this.#client.setCompanionHeaders(this.opts.companionHeaders)\n    return Promise.resolve()\n  }\n\n  onFileRemove (fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\n      if (fileID === file.id) cb(file.id)\n    })\n  }\n\n  onFilePause (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        // const isPaused = this.uppy.pauseResume(fileID)\n        cb(isPaused)\n      }\n    })\n  }\n\n  onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onPauseAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('pause-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onCancelAll (fileID, eventHandler) {\n    this.uploaderEvents[fileID].on('cancel-all', (...args) => {\n      if (!this.uppy.getFile(fileID)) return\n      eventHandler(...args)\n    })\n  }\n\n  onResumeAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('resume-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  install () {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        resumableUploads: true,\n      },\n    })\n    this.uppy.addPreProcessor(this.#setCompanionHeaders)\n    this.uppy.addUploader(this.upload)\n  }\n\n  uninstall () {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        resumableUploads: false,\n      },\n    })\n    this.uppy.removePreProcessor(this.#setCompanionHeaders)\n    this.uppy.removeUploader(this.upload)\n  }\n}\n"],"mappings":"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"}