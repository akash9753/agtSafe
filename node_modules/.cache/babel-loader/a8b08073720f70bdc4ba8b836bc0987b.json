{"ast":null,"code":"import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Emitter = monaco.Emitter;\n// --- JSON configuration and defaults ---------\nvar LanguageServiceDefaultsImpl = /** @class */function () {\n  function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions, modeConfiguration) {\n    this._onDidChange = new Emitter();\n    this._languageId = languageId;\n    this.setDiagnosticsOptions(diagnosticsOptions);\n    this.setModeConfiguration(modeConfiguration);\n  }\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\n    get: function get() {\n      return this._onDidChange.event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\n    get: function get() {\n      return this._languageId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\n    get: function get() {\n      return this._modeConfiguration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\n    get: function get() {\n      return this._diagnosticsOptions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\n    this._diagnosticsOptions = options || Object.create(null);\n    this._onDidChange.fire(this);\n  };\n  LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\n    this._modeConfiguration = modeConfiguration || Object.create(null);\n    this._onDidChange.fire(this);\n  };\n  ;\n  return LanguageServiceDefaultsImpl;\n}();\nexport { LanguageServiceDefaultsImpl };\nvar diagnosticDefault = {\n  validate: true,\n  allowComments: true,\n  schemas: [],\n  enableSchemaRequest: false\n};\nvar modeConfigurationDefault = {\n  documentFormattingEdits: true,\n  documentRangeFormattingEdits: true,\n  completionItems: true,\n  hovers: true,\n  documentSymbols: true,\n  tokens: true,\n  colors: true,\n  foldingRanges: true,\n  diagnostics: true,\n  selectionRanges: true\n};\nvar jsonDefaults = new LanguageServiceDefaultsImpl('json', diagnosticDefault, modeConfigurationDefault);\n// Export API\nfunction createAPI() {\n  return {\n    jsonDefaults: jsonDefaults\n  };\n}\nmonaco.languages.json = createAPI();\n// --- Registration to monaco editor ---\nfunction getMode() {\n  return import('./jsonMode.js');\n}\nmonaco.languages.register({\n  id: 'json',\n  extensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc', '.babelrc', '.har'],\n  aliases: ['JSON', 'json'],\n  mimetypes: ['application/json']\n});\nmonaco.languages.onLanguage('json', function () {\n  getMode().then(function (mode) {\n    return mode.setupMode(jsonDefaults);\n  });\n});","map":{"version":3,"names":["Emitter","monaco","LanguageServiceDefaultsImpl","languageId","diagnosticsOptions","modeConfiguration","_onDidChange","_languageId","setDiagnosticsOptions","setModeConfiguration","Object","defineProperty","prototype","get","event","enumerable","configurable","_modeConfiguration","_diagnosticsOptions","options","create","fire","diagnosticDefault","validate","allowComments","schemas","enableSchemaRequest","modeConfigurationDefault","documentFormattingEdits","documentRangeFormattingEdits","completionItems","hovers","documentSymbols","tokens","colors","foldingRanges","diagnostics","selectionRanges","jsonDefaults","createAPI","languages","json","getMode","register","id","extensions","aliases","mimetypes","onLanguage","then","mode","setupMode"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js"],"sourcesContent":["import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar Emitter = monaco.Emitter;\r\n// --- JSON configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setDiagnosticsOptions(diagnosticsOptions);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this._diagnosticsOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this._diagnosticsOptions = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    ;\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nexport { LanguageServiceDefaultsImpl };\r\nvar diagnosticDefault = {\r\n    validate: true,\r\n    allowComments: true,\r\n    schemas: [],\r\n    enableSchemaRequest: false\r\n};\r\nvar modeConfigurationDefault = {\r\n    documentFormattingEdits: true,\r\n    documentRangeFormattingEdits: true,\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    tokens: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nvar jsonDefaults = new LanguageServiceDefaultsImpl('json', diagnosticDefault, modeConfigurationDefault);\r\n// Export API\r\nfunction createAPI() {\r\n    return {\r\n        jsonDefaults: jsonDefaults\r\n    };\r\n}\r\nmonaco.languages.json = createAPI();\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./jsonMode.js');\r\n}\r\nmonaco.languages.register({\r\n    id: 'json',\r\n    extensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc', '.babelrc', '.har'],\r\n    aliases: ['JSON', 'json'],\r\n    mimetypes: ['application/json'],\r\n});\r\nmonaco.languages.onLanguage('json', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(jsonDefaults); });\r\n});\r\n"],"mappings":"AAAA,OAAO,4BAA4B;AACnC;AACA;AACA;AACA;AACA,YAAY;AACZ,IAAIA,OAAO,GAAGC,MAAM,CAACD,OAAO;AAC5B;AACA,IAAIE,2BAA2B,GAAG,aAAe,YAAY;EACzD,SAASA,2BAA2B,CAACC,UAAU,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAE;IACpF,IAAI,CAACC,YAAY,GAAG,IAAIN,OAAO,EAAE;IACjC,IAAI,CAACO,WAAW,GAAGJ,UAAU;IAC7B,IAAI,CAACK,qBAAqB,CAACJ,kBAAkB,CAAC;IAC9C,IAAI,CAACK,oBAAoB,CAACJ,iBAAiB,CAAC;EAChD;EACAK,MAAM,CAACC,cAAc,CAACT,2BAA2B,CAACU,SAAS,EAAE,aAAa,EAAE;IACxEC,GAAG,EAAE,eAAY;MACb,OAAO,IAAI,CAACP,YAAY,CAACQ,KAAK;IAClC,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACC,cAAc,CAACT,2BAA2B,CAACU,SAAS,EAAE,YAAY,EAAE;IACvEC,GAAG,EAAE,eAAY;MACb,OAAO,IAAI,CAACN,WAAW;IAC3B,CAAC;IACDQ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACC,cAAc,CAACT,2BAA2B,CAACU,SAAS,EAAE,mBAAmB,EAAE;IAC9EC,GAAG,EAAE,eAAY;MACb,OAAO,IAAI,CAACI,kBAAkB;IAClC,CAAC;IACDF,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACC,cAAc,CAACT,2BAA2B,CAACU,SAAS,EAAE,oBAAoB,EAAE;IAC/EC,GAAG,EAAE,eAAY;MACb,OAAO,IAAI,CAACK,mBAAmB;IACnC,CAAC;IACDH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFd,2BAA2B,CAACU,SAAS,CAACJ,qBAAqB,GAAG,UAAUW,OAAO,EAAE;IAC7E,IAAI,CAACD,mBAAmB,GAAGC,OAAO,IAAIT,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC;IACzD,IAAI,CAACd,YAAY,CAACe,IAAI,CAAC,IAAI,CAAC;EAChC,CAAC;EACDnB,2BAA2B,CAACU,SAAS,CAACH,oBAAoB,GAAG,UAAUJ,iBAAiB,EAAE;IACtF,IAAI,CAACY,kBAAkB,GAAGZ,iBAAiB,IAAIK,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC;IAClE,IAAI,CAACd,YAAY,CAACe,IAAI,CAAC,IAAI,CAAC;EAChC,CAAC;EACD;EACA,OAAOnB,2BAA2B;AACtC,CAAC,EAAG;AACJ,SAASA,2BAA2B;AACpC,IAAIoB,iBAAiB,GAAG;EACpBC,QAAQ,EAAE,IAAI;EACdC,aAAa,EAAE,IAAI;EACnBC,OAAO,EAAE,EAAE;EACXC,mBAAmB,EAAE;AACzB,CAAC;AACD,IAAIC,wBAAwB,GAAG;EAC3BC,uBAAuB,EAAE,IAAI;EAC7BC,4BAA4B,EAAE,IAAI;EAClCC,eAAe,EAAE,IAAI;EACrBC,MAAM,EAAE,IAAI;EACZC,eAAe,EAAE,IAAI;EACrBC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE,IAAI;EACZC,aAAa,EAAE,IAAI;EACnBC,WAAW,EAAE,IAAI;EACjBC,eAAe,EAAE;AACrB,CAAC;AACD,IAAIC,YAAY,GAAG,IAAIpC,2BAA2B,CAAC,MAAM,EAAEoB,iBAAiB,EAAEK,wBAAwB,CAAC;AACvG;AACA,SAASY,SAAS,GAAG;EACjB,OAAO;IACHD,YAAY,EAAEA;EAClB,CAAC;AACL;AACArC,MAAM,CAACuC,SAAS,CAACC,IAAI,GAAGF,SAAS,EAAE;AACnC;AACA,SAASG,OAAO,GAAG;EACf,OAAO,MAAM,CAAC,eAAe,CAAC;AAClC;AACAzC,MAAM,CAACuC,SAAS,CAACG,QAAQ,CAAC;EACtBC,EAAE,EAAE,MAAM;EACVC,UAAU,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,CAAC;EAC1FC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACzBC,SAAS,EAAE,CAAC,kBAAkB;AAClC,CAAC,CAAC;AACF9C,MAAM,CAACuC,SAAS,CAACQ,UAAU,CAAC,MAAM,EAAE,YAAY;EAC5CN,OAAO,EAAE,CAACO,IAAI,CAAC,UAAUC,IAAI,EAAE;IAAE,OAAOA,IAAI,CAACC,SAAS,CAACb,YAAY,CAAC;EAAE,CAAC,CAAC;AAC5E,CAAC,CAAC"},"metadata":{},"sourceType":"module"}