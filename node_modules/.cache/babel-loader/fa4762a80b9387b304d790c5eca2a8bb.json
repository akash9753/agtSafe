{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UnresolvedSchema } from './jsonSchemaService.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nimport { isBoolean } from '../utils/objects.js';\nvar localize = nls.loadMessageBundle();\nvar JSONValidation = /** @class */function () {\n  function JSONValidation(jsonSchemaService, promiseConstructor) {\n    this.jsonSchemaService = jsonSchemaService;\n    this.promise = promiseConstructor;\n    this.validationEnabled = true;\n  }\n  JSONValidation.prototype.configure = function (raw) {\n    if (raw) {\n      this.validationEnabled = raw.validate;\n      this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n    }\n  };\n  JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings, schema) {\n    var _this = this;\n    if (!this.validationEnabled) {\n      return this.promise.resolve([]);\n    }\n    var diagnostics = [];\n    var added = {};\n    var addProblem = function addProblem(problem) {\n      // remove duplicated messages\n      var signature = problem.range.start.line + ' ' + problem.range.start.character + ' ' + problem.message;\n      if (!added[signature]) {\n        added[signature] = true;\n        diagnostics.push(problem);\n      }\n    };\n    var getDiagnostics = function getDiagnostics(schema) {\n      var trailingCommaSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n      var commentSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.comments) : _this.commentSeverity;\n      if (schema) {\n        if (schema.errors.length && jsonDocument.root) {\n          var astRoot = jsonDocument.root;\n          var property = astRoot.type === 'object' ? astRoot.properties[0] : null;\n          if (property && property.keyNode.value === '$schema') {\n            var node = property.valueNode || property;\n            var range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n            addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n          } else {\n            var range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n            addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n          }\n        } else {\n          var semanticErrors = jsonDocument.validate(textDocument, schema.schema);\n          if (semanticErrors) {\n            semanticErrors.forEach(addProblem);\n          }\n        }\n        if (schemaAllowsComments(schema.schema)) {\n          commentSeverity = void 0;\n        }\n        if (schemaAllowsTrailingCommas(schema.schema)) {\n          trailingCommaSeverity = void 0;\n        }\n      }\n      for (var _i = 0, _a = jsonDocument.syntaxErrors; _i < _a.length; _i++) {\n        var p = _a[_i];\n        if (p.code === ErrorCode.TrailingComma) {\n          if (typeof trailingCommaSeverity !== 'number') {\n            continue;\n          }\n          p.severity = trailingCommaSeverity;\n        }\n        addProblem(p);\n      }\n      if (typeof commentSeverity === 'number') {\n        var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n        jsonDocument.comments.forEach(function (c) {\n          addProblem(Diagnostic.create(c, message_1, commentSeverity, ErrorCode.CommentNotPermitted));\n        });\n      }\n      return diagnostics;\n    };\n    if (schema) {\n      var id = schema.id || 'schemaservice://untitled/' + idCounter++;\n      return this.jsonSchemaService.resolveSchemaContent(new UnresolvedSchema(schema), id, {}).then(function (resolvedSchema) {\n        return getDiagnostics(resolvedSchema);\n      });\n    }\n    return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n      return getDiagnostics(schema);\n    });\n  };\n  return JSONValidation;\n}();\nexport { JSONValidation };\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n  if (schemaRef && typeof schemaRef === 'object') {\n    if (isBoolean(schemaRef.allowComments)) {\n      return schemaRef.allowComments;\n    }\n    if (schemaRef.allOf) {\n      for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n        var schema = _a[_i];\n        var allow = schemaAllowsComments(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return undefined;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n  if (schemaRef && typeof schemaRef === 'object') {\n    if (isBoolean(schemaRef.allowTrailingCommas)) {\n      return schemaRef.allowTrailingCommas;\n    }\n    if (isBoolean(schemaRef['allowsTrailingCommas'])) {\n      // deprecated\n      return schemaRef['allowsTrailingCommas'];\n    }\n    if (schemaRef.allOf) {\n      for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n        var schema = _a[_i];\n        var allow = schemaAllowsTrailingCommas(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return undefined;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n  switch (severityLevel) {\n    case 'error':\n      return DiagnosticSeverity.Error;\n    case 'warning':\n      return DiagnosticSeverity.Warning;\n    case 'ignore':\n      return void 0;\n  }\n  return void 0;\n}","map":{"version":3,"names":["UnresolvedSchema","ErrorCode","Diagnostic","DiagnosticSeverity","Range","nls","isBoolean","localize","loadMessageBundle","JSONValidation","jsonSchemaService","promiseConstructor","promise","validationEnabled","prototype","configure","raw","validate","commentSeverity","allowComments","Error","doValidation","textDocument","jsonDocument","documentSettings","schema","_this","resolve","diagnostics","added","addProblem","problem","signature","range","start","line","character","message","push","getDiagnostics","trailingCommaSeverity","toDiagnosticSeverity","trailingCommas","comments","errors","length","root","astRoot","property","type","properties","keyNode","value","node","valueNode","create","positionAt","offset","Warning","SchemaResolveError","semanticErrors","forEach","schemaAllowsComments","schemaAllowsTrailingCommas","_i","_a","syntaxErrors","p","code","TrailingComma","severity","message_1","c","CommentNotPermitted","id","idCounter","resolveSchemaContent","then","resolvedSchema","getSchemaForResource","uri","schemaRef","allOf","allow","undefined","allowTrailingCommas","severityLevel"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonValidation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UnresolvedSchema } from './jsonSchemaService.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nimport { isBoolean } from '../utils/objects.js';\nvar localize = nls.loadMessageBundle();\nvar JSONValidation = /** @class */ (function () {\n    function JSONValidation(jsonSchemaService, promiseConstructor) {\n        this.jsonSchemaService = jsonSchemaService;\n        this.promise = promiseConstructor;\n        this.validationEnabled = true;\n    }\n    JSONValidation.prototype.configure = function (raw) {\n        if (raw) {\n            this.validationEnabled = raw.validate;\n            this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n        }\n    };\n    JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings, schema) {\n        var _this = this;\n        if (!this.validationEnabled) {\n            return this.promise.resolve([]);\n        }\n        var diagnostics = [];\n        var added = {};\n        var addProblem = function (problem) {\n            // remove duplicated messages\n            var signature = problem.range.start.line + ' ' + problem.range.start.character + ' ' + problem.message;\n            if (!added[signature]) {\n                added[signature] = true;\n                diagnostics.push(problem);\n            }\n        };\n        var getDiagnostics = function (schema) {\n            var trailingCommaSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n            var commentSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.comments) : _this.commentSeverity;\n            if (schema) {\n                if (schema.errors.length && jsonDocument.root) {\n                    var astRoot = jsonDocument.root;\n                    var property = astRoot.type === 'object' ? astRoot.properties[0] : null;\n                    if (property && property.keyNode.value === '$schema') {\n                        var node = property.valueNode || property;\n                        var range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                    else {\n                        var range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                }\n                else {\n                    var semanticErrors = jsonDocument.validate(textDocument, schema.schema);\n                    if (semanticErrors) {\n                        semanticErrors.forEach(addProblem);\n                    }\n                }\n                if (schemaAllowsComments(schema.schema)) {\n                    commentSeverity = void 0;\n                }\n                if (schemaAllowsTrailingCommas(schema.schema)) {\n                    trailingCommaSeverity = void 0;\n                }\n            }\n            for (var _i = 0, _a = jsonDocument.syntaxErrors; _i < _a.length; _i++) {\n                var p = _a[_i];\n                if (p.code === ErrorCode.TrailingComma) {\n                    if (typeof trailingCommaSeverity !== 'number') {\n                        continue;\n                    }\n                    p.severity = trailingCommaSeverity;\n                }\n                addProblem(p);\n            }\n            if (typeof commentSeverity === 'number') {\n                var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n                jsonDocument.comments.forEach(function (c) {\n                    addProblem(Diagnostic.create(c, message_1, commentSeverity, ErrorCode.CommentNotPermitted));\n                });\n            }\n            return diagnostics;\n        };\n        if (schema) {\n            var id = schema.id || ('schemaservice://untitled/' + idCounter++);\n            return this.jsonSchemaService.resolveSchemaContent(new UnresolvedSchema(schema), id, {}).then(function (resolvedSchema) {\n                return getDiagnostics(resolvedSchema);\n            });\n        }\n        return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n            return getDiagnostics(schema);\n        });\n    };\n    return JSONValidation;\n}());\nexport { JSONValidation };\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowComments)) {\n            return schemaRef.allowComments;\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsComments(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowTrailingCommas)) {\n            return schemaRef.allowTrailingCommas;\n        }\n        if (isBoolean(schemaRef['allowsTrailingCommas'])) { // deprecated\n            return schemaRef['allowsTrailingCommas'];\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsTrailingCommas(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n    switch (severityLevel) {\n        case 'error': return DiagnosticSeverity.Error;\n        case 'warning': return DiagnosticSeverity.Warning;\n        case 'ignore': return void 0;\n    }\n    return void 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}