{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */function () {\n  function ErrorHandler() {\n    this.listeners = [];\n    this.unexpectedErrorHandler = function (e) {\n      setTimeout(function () {\n        if (e.stack) {\n          throw new Error(e.message + '\\n\\n' + e.stack);\n        }\n        throw e;\n      }, 0);\n    };\n  }\n  ErrorHandler.prototype.emit = function (e) {\n    this.listeners.forEach(function (listener) {\n      listener(e);\n    });\n  };\n  ErrorHandler.prototype.onUnexpectedError = function (e) {\n    this.unexpectedErrorHandler(e);\n    this.emit(e);\n  };\n  // For external errors, we don't want the listeners to be called\n  ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n    this.unexpectedErrorHandler(e);\n  };\n  return ErrorHandler;\n}();\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedError(e);\n  }\n  return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedExternalError(e);\n  }\n  return undefined;\n}\nexport function transformErrorForSerialization(error) {\n  if (error instanceof Error) {\n    var name_1 = error.name,\n      message = error.message;\n    var stack = error.stacktrace || error.stack;\n    return {\n      $isError: true,\n      name: name_1,\n      message: message,\n      stack: stack\n    };\n  }\n  // return as is\n  return error;\n}\nvar canceledName = 'Canceled';\n/**\r\n * Checks if the given error is a promise in canceled state\r\n */\nexport function isPromiseCanceledError(error) {\n  return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\r\n * Returns an error that signals cancellation.\r\n */\nexport function canceled() {\n  var error = new Error(canceledName);\n  error.name = error.message;\n  return error;\n}\nexport function illegalArgument(name) {\n  if (name) {\n    return new Error(\"Illegal argument: \" + name);\n  } else {\n    return new Error('Illegal argument');\n  }\n}\nexport function illegalState(name) {\n  if (name) {\n    return new Error(\"Illegal state: \" + name);\n  } else {\n    return new Error('Illegal state');\n  }\n}","map":{"version":3,"names":["ErrorHandler","listeners","unexpectedErrorHandler","e","setTimeout","stack","Error","message","prototype","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","undefined","transformErrorForSerialization","error","name_1","name","stacktrace","$isError","canceledName","canceled","illegalArgument","illegalState"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/errors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\r\nvar ErrorHandler = /** @class */ (function () {\r\n    function ErrorHandler() {\r\n        this.listeners = [];\r\n        this.unexpectedErrorHandler = function (e) {\r\n            setTimeout(function () {\r\n                if (e.stack) {\r\n                    throw new Error(e.message + '\\n\\n' + e.stack);\r\n                }\r\n                throw e;\r\n            }, 0);\r\n        };\r\n    }\r\n    ErrorHandler.prototype.emit = function (e) {\r\n        this.listeners.forEach(function (listener) {\r\n            listener(e);\r\n        });\r\n    };\r\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n        this.emit(e);\r\n    };\r\n    // For external errors, we don't want the listeners to be called\r\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n    };\r\n    return ErrorHandler;\r\n}());\r\nexport { ErrorHandler };\r\nexport var errorHandler = new ErrorHandler();\r\nexport function onUnexpectedError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function onUnexpectedExternalError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedExternalError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function transformErrorForSerialization(error) {\r\n    if (error instanceof Error) {\r\n        var name_1 = error.name, message = error.message;\r\n        var stack = error.stacktrace || error.stack;\r\n        return {\r\n            $isError: true,\r\n            name: name_1,\r\n            message: message,\r\n            stack: stack\r\n        };\r\n    }\r\n    // return as is\r\n    return error;\r\n}\r\nvar canceledName = 'Canceled';\r\n/**\r\n * Checks if the given error is a promise in canceled state\r\n */\r\nexport function isPromiseCanceledError(error) {\r\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\r\n}\r\n/**\r\n * Returns an error that signals cancellation.\r\n */\r\nexport function canceled() {\r\n    var error = new Error(canceledName);\r\n    error.name = error.message;\r\n    return error;\r\n}\r\nexport function illegalArgument(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal argument: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal argument');\r\n    }\r\n}\r\nexport function illegalState(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal state: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal state');\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}