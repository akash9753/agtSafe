{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n  for (var i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n  var diff = haystack.length - needle.length;\n  if (diff > 0) {\n    return haystack.lastIndexOf(needle) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n  var i;\n  var len = Math.min(a.length, b.length);\n  for (i = 0; i < len; i++) {\n    if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n      return i;\n    }\n  }\n  return len;\n}\nexport function repeat(value, count) {\n  var s = '';\n  while (count > 0) {\n    if ((count & 1) === 1) {\n      s += value;\n    }\n    value += value;\n    count = count >>> 1;\n  }\n  return s;\n}\nvar _a = 'a'.charCodeAt(0);\nvar _z = 'z'.charCodeAt(0);\nvar _A = 'A'.charCodeAt(0);\nvar _Z = 'Z'.charCodeAt(0);\nvar _0 = '0'.charCodeAt(0);\nvar _9 = '9'.charCodeAt(0);\nexport function isLetterOrDigit(text, index) {\n  var c = text.charCodeAt(index);\n  return _a <= c && c <= _z || _A <= c && c <= _Z || _0 <= c && c <= _9;\n}","map":{"version":3,"names":["startsWith","haystack","needle","length","i","endsWith","diff","lastIndexOf","commonPrefixLength","a","b","len","Math","min","charCodeAt","repeat","value","count","s","_a","_z","_A","_Z","_0","_9","isLetterOrDigit","text","index","c"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i;\n    var len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\nexport function repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\nvar _a = 'a'.charCodeAt(0);\nvar _z = 'z'.charCodeAt(0);\nvar _A = 'A'.charCodeAt(0);\nvar _Z = 'Z'.charCodeAt(0);\nvar _0 = '0'.charCodeAt(0);\nvar _9 = '9'.charCodeAt(0);\nexport function isLetterOrDigit(text, index) {\n    var c = text.charCodeAt(index);\n    return (_a <= c && c <= _z) || (_A <= c && c <= _Z) || (_0 <= c && c <= _9);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAU,CAACC,QAAQ,EAAEC,MAAM,EAAE;EACzC,IAAID,QAAQ,CAACE,MAAM,GAAGD,MAAM,CAACC,MAAM,EAAE;IACjC,OAAO,KAAK;EAChB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;IACpC,IAAIH,QAAQ,CAACG,CAAC,CAAC,KAAKF,MAAM,CAACE,CAAC,CAAC,EAAE;MAC3B,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQ,CAACJ,QAAQ,EAAEC,MAAM,EAAE;EACvC,IAAII,IAAI,GAAGL,QAAQ,CAACE,MAAM,GAAGD,MAAM,CAACC,MAAM;EAC1C,IAAIG,IAAI,GAAG,CAAC,EAAE;IACV,OAAOL,QAAQ,CAACM,WAAW,CAACL,MAAM,CAAC,KAAKI,IAAI;EAChD,CAAC,MACI,IAAIA,IAAI,KAAK,CAAC,EAAE;IACjB,OAAOL,QAAQ,KAAKC,MAAM;EAC9B,CAAC,MACI;IACD,OAAO,KAAK;EAChB;AACJ;AACA;AACA;AACA;AACA,OAAO,SAASM,kBAAkB,CAACC,CAAC,EAAEC,CAAC,EAAE;EACrC,IAAIN,CAAC;EACL,IAAIO,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACJ,CAAC,CAACN,MAAM,EAAEO,CAAC,CAACP,MAAM,CAAC;EACtC,KAAKC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,GAAG,EAAEP,CAAC,EAAE,EAAE;IACtB,IAAIK,CAAC,CAACK,UAAU,CAACV,CAAC,CAAC,KAAKM,CAAC,CAACI,UAAU,CAACV,CAAC,CAAC,EAAE;MACrC,OAAOA,CAAC;IACZ;EACJ;EACA,OAAOO,GAAG;AACd;AACA,OAAO,SAASI,MAAM,CAACC,KAAK,EAAEC,KAAK,EAAE;EACjC,IAAIC,CAAC,GAAG,EAAE;EACV,OAAOD,KAAK,GAAG,CAAC,EAAE;IACd,IAAI,CAACA,KAAK,GAAG,CAAC,MAAM,CAAC,EAAE;MACnBC,CAAC,IAAIF,KAAK;IACd;IACAA,KAAK,IAAIA,KAAK;IACdC,KAAK,GAAGA,KAAK,KAAK,CAAC;EACvB;EACA,OAAOC,CAAC;AACZ;AACA,IAAIC,EAAE,GAAG,GAAG,CAACL,UAAU,CAAC,CAAC,CAAC;AAC1B,IAAIM,EAAE,GAAG,GAAG,CAACN,UAAU,CAAC,CAAC,CAAC;AAC1B,IAAIO,EAAE,GAAG,GAAG,CAACP,UAAU,CAAC,CAAC,CAAC;AAC1B,IAAIQ,EAAE,GAAG,GAAG,CAACR,UAAU,CAAC,CAAC,CAAC;AAC1B,IAAIS,EAAE,GAAG,GAAG,CAACT,UAAU,CAAC,CAAC,CAAC;AAC1B,IAAIU,EAAE,GAAG,GAAG,CAACV,UAAU,CAAC,CAAC,CAAC;AAC1B,OAAO,SAASW,eAAe,CAACC,IAAI,EAAEC,KAAK,EAAE;EACzC,IAAIC,CAAC,GAAGF,IAAI,CAACZ,UAAU,CAACa,KAAK,CAAC;EAC9B,OAAQR,EAAE,IAAIS,CAAC,IAAIA,CAAC,IAAIR,EAAE,IAAMC,EAAE,IAAIO,CAAC,IAAIA,CAAC,IAAIN,EAAG,IAAKC,EAAE,IAAIK,CAAC,IAAIA,CAAC,IAAIJ,EAAG;AAC/E"},"metadata":{},"sourceType":"module"}