{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Auth0Lock from 'auth0-lock';\nimport history from './history';\nimport { Auth0Config } from '../../settings';\nimport { notification } from '../../components';\nvar Auth0Helper = /*#__PURE__*/function () {\n  function Auth0Helper() {\n    _classCallCheck(this, Auth0Helper);\n    this.isValid = Auth0Config.clientID && Auth0Config.domain;\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n  _createClass(Auth0Helper, [{\n    key: \"login\",\n    value: function login(handleLogin) {\n      this.lock = this.isValid ? new Auth0Lock(Auth0Config.clientID, Auth0Config.domain, Auth0Config.options) : null;\n      if (!this.lock) {\n        return;\n      }\n      this.lock.on('authenticated', function (authResult) {\n        if (authResult && authResult.accessToken) {\n          if (window) {\n            localStorage.setItem('id_token', authResult.accessToken);\n          }\n          handleLogin();\n        } else {\n          notification('error', 'Wrong mail or password');\n        }\n      });\n      this.lock.show();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication(props) {\n      localStorage.setItem('id_token', 'secret token');\n      history.replace('/dashboard');\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // Set the time that the access token will expire at\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt);\n      // navigate to the home route\n      history.replace('/');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at');\n      // navigate to the home route\n      history.replace('/');\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the\n      // access token's expiry time\n      return new Date().getTime() < JSON.parse(localStorage.getItem('expires_at'));\n    }\n  }]);\n  return Auth0Helper;\n}();\nexport default new Auth0Helper();","map":{"version":3,"names":["Auth0Lock","history","Auth0Config","notification","Auth0Helper","isValid","clientID","domain","login","bind","logout","handleAuthentication","isAuthenticated","handleLogin","lock","options","on","authResult","accessToken","window","localStorage","setItem","show","props","replace","expiresAt","JSON","stringify","expiresIn","Date","getTime","idToken","removeItem","parse","getItem"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/helpers/auth0/index.js"],"sourcesContent":["import Auth0Lock from 'auth0-lock';\r\nimport history from './history';\r\nimport { Auth0Config } from '../../settings';\r\nimport { notification } from '../../components';\r\n\r\nclass Auth0Helper {\r\n  isValid = Auth0Config.clientID && Auth0Config.domain;\r\n\r\n  constructor() {\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n  }\r\n  login(handleLogin) {\r\n    this.lock = this.isValid\r\n      ? new Auth0Lock(\r\n          Auth0Config.clientID,\r\n          Auth0Config.domain,\r\n          Auth0Config.options\r\n        )\r\n      : null;\r\n    if (!this.lock) {\r\n      return;\r\n    }\r\n    this.lock.on('authenticated', authResult => {\r\n      if (authResult && authResult.accessToken) {\r\n        if (window) {\r\n          localStorage.setItem('id_token', authResult.accessToken);\r\n        }\r\n        handleLogin();\r\n      } else {\r\n        notification('error', 'Wrong mail or password');\r\n      }\r\n    });\r\n    this.lock.show();\r\n  }\r\n  handleAuthentication(props) {\r\n    localStorage.setItem('id_token', 'secret token');\r\n    history.replace('/dashboard');\r\n  }\r\n  setSession(authResult) {\r\n    // Set the time that the access token will expire at\r\n    let expiresAt = JSON.stringify(\r\n      authResult.expiresIn * 1000 + new Date().getTime()\r\n    );\r\n    localStorage.setItem('access_token', authResult.accessToken);\r\n    localStorage.setItem('id_token', authResult.idToken);\r\n    localStorage.setItem('expires_at', expiresAt);\r\n    // navigate to the home route\r\n    history.replace('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear access token and ID token from local storage\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('id_token');\r\n    localStorage.removeItem('expires_at');\r\n    // navigate to the home route\r\n    history.replace('/');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    // Check whether the current time is past the\r\n    // access token's expiry time\r\n    return (\r\n      new Date().getTime() < JSON.parse(localStorage.getItem('expires_at'))\r\n    );\r\n  }\r\n}\r\nexport default new Auth0Helper();\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,YAAY,QAAQ,kBAAkB;AAAC,IAE1CC,WAAW;EAGf,uBAAc;IAAA;IAAA,KAFdC,OAAO,GAAGH,WAAW,CAACI,QAAQ,IAAIJ,WAAW,CAACK,MAAM;IAGlD,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACE,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACF,IAAI,CAAC,IAAI,CAAC;IAChE,IAAI,CAACG,eAAe,GAAG,IAAI,CAACA,eAAe,CAACH,IAAI,CAAC,IAAI,CAAC;EACxD;EAAC;IAAA;IAAA,OACD,eAAMI,WAAW,EAAE;MACjB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACT,OAAO,GACpB,IAAIL,SAAS,CACXE,WAAW,CAACI,QAAQ,EACpBJ,WAAW,CAACK,MAAM,EAClBL,WAAW,CAACa,OAAO,CACpB,GACD,IAAI;MACR,IAAI,CAAC,IAAI,CAACD,IAAI,EAAE;QACd;MACF;MACA,IAAI,CAACA,IAAI,CAACE,EAAE,CAAC,eAAe,EAAE,UAAAC,UAAU,EAAI;QAC1C,IAAIA,UAAU,IAAIA,UAAU,CAACC,WAAW,EAAE;UACxC,IAAIC,MAAM,EAAE;YACVC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,UAAU,CAACC,WAAW,CAAC;UAC1D;UACAL,WAAW,EAAE;QACf,CAAC,MAAM;UACLV,YAAY,CAAC,OAAO,EAAE,wBAAwB,CAAC;QACjD;MACF,CAAC,CAAC;MACF,IAAI,CAACW,IAAI,CAACQ,IAAI,EAAE;IAClB;EAAC;IAAA;IAAA,OACD,8BAAqBC,KAAK,EAAE;MAC1BH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC;MAChDpB,OAAO,CAACuB,OAAO,CAAC,YAAY,CAAC;IAC/B;EAAC;IAAA;IAAA,OACD,oBAAWP,UAAU,EAAE;MACrB;MACA,IAAIQ,SAAS,GAAGC,IAAI,CAACC,SAAS,CAC5BV,UAAU,CAACW,SAAS,GAAG,IAAI,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CACnD;MACDV,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEJ,UAAU,CAACC,WAAW,CAAC;MAC5DE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,UAAU,CAACc,OAAO,CAAC;MACpDX,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEI,SAAS,CAAC;MAC7C;MACAxB,OAAO,CAACuB,OAAO,CAAC,GAAG,CAAC;IACtB;EAAC;IAAA;IAAA,OAED,kBAAS;MACP;MACAJ,YAAY,CAACY,UAAU,CAAC,cAAc,CAAC;MACvCZ,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC;MACnCZ,YAAY,CAACY,UAAU,CAAC,YAAY,CAAC;MACrC;MACA/B,OAAO,CAACuB,OAAO,CAAC,GAAG,CAAC;IACtB;EAAC;IAAA;IAAA,OAED,2BAAkB;MAChB;MACA;MACA,OACE,IAAIK,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGJ,IAAI,CAACO,KAAK,CAACb,YAAY,CAACc,OAAO,CAAC,YAAY,CAAC,CAAC;IAEzE;EAAC;EAAA;AAAA;AAEH,eAAe,IAAI9B,WAAW,EAAE"},"metadata":{},"sourceType":"module"}