{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Page\\\\signin.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from '../../components/uielements/button';\nimport authAction from '../../redux/auth/actions';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport SignInStyleWrapper from './signin.style';\nimport { Form, message, Input, Icon, Spin } from 'antd';\nimport { UserLogin, CallServerPost, errorModal, PASS_KEY_UI, encryptSensitiveData, showProgress, hideProgress } from '../../containers/Utility/sharedUtility';\nimport { checkExistOrNot } from '../../containers/Utility/validator';\nimport RoleSelect from '../Dashboard/roleSelect';\nimport SecurityQuestions from './securityQuestions';\nimport TransBotLogo from '../../image/TransBot-logos_transparent.png';\nvar FormItem = Form.Item;\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }\n});\nvar login = authAction.login;\nvar thisObj = {};\nvar SignIn = /*#__PURE__*/function (_Component) {\n  _inherits(SignIn, _Component);\n  var _super = _createSuper(SignIn);\n  function SignIn(props) {\n    var _this;\n    _classCallCheck(this, SignIn);\n    _this = _super.call(this, props);\n    _this.onProjectChange = function (e) {\n      _this.props.form.resetFields(['RoleID']);\n    };\n    _this.hideSecurityModal = function () {\n      _this.setState({\n        action: \"signin\",\n        showSecurityQuestions: false,\n        showRoleSelection: false\n      });\n    };\n    _this.setProjectRole = function () {\n      var thisObj = _assertThisInitialized(_this);\n      var login = _this.props.login;\n      var projects = _this.state.projects;\n      _this.props.form.validateFields(['ProjectID', 'RoleID'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          CallServerPost(\"Permission/GetPermissionLevelsForRole\", {\n            RoleID: parseInt(values.RoleID)\n          }).then(function (response) {\n            var selectedProject = projects.filter(function (project) {\n              return project.projectID == values.ProjectID;\n            });\n            var roles = thisObj.state.roles[values.ProjectID];\n            var selectedRole = roles.filter(function (role) {\n              return role.roleID == values.RoleID;\n            });\n            sessionStorage.setItem(\"project\", JSON.stringify({\n              ProjectID: selectedProject[0].projectID,\n              ProjectName: selectedProject[0].projectName\n            }));\n            sessionStorage.setItem(\"role\", JSON.stringify({\n              RoleID: selectedRole[0].roleID,\n              RoleName: selectedRole[0].roleName\n            }));\n            sessionStorage.setItem(\"userProfile\", JSON.stringify(thisObj.state.userProfile));\n            window.userParam = thisObj.state.userProfile;\n            if (response.status === 1) {\n              login({\n                success: true,\n                idToken: thisObj.state.token,\n                profile: thisObj.state.userProfile,\n                permissions: response.value.permissions\n              });\n            } else {\n              login({\n                success: true,\n                idToken: thisObj.state.token,\n                profile: thisObj.state.userProfile,\n                permissions: []\n              });\n            }\n            thisObj.props.history.push('/trans');\n          });\n        }\n      });\n    };\n    _this.setAdminRole = function (roleID) {\n      var login = _this.props.login;\n      var thisObj = _assertThisInitialized(_this);\n      //CallServerPost(\"Permission/GetMasterAdminPermissions\", {})\n      //    .then(function (response) {\n\n      //        if (response.status === 1) {\n      //            login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: response.value });\n      //        } else {\n      //            login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: [] });\n      //        }\n\n      //        thisObj.props.history.push('/trans');\n      //    });\n      showProgress();\n      CallServerPost(\"Permission/GetPermissionLevelsForRole\", {\n        RoleID: roleID\n      }).then(function (response) {\n        if (response.status === 1) {\n          login({\n            success: true,\n            idToken: thisObj.state.token,\n            profile: thisObj.state.userProfile,\n            permissions: response.value.permissions\n          });\n        } else {\n          login({\n            success: true,\n            idToken: thisObj.state.token,\n            profile: thisObj.state.userProfile,\n            permissions: []\n          });\n        }\n        hideProgress();\n        thisObj.props.history.push('/trans');\n      });\n    };\n    _this.getProjectRoles = function (userProfile, token) {\n      var thisObj = _assertThisInitialized(_this);\n      showProgress();\n      CallServerPost(\"UserAssignment/GetUserProjectRole\", {\n        UserID: userProfile.userID\n      }).then(function (response) {\n        hideProgress();\n        if (response.status === 1) {\n          thisObj.setState({\n            token: token,\n            action: \"roles\",\n            showRoleSelection: true,\n            loading: false,\n            projects: response.value.projects,\n            roles: response.value.roles,\n            userProfile: userProfile\n          });\n        } else {\n          thisObj.setState({\n            loading: false\n          });\n          login({\n            success: false\n          });\n          errorModal(response.message);\n        }\n      });\n    };\n    _this.getSecurityQuestion = function (userProfile, token) {\n      var thisObj = _assertThisInitialized(_this);\n      //CallServerPost(\"UserAssignment/GetUserProjectRole\", { UserID: userProfile.userID })\n      //    .then(function (response) {\n      //        if (response.status == 1) {\n      //console.log(response);\n      thisObj.setState({\n        action: \"security\",\n        showSecurityQuestions: true,\n        userProfile: userProfile,\n        loading: false\n      });\n      //    } else {\n      //        thisObj.setState({ loading: false });\n      //        login({ success: false });\n      //        message.error(response.message);\n      //    }\n      //})\n    };\n    _this.handleLogin = function () {\n      var login = _this.props.login;\n      var thisObj = _assertThisInitialized(_this);\n      showProgress();\n      _this.props.form.validateFields(['UserName', 'UserPassword'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          var signInDetails = {};\n          signInDetails[\"UserName\"] = values['UserName'].replace(\" \", \"~``\"); //Replacing Space to prevent \"sql server not considering space in username or password\"\n          signInDetails[\"UserPassword\"] = encryptSensitiveData(values['UserPassword'].replace(\" \", \"~``\"), PASS_KEY_UI);\n          UserLogin(signInDetails).then(function (response) {\n            //console.log(response);\n            //console.log(response.message);\n            if (response.status === 1) {\n              if (response.value.userProfile.userStatusText == \"Active\") {\n                sessionStorage.setItem(\"timeout\", response.value.timeout); //Should be fetched from server while login\n\n                var token = 'Bearer ' + response.value.token;\n                sessionStorage.setItem(\"authorizeToken\", token);\n                sessionStorage.setItem(\"websocketIP\", response.value.websocketIP);\n                if (response.value.userProfile.adminType == 127) {\n                  if (response.value.IsSecurityQuestionAdded) {\n                    sessionStorage.setItem(\"role\", JSON.stringify({\n                      RoleID: 2,\n                      RoleName: \"System Admin\"\n                    }));\n                    sessionStorage.setItem(\"userProfile\", JSON.stringify(response.value.userProfile));\n                    window.userParam = response.value.userProfile;\n                    thisObj.setState({\n                      token: token,\n                      userProfile: response.value.userProfile\n                    });\n                    thisObj.setAdminRole(2);\n                  } else {\n                    thisObj.getSecurityQuestion(response.value.userProfile, response.value.token);\n                  }\n                  // System administrator\n                } else if (response.value.userProfile.adminType == 126) {\n                  // Super administrator                                    \n                  sessionStorage.setItem(\"role\", JSON.stringify({\n                    RoleID: 1,\n                    RoleName: \"Super Admin\"\n                  }));\n                  sessionStorage.setItem(\"userProfile\", JSON.stringify(response.value.userProfile));\n                  window.userParam = response.value.userProfile;\n                  thisObj.setState({\n                    token: token,\n                    userProfile: response.value.userProfile\n                  });\n                  thisObj.setAdminRole(1);\n                } else {\n                  if (response.value.IsSecurityQuestionAdded) {\n                    thisObj.getProjectRoles(response.value.userProfile, response.value.token);\n                  } else {\n                    thisObj.getSecurityQuestion(response.value.userProfile, response.value.token);\n                  }\n                }\n              } else {\n                login({\n                  success: false\n                });\n                errorModal('User is Inactive');\n              }\n              hideProgress();\n            } else {\n              hideProgress();\n              login({\n                success: false\n              });\n              message.destroy();\n              errorModal(response.message);\n            }\n          }).catch(function (error) {\n            hideProgress();\n            login({\n              success: false\n            });\n            message.destroy();\n            errorModal(\"Unable to login. Please Try Later!\");\n          });\n        }\n        {\n          hideProgress();\n        }\n      });\n    };\n    _this.handleForgotPassword = function () {\n      var thisObj = _assertThisInitialized(_this);\n      _this.props.form.validateFields(['UserName'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          CallServerPost('PasswordSecurityQuestions/GetUserByUserName', {\n            UserName: values[\"UserName\"]\n          }).then(function (response) {\n            if (response.status == 1) {\n              if (response.value != null) {\n                if (response.value.users[0].userStatusText == \"Active\") {\n                  thisObj.props.history.push({\n                    pathname: '/forgotPassword',\n                    state: {\n                      userName: values[\"UserName\"],\n                      loading: true\n                    }\n                  });\n                } else {\n                  thisObj.setState({\n                    loading: false\n                  });\n                  login({\n                    success: false\n                  });\n                  errorModal('User is Inactive');\n                }\n              } else {\n                thisObj.setState({\n                  loading: false\n                });\n                login({\n                  success: false\n                });\n                errorModal('Username is invalid');\n              }\n            } else {\n              errorModal(response.message);\n            }\n          });\n        }\n      });\n    };\n    _this.keyPressed = function (event) {\n      if (event.key === \"Enter\") {\n        _this.handleLogin();\n      }\n    };\n    _this.handleKeyDown = function (e) {\n      if (e.key === \" \") {\n        e.preventDefault();\n      }\n    };\n    _this.handlerCopy = function (e) {\n      e.preventDefault();\n    };\n    _this.userPassword = function () {\n      return _this.setState(function (prevState) {\n        return {\n          onPassword: !prevState.onPassword\n        };\n      });\n    };\n    _this.changeShowForgot = function (res) {\n      if (res !== _this.state.showForgot) {\n        _this.setState({\n          showForgot: res\n        });\n      }\n    };\n    _this.state = {\n      redirectToReferrer: false,\n      loading: false,\n      showRoleSelection: false,\n      showSecurityQuestions: false,\n      projects: [],\n      roles: [],\n      userProfile: null,\n      token: null,\n      action: \"signin\",\n      onPassword: false,\n      showForgot: false\n    };\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(SignIn, [{\n    key: \"handleCancelProjectRoleModal\",\n    value: function handleCancelProjectRoleModal() {\n      this.setState({\n        action: \"signin\",\n        showRoleSelection: false,\n        showSecurityQuestions: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var from = {\n        pathname: '/trans'\n      };\n      var _this$state = this.state,\n        redirectToReferrer = _this$state.redirectToReferrer,\n        onPassword = _this$state.onPassword;\n      if (redirectToReferrer) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: from,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 20\n          }\n        });\n      }\n      var _this$props$form = this.props.form,\n        getFieldDecorator = _this$props$form.getFieldDecorator,\n        getFieldValue = _this$props$form.getFieldValue,\n        resetFields = _this$props$form.resetFields;\n      var _this$state2 = this.state,\n        action = _this$state2.action,\n        showRoleSelection = _this$state2.showRoleSelection,\n        projects = _this$state2.projects,\n        roles = _this$state2.roles,\n        showSecurityQuestions = _this$state2.showSecurityQuestions;\n      return /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SignInStyleWrapper, {\n        className: \"isoSignInPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoLoginContentWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoLoginContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: antIcon,\n        spinning: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoLogoWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/trans\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: \"300px\"\n        },\n        src: require(\"../../image/TransBot-logos_transparent.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoSignInForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormItem, {\n        key: \"UserName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 37\n        }\n      }, getFieldDecorator(\"UserName\", {\n        rules: [{\n          required: true,\n          message: \"Username is required\"\n        }, {\n          validator: checkExistOrNot,\n          current: this\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        size: \"large\",\n        placeholder: \"Username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(FormItem, {\n        key: \"UserPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 37\n        }\n      }, getFieldDecorator(\"UserPassword\", {\n        rules: [{\n          required: true,\n          message: \"Password is required\"\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        onKeyPress: this.keyPressed,\n        type: \"text\",\n        style: {\n          \"-webkit-text-security\": \"disc\"\n        },\n        autoComplete: \"off\",\n        onCopy: this.handlerCopy,\n        onPaste: function onPaste(e) {\n          e.preventDefault();\n          return false;\n        },\n        onKeyDown: this.handleKeyDown,\n        maxlength: \"15\",\n        size: \"large\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoInputWrapper isoLeftRightComponent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 38\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        name: \"SignIn\",\n        type: \"primary\",\n        onClick: this.handleLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"page.signInButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 45\n        }\n      })), this.state.showForgot && /*#__PURE__*/React.createElement(\"a\", {\n        name: \"ForgotPassword\",\n        onClick: this.handleForgotPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"page.signInForgotPass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 49\n        }\n      })))))))), action == \"roles\" ? /*#__PURE__*/React.createElement(RoleSelect, {\n        visible: showRoleSelection,\n        okText: \"OK\",\n        handleCancel: this.hideSecurityModal,\n        form: this.props.form,\n        projects: projects,\n        roles: roles,\n        getFieldDecorator: getFieldDecorator,\n        getFieldValue: getFieldValue,\n        resetFields: resetFields,\n        setProjectRole: this.setProjectRole,\n        byLoginPage: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }\n      }) : action == \"security\" ? /*#__PURE__*/React.createElement(SecurityQuestions, {\n        visible: showSecurityQuestions,\n        handleCancel: this.hideSecurityModal,\n        cancelCallback: this.hideSecurityModal,\n        getFieldDecorator: getFieldDecorator,\n        getFieldValue: getFieldValue,\n        resetFields: resetFields,\n        userProfile: this.state.userProfile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }\n      }) : \"\");\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (thisObj.props.isLoggedIn === true) {\n        thisObj.setState({\n          redirectToReferrer: true\n        });\n      }\n    }\n  }]);\n  return SignIn;\n}(Component);\nvar WrappedApp = Form.create()(SignIn);\nexport default connect(function (state) {\n  return {\n    isLoggedIn: state.Auth.get('idToken') !== null ? true : false\n  };\n}, {\n  login: login\n})(WrappedApp);","map":{"version":3,"names":["React","Component","Link","Redirect","connect","Button","authAction","IntlMessages","SignInStyleWrapper","Form","message","Input","Icon","Spin","UserLogin","CallServerPost","errorModal","PASS_KEY_UI","encryptSensitiveData","showProgress","hideProgress","checkExistOrNot","RoleSelect","SecurityQuestions","TransBotLogo","FormItem","Item","antIcon","fontSize","color","login","thisObj","SignIn","props","onProjectChange","e","form","resetFields","hideSecurityModal","setState","action","showSecurityQuestions","showRoleSelection","setProjectRole","projects","state","validateFields","force","err","values","RoleID","parseInt","then","response","selectedProject","filter","project","projectID","ProjectID","roles","selectedRole","role","roleID","sessionStorage","setItem","JSON","stringify","ProjectName","projectName","RoleName","roleName","userProfile","window","userParam","status","success","idToken","token","profile","permissions","value","history","push","setAdminRole","getProjectRoles","UserID","userID","loading","getSecurityQuestion","handleLogin","signInDetails","replace","userStatusText","timeout","websocketIP","adminType","IsSecurityQuestionAdded","destroy","catch","error","handleForgotPassword","UserName","users","pathname","userName","keyPressed","event","key","handleKeyDown","preventDefault","handlerCopy","userPassword","prevState","onPassword","changeShowForgot","res","showForgot","redirectToReferrer","from","getFieldDecorator","getFieldValue","width","require","rules","required","validator","current","nextProps","isLoggedIn","WrappedApp","create","Auth","get"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Page/signin.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from '../../components/uielements/button';\nimport authAction from '../../redux/auth/actions';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport SignInStyleWrapper from './signin.style';\nimport { Form, message, Input, Icon, Spin } from 'antd';\nimport { UserLogin, CallServerPost, errorModal, PASS_KEY_UI, encryptSensitiveData, showProgress, hideProgress } from '../../containers/Utility/sharedUtility';\nimport { checkExistOrNot } from '../../containers/Utility/validator';\nimport RoleSelect from '../Dashboard/roleSelect';\nimport SecurityQuestions from './securityQuestions';\nimport TransBotLogo from '../../image/TransBot-logos_transparent.png';\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\n\nconst { login } = authAction;\nvar thisObj = {};\nclass SignIn extends Component\n{\n    constructor(props) {\n        super(props);\r\n\r\n\n        this.state = {\n            redirectToReferrer: false,\n            loading: false,\n            showRoleSelection: false,\n            showSecurityQuestions: false,\n            projects: [],\n            roles: [],\n            userProfile: null,\n            token: null,\n            action: \"signin\",\n            onPassword: false,\n            showForgot: false\n        };\n        thisObj = this;\n      \n    }\n\n    static getDerivedStateFromProps(nextProps) {\n\n        if (thisObj.props.isLoggedIn === true) {\n            thisObj.setState({ redirectToReferrer: true });\n        }\n    }\n    onProjectChange = (e) => {\r\n        this.props.form.resetFields(['RoleID']);\r\n    }\n    hideSecurityModal = () => {\r\n        this.setState({action:\"signin\", showSecurityQuestions: false, showRoleSelection: false });\r\n    }\n    handleCancelProjectRoleModal() {\n        this.setState({ action: \"signin\",showRoleSelection: false, showSecurityQuestions: false });\n    }\n    setProjectRole = () => {\n        const thisObj = this;\n        const { login } = this.props;\n        const { projects } = this.state;\n        this.props.form.validateFields(['ProjectID', 'RoleID'], { force: true }, (err, values) => {\r\n            if (!err) {\r\n                CallServerPost(\"Permission/GetPermissionLevelsForRole\", { RoleID: parseInt(values.RoleID) })\r\n                    .then(function (response) {\r\n                        let selectedProject = projects.filter((project) => project.projectID == values.ProjectID);\r\n                        const roles = thisObj.state.roles[values.ProjectID];\r\n                        let selectedRole = roles.filter((role) => role.roleID == values.RoleID);\r\n\r\n                        sessionStorage.setItem(\"project\", JSON.stringify({ ProjectID: selectedProject[0].projectID, ProjectName: selectedProject[0].projectName }));\r\n                        sessionStorage.setItem(\"role\", JSON.stringify({ RoleID: selectedRole[0].roleID, RoleName: selectedRole[0].roleName }));\r\n                        sessionStorage.setItem(\"userProfile\", JSON.stringify(thisObj.state.userProfile));\r\n                        window.userParam = thisObj.state.userProfile;\r\n                        if (response.status === 1) {\r\n                            login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: response.value.permissions });\r\n                        } else {\r\n                            login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: [] });\r\n                        }\r\n                        thisObj.props.history.push('/trans');\r\n                    })\r\n            }\r\n        });\n    }\n\n    setAdminRole = (roleID) => {\n        const { login } = this.props;\n        const thisObj = this;\n        //CallServerPost(\"Permission/GetMasterAdminPermissions\", {})\r\n        //    .then(function (response) {\r\n\r\n        //        if (response.status === 1) {\r\n        //            login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: response.value });\r\n        //        } else {\r\n        //            login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: [] });\r\n        //        }\r\n\r\n        //        thisObj.props.history.push('/trans');\r\n        //    });\n        showProgress();\n        CallServerPost(\"Permission/GetPermissionLevelsForRole\", { RoleID: roleID })\r\n            .then(function (response) {\r\n                if (response.status === 1) {\r\n                    login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: response.value.permissions });\r\n                } else {\r\n                    login({ success: true, idToken: thisObj.state.token, profile: thisObj.state.userProfile, permissions: [] });\r\n                }\r\n                hideProgress();\r\n                thisObj.props.history.push('/trans');\r\n            });\n    \n    }\n\n\n    getProjectRoles = (userProfile, token) => {\n        const thisObj = this;\n        showProgress();\n        CallServerPost(\"UserAssignment/GetUserProjectRole\", { UserID: userProfile.userID })\r\n            .then(function (response) {\r\n                hideProgress();\r\n                if (response.status === 1) {\r\n\r\n                    thisObj.setState({ token: token, action: \"roles\", showRoleSelection: true, loading: false, projects: response.value.projects, roles: response.value.roles, userProfile: userProfile });\r\n                } else {\r\n                    thisObj.setState({ loading: false });\r\n                    login({ success: false });\r\n                    errorModal(response.message);\r\n                }\r\n            });\r\n    }\n\n    getSecurityQuestion = (userProfile, token) => {\n        const thisObj = this;\n        //CallServerPost(\"UserAssignment/GetUserProjectRole\", { UserID: userProfile.userID })\r\n        //    .then(function (response) {\r\n        //        if (response.status == 1) {\r\n        //console.log(response);\r\n        thisObj.setState({ action: \"security\",showSecurityQuestions: true, userProfile: userProfile, loading: false });\r\n        //    } else {\r\n        //        thisObj.setState({ loading: false });\r\n        //        login({ success: false });\r\n        //        message.error(response.message);\r\n        //    }\r\n        //})\r\n    }\n\n    handleLogin = () => {\n        const { login } = this.props;\n        const thisObj = this;\n        showProgress();\n        this.props.form.validateFields(['UserName', 'UserPassword'], { force: true }, (err, values) => {\r\n            if (!err) {\n                var signInDetails = {};\n                signInDetails[\"UserName\"] = values['UserName'].replace(\" \", \"~``\"); //Replacing Space to prevent \"sql server not considering space in username or password\"\n                signInDetails[\"UserPassword\"] = encryptSensitiveData(values['UserPassword'].replace(\" \", \"~``\"), PASS_KEY_UI);\n                UserLogin(signInDetails)\r\n                    .then(function (response) {\r\n                        //console.log(response);\r\n                        //console.log(response.message);\r\n                        if (response.status === 1) {\r\n\r\n                            if (response.value.userProfile.userStatusText == \"Active\") {\r\n\r\n                                sessionStorage.setItem(\"timeout\", response.value.timeout); //Should be fetched from server while login\r\n\r\n                                var token = 'Bearer ' + response.value.token;\r\n\r\n                                sessionStorage.setItem(\"authorizeToken\", token);\n                                sessionStorage.setItem(\"websocketIP\", response.value.websocketIP);\n\r\n\r\n                                if (response.value.userProfile.adminType == 127)\r\n                                {\r\n                                    if (response.value.IsSecurityQuestionAdded) {\r\n                                        sessionStorage.setItem(\"role\", JSON.stringify({ RoleID: 2, RoleName: \"System Admin\" }));\r\n                                        sessionStorage.setItem(\"userProfile\", JSON.stringify(response.value.userProfile));\r\n                                        window.userParam = response.value.userProfile;\r\n\r\n                                        thisObj.setState({ token: token, userProfile: response.value.userProfile });\r\n                                        thisObj.setAdminRole(2);\r\n                                    }\n                                    else {\n                                        thisObj.getSecurityQuestion(response.value.userProfile, response.value.token);\n                                    }\r\n                                    // System administrator\r\n                                    \r\n                                }\r\n                                else if (response.value.userProfile.adminType == 126)\r\n                                {\r\n                                    // Super administrator                                    \r\n                                    sessionStorage.setItem(\"role\", JSON.stringify({ RoleID: 1, RoleName: \"Super Admin\" }));\r\n                                    sessionStorage.setItem(\"userProfile\", JSON.stringify(response.value.userProfile));\r\n                                    window.userParam = response.value.userProfile;\r\n                                    thisObj.setState({ token: token, userProfile: response.value.userProfile });\r\n                                    thisObj.setAdminRole(1);\r\n                                    \r\n                                }\r\n                                else\r\n                                {\r\n                                    if (response.value.IsSecurityQuestionAdded) {\r\n                                        thisObj.getProjectRoles(response.value.userProfile, response.value.token);\r\n                                    }\n                                    else {\n                                        thisObj.getSecurityQuestion(response.value.userProfile, response.value.token);\n                                    }\r\n                                }  \r\n                            } else {\r\n                                login({ success: false });\r\n                                errorModal('User is Inactive');\r\n                            }\r\n\r\n                            hideProgress();\r\n                        } else {\r\n                            hideProgress();\r\n                            login({ success: false });\r\n                            message.destroy();\r\n                            errorModal(response.message);\r\n                        }\r\n                    }).catch(error => {\n                        hideProgress();\n                        login({ success: false });\r\n                        message.destroy();\r\n                        errorModal(\"Unable to login. Please Try Later!\");\n                    });\n\n\n            } {\r\n                hideProgress();\r\n            }\r\n        });\n\n    };\n\n\n    handleForgotPassword = () => {\n        const thisObj = this;\n        this.props.form.validateFields(['UserName'], { force: true }, (err, values) => {\r\n            if (!err) {\r\n                                \n                CallServerPost('PasswordSecurityQuestions/GetUserByUserName', { UserName: values[\"UserName\"] })\r\n                    .then(function (response) {\r\n                        if (response.status == 1) {\r\n                        if (response.value != null) {\r\n                            if (response.value.users[0].userStatusText == \"Active\") {\r\n                                thisObj.props.history.push({\r\n                                    pathname: '/forgotPassword',\r\n                                    state: {\r\n                                        userName: values[\"UserName\"],\r\n                                        loading: true,\r\n\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                thisObj.setState({ loading: false });\r\n                                login({ success: false });\r\n                                errorModal('User is Inactive');\r\n                            }\r\n\r\n\r\n                        } else {\r\n\r\n                            thisObj.setState({ loading: false });\r\n                            login({ success: false });\r\n                            errorModal('Username is invalid');\r\n                        }\r\n                    }\r\n                        else {\r\n                            errorModal(response.message)\r\n                    }\r\n\r\n                    });\n               \n\n            }\r\n        });\r\n    }\n\n    //By clicking Enter to Login\n\r\n    keyPressed = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            this.handleLogin();\r\n        }\r\n    }\n\n    handleKeyDown = e => {\r\n        if (e.key === \" \") {\r\n            e.preventDefault();\r\n        }\r\n    }\n\n    handlerCopy = (e) => {\r\n        e.preventDefault();\r\n    }\n\n    userPassword = () =>\r\n        this.setState(prevState => ({\r\n            onPassword: !prevState.onPassword,\r\n        }));\n\n    changeShowForgot = (res) => {\n        if (res !== this.state.showForgot) {\n            this.setState({ showForgot: res });\r\n        }\r\n    }\n\n    render() {\n        const from = { pathname: '/trans' };\n        const { redirectToReferrer, onPassword } = this.state;\n\n        if (redirectToReferrer) {\n            return <Redirect to={from} />;\n        }\n        const { getFieldDecorator, getFieldValue, resetFields } = this.props.form;\n        const { action,showRoleSelection, projects, roles, showSecurityQuestions } = this.state;\n        return (\n\n            <Form>\n                <SignInStyleWrapper className=\"isoSignInPage\">\n\n                    <div className=\"isoLoginContentWrapper\">\n                        <div className=\"isoLoginContent\">\n                            <Spin indicator={antIcon} spinning={this.state.loading}>\n                                <div className=\"isoLogoWrapper\">\n                                    <Link to=\"/trans\">\n                                        <img style={{width:\"300px\"} } src={require(\"../../image/TransBot-logos_transparent.png\")} />\n                                    </Link>\n                                </div>\n                                <div className=\"isoSignInForm\">\n\n\n                                    <FormItem\r\n                                        key={\"UserName\"}\r\n                                    >\n                                        {\r\n                                            getFieldDecorator(\"UserName\", {\r\n                                                rules: [{ required: true, message: \"Username is required\" }, { validator: checkExistOrNot, current: this }]\r\n                                            })(\r\n                                                <Input size=\"large\" placeholder=\"Username\" />\r\n\r\n                                                )}\n                                    </FormItem>\n\n                                    <FormItem\r\n                                        key={\"UserPassword\"}\r\n                                    >\n                                        {\r\n                                            getFieldDecorator(\"UserPassword\", {\r\n                                                rules: [{ required: true, message: \"Password is required\" }]\r\n                                            })(\r\n                                                <Input\r\n                                                    onKeyPress={this.keyPressed}\r\n                                                    type=\"text\" style={{ \"-webkit-text-security\": \"disc\" }}\r\n                                                    autoComplete=\"off\"\r\n                                                    onCopy={this.handlerCopy}\r\n                                                    onPaste={(e) => {\r\n                                                        e.preventDefault()\r\n                                                        return false;\r\n                                                    }}\r\n                                                    onKeyDown={this.handleKeyDown}\r\n                                                maxlength=\"15\"\r\n                                                    size=\"large\"\r\n                                                placeholder=\"Password\" />\r\n                                                )}\n                                    </FormItem>\n                                    \n\n\n\n                                     <div className=\"isoInputWrapper isoLeftRightComponent\">\n\n                                        <Button name=\"SignIn\" type=\"primary\" onClick={this.handleLogin}>\n                                            <IntlMessages id=\"page.signInButton\" />\n                                        </Button>\n                                        {this.state.showForgot &&\n                                            <a name=\"ForgotPassword\" onClick={this.handleForgotPassword} >\n                                                <IntlMessages id=\"page.signInForgotPass\" />\r\n                                            </a>\n                                        }\n                                    </div>\n\n                                </div>\n\n\n                            </Spin>\n                        </div>\n                    </div>\n                </SignInStyleWrapper>\n                {\n                (action == \"roles\")?\n                        <RoleSelect visible={showRoleSelection} okText={\"OK\"} handleCancel={this.hideSecurityModal} form={this.props.form} projects={projects} roles={roles} getFieldDecorator={getFieldDecorator} getFieldValue={getFieldValue} resetFields={resetFields} setProjectRole={this.setProjectRole} byLoginPage={1} />:\n                (action == \"security\")?\n                    <SecurityQuestions visible={showSecurityQuestions} handleCancel={this.hideSecurityModal} cancelCallback={this.hideSecurityModal} getFieldDecorator={getFieldDecorator} getFieldValue={getFieldValue} resetFields={resetFields} userProfile={this.state.userProfile} />:\"\"\n                }\n                      \n               \n                \n            </Form>\n        );\n    }\n}\n\n\n\nconst WrappedApp = Form.create()(SignIn);\nexport default connect(\n    state => ({\n        isLoggedIn: state.Auth.get('idToken') !== null ? true : false,\n    }),\n    { login }\n)(WrappedApp);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}