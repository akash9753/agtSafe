{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as mime from '../../../base/common/mime.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { LanguageIdentifier } from '../modes.js';\nimport { ModesRegistry } from '../modes/modesRegistry.js';\nimport { NULL_LANGUAGE_IDENTIFIER, NULL_MODE_ID } from '../modes/nullMode.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar LanguagesRegistry = /** @class */function (_super) {\n  __extends(LanguagesRegistry, _super);\n  function LanguagesRegistry(useModesRegistry, warnOnOverwrite) {\n    if (useModesRegistry === void 0) {\n      useModesRegistry = true;\n    }\n    if (warnOnOverwrite === void 0) {\n      warnOnOverwrite = false;\n    }\n    var _this = _super.call(this) || this;\n    _this._onDidChange = _this._register(new Emitter());\n    _this.onDidChange = _this._onDidChange.event;\n    _this._warnOnOverwrite = warnOnOverwrite;\n    _this._nextLanguageId2 = 1;\n    _this._languageIdToLanguage = [];\n    _this._languageToLanguageId = Object.create(null);\n    _this._languages = {};\n    _this._mimeTypesMap = {};\n    _this._nameMap = {};\n    _this._lowercaseNameMap = {};\n    if (useModesRegistry) {\n      _this._initializeFromRegistry();\n      _this._register(ModesRegistry.onDidChangeLanguages(function (m) {\n        return _this._initializeFromRegistry();\n      }));\n    }\n    return _this;\n  }\n  LanguagesRegistry.prototype._initializeFromRegistry = function () {\n    this._languages = {};\n    this._mimeTypesMap = {};\n    this._nameMap = {};\n    this._lowercaseNameMap = {};\n    var desc = ModesRegistry.getLanguages();\n    this._registerLanguages(desc);\n  };\n  LanguagesRegistry.prototype._registerLanguages = function (desc) {\n    var _this = this;\n    for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {\n      var d = desc_1[_i];\n      this._registerLanguage(d);\n    }\n    // Rebuild fast path maps\n    this._mimeTypesMap = {};\n    this._nameMap = {};\n    this._lowercaseNameMap = {};\n    Object.keys(this._languages).forEach(function (langId) {\n      var language = _this._languages[langId];\n      if (language.name) {\n        _this._nameMap[language.name] = language.identifier;\n      }\n      language.aliases.forEach(function (alias) {\n        _this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n      });\n      language.mimetypes.forEach(function (mimetype) {\n        _this._mimeTypesMap[mimetype] = language.identifier;\n      });\n    });\n    Registry.as(Extensions.Configuration).registerOverrideIdentifiers(ModesRegistry.getLanguages().map(function (language) {\n      return language.id;\n    }));\n    this._onDidChange.fire();\n  };\n  LanguagesRegistry.prototype._getLanguageId = function (language) {\n    if (this._languageToLanguageId[language]) {\n      return this._languageToLanguageId[language];\n    }\n    var languageId = this._nextLanguageId2++;\n    this._languageIdToLanguage[languageId] = language;\n    this._languageToLanguageId[language] = languageId;\n    return languageId;\n  };\n  LanguagesRegistry.prototype._registerLanguage = function (lang) {\n    var langId = lang.id;\n    var resolvedLanguage;\n    if (hasOwnProperty.call(this._languages, langId)) {\n      resolvedLanguage = this._languages[langId];\n    } else {\n      var languageId = this._getLanguageId(langId);\n      resolvedLanguage = {\n        identifier: new LanguageIdentifier(langId, languageId),\n        name: null,\n        mimetypes: [],\n        aliases: [],\n        extensions: [],\n        filenames: [],\n        configurationFiles: []\n      };\n      this._languages[langId] = resolvedLanguage;\n    }\n    this._mergeLanguage(resolvedLanguage, lang);\n  };\n  LanguagesRegistry.prototype._mergeLanguage = function (resolvedLanguage, lang) {\n    var _a;\n    var langId = lang.id;\n    var primaryMime = null;\n    if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n      (_a = resolvedLanguage.mimetypes).push.apply(_a, lang.mimetypes);\n      primaryMime = lang.mimetypes[0];\n    }\n    if (!primaryMime) {\n      primaryMime = \"text/x-\" + langId;\n      resolvedLanguage.mimetypes.push(primaryMime);\n    }\n    if (Array.isArray(lang.extensions)) {\n      for (var _i = 0, _b = lang.extensions; _i < _b.length; _i++) {\n        var extension = _b[_i];\n        mime.registerTextMime({\n          id: langId,\n          mime: primaryMime,\n          extension: extension\n        }, this._warnOnOverwrite);\n        resolvedLanguage.extensions.push(extension);\n      }\n    }\n    if (Array.isArray(lang.filenames)) {\n      for (var _c = 0, _d = lang.filenames; _c < _d.length; _c++) {\n        var filename = _d[_c];\n        mime.registerTextMime({\n          id: langId,\n          mime: primaryMime,\n          filename: filename\n        }, this._warnOnOverwrite);\n        resolvedLanguage.filenames.push(filename);\n      }\n    }\n    if (Array.isArray(lang.filenamePatterns)) {\n      for (var _e = 0, _f = lang.filenamePatterns; _e < _f.length; _e++) {\n        var filenamePattern = _f[_e];\n        mime.registerTextMime({\n          id: langId,\n          mime: primaryMime,\n          filepattern: filenamePattern\n        }, this._warnOnOverwrite);\n      }\n    }\n    if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n      var firstLineRegexStr = lang.firstLine;\n      if (firstLineRegexStr.charAt(0) !== '^') {\n        firstLineRegexStr = '^' + firstLineRegexStr;\n      }\n      try {\n        var firstLineRegex = new RegExp(firstLineRegexStr);\n        if (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\n          mime.registerTextMime({\n            id: langId,\n            mime: primaryMime,\n            firstline: firstLineRegex\n          }, this._warnOnOverwrite);\n        }\n      } catch (err) {\n        // Most likely, the regex was bad\n        onUnexpectedError(err);\n      }\n    }\n    resolvedLanguage.aliases.push(langId);\n    var langAliases = null;\n    if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n      if (lang.aliases.length === 0) {\n        // signal that this language should not get a name\n        langAliases = [null];\n      } else {\n        langAliases = lang.aliases;\n      }\n    }\n    if (langAliases !== null) {\n      for (var _g = 0, langAliases_1 = langAliases; _g < langAliases_1.length; _g++) {\n        var langAlias = langAliases_1[_g];\n        if (!langAlias || langAlias.length === 0) {\n          continue;\n        }\n        resolvedLanguage.aliases.push(langAlias);\n      }\n    }\n    var containsAliases = langAliases !== null && langAliases.length > 0;\n    if (containsAliases && langAliases[0] === null) {\n      // signal that this language should not get a name\n    } else {\n      var bestName = (containsAliases ? langAliases[0] : null) || langId;\n      if (containsAliases || !resolvedLanguage.name) {\n        resolvedLanguage.name = bestName;\n      }\n    }\n    if (lang.configuration) {\n      resolvedLanguage.configurationFiles.push(lang.configuration);\n    }\n  };\n  LanguagesRegistry.prototype.isRegisteredMode = function (mimetypeOrModeId) {\n    // Is this a known mime type ?\n    if (hasOwnProperty.call(this._mimeTypesMap, mimetypeOrModeId)) {\n      return true;\n    }\n    // Is this a known mode id ?\n    return hasOwnProperty.call(this._languages, mimetypeOrModeId);\n  };\n  LanguagesRegistry.prototype.getModeIdForLanguageNameLowercase = function (languageNameLower) {\n    if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n      return null;\n    }\n    return this._lowercaseNameMap[languageNameLower].language;\n  };\n  LanguagesRegistry.prototype.extractModeIds = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\n    var _this = this;\n    if (!commaSeparatedMimetypesOrCommaSeparatedIds) {\n      return [];\n    }\n    return commaSeparatedMimetypesOrCommaSeparatedIds.split(',').map(function (mimeTypeOrId) {\n      return mimeTypeOrId.trim();\n    }).map(function (mimeTypeOrId) {\n      if (hasOwnProperty.call(_this._mimeTypesMap, mimeTypeOrId)) {\n        return _this._mimeTypesMap[mimeTypeOrId].language;\n      }\n      return mimeTypeOrId;\n    }).filter(function (modeId) {\n      return hasOwnProperty.call(_this._languages, modeId);\n    });\n  };\n  LanguagesRegistry.prototype.getLanguageIdentifier = function (_modeId) {\n    if (_modeId === NULL_MODE_ID || _modeId === 0 /* Null */) {\n      return NULL_LANGUAGE_IDENTIFIER;\n    }\n    var modeId;\n    if (typeof _modeId === 'string') {\n      modeId = _modeId;\n    } else {\n      modeId = this._languageIdToLanguage[_modeId];\n      if (!modeId) {\n        return null;\n      }\n    }\n    if (!hasOwnProperty.call(this._languages, modeId)) {\n      return null;\n    }\n    return this._languages[modeId].identifier;\n  };\n  LanguagesRegistry.prototype.getModeIdsFromFilepathOrFirstLine = function (resource, firstLine) {\n    if (!resource && !firstLine) {\n      return [];\n    }\n    var mimeTypes = mime.guessMimeTypes(resource, firstLine);\n    return this.extractModeIds(mimeTypes.join(','));\n  };\n  return LanguagesRegistry;\n}(Disposable);\nexport { LanguagesRegistry };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","onUnexpectedError","Emitter","Disposable","mime","strings","LanguageIdentifier","ModesRegistry","NULL_LANGUAGE_IDENTIFIER","NULL_MODE_ID","Extensions","Registry","LanguagesRegistry","_super","useModesRegistry","warnOnOverwrite","_this","call","_onDidChange","_register","onDidChange","event","_warnOnOverwrite","_nextLanguageId2","_languageIdToLanguage","_languageToLanguageId","_languages","_mimeTypesMap","_nameMap","_lowercaseNameMap","_initializeFromRegistry","onDidChangeLanguages","m","desc","getLanguages","_registerLanguages","_i","desc_1","length","_registerLanguage","keys","forEach","langId","language","name","identifier","aliases","alias","toLowerCase","mimetypes","mimetype","as","Configuration","registerOverrideIdentifiers","map","id","fire","_getLanguageId","languageId","lang","resolvedLanguage","extensions","filenames","configurationFiles","_mergeLanguage","_a","primaryMime","isArray","push","apply","_b","extension","registerTextMime","_c","_d","filename","filenamePatterns","_e","_f","filenamePattern","filepattern","firstLine","firstLineRegexStr","charAt","firstLineRegex","RegExp","regExpLeadsToEndlessLoop","firstline","err","langAliases","_g","langAliases_1","langAlias","containsAliases","bestName","configuration","isRegisteredMode","mimetypeOrModeId","getModeIdForLanguageNameLowercase","languageNameLower","extractModeIds","commaSeparatedMimetypesOrCommaSeparatedIds","split","mimeTypeOrId","trim","filter","modeId","getLanguageIdentifier","_modeId","getModeIdsFromFilepathOrFirstLine","resource","mimeTypes","guessMimeTypes","join"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as mime from '../../../base/common/mime.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LanguageIdentifier } from '../modes.js';\r\nimport { ModesRegistry } from '../modes/modesRegistry.js';\r\nimport { NULL_LANGUAGE_IDENTIFIER, NULL_MODE_ID } from '../modes/nullMode.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar LanguagesRegistry = /** @class */ (function (_super) {\r\n    __extends(LanguagesRegistry, _super);\r\n    function LanguagesRegistry(useModesRegistry, warnOnOverwrite) {\r\n        if (useModesRegistry === void 0) { useModesRegistry = true; }\r\n        if (warnOnOverwrite === void 0) { warnOnOverwrite = false; }\r\n        var _this = _super.call(this) || this;\r\n        _this._onDidChange = _this._register(new Emitter());\r\n        _this.onDidChange = _this._onDidChange.event;\r\n        _this._warnOnOverwrite = warnOnOverwrite;\r\n        _this._nextLanguageId2 = 1;\r\n        _this._languageIdToLanguage = [];\r\n        _this._languageToLanguageId = Object.create(null);\r\n        _this._languages = {};\r\n        _this._mimeTypesMap = {};\r\n        _this._nameMap = {};\r\n        _this._lowercaseNameMap = {};\r\n        if (useModesRegistry) {\r\n            _this._initializeFromRegistry();\r\n            _this._register(ModesRegistry.onDidChangeLanguages(function (m) { return _this._initializeFromRegistry(); }));\r\n        }\r\n        return _this;\r\n    }\r\n    LanguagesRegistry.prototype._initializeFromRegistry = function () {\r\n        this._languages = {};\r\n        this._mimeTypesMap = {};\r\n        this._nameMap = {};\r\n        this._lowercaseNameMap = {};\r\n        var desc = ModesRegistry.getLanguages();\r\n        this._registerLanguages(desc);\r\n    };\r\n    LanguagesRegistry.prototype._registerLanguages = function (desc) {\r\n        var _this = this;\r\n        for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {\r\n            var d = desc_1[_i];\r\n            this._registerLanguage(d);\r\n        }\r\n        // Rebuild fast path maps\r\n        this._mimeTypesMap = {};\r\n        this._nameMap = {};\r\n        this._lowercaseNameMap = {};\r\n        Object.keys(this._languages).forEach(function (langId) {\r\n            var language = _this._languages[langId];\r\n            if (language.name) {\r\n                _this._nameMap[language.name] = language.identifier;\r\n            }\r\n            language.aliases.forEach(function (alias) {\r\n                _this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\r\n            });\r\n            language.mimetypes.forEach(function (mimetype) {\r\n                _this._mimeTypesMap[mimetype] = language.identifier;\r\n            });\r\n        });\r\n        Registry.as(Extensions.Configuration).registerOverrideIdentifiers(ModesRegistry.getLanguages().map(function (language) { return language.id; }));\r\n        this._onDidChange.fire();\r\n    };\r\n    LanguagesRegistry.prototype._getLanguageId = function (language) {\r\n        if (this._languageToLanguageId[language]) {\r\n            return this._languageToLanguageId[language];\r\n        }\r\n        var languageId = this._nextLanguageId2++;\r\n        this._languageIdToLanguage[languageId] = language;\r\n        this._languageToLanguageId[language] = languageId;\r\n        return languageId;\r\n    };\r\n    LanguagesRegistry.prototype._registerLanguage = function (lang) {\r\n        var langId = lang.id;\r\n        var resolvedLanguage;\r\n        if (hasOwnProperty.call(this._languages, langId)) {\r\n            resolvedLanguage = this._languages[langId];\r\n        }\r\n        else {\r\n            var languageId = this._getLanguageId(langId);\r\n            resolvedLanguage = {\r\n                identifier: new LanguageIdentifier(langId, languageId),\r\n                name: null,\r\n                mimetypes: [],\r\n                aliases: [],\r\n                extensions: [],\r\n                filenames: [],\r\n                configurationFiles: []\r\n            };\r\n            this._languages[langId] = resolvedLanguage;\r\n        }\r\n        this._mergeLanguage(resolvedLanguage, lang);\r\n    };\r\n    LanguagesRegistry.prototype._mergeLanguage = function (resolvedLanguage, lang) {\r\n        var _a;\r\n        var langId = lang.id;\r\n        var primaryMime = null;\r\n        if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\r\n            (_a = resolvedLanguage.mimetypes).push.apply(_a, lang.mimetypes);\r\n            primaryMime = lang.mimetypes[0];\r\n        }\r\n        if (!primaryMime) {\r\n            primaryMime = \"text/x-\" + langId;\r\n            resolvedLanguage.mimetypes.push(primaryMime);\r\n        }\r\n        if (Array.isArray(lang.extensions)) {\r\n            for (var _i = 0, _b = lang.extensions; _i < _b.length; _i++) {\r\n                var extension = _b[_i];\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\r\n                resolvedLanguage.extensions.push(extension);\r\n            }\r\n        }\r\n        if (Array.isArray(lang.filenames)) {\r\n            for (var _c = 0, _d = lang.filenames; _c < _d.length; _c++) {\r\n                var filename = _d[_c];\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\r\n                resolvedLanguage.filenames.push(filename);\r\n            }\r\n        }\r\n        if (Array.isArray(lang.filenamePatterns)) {\r\n            for (var _e = 0, _f = lang.filenamePatterns; _e < _f.length; _e++) {\r\n                var filenamePattern = _f[_e];\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\r\n            }\r\n        }\r\n        if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\r\n            var firstLineRegexStr = lang.firstLine;\r\n            if (firstLineRegexStr.charAt(0) !== '^') {\r\n                firstLineRegexStr = '^' + firstLineRegexStr;\r\n            }\r\n            try {\r\n                var firstLineRegex = new RegExp(firstLineRegexStr);\r\n                if (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\r\n                    mime.registerTextMime({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\r\n                }\r\n            }\r\n            catch (err) {\r\n                // Most likely, the regex was bad\r\n                onUnexpectedError(err);\r\n            }\r\n        }\r\n        resolvedLanguage.aliases.push(langId);\r\n        var langAliases = null;\r\n        if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\r\n            if (lang.aliases.length === 0) {\r\n                // signal that this language should not get a name\r\n                langAliases = [null];\r\n            }\r\n            else {\r\n                langAliases = lang.aliases;\r\n            }\r\n        }\r\n        if (langAliases !== null) {\r\n            for (var _g = 0, langAliases_1 = langAliases; _g < langAliases_1.length; _g++) {\r\n                var langAlias = langAliases_1[_g];\r\n                if (!langAlias || langAlias.length === 0) {\r\n                    continue;\r\n                }\r\n                resolvedLanguage.aliases.push(langAlias);\r\n            }\r\n        }\r\n        var containsAliases = (langAliases !== null && langAliases.length > 0);\r\n        if (containsAliases && langAliases[0] === null) {\r\n            // signal that this language should not get a name\r\n        }\r\n        else {\r\n            var bestName = (containsAliases ? langAliases[0] : null) || langId;\r\n            if (containsAliases || !resolvedLanguage.name) {\r\n                resolvedLanguage.name = bestName;\r\n            }\r\n        }\r\n        if (lang.configuration) {\r\n            resolvedLanguage.configurationFiles.push(lang.configuration);\r\n        }\r\n    };\r\n    LanguagesRegistry.prototype.isRegisteredMode = function (mimetypeOrModeId) {\r\n        // Is this a known mime type ?\r\n        if (hasOwnProperty.call(this._mimeTypesMap, mimetypeOrModeId)) {\r\n            return true;\r\n        }\r\n        // Is this a known mode id ?\r\n        return hasOwnProperty.call(this._languages, mimetypeOrModeId);\r\n    };\r\n    LanguagesRegistry.prototype.getModeIdForLanguageNameLowercase = function (languageNameLower) {\r\n        if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\r\n            return null;\r\n        }\r\n        return this._lowercaseNameMap[languageNameLower].language;\r\n    };\r\n    LanguagesRegistry.prototype.extractModeIds = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n        var _this = this;\r\n        if (!commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            return [];\r\n        }\r\n        return (commaSeparatedMimetypesOrCommaSeparatedIds.\r\n            split(',').\r\n            map(function (mimeTypeOrId) { return mimeTypeOrId.trim(); }).\r\n            map(function (mimeTypeOrId) {\r\n            if (hasOwnProperty.call(_this._mimeTypesMap, mimeTypeOrId)) {\r\n                return _this._mimeTypesMap[mimeTypeOrId].language;\r\n            }\r\n            return mimeTypeOrId;\r\n        }).\r\n            filter(function (modeId) {\r\n            return hasOwnProperty.call(_this._languages, modeId);\r\n        }));\r\n    };\r\n    LanguagesRegistry.prototype.getLanguageIdentifier = function (_modeId) {\r\n        if (_modeId === NULL_MODE_ID || _modeId === 0 /* Null */) {\r\n            return NULL_LANGUAGE_IDENTIFIER;\r\n        }\r\n        var modeId;\r\n        if (typeof _modeId === 'string') {\r\n            modeId = _modeId;\r\n        }\r\n        else {\r\n            modeId = this._languageIdToLanguage[_modeId];\r\n            if (!modeId) {\r\n                return null;\r\n            }\r\n        }\r\n        if (!hasOwnProperty.call(this._languages, modeId)) {\r\n            return null;\r\n        }\r\n        return this._languages[modeId].identifier;\r\n    };\r\n    LanguagesRegistry.prototype.getModeIdsFromFilepathOrFirstLine = function (resource, firstLine) {\r\n        if (!resource && !firstLine) {\r\n            return [];\r\n        }\r\n        var mimeTypes = mime.guessMimeTypes(resource, firstLine);\r\n        return this.extractModeIds(mimeTypes.join(','));\r\n    };\r\n    return LanguagesRegistry;\r\n}(Disposable));\r\nexport { LanguagesRegistry };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}