{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '\\''\n  },\n  brackets: [['(', ')'], ['[', ']'], ['If', 'EndIf'], ['While', 'EndWhile'], ['For', 'EndFor'], ['Sub', 'EndSub']],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.sb',\n  ignoreCase: true,\n  brackets: [{\n    token: 'delimiter.array',\n    open: '[',\n    close: ']'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  },\n  // Special bracket statement pairs\n  {\n    token: 'keyword.tag-if',\n    open: 'If',\n    close: 'EndIf'\n  }, {\n    token: 'keyword.tag-while',\n    open: 'While',\n    close: 'EndWhile'\n  }, {\n    token: 'keyword.tag-for',\n    open: 'For',\n    close: 'EndFor'\n  }, {\n    token: 'keyword.tag-sub',\n    open: 'Sub',\n    close: 'EndSub'\n  }],\n  keywords: ['Else', 'ElseIf', 'EndFor', 'EndIf', 'EndSub', 'EndWhile', 'For', 'Goto', 'If', 'Step', 'Sub', 'Then', 'To', 'While'],\n  tagwords: ['If', 'Sub', 'While', 'For'],\n  operators: ['>', '<', '<>', '<=', '>=', 'And', 'Or', '+', '-', '*', '/', '='],\n  // we include these common regular expressions\n  identifier: /[a-zA-Z_][\\w]*/,\n  symbols: /[=><:+\\-*\\/%\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // whitespace\n    {\n      include: '@whitespace'\n    },\n    // classes\n    [/(@identifier)(?=[.])/, 'type'],\n    // identifiers, tagwords, and keywords\n    [/@identifier/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@operators': 'operator',\n        '@default': 'variable.name'\n      }\n    }],\n    // methods, properties, and events\n    [/([.])(@identifier)/, {\n      cases: {\n        '$2': ['delimiter', 'type.member'],\n        '@default': ''\n      }\n    }],\n    // numbers\n    [/\\d*\\.\\d+/, 'number.float'], [/\\d+/, 'number'],\n    // delimiters and operators\n    [/[()\\[\\]]/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'operator',\n        '@default': 'delimiter'\n      }\n    }],\n    // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"/, 'string', '@string']],\n    whitespace: [[/[ \\t\\r\\n]+/, ''], [/(\\').*$/, 'comment']],\n    string: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"C?/, 'string', '@pop']]\n  }\n};","map":{"version":3,"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tagwords","operators","identifier","symbols","escapes","tokenizer","root","include","cases","whitespace","string"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '\\'',\r\n    },\r\n    brackets: [\r\n        ['(', ')'], ['[', ']'],\r\n        ['If', 'EndIf'],\r\n        ['While', 'EndWhile'],\r\n        ['For', 'EndFor'],\r\n        ['Sub', 'EndSub']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.sb',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        // Special bracket statement pairs\r\n        { token: 'keyword.tag-if', open: 'If', close: 'EndIf' },\r\n        { token: 'keyword.tag-while', open: 'While', close: 'EndWhile' },\r\n        { token: 'keyword.tag-for', open: 'For', close: 'EndFor' },\r\n        { token: 'keyword.tag-sub', open: 'Sub', close: 'EndSub' },\r\n    ],\r\n    keywords: [\r\n        'Else', 'ElseIf', 'EndFor', 'EndIf', 'EndSub', 'EndWhile',\r\n        'For', 'Goto', 'If', 'Step', 'Sub', 'Then', 'To', 'While'\r\n    ],\r\n    tagwords: [\r\n        'If', 'Sub', 'While', 'For'\r\n    ],\r\n    operators: ['>', '<', '<>', '<=', '>=', 'And', 'Or', '+', '-', '*', '/', '='],\r\n    // we include these common regular expressions\r\n    identifier: /[a-zA-Z_][\\w]*/,\r\n    symbols: /[=><:+\\-*\\/%\\.,]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // classes\r\n            [/(@identifier)(?=[.])/, 'type'],\r\n            // identifiers, tagwords, and keywords\r\n            [/@identifier/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@operators': 'operator',\r\n                        '@default': 'variable.name'\r\n                    }\r\n                }],\r\n            // methods, properties, and events\r\n            [/([.])(@identifier)/, {\r\n                    cases: {\r\n                        '$2': ['delimiter', 'type.member'],\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\.\\d+/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // delimiters and operators\r\n            [/[()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'operator',\r\n                        '@default': 'delimiter'\r\n                    }\r\n                }],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string'],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/(\\').*$/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"C?/, 'string', '@pop']\r\n        ],\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}