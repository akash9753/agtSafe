{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as scssScanner from './scssScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { SCSSParseError } from './scssErrors.js';\nimport { ParseError } from './cssErrors.js';\n/// <summary>\n/// A parser for scss\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\nvar SCSSParser = /** @class */function (_super) {\n  __extends(SCSSParser, _super);\n  function SCSSParser() {\n    return _super.call(this, new scssScanner.SCSSScanner()) || this;\n  }\n  SCSSParser.prototype._parseStylesheetStart = function () {\n    return this._parseForward() || this._parseUse() || _super.prototype._parseStylesheetStart.call(this);\n  };\n  SCSSParser.prototype._parseStylesheetStatement = function () {\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseWarnAndDebug() || this._parseControlStatement() || this._parseMixinDeclaration() || this._parseMixinContent() || this._parseMixinReference() // @include\n      || this._parseFunctionDeclaration() || _super.prototype._parseStylesheetAtStatement.call(this);\n    }\n    return this._parseRuleset(true) || this._parseVariableDeclaration();\n  };\n  SCSSParser.prototype._parseImport = function () {\n    if (!this.peekKeyword('@import')) {\n      return null;\n    }\n    var node = this.create(nodes.Import);\n    this.consumeToken();\n    if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.URIOrStringExpected);\n    }\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n        return this.finish(node, ParseError.URIOrStringExpected);\n      }\n    }\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      node.setMedialist(this._parseMediaQueryList());\n    }\n    return this.finish(node);\n  };\n  // scss variables: $font-size: 12px;\n  SCSSParser.prototype._parseVariableDeclaration = function (panic) {\n    if (panic === void 0) {\n      panic = [];\n    }\n    if (!this.peek(scssScanner.VariableName)) {\n      return null;\n    }\n    var node = this.create(nodes.VariableDeclaration);\n    if (!node.setVariable(this._parseVariable())) {\n      return null;\n    }\n    if (!this.accept(TokenType.Colon)) {\n      return this.finish(node, ParseError.ColonExpected);\n    }\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n    if (!node.setValue(this._parseExpr())) {\n      return this.finish(node, ParseError.VariableValueExpected, [], panic);\n    }\n    while (this.accept(TokenType.Exclamation)) {\n      if (!this.peekRegExp(TokenType.Ident, /^(default|global)$/)) {\n        return this.finish(node, ParseError.UnknownKeyword);\n      }\n      this.consumeToken();\n    }\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseMediaContentStart = function () {\n    return this._parseInterpolation();\n  };\n  SCSSParser.prototype._parseMediaFeatureName = function () {\n    return this._parseModuleMember() || this._parseFunction() // function before ident\n    || this._parseIdent() || this._parseVariable();\n  };\n  SCSSParser.prototype._parseKeyframeSelector = function () {\n    return this._tryParseKeyframeSelector() || this._parseControlStatement(this._parseKeyframeSelector.bind(this)) || this._parseVariableDeclaration() || this._parseMixinContent();\n  };\n  SCSSParser.prototype._parseVariable = function () {\n    if (!this.peek(scssScanner.VariableName)) {\n      return null;\n    }\n    var node = this.create(nodes.Variable);\n    this.consumeToken();\n    return node;\n  };\n  SCSSParser.prototype._parseModuleMember = function () {\n    var pos = this.mark();\n    var node = this.create(nodes.Module);\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module]))) {\n      return null;\n    }\n    if (this.hasWhitespace() || !this.acceptDelim('.') || this.hasWhitespace()) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    if (!node.addChild(this._parseVariable() || this._parseFunction())) {\n      return this.finish(node, ParseError.IdentifierOrVariableExpected);\n    }\n    return node;\n  };\n  SCSSParser.prototype._parseIdent = function (referenceTypes) {\n    var _this = this;\n    if (!this.peek(TokenType.Ident) && !this.peek(scssScanner.InterpolationFunction) && !this.peekDelim('-')) {\n      return null;\n    }\n    var node = this.create(nodes.Identifier);\n    node.referenceTypes = referenceTypes;\n    node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n    var hasContent = false;\n    var indentInterpolation = function indentInterpolation() {\n      var pos = _this.mark();\n      if (_this.acceptDelim('-')) {\n        if (!_this.hasWhitespace()) {\n          _this.acceptDelim('-');\n        }\n        if (_this.hasWhitespace()) {\n          _this.restoreAtMark(pos);\n          return null;\n        }\n      }\n      return _this._parseInterpolation();\n    };\n    while (this.accept(TokenType.Ident) || node.addChild(indentInterpolation()) || hasContent && (this.acceptDelim('-') || this.accept(TokenType.Num))) {\n      hasContent = true;\n      if (this.hasWhitespace()) {\n        break;\n      }\n    }\n    return hasContent ? this.finish(node) : null;\n  };\n  SCSSParser.prototype._parseTerm = function () {\n    var term = this.create(nodes.Term);\n    if (term.setExpression(this._parseModuleMember())) {\n      return this.finish(term);\n    }\n    var superTerm = _super.prototype._parseTerm.call(this);\n    if (superTerm) {\n      return superTerm;\n    }\n    if (term.setExpression(this._parseVariable()) || term.setExpression(this._parseSelectorCombinator()) || term.setExpression(this._tryParsePrio())) {\n      return this.finish(term);\n    }\n    return null;\n  };\n  SCSSParser.prototype._parseInterpolation = function () {\n    if (this.peek(scssScanner.InterpolationFunction)) {\n      var node = this.create(nodes.Interpolation);\n      this.consumeToken();\n      if (!node.addChild(this._parseExpr()) && !this._parseSelectorCombinator()) {\n        if (this.accept(TokenType.CurlyR)) {\n          return this.finish(node);\n        }\n        return this.finish(node, ParseError.ExpressionExpected);\n      }\n      if (!this.accept(TokenType.CurlyR)) {\n        return this.finish(node, ParseError.RightCurlyExpected);\n      }\n      return this.finish(node);\n    }\n    return null;\n  };\n  SCSSParser.prototype._parseOperator = function () {\n    if (this.peek(scssScanner.EqualsOperator) || this.peek(scssScanner.NotEqualsOperator) || this.peek(scssScanner.GreaterEqualsOperator) || this.peek(scssScanner.SmallerEqualsOperator) || this.peekDelim('>') || this.peekDelim('<') || this.peekIdent('and') || this.peekIdent('or') || this.peekDelim('%')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      return this.finish(node);\n    }\n    return _super.prototype._parseOperator.call(this);\n  };\n  SCSSParser.prototype._parseUnaryOperator = function () {\n    if (this.peekIdent('not')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      return this.finish(node);\n    }\n    return _super.prototype._parseUnaryOperator.call(this);\n  };\n  SCSSParser.prototype._parseRuleSetDeclaration = function () {\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseKeyframe() // nested @keyframe\n      || this._parseImport() // nested @import\n      || this._parseMedia(true) // nested @media\n      || this._parseFontFace() // nested @font-face\n      || this._parseWarnAndDebug() // @warn, @debug and @error statements\n      || this._parseControlStatement() // @if, @while, @for, @each\n      || this._parseFunctionDeclaration() // @function\n      || this._parseExtends() // @extends\n      || this._parseMixinReference() // @include\n      || this._parseMixinContent() // @content\n      || this._parseMixinDeclaration() // nested @mixin\n      || this._parseRuleset(true) // @at-rule\n      || this._parseSupports(true); // @supports\n    }\n\n    return this._parseVariableDeclaration() // variable declaration\n    || this._tryParseRuleset(true) // nested ruleset\n    || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\n  };\n\n  SCSSParser.prototype._parseDeclaration = function (resyncStopTokens) {\n    var node = this.create(nodes.Declaration);\n    if (!node.setProperty(this._parseProperty())) {\n      return null;\n    }\n    if (!this.accept(TokenType.Colon)) {\n      return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], resyncStopTokens);\n    }\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n    var hasContent = false;\n    if (node.setValue(this._parseExpr())) {\n      hasContent = true;\n      node.addChild(this._parsePrio());\n    }\n    if (this.peek(TokenType.CurlyL)) {\n      node.setNestedProperties(this._parseNestedProperties());\n    } else {\n      if (!hasContent) {\n        return this.finish(node, ParseError.PropertyValueExpected);\n      }\n    }\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseNestedProperties = function () {\n    var node = this.create(nodes.NestedProperties);\n    return this._parseBody(node, this._parseDeclaration.bind(this));\n  };\n  SCSSParser.prototype._parseExtends = function () {\n    if (this.peekKeyword('@extend')) {\n      var node = this.create(nodes.ExtendsReference);\n      this.consumeToken();\n      if (!node.getSelectors().addChild(this._parseSimpleSelector())) {\n        return this.finish(node, ParseError.SelectorExpected);\n      }\n      while (this.accept(TokenType.Comma)) {\n        node.getSelectors().addChild(this._parseSimpleSelector());\n      }\n      if (this.accept(TokenType.Exclamation)) {\n        if (!this.acceptIdent('optional')) {\n          return this.finish(node, ParseError.UnknownKeyword);\n        }\n      }\n      return this.finish(node);\n    }\n    return null;\n  };\n  SCSSParser.prototype._parseSimpleSelectorBody = function () {\n    return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || _super.prototype._parseSimpleSelectorBody.call(this);\n  };\n  SCSSParser.prototype._parseSelectorCombinator = function () {\n    if (this.peekDelim('&')) {\n      var node = this.createNode(nodes.NodeType.SelectorCombinator);\n      this.consumeToken();\n      while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n        //  support &-foo-1\n      }\n      return this.finish(node);\n    }\n    return null;\n  };\n  SCSSParser.prototype._parseSelectorPlaceholder = function () {\n    if (this.peekDelim('%')) {\n      var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n      this.consumeToken();\n      this._parseIdent();\n      return this.finish(node);\n    } else if (this.peekKeyword('@at-root')) {\n      var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n      this.consumeToken();\n      return this.finish(node);\n    }\n    return null;\n  };\n  SCSSParser.prototype._parseElementName = function () {\n    var pos = this.mark();\n    var node = _super.prototype._parseElementName.call(this);\n    if (node && !this.hasWhitespace() && this.peek(TokenType.ParenthesisL)) {\n      // for #49589\n      this.restoreAtMark(pos);\n      return null;\n    }\n    return node;\n  };\n  SCSSParser.prototype._tryParsePseudoIdentifier = function () {\n    return this._parseInterpolation() || _super.prototype._tryParsePseudoIdentifier.call(this); // for #49589\n  };\n\n  SCSSParser.prototype._parseWarnAndDebug = function () {\n    if (!this.peekKeyword('@debug') && !this.peekKeyword('@warn') && !this.peekKeyword('@error')) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.Debug);\n    this.consumeToken(); // @debug, @warn or @error\n    node.addChild(this._parseExpr()); // optional\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseControlStatement = function (parseStatement) {\n    if (parseStatement === void 0) {\n      parseStatement = this._parseRuleSetDeclaration.bind(this);\n    }\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n    return this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement) || this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n  };\n  SCSSParser.prototype._parseIfStatement = function (parseStatement) {\n    if (!this.peekKeyword('@if')) {\n      return null;\n    }\n    return this._internalParseIfStatement(parseStatement);\n  };\n  SCSSParser.prototype._internalParseIfStatement = function (parseStatement) {\n    var node = this.create(nodes.IfStatement);\n    this.consumeToken(); // @if or if\n    if (!node.setExpression(this._parseExpr(true))) {\n      return this.finish(node, ParseError.ExpressionExpected);\n    }\n    this._parseBody(node, parseStatement);\n    if (this.acceptKeyword('@else')) {\n      if (this.peekIdent('if')) {\n        node.setElseClause(this._internalParseIfStatement(parseStatement));\n      } else if (this.peek(TokenType.CurlyL)) {\n        var elseNode = this.create(nodes.ElseStatement);\n        this._parseBody(elseNode, parseStatement);\n        node.setElseClause(elseNode);\n      }\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseForStatement = function (parseStatement) {\n    if (!this.peekKeyword('@for')) {\n      return null;\n    }\n    var node = this.create(nodes.ForStatement);\n    this.consumeToken(); // @for\n    if (!node.setVariable(this._parseVariable())) {\n      return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n    }\n    if (!this.acceptIdent('from')) {\n      return this.finish(node, SCSSParseError.FromExpected, [TokenType.CurlyR]);\n    }\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n    if (!this.acceptIdent('to') && !this.acceptIdent('through')) {\n      return this.finish(node, SCSSParseError.ThroughOrToExpected, [TokenType.CurlyR]);\n    }\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n    return this._parseBody(node, parseStatement);\n  };\n  SCSSParser.prototype._parseEachStatement = function (parseStatement) {\n    if (!this.peekKeyword('@each')) {\n      return null;\n    }\n    var node = this.create(nodes.EachStatement);\n    this.consumeToken(); // @each\n    var variables = node.getVariables();\n    if (!variables.addChild(this._parseVariable())) {\n      return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n    }\n    while (this.accept(TokenType.Comma)) {\n      if (!variables.addChild(this._parseVariable())) {\n        return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n      }\n    }\n    this.finish(variables);\n    if (!this.acceptIdent('in')) {\n      return this.finish(node, SCSSParseError.InExpected, [TokenType.CurlyR]);\n    }\n    if (!node.addChild(this._parseExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n    return this._parseBody(node, parseStatement);\n  };\n  SCSSParser.prototype._parseWhileStatement = function (parseStatement) {\n    if (!this.peekKeyword('@while')) {\n      return null;\n    }\n    var node = this.create(nodes.WhileStatement);\n    this.consumeToken(); // @while\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n    return this._parseBody(node, parseStatement);\n  };\n  SCSSParser.prototype._parseFunctionBodyDeclaration = function () {\n    return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug() || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n  };\n  SCSSParser.prototype._parseFunctionDeclaration = function () {\n    if (!this.peekKeyword('@function')) {\n      return null;\n    }\n    var node = this.create(nodes.FunctionDeclaration);\n    this.consumeToken(); // @function\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Function]))) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    }\n    if (!this.accept(TokenType.ParenthesisL)) {\n      return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.CurlyR]);\n    }\n    if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n      while (this.accept(TokenType.Comma)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n        if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n          return this.finish(node, ParseError.VariableNameExpected);\n        }\n      }\n    }\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n    }\n    return this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n  };\n  SCSSParser.prototype._parseReturnStatement = function () {\n    if (!this.peekKeyword('@return')) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.ReturnStatement);\n    this.consumeToken(); // @function\n    if (!node.addChild(this._parseExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected);\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseMixinDeclaration = function () {\n    if (!this.peekKeyword('@mixin')) {\n      return null;\n    }\n    var node = this.create(nodes.MixinDeclaration);\n    this.consumeToken();\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    }\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n        while (this.accept(TokenType.Comma)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n          if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n            return this.finish(node, ParseError.VariableNameExpected);\n          }\n        }\n      }\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n      }\n    }\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n  SCSSParser.prototype._parseParameterDeclaration = function () {\n    var node = this.create(nodes.FunctionParameter);\n    if (!node.setIdentifier(this._parseVariable())) {\n      return null;\n    }\n    if (this.accept(scssScanner.Ellipsis)) {\n      // ok\n    }\n    if (this.accept(TokenType.Colon)) {\n      if (!node.setDefaultValue(this._parseExpr(true))) {\n        return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n      }\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseMixinContent = function () {\n    if (!this.peekKeyword('@content')) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.MixinContent);\n    this.consumeToken();\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseMixinReference = function () {\n    if (!this.peekKeyword('@include')) {\n      return null;\n    }\n    var node = this.create(nodes.MixinReference);\n    this.consumeToken();\n    // Could be module or mixin identifier, set as mixin as default.\n    var firstIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n    if (!node.setIdentifier(firstIdent)) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    }\n    // Is a module accessor.\n    if (!this.hasWhitespace() && this.acceptDelim('.') && !this.hasWhitespace()) {\n      var secondIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n      if (!secondIdent) {\n        return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n      }\n      var moduleToken = this.create(nodes.Module);\n      // Re-purpose first matched ident as identifier for module token.\n      firstIdent.referenceTypes = [nodes.ReferenceType.Module];\n      moduleToken.setIdentifier(firstIdent);\n      // Override identifier with second ident.\n      node.setIdentifier(secondIdent);\n      node.addChild(moduleToken);\n    }\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (node.getArguments().addChild(this._parseFunctionArgument())) {\n        while (this.accept(TokenType.Comma)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n          if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n            return this.finish(node, ParseError.ExpressionExpected);\n          }\n        }\n      }\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected);\n      }\n    }\n    if (this.peek(TokenType.CurlyL)) {\n      var content = this.create(nodes.BodyDeclaration);\n      this._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\n      node.setContent(content);\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseMixinReferenceBodyStatement = function () {\n    return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n  };\n  SCSSParser.prototype._parseFunctionArgument = function () {\n    // [variableName ':'] expression | variableName '...'\n    var node = this.create(nodes.FunctionArgument);\n    var pos = this.mark();\n    var argument = this._parseVariable();\n    if (argument) {\n      if (!this.accept(TokenType.Colon)) {\n        if (this.accept(scssScanner.Ellipsis)) {\n          // optional\n          node.setValue(argument);\n          return this.finish(node);\n        } else {\n          this.restoreAtMark(pos);\n        }\n      } else {\n        node.setIdentifier(argument);\n      }\n    }\n    if (node.setValue(this._parseExpr(true))) {\n      this.accept(scssScanner.Ellipsis); // #43746\n      node.addChild(this._parsePrio()); // #9859\n      return this.finish(node);\n    }\n    return null;\n  };\n  SCSSParser.prototype._parseURLArgument = function () {\n    var pos = this.mark();\n    var node = _super.prototype._parseURLArgument.call(this);\n    if (!node || !this.peek(TokenType.ParenthesisR)) {\n      this.restoreAtMark(pos);\n      var node_1 = this.create(nodes.Node);\n      node_1.addChild(this._parseBinaryExpr());\n      return this.finish(node_1);\n    }\n    return node;\n  };\n  SCSSParser.prototype._parseOperation = function () {\n    if (!this.peek(TokenType.ParenthesisL)) {\n      return null;\n    }\n    var node = this.create(nodes.Node);\n    this.consumeToken();\n    while (node.addChild(this._parseListElement())) {\n      this.accept(TokenType.Comma); // optional\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseListElement = function () {\n    var node = this.create(nodes.ListEntry);\n    var child = this._parseBinaryExpr();\n    if (!child) {\n      return null;\n    }\n    if (this.accept(TokenType.Colon)) {\n      node.setKey(child);\n      if (!node.setValue(this._parseBinaryExpr())) {\n        return this.finish(node, ParseError.ExpressionExpected);\n      }\n    } else {\n      node.setValue(child);\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseUse = function () {\n    if (!this.peek(scssScanner.Use)) {\n      return null;\n    }\n    var node = this.create(nodes.Use);\n    this.consumeToken();\n    if (!node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.StringLiteralExpected);\n    }\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      if (!this.peekRegExp(TokenType.Ident, /as|with/)) {\n        return this.finish(node, ParseError.UnknownKeyword);\n      }\n      if (this.acceptIdent('as') && !node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module])) && !this.acceptDelim('*')) {\n        return this.finish(node, ParseError.IdentifierOrWildcardExpected);\n      }\n      if (this.acceptIdent('with')) {\n        if (!this.accept(TokenType.ParenthesisL)) {\n          return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.ParenthesisR]);\n        }\n        // First variable statement, no comma.\n        if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n          return this.finish(node, ParseError.VariableNameExpected);\n        }\n        while (this.accept(TokenType.Comma)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n          if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n            return this.finish(node, ParseError.VariableNameExpected);\n          }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n          return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n      }\n    }\n    if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseModuleConfigDeclaration = function () {\n    var node = this.create(nodes.ModuleConfiguration);\n    if (!node.setIdentifier(this._parseVariable())) {\n      return null;\n    }\n    if (!this.accept(TokenType.Colon) || !node.setValue(this._parseExpr(true))) {\n      return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseForward = function () {\n    if (!this.peek(scssScanner.Forward)) {\n      return null;\n    }\n    var node = this.create(nodes.Forward);\n    this.consumeToken();\n    if (!node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.StringLiteralExpected);\n    }\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      if (!this.peekRegExp(TokenType.Ident, /as|hide|show/)) {\n        return this.finish(node, ParseError.UnknownKeyword);\n      }\n      if (this.acceptIdent('as')) {\n        var identifier = this._parseIdent([nodes.ReferenceType.Forward]);\n        if (!node.setIdentifier(identifier)) {\n          return this.finish(node, ParseError.IdentifierExpected);\n        }\n        // Wildcard must be the next character after the identifier string.\n        if (this.hasWhitespace() || !this.acceptDelim('*')) {\n          return this.finish(node, ParseError.WildcardExpected);\n        }\n      }\n      if (this.peekIdent('hide') || this.peekIdent('show')) {\n        if (!node.addChild(this._parseForwardVisibility())) {\n          return this.finish(node, ParseError.IdentifierOrVariableExpected);\n        }\n      }\n    }\n    if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n    return this.finish(node);\n  };\n  SCSSParser.prototype._parseForwardVisibility = function () {\n    var node = this.create(nodes.ForwardVisibility);\n    // Assume to be \"hide\" or \"show\".\n    node.setIdentifier(this._parseIdent());\n    while (node.addChild(this._parseVariable() || this._parseIdent())) {\n      // Consume all variables and idents ahead.\n    }\n    // More than just identifier \n    return node.getChildren().length > 1 ? node : null;\n  };\n  return SCSSParser;\n}(cssParser.Parser);\nexport { SCSSParser };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","scssScanner","TokenType","cssParser","nodes","SCSSParseError","ParseError","SCSSParser","_super","call","SCSSScanner","_parseStylesheetStart","_parseForward","_parseUse","_parseStylesheetStatement","peek","AtKeyword","_parseWarnAndDebug","_parseControlStatement","_parseMixinDeclaration","_parseMixinContent","_parseMixinReference","_parseFunctionDeclaration","_parseStylesheetAtStatement","_parseRuleset","_parseVariableDeclaration","_parseImport","peekKeyword","node","Import","consumeToken","addChild","_parseURILiteral","_parseStringLiteral","finish","URIOrStringExpected","accept","Comma","SemiColon","EOF","setMedialist","_parseMediaQueryList","panic","VariableName","VariableDeclaration","setVariable","_parseVariable","Colon","ColonExpected","prevToken","colonPosition","offset","setValue","_parseExpr","VariableValueExpected","Exclamation","peekRegExp","Ident","UnknownKeyword","semicolonPosition","token","_parseMediaContentStart","_parseInterpolation","_parseMediaFeatureName","_parseModuleMember","_parseFunction","_parseIdent","_parseKeyframeSelector","_tryParseKeyframeSelector","bind","Variable","pos","mark","Module","setIdentifier","ReferenceType","hasWhitespace","acceptDelim","restoreAtMark","IdentifierOrVariableExpected","referenceTypes","_this","InterpolationFunction","peekDelim","Identifier","isCustomProperty","hasContent","indentInterpolation","Num","_parseTerm","term","Term","setExpression","superTerm","_parseSelectorCombinator","_tryParsePrio","Interpolation","CurlyR","ExpressionExpected","RightCurlyExpected","_parseOperator","EqualsOperator","NotEqualsOperator","GreaterEqualsOperator","SmallerEqualsOperator","peekIdent","createNode","NodeType","Operator","_parseUnaryOperator","Node","_parseRuleSetDeclaration","_parseKeyframe","_parseMedia","_parseFontFace","_parseExtends","_parseSupports","_tryParseRuleset","_parseDeclaration","resyncStopTokens","Declaration","setProperty","_parseProperty","_parsePrio","CurlyL","setNestedProperties","_parseNestedProperties","PropertyValueExpected","NestedProperties","_parseBody","ExtendsReference","getSelectors","_parseSimpleSelector","SelectorExpected","acceptIdent","_parseSimpleSelectorBody","_parseSelectorPlaceholder","SelectorCombinator","Dimension","SelectorPlaceholder","_parseElementName","ParenthesisL","_tryParsePseudoIdentifier","Debug","parseStatement","_parseIfStatement","_parseForStatement","_parseEachStatement","_parseWhileStatement","_internalParseIfStatement","IfStatement","acceptKeyword","setElseClause","elseNode","ElseStatement","ForStatement","VariableNameExpected","FromExpected","_parseBinaryExpr","ThroughOrToExpected","EachStatement","variables","getVariables","InExpected","WhileStatement","_parseFunctionBodyDeclaration","_parseReturnStatement","FunctionDeclaration","Function","IdentifierExpected","LeftParenthesisExpected","getParameters","_parseParameterDeclaration","ParenthesisR","RightParenthesisExpected","ReturnStatement","MixinDeclaration","Mixin","FunctionParameter","Ellipsis","setDefaultValue","MixinContent","MixinReference","firstIdent","secondIdent","moduleToken","getArguments","_parseFunctionArgument","content","BodyDeclaration","_parseMixinReferenceBodyStatement","setContent","FunctionArgument","argument","_parseURLArgument","node_1","_parseOperation","_parseListElement","ListEntry","child","setKey","Use","StringLiteralExpected","IdentifierOrWildcardExpected","_parseModuleConfigDeclaration","SemiColonExpected","ModuleConfiguration","Forward","identifier","WildcardExpected","_parseForwardVisibility","ForwardVisibility","getChildren","length","Parser"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as scssScanner from './scssScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { SCSSParseError } from './scssErrors.js';\nimport { ParseError } from './cssErrors.js';\n/// <summary>\n/// A parser for scss\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\nvar SCSSParser = /** @class */ (function (_super) {\n    __extends(SCSSParser, _super);\n    function SCSSParser() {\n        return _super.call(this, new scssScanner.SCSSScanner()) || this;\n    }\n    SCSSParser.prototype._parseStylesheetStart = function () {\n        return this._parseForward()\n            || this._parseUse()\n            || _super.prototype._parseStylesheetStart.call(this);\n    };\n    SCSSParser.prototype._parseStylesheetStatement = function () {\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseWarnAndDebug()\n                || this._parseControlStatement()\n                || this._parseMixinDeclaration()\n                || this._parseMixinContent()\n                || this._parseMixinReference() // @include\n                || this._parseFunctionDeclaration()\n                || _super.prototype._parseStylesheetAtStatement.call(this);\n        }\n        return this._parseRuleset(true) || this._parseVariableDeclaration();\n    };\n    SCSSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(nodes.Import);\n        this.consumeToken();\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.URIOrStringExpected);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, ParseError.URIOrStringExpected);\n            }\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    // scss variables: $font-size: 12px;\n    SCSSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        if (!this.peek(scssScanner.VariableName)) {\n            return null;\n        }\n        var node = this.create(nodes.VariableDeclaration);\n        if (!node.setVariable(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            return this.finish(node, ParseError.ColonExpected);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, ParseError.VariableValueExpected, [], panic);\n        }\n        while (this.accept(TokenType.Exclamation)) {\n            if (!this.peekRegExp(TokenType.Ident, /^(default|global)$/)) {\n                return this.finish(node, ParseError.UnknownKeyword);\n            }\n            this.consumeToken();\n        }\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMediaContentStart = function () {\n        return this._parseInterpolation();\n    };\n    SCSSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseModuleMember()\n            || this._parseFunction() // function before ident\n            || this._parseIdent()\n            || this._parseVariable();\n    };\n    SCSSParser.prototype._parseKeyframeSelector = function () {\n        return this._tryParseKeyframeSelector()\n            || this._parseControlStatement(this._parseKeyframeSelector.bind(this))\n            || this._parseVariableDeclaration()\n            || this._parseMixinContent();\n    };\n    SCSSParser.prototype._parseVariable = function () {\n        if (!this.peek(scssScanner.VariableName)) {\n            return null;\n        }\n        var node = this.create(nodes.Variable);\n        this.consumeToken();\n        return node;\n    };\n    SCSSParser.prototype._parseModuleMember = function () {\n        var pos = this.mark();\n        var node = this.create(nodes.Module);\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module]))) {\n            return null;\n        }\n        if (this.hasWhitespace()\n            || !this.acceptDelim('.')\n            || this.hasWhitespace()) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (!node.addChild(this._parseVariable() || this._parseFunction())) {\n            return this.finish(node, ParseError.IdentifierOrVariableExpected);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseIdent = function (referenceTypes) {\n        var _this = this;\n        if (!this.peek(TokenType.Ident) && !this.peek(scssScanner.InterpolationFunction) && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(nodes.Identifier);\n        node.referenceTypes = referenceTypes;\n        node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        while (this.accept(TokenType.Ident) || node.addChild(indentInterpolation()) || (hasContent && (this.acceptDelim('-') || this.accept(TokenType.Num)))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    SCSSParser.prototype._parseTerm = function () {\n        var term = this.create(nodes.Term);\n        if (term.setExpression(this._parseModuleMember())) {\n            return this.finish(term);\n        }\n        var superTerm = _super.prototype._parseTerm.call(this);\n        if (superTerm) {\n            return superTerm;\n        }\n        if (term.setExpression(this._parseVariable())\n            || term.setExpression(this._parseSelectorCombinator())\n            || term.setExpression(this._tryParsePrio())) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseInterpolation = function () {\n        if (this.peek(scssScanner.InterpolationFunction)) {\n            var node = this.create(nodes.Interpolation);\n            this.consumeToken();\n            if (!node.addChild(this._parseExpr()) && !this._parseSelectorCombinator()) {\n                if (this.accept(TokenType.CurlyR)) {\n                    return this.finish(node);\n                }\n                return this.finish(node, ParseError.ExpressionExpected);\n            }\n            if (!this.accept(TokenType.CurlyR)) {\n                return this.finish(node, ParseError.RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseOperator = function () {\n        if (this.peek(scssScanner.EqualsOperator) || this.peek(scssScanner.NotEqualsOperator)\n            || this.peek(scssScanner.GreaterEqualsOperator) || this.peek(scssScanner.SmallerEqualsOperator)\n            || this.peekDelim('>') || this.peekDelim('<')\n            || this.peekIdent('and') || this.peekIdent('or')\n            || this.peekDelim('%')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseOperator.call(this);\n    };\n    SCSSParser.prototype._parseUnaryOperator = function () {\n        if (this.peekIdent('not')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseUnaryOperator.call(this);\n    };\n    SCSSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseKeyframe() // nested @keyframe\n                || this._parseImport() // nested @import\n                || this._parseMedia(true) // nested @media\n                || this._parseFontFace() // nested @font-face\n                || this._parseWarnAndDebug() // @warn, @debug and @error statements\n                || this._parseControlStatement() // @if, @while, @for, @each\n                || this._parseFunctionDeclaration() // @function\n                || this._parseExtends() // @extends\n                || this._parseMixinReference() // @include\n                || this._parseMixinContent() // @content\n                || this._parseMixinDeclaration() // nested @mixin\n                || this._parseRuleset(true) // @at-rule\n                || this._parseSupports(true); // @supports\n        }\n        return this._parseVariableDeclaration() // variable declaration\n            || this._tryParseRuleset(true) // nested ruleset\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\n    };\n    SCSSParser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(nodes.Declaration);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], resyncStopTokens);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        var hasContent = false;\n        if (node.setValue(this._parseExpr())) {\n            hasContent = true;\n            node.addChild(this._parsePrio());\n        }\n        if (this.peek(TokenType.CurlyL)) {\n            node.setNestedProperties(this._parseNestedProperties());\n        }\n        else {\n            if (!hasContent) {\n                return this.finish(node, ParseError.PropertyValueExpected);\n            }\n        }\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseNestedProperties = function () {\n        var node = this.create(nodes.NestedProperties);\n        return this._parseBody(node, this._parseDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseExtends = function () {\n        if (this.peekKeyword('@extend')) {\n            var node = this.create(nodes.ExtendsReference);\n            this.consumeToken();\n            if (!node.getSelectors().addChild(this._parseSimpleSelector())) {\n                return this.finish(node, ParseError.SelectorExpected);\n            }\n            while (this.accept(TokenType.Comma)) {\n                node.getSelectors().addChild(this._parseSimpleSelector());\n            }\n            if (this.accept(TokenType.Exclamation)) {\n                if (!this.acceptIdent('optional')) {\n                    return this.finish(node, ParseError.UnknownKeyword);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    SCSSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(nodes.NodeType.SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo-1\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSelectorPlaceholder = function () {\n        if (this.peekDelim('%')) {\n            var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n            this.consumeToken();\n            this._parseIdent();\n            return this.finish(node);\n        }\n        else if (this.peekKeyword('@at-root')) {\n            var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseElementName = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseElementName.call(this);\n        if (node && !this.hasWhitespace() && this.peek(TokenType.ParenthesisL)) { // for #49589\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    SCSSParser.prototype._tryParsePseudoIdentifier = function () {\n        return this._parseInterpolation() || _super.prototype._tryParsePseudoIdentifier.call(this); // for #49589\n    };\n    SCSSParser.prototype._parseWarnAndDebug = function () {\n        if (!this.peekKeyword('@debug')\n            && !this.peekKeyword('@warn')\n            && !this.peekKeyword('@error')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.Debug);\n        this.consumeToken(); // @debug, @warn or @error\n        node.addChild(this._parseExpr()); // optional\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseControlStatement = function (parseStatement) {\n        if (parseStatement === void 0) { parseStatement = this._parseRuleSetDeclaration.bind(this); }\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        return this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement)\n            || this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n    };\n    SCSSParser.prototype._parseIfStatement = function (parseStatement) {\n        if (!this.peekKeyword('@if')) {\n            return null;\n        }\n        return this._internalParseIfStatement(parseStatement);\n    };\n    SCSSParser.prototype._internalParseIfStatement = function (parseStatement) {\n        var node = this.create(nodes.IfStatement);\n        this.consumeToken(); // @if or if\n        if (!node.setExpression(this._parseExpr(true))) {\n            return this.finish(node, ParseError.ExpressionExpected);\n        }\n        this._parseBody(node, parseStatement);\n        if (this.acceptKeyword('@else')) {\n            if (this.peekIdent('if')) {\n                node.setElseClause(this._internalParseIfStatement(parseStatement));\n            }\n            else if (this.peek(TokenType.CurlyL)) {\n                var elseNode = this.create(nodes.ElseStatement);\n                this._parseBody(elseNode, parseStatement);\n                node.setElseClause(elseNode);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForStatement = function (parseStatement) {\n        if (!this.peekKeyword('@for')) {\n            return null;\n        }\n        var node = this.create(nodes.ForStatement);\n        this.consumeToken(); // @for\n        if (!node.setVariable(this._parseVariable())) {\n            return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n        }\n        if (!this.acceptIdent('from')) {\n            return this.finish(node, SCSSParseError.FromExpected, [TokenType.CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        if (!this.acceptIdent('to') && !this.acceptIdent('through')) {\n            return this.finish(node, SCSSParseError.ThroughOrToExpected, [TokenType.CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseEachStatement = function (parseStatement) {\n        if (!this.peekKeyword('@each')) {\n            return null;\n        }\n        var node = this.create(nodes.EachStatement);\n        this.consumeToken(); // @each\n        var variables = node.getVariables();\n        if (!variables.addChild(this._parseVariable())) {\n            return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!variables.addChild(this._parseVariable())) {\n                return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n            }\n        }\n        this.finish(variables);\n        if (!this.acceptIdent('in')) {\n            return this.finish(node, SCSSParseError.InExpected, [TokenType.CurlyR]);\n        }\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseWhileStatement = function (parseStatement) {\n        if (!this.peekKeyword('@while')) {\n            return null;\n        }\n        var node = this.create(nodes.WhileStatement);\n        this.consumeToken(); // @while\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseFunctionBodyDeclaration = function () {\n        return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug()\n            || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseFunctionDeclaration = function () {\n        if (!this.peekKeyword('@function')) {\n            return null;\n        }\n        var node = this.create(nodes.FunctionDeclaration);\n        this.consumeToken(); // @function\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Function]))) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        if (!this.accept(TokenType.ParenthesisL)) {\n            return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.CurlyR]);\n        }\n        if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n            while (this.accept(TokenType.Comma)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                    return this.finish(node, ParseError.VariableNameExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseReturnStatement = function () {\n        if (!this.peekKeyword('@return')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.ReturnStatement);\n        this.consumeToken(); // @function\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinDeclaration = function () {\n        if (!this.peekKeyword('@mixin')) {\n            return null;\n        }\n        var node = this.create(nodes.MixinDeclaration);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n                while (this.accept(TokenType.Comma)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                        return this.finish(node, ParseError.VariableNameExpected);\n                    }\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseParameterDeclaration = function () {\n        var node = this.create(nodes.FunctionParameter);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (this.accept(scssScanner.Ellipsis)) {\n            // ok\n        }\n        if (this.accept(TokenType.Colon)) {\n            if (!node.setDefaultValue(this._parseExpr(true))) {\n                return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinContent = function () {\n        if (!this.peekKeyword('@content')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.MixinContent);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReference = function () {\n        if (!this.peekKeyword('@include')) {\n            return null;\n        }\n        var node = this.create(nodes.MixinReference);\n        this.consumeToken();\n        // Could be module or mixin identifier, set as mixin as default.\n        var firstIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n        if (!node.setIdentifier(firstIdent)) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        // Is a module accessor.\n        if (!this.hasWhitespace() && this.acceptDelim('.') && !this.hasWhitespace()) {\n            var secondIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n            if (!secondIdent) {\n                return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n            }\n            var moduleToken = this.create(nodes.Module);\n            // Re-purpose first matched ident as identifier for module token.\n            firstIdent.referenceTypes = [nodes.ReferenceType.Module];\n            moduleToken.setIdentifier(firstIdent);\n            // Override identifier with second ident.\n            node.setIdentifier(secondIdent);\n            node.addChild(moduleToken);\n        }\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (node.getArguments().addChild(this._parseFunctionArgument())) {\n                while (this.accept(TokenType.Comma)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                        return this.finish(node, ParseError.ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected);\n            }\n        }\n        if (this.peek(TokenType.CurlyL)) {\n            var content = this.create(nodes.BodyDeclaration);\n            this._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\n            node.setContent(content);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReferenceBodyStatement = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    SCSSParser.prototype._parseFunctionArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(nodes.FunctionArgument);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(TokenType.Colon)) {\n                if (this.accept(scssScanner.Ellipsis)) { // optional\n                    node.setValue(argument);\n                    return this.finish(node);\n                }\n                else {\n                    this.restoreAtMark(pos);\n                }\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseExpr(true))) {\n            this.accept(scssScanner.Ellipsis); // #43746\n            node.addChild(this._parsePrio()); // #9859\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(TokenType.ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_1 = this.create(nodes.Node);\n            node_1.addChild(this._parseBinaryExpr());\n            return this.finish(node_1);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseOperation = function () {\n        if (!this.peek(TokenType.ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken();\n        while (node.addChild(this._parseListElement())) {\n            this.accept(TokenType.Comma); // optional\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseListElement = function () {\n        var node = this.create(nodes.ListEntry);\n        var child = this._parseBinaryExpr();\n        if (!child) {\n            return null;\n        }\n        if (this.accept(TokenType.Colon)) {\n            node.setKey(child);\n            if (!node.setValue(this._parseBinaryExpr())) {\n                return this.finish(node, ParseError.ExpressionExpected);\n            }\n        }\n        else {\n            node.setValue(child);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseUse = function () {\n        if (!this.peek(scssScanner.Use)) {\n            return null;\n        }\n        var node = this.create(nodes.Use);\n        this.consumeToken();\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.StringLiteralExpected);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            if (!this.peekRegExp(TokenType.Ident, /as|with/)) {\n                return this.finish(node, ParseError.UnknownKeyword);\n            }\n            if (this.acceptIdent('as') &&\n                (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module])) && !this.acceptDelim('*'))) {\n                return this.finish(node, ParseError.IdentifierOrWildcardExpected);\n            }\n            if (this.acceptIdent('with')) {\n                if (!this.accept(TokenType.ParenthesisL)) {\n                    return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.ParenthesisR]);\n                }\n                // First variable statement, no comma.\n                if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n                    return this.finish(node, ParseError.VariableNameExpected);\n                }\n                while (this.accept(TokenType.Comma)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n                        return this.finish(node, ParseError.VariableNameExpected);\n                    }\n                }\n                if (!this.accept(TokenType.ParenthesisR)) {\n                    return this.finish(node, ParseError.RightParenthesisExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseModuleConfigDeclaration = function () {\n        var node = this.create(nodes.ModuleConfiguration);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon) || !node.setValue(this._parseExpr(true))) {\n            return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForward = function () {\n        if (!this.peek(scssScanner.Forward)) {\n            return null;\n        }\n        var node = this.create(nodes.Forward);\n        this.consumeToken();\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.StringLiteralExpected);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            if (!this.peekRegExp(TokenType.Ident, /as|hide|show/)) {\n                return this.finish(node, ParseError.UnknownKeyword);\n            }\n            if (this.acceptIdent('as')) {\n                var identifier = this._parseIdent([nodes.ReferenceType.Forward]);\n                if (!node.setIdentifier(identifier)) {\n                    return this.finish(node, ParseError.IdentifierExpected);\n                }\n                // Wildcard must be the next character after the identifier string.\n                if (this.hasWhitespace() || !this.acceptDelim('*')) {\n                    return this.finish(node, ParseError.WildcardExpected);\n                }\n            }\n            if (this.peekIdent('hide') || this.peekIdent('show')) {\n                if (!node.addChild(this._parseForwardVisibility())) {\n                    return this.finish(node, ParseError.IdentifierOrVariableExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForwardVisibility = function () {\n        var node = this.create(nodes.ForwardVisibility);\n        // Assume to be \"hide\" or \"show\".\n        node.setIdentifier(this._parseIdent());\n        while (node.addChild(this._parseVariable() || this._parseIdent())) {\n            // Consume all variables and idents ahead.\n        }\n        // More than just identifier \n        return node.getChildren().length > 1 ? node : null;\n    };\n    return SCSSParser;\n}(cssParser.Parser));\nexport { SCSSParser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}