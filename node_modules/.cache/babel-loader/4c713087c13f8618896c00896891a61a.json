{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../core/range.js';\nvar RichEditBracket = /** @class */function () {\n  function RichEditBracket(languageIdentifier, index, open, close, forwardRegex, reversedRegex) {\n    this.languageIdentifier = languageIdentifier;\n    this.index = index;\n    this.open = open;\n    this.close = close;\n    this.forwardRegex = forwardRegex;\n    this.reversedRegex = reversedRegex;\n    this._openSet = RichEditBracket._toSet(this.open);\n    this._closeSet = RichEditBracket._toSet(this.close);\n  }\n  RichEditBracket.prototype.isOpen = function (text) {\n    return this._openSet.has(text);\n  };\n  RichEditBracket.prototype.isClose = function (text) {\n    return this._closeSet.has(text);\n  };\n  RichEditBracket._toSet = function (arr) {\n    var result = new Set();\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n      var element = arr_1[_i];\n      result.add(element);\n    }\n    return result;\n  };\n  return RichEditBracket;\n}();\nexport { RichEditBracket };\nfunction groupFuzzyBrackets(brackets) {\n  var N = brackets.length;\n  brackets = brackets.map(function (b) {\n    return [b[0].toLowerCase(), b[1].toLowerCase()];\n  });\n  var group = [];\n  for (var i = 0; i < N; i++) {\n    group[i] = i;\n  }\n  var areOverlapping = function areOverlapping(a, b) {\n    var aOpen = a[0],\n      aClose = a[1];\n    var bOpen = b[0],\n      bClose = b[1];\n    return aOpen === bOpen || aOpen === bClose || aClose === bOpen || aClose === bClose;\n  };\n  var mergeGroups = function mergeGroups(g1, g2) {\n    var newG = Math.min(g1, g2);\n    var oldG = Math.max(g1, g2);\n    for (var i = 0; i < N; i++) {\n      if (group[i] === oldG) {\n        group[i] = newG;\n      }\n    }\n  };\n  // group together brackets that have the same open or the same close sequence\n  for (var i = 0; i < N; i++) {\n    var a = brackets[i];\n    for (var j = i + 1; j < N; j++) {\n      var b = brackets[j];\n      if (areOverlapping(a, b)) {\n        mergeGroups(group[i], group[j]);\n      }\n    }\n  }\n  var result = [];\n  for (var g = 0; g < N; g++) {\n    var currentOpen = [];\n    var currentClose = [];\n    for (var i = 0; i < N; i++) {\n      if (group[i] === g) {\n        var _a = brackets[i],\n          open_1 = _a[0],\n          close_1 = _a[1];\n        currentOpen.push(open_1);\n        currentClose.push(close_1);\n      }\n    }\n    if (currentOpen.length > 0) {\n      result.push({\n        open: currentOpen,\n        close: currentClose\n      });\n    }\n  }\n  return result;\n}\nvar RichEditBrackets = /** @class */function () {\n  function RichEditBrackets(languageIdentifier, _brackets) {\n    var brackets = groupFuzzyBrackets(_brackets);\n    this.brackets = brackets.map(function (b, index) {\n      return new RichEditBracket(languageIdentifier, index, b.open, b.close, getRegexForBracketPair(b.open, b.close, brackets, index), getReversedRegexForBracketPair(b.open, b.close, brackets, index));\n    });\n    this.forwardRegex = getRegexForBrackets(this.brackets);\n    this.reversedRegex = getReversedRegexForBrackets(this.brackets);\n    this.textIsBracket = {};\n    this.textIsOpenBracket = {};\n    this.maxBracketLength = 0;\n    for (var _i = 0, _a = this.brackets; _i < _a.length; _i++) {\n      var bracket = _a[_i];\n      for (var _b = 0, _c = bracket.open; _b < _c.length; _b++) {\n        var open_2 = _c[_b];\n        this.textIsBracket[open_2] = bracket;\n        this.textIsOpenBracket[open_2] = true;\n        this.maxBracketLength = Math.max(this.maxBracketLength, open_2.length);\n      }\n      for (var _d = 0, _e = bracket.close; _d < _e.length; _d++) {\n        var close_2 = _e[_d];\n        this.textIsBracket[close_2] = bracket;\n        this.textIsOpenBracket[close_2] = false;\n        this.maxBracketLength = Math.max(this.maxBracketLength, close_2.length);\n      }\n    }\n  }\n  return RichEditBrackets;\n}();\nexport { RichEditBrackets };\nfunction collectSuperstrings(str, brackets, currentIndex, dest) {\n  for (var i = 0, len = brackets.length; i < len; i++) {\n    if (i === currentIndex) {\n      continue;\n    }\n    var bracket = brackets[i];\n    for (var _i = 0, _a = bracket.open; _i < _a.length; _i++) {\n      var open_3 = _a[_i];\n      if (open_3.indexOf(str) >= 0) {\n        dest.push(open_3);\n      }\n    }\n    for (var _b = 0, _c = bracket.close; _b < _c.length; _b++) {\n      var close_3 = _c[_b];\n      if (close_3.indexOf(str) >= 0) {\n        dest.push(close_3);\n      }\n    }\n  }\n}\nfunction lengthcmp(a, b) {\n  return a.length - b.length;\n}\nfunction unique(arr) {\n  if (arr.length <= 1) {\n    return arr;\n  }\n  var result = [];\n  var seen = new Set();\n  for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {\n    var element = arr_2[_i];\n    if (seen.has(element)) {\n      continue;\n    }\n    result.push(element);\n    seen.add(element);\n  }\n  return result;\n}\nfunction getRegexForBracketPair(open, close, brackets, currentIndex) {\n  // search in all brackets for other brackets that are a superstring of these brackets\n  var pieces = [];\n  pieces = pieces.concat(open);\n  pieces = pieces.concat(close);\n  for (var i = 0, len = pieces.length; i < len; i++) {\n    collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n  }\n  pieces = unique(pieces);\n  pieces.sort(lengthcmp);\n  pieces.reverse();\n  return createBracketOrRegExp(pieces);\n}\nfunction getReversedRegexForBracketPair(open, close, brackets, currentIndex) {\n  // search in all brackets for other brackets that are a superstring of these brackets\n  var pieces = [];\n  pieces = pieces.concat(open);\n  pieces = pieces.concat(close);\n  for (var i = 0, len = pieces.length; i < len; i++) {\n    collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n  }\n  pieces = unique(pieces);\n  pieces.sort(lengthcmp);\n  pieces.reverse();\n  return createBracketOrRegExp(pieces.map(toReversedString));\n}\nfunction getRegexForBrackets(brackets) {\n  var pieces = [];\n  for (var _i = 0, brackets_1 = brackets; _i < brackets_1.length; _i++) {\n    var bracket = brackets_1[_i];\n    for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\n      var open_4 = _b[_a];\n      pieces.push(open_4);\n    }\n    for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\n      var close_4 = _d[_c];\n      pieces.push(close_4);\n    }\n  }\n  pieces = unique(pieces);\n  return createBracketOrRegExp(pieces);\n}\nfunction getReversedRegexForBrackets(brackets) {\n  var pieces = [];\n  for (var _i = 0, brackets_2 = brackets; _i < brackets_2.length; _i++) {\n    var bracket = brackets_2[_i];\n    for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\n      var open_5 = _b[_a];\n      pieces.push(open_5);\n    }\n    for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\n      var close_5 = _d[_c];\n      pieces.push(close_5);\n    }\n  }\n  pieces = unique(pieces);\n  return createBracketOrRegExp(pieces.map(toReversedString));\n}\nfunction prepareBracketForRegExp(str) {\n  // This bracket pair uses letters like e.g. \"begin\" - \"end\"\n  var insertWordBoundaries = /^[\\w ]+$/.test(str);\n  str = strings.escapeRegExpCharacters(str);\n  return insertWordBoundaries ? \"\\\\b\" + str + \"\\\\b\" : str;\n}\nfunction createBracketOrRegExp(pieces) {\n  var regexStr = \"(\" + pieces.map(prepareBracketForRegExp).join(')|(') + \")\";\n  return strings.createRegExp(regexStr, true);\n}\nvar toReversedString = function () {\n  function reverse(str) {\n    var reversedStr = '';\n    for (var i = str.length - 1; i >= 0; i--) {\n      reversedStr += str.charAt(i);\n    }\n    return reversedStr;\n  }\n  var lastInput = null;\n  var lastOutput = null;\n  return function toReversedString(str) {\n    if (lastInput !== str) {\n      lastInput = str;\n      lastOutput = reverse(lastInput);\n    }\n    return lastOutput;\n  };\n}();\nvar BracketsUtils = /** @class */function () {\n  function BracketsUtils() {}\n  BracketsUtils._findPrevBracketInText = function (reversedBracketRegex, lineNumber, reversedText, offset) {\n    var m = reversedText.match(reversedBracketRegex);\n    if (!m) {\n      return null;\n    }\n    var matchOffset = reversedText.length - (m.index || 0);\n    var matchLength = m[0].length;\n    var absoluteMatchOffset = offset + matchOffset;\n    return new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\n  };\n  BracketsUtils.findPrevBracketInRange = function (reversedBracketRegex, lineNumber, lineText, startOffset, endOffset) {\n    // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\n    var reversedLineText = toReversedString(lineText);\n    var reversedSubstr = reversedLineText.substring(lineText.length - endOffset, lineText.length - startOffset);\n    return this._findPrevBracketInText(reversedBracketRegex, lineNumber, reversedSubstr, startOffset);\n  };\n  BracketsUtils.findNextBracketInText = function (bracketRegex, lineNumber, text, offset) {\n    var m = text.match(bracketRegex);\n    if (!m) {\n      return null;\n    }\n    var matchOffset = m.index || 0;\n    var matchLength = m[0].length;\n    if (matchLength === 0) {\n      return null;\n    }\n    var absoluteMatchOffset = offset + matchOffset;\n    return new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\n  };\n  BracketsUtils.findNextBracketInRange = function (bracketRegex, lineNumber, lineText, startOffset, endOffset) {\n    var substr = lineText.substring(startOffset, endOffset);\n    return this.findNextBracketInText(bracketRegex, lineNumber, substr, startOffset);\n  };\n  return BracketsUtils;\n}();\nexport { BracketsUtils };","map":{"version":3,"names":["strings","Range","RichEditBracket","languageIdentifier","index","open","close","forwardRegex","reversedRegex","_openSet","_toSet","_closeSet","prototype","isOpen","text","has","isClose","arr","result","Set","_i","arr_1","length","element","add","groupFuzzyBrackets","brackets","N","map","b","toLowerCase","group","i","areOverlapping","a","aOpen","aClose","bOpen","bClose","mergeGroups","g1","g2","newG","Math","min","oldG","max","j","g","currentOpen","currentClose","_a","open_1","close_1","push","RichEditBrackets","_brackets","getRegexForBracketPair","getReversedRegexForBracketPair","getRegexForBrackets","getReversedRegexForBrackets","textIsBracket","textIsOpenBracket","maxBracketLength","bracket","_b","_c","open_2","_d","_e","close_2","collectSuperstrings","str","currentIndex","dest","len","open_3","indexOf","close_3","lengthcmp","unique","seen","arr_2","pieces","concat","sort","reverse","createBracketOrRegExp","toReversedString","brackets_1","open_4","close_4","brackets_2","open_5","close_5","prepareBracketForRegExp","insertWordBoundaries","test","escapeRegExpCharacters","regexStr","join","createRegExp","reversedStr","charAt","lastInput","lastOutput","BracketsUtils","_findPrevBracketInText","reversedBracketRegex","lineNumber","reversedText","offset","m","match","matchOffset","matchLength","absoluteMatchOffset","findPrevBracketInRange","lineText","startOffset","endOffset","reversedLineText","reversedSubstr","substring","findNextBracketInText","bracketRegex","findNextBracketInRange","substr"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/richEditBrackets.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { Range } from '../../core/range.js';\r\nvar RichEditBracket = /** @class */ (function () {\r\n    function RichEditBracket(languageIdentifier, index, open, close, forwardRegex, reversedRegex) {\r\n        this.languageIdentifier = languageIdentifier;\r\n        this.index = index;\r\n        this.open = open;\r\n        this.close = close;\r\n        this.forwardRegex = forwardRegex;\r\n        this.reversedRegex = reversedRegex;\r\n        this._openSet = RichEditBracket._toSet(this.open);\r\n        this._closeSet = RichEditBracket._toSet(this.close);\r\n    }\r\n    RichEditBracket.prototype.isOpen = function (text) {\r\n        return this._openSet.has(text);\r\n    };\r\n    RichEditBracket.prototype.isClose = function (text) {\r\n        return this._closeSet.has(text);\r\n    };\r\n    RichEditBracket._toSet = function (arr) {\r\n        var result = new Set();\r\n        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\r\n            var element = arr_1[_i];\r\n            result.add(element);\r\n        }\r\n        return result;\r\n    };\r\n    return RichEditBracket;\r\n}());\r\nexport { RichEditBracket };\r\nfunction groupFuzzyBrackets(brackets) {\r\n    var N = brackets.length;\r\n    brackets = brackets.map(function (b) { return [b[0].toLowerCase(), b[1].toLowerCase()]; });\r\n    var group = [];\r\n    for (var i = 0; i < N; i++) {\r\n        group[i] = i;\r\n    }\r\n    var areOverlapping = function (a, b) {\r\n        var aOpen = a[0], aClose = a[1];\r\n        var bOpen = b[0], bClose = b[1];\r\n        return (aOpen === bOpen || aOpen === bClose || aClose === bOpen || aClose === bClose);\r\n    };\r\n    var mergeGroups = function (g1, g2) {\r\n        var newG = Math.min(g1, g2);\r\n        var oldG = Math.max(g1, g2);\r\n        for (var i = 0; i < N; i++) {\r\n            if (group[i] === oldG) {\r\n                group[i] = newG;\r\n            }\r\n        }\r\n    };\r\n    // group together brackets that have the same open or the same close sequence\r\n    for (var i = 0; i < N; i++) {\r\n        var a = brackets[i];\r\n        for (var j = i + 1; j < N; j++) {\r\n            var b = brackets[j];\r\n            if (areOverlapping(a, b)) {\r\n                mergeGroups(group[i], group[j]);\r\n            }\r\n        }\r\n    }\r\n    var result = [];\r\n    for (var g = 0; g < N; g++) {\r\n        var currentOpen = [];\r\n        var currentClose = [];\r\n        for (var i = 0; i < N; i++) {\r\n            if (group[i] === g) {\r\n                var _a = brackets[i], open_1 = _a[0], close_1 = _a[1];\r\n                currentOpen.push(open_1);\r\n                currentClose.push(close_1);\r\n            }\r\n        }\r\n        if (currentOpen.length > 0) {\r\n            result.push({\r\n                open: currentOpen,\r\n                close: currentClose\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar RichEditBrackets = /** @class */ (function () {\r\n    function RichEditBrackets(languageIdentifier, _brackets) {\r\n        var brackets = groupFuzzyBrackets(_brackets);\r\n        this.brackets = brackets.map(function (b, index) {\r\n            return new RichEditBracket(languageIdentifier, index, b.open, b.close, getRegexForBracketPair(b.open, b.close, brackets, index), getReversedRegexForBracketPair(b.open, b.close, brackets, index));\r\n        });\r\n        this.forwardRegex = getRegexForBrackets(this.brackets);\r\n        this.reversedRegex = getReversedRegexForBrackets(this.brackets);\r\n        this.textIsBracket = {};\r\n        this.textIsOpenBracket = {};\r\n        this.maxBracketLength = 0;\r\n        for (var _i = 0, _a = this.brackets; _i < _a.length; _i++) {\r\n            var bracket = _a[_i];\r\n            for (var _b = 0, _c = bracket.open; _b < _c.length; _b++) {\r\n                var open_2 = _c[_b];\r\n                this.textIsBracket[open_2] = bracket;\r\n                this.textIsOpenBracket[open_2] = true;\r\n                this.maxBracketLength = Math.max(this.maxBracketLength, open_2.length);\r\n            }\r\n            for (var _d = 0, _e = bracket.close; _d < _e.length; _d++) {\r\n                var close_2 = _e[_d];\r\n                this.textIsBracket[close_2] = bracket;\r\n                this.textIsOpenBracket[close_2] = false;\r\n                this.maxBracketLength = Math.max(this.maxBracketLength, close_2.length);\r\n            }\r\n        }\r\n    }\r\n    return RichEditBrackets;\r\n}());\r\nexport { RichEditBrackets };\r\nfunction collectSuperstrings(str, brackets, currentIndex, dest) {\r\n    for (var i = 0, len = brackets.length; i < len; i++) {\r\n        if (i === currentIndex) {\r\n            continue;\r\n        }\r\n        var bracket = brackets[i];\r\n        for (var _i = 0, _a = bracket.open; _i < _a.length; _i++) {\r\n            var open_3 = _a[_i];\r\n            if (open_3.indexOf(str) >= 0) {\r\n                dest.push(open_3);\r\n            }\r\n        }\r\n        for (var _b = 0, _c = bracket.close; _b < _c.length; _b++) {\r\n            var close_3 = _c[_b];\r\n            if (close_3.indexOf(str) >= 0) {\r\n                dest.push(close_3);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction lengthcmp(a, b) {\r\n    return a.length - b.length;\r\n}\r\nfunction unique(arr) {\r\n    if (arr.length <= 1) {\r\n        return arr;\r\n    }\r\n    var result = [];\r\n    var seen = new Set();\r\n    for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {\r\n        var element = arr_2[_i];\r\n        if (seen.has(element)) {\r\n            continue;\r\n        }\r\n        result.push(element);\r\n        seen.add(element);\r\n    }\r\n    return result;\r\n}\r\nfunction getRegexForBracketPair(open, close, brackets, currentIndex) {\r\n    // search in all brackets for other brackets that are a superstring of these brackets\r\n    var pieces = [];\r\n    pieces = pieces.concat(open);\r\n    pieces = pieces.concat(close);\r\n    for (var i = 0, len = pieces.length; i < len; i++) {\r\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\r\n    }\r\n    pieces = unique(pieces);\r\n    pieces.sort(lengthcmp);\r\n    pieces.reverse();\r\n    return createBracketOrRegExp(pieces);\r\n}\r\nfunction getReversedRegexForBracketPair(open, close, brackets, currentIndex) {\r\n    // search in all brackets for other brackets that are a superstring of these brackets\r\n    var pieces = [];\r\n    pieces = pieces.concat(open);\r\n    pieces = pieces.concat(close);\r\n    for (var i = 0, len = pieces.length; i < len; i++) {\r\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\r\n    }\r\n    pieces = unique(pieces);\r\n    pieces.sort(lengthcmp);\r\n    pieces.reverse();\r\n    return createBracketOrRegExp(pieces.map(toReversedString));\r\n}\r\nfunction getRegexForBrackets(brackets) {\r\n    var pieces = [];\r\n    for (var _i = 0, brackets_1 = brackets; _i < brackets_1.length; _i++) {\r\n        var bracket = brackets_1[_i];\r\n        for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\r\n            var open_4 = _b[_a];\r\n            pieces.push(open_4);\r\n        }\r\n        for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\r\n            var close_4 = _d[_c];\r\n            pieces.push(close_4);\r\n        }\r\n    }\r\n    pieces = unique(pieces);\r\n    return createBracketOrRegExp(pieces);\r\n}\r\nfunction getReversedRegexForBrackets(brackets) {\r\n    var pieces = [];\r\n    for (var _i = 0, brackets_2 = brackets; _i < brackets_2.length; _i++) {\r\n        var bracket = brackets_2[_i];\r\n        for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\r\n            var open_5 = _b[_a];\r\n            pieces.push(open_5);\r\n        }\r\n        for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\r\n            var close_5 = _d[_c];\r\n            pieces.push(close_5);\r\n        }\r\n    }\r\n    pieces = unique(pieces);\r\n    return createBracketOrRegExp(pieces.map(toReversedString));\r\n}\r\nfunction prepareBracketForRegExp(str) {\r\n    // This bracket pair uses letters like e.g. \"begin\" - \"end\"\r\n    var insertWordBoundaries = (/^[\\w ]+$/.test(str));\r\n    str = strings.escapeRegExpCharacters(str);\r\n    return (insertWordBoundaries ? \"\\\\b\" + str + \"\\\\b\" : str);\r\n}\r\nfunction createBracketOrRegExp(pieces) {\r\n    var regexStr = \"(\" + pieces.map(prepareBracketForRegExp).join(')|(') + \")\";\r\n    return strings.createRegExp(regexStr, true);\r\n}\r\nvar toReversedString = (function () {\r\n    function reverse(str) {\r\n        var reversedStr = '';\r\n        for (var i = str.length - 1; i >= 0; i--) {\r\n            reversedStr += str.charAt(i);\r\n        }\r\n        return reversedStr;\r\n    }\r\n    var lastInput = null;\r\n    var lastOutput = null;\r\n    return function toReversedString(str) {\r\n        if (lastInput !== str) {\r\n            lastInput = str;\r\n            lastOutput = reverse(lastInput);\r\n        }\r\n        return lastOutput;\r\n    };\r\n})();\r\nvar BracketsUtils = /** @class */ (function () {\r\n    function BracketsUtils() {\r\n    }\r\n    BracketsUtils._findPrevBracketInText = function (reversedBracketRegex, lineNumber, reversedText, offset) {\r\n        var m = reversedText.match(reversedBracketRegex);\r\n        if (!m) {\r\n            return null;\r\n        }\r\n        var matchOffset = reversedText.length - (m.index || 0);\r\n        var matchLength = m[0].length;\r\n        var absoluteMatchOffset = offset + matchOffset;\r\n        return new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\r\n    };\r\n    BracketsUtils.findPrevBracketInRange = function (reversedBracketRegex, lineNumber, lineText, startOffset, endOffset) {\r\n        // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\r\n        var reversedLineText = toReversedString(lineText);\r\n        var reversedSubstr = reversedLineText.substring(lineText.length - endOffset, lineText.length - startOffset);\r\n        return this._findPrevBracketInText(reversedBracketRegex, lineNumber, reversedSubstr, startOffset);\r\n    };\r\n    BracketsUtils.findNextBracketInText = function (bracketRegex, lineNumber, text, offset) {\r\n        var m = text.match(bracketRegex);\r\n        if (!m) {\r\n            return null;\r\n        }\r\n        var matchOffset = m.index || 0;\r\n        var matchLength = m[0].length;\r\n        if (matchLength === 0) {\r\n            return null;\r\n        }\r\n        var absoluteMatchOffset = offset + matchOffset;\r\n        return new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\r\n    };\r\n    BracketsUtils.findNextBracketInRange = function (bracketRegex, lineNumber, lineText, startOffset, endOffset) {\r\n        var substr = lineText.substring(startOffset, endOffset);\r\n        return this.findNextBracketInText(bracketRegex, lineNumber, substr, startOffset);\r\n    };\r\n    return BracketsUtils;\r\n}());\r\nexport { BracketsUtils };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}