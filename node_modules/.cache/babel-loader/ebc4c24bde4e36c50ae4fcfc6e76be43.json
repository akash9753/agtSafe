{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = typeof monaco === 'undefined' ? self.monaco : monaco;\nvar languageDefinitions = {};\nvar lazyLanguageLoaders = {};\nvar LazyLanguageLoader = /** @class */function () {\n  function LazyLanguageLoader(languageId) {\n    var _this = this;\n    this._languageId = languageId;\n    this._loadingTriggered = false;\n    this._lazyLoadPromise = new Promise(function (resolve, reject) {\n      _this._lazyLoadPromiseResolve = resolve;\n      _this._lazyLoadPromiseReject = reject;\n    });\n  }\n  LazyLanguageLoader.getOrCreate = function (languageId) {\n    if (!lazyLanguageLoaders[languageId]) {\n      lazyLanguageLoaders[languageId] = new LazyLanguageLoader(languageId);\n    }\n    return lazyLanguageLoaders[languageId];\n  };\n  LazyLanguageLoader.prototype.whenLoaded = function () {\n    return this._lazyLoadPromise;\n  };\n  LazyLanguageLoader.prototype.load = function () {\n    var _this = this;\n    if (!this._loadingTriggered) {\n      this._loadingTriggered = true;\n      languageDefinitions[this._languageId].loader().then(function (mod) {\n        return _this._lazyLoadPromiseResolve(mod);\n      }, function (err) {\n        return _this._lazyLoadPromiseReject(err);\n      });\n    }\n    return this._lazyLoadPromise;\n  };\n  return LazyLanguageLoader;\n}();\nexport function loadLanguage(languageId) {\n  return LazyLanguageLoader.getOrCreate(languageId).load();\n}\nexport function registerLanguage(def) {\n  var languageId = def.id;\n  languageDefinitions[languageId] = def;\n  _monaco.languages.register(def);\n  var lazyLanguageLoader = LazyLanguageLoader.getOrCreate(languageId);\n  _monaco.languages.setMonarchTokensProvider(languageId, lazyLanguageLoader.whenLoaded().then(function (mod) {\n    return mod.language;\n  }));\n  _monaco.languages.onLanguage(languageId, function () {\n    lazyLanguageLoader.load().then(function (mod) {\n      _monaco.languages.setLanguageConfiguration(languageId, mod.conf);\n    });\n  });\n}","map":{"version":3,"names":["_monaco","monaco","self","languageDefinitions","lazyLanguageLoaders","LazyLanguageLoader","languageId","_this","_languageId","_loadingTriggered","_lazyLoadPromise","Promise","resolve","reject","_lazyLoadPromiseResolve","_lazyLoadPromiseReject","getOrCreate","prototype","whenLoaded","load","loader","then","mod","err","loadLanguage","registerLanguage","def","id","languages","register","lazyLanguageLoader","setMonarchTokensProvider","language","onLanguage","setLanguageConfiguration","conf"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n// Allow for running under nodejs/requirejs in tests\r\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\r\nvar languageDefinitions = {};\r\nvar lazyLanguageLoaders = {};\r\nvar LazyLanguageLoader = /** @class */ (function () {\r\n    function LazyLanguageLoader(languageId) {\r\n        var _this = this;\r\n        this._languageId = languageId;\r\n        this._loadingTriggered = false;\r\n        this._lazyLoadPromise = new Promise(function (resolve, reject) {\r\n            _this._lazyLoadPromiseResolve = resolve;\r\n            _this._lazyLoadPromiseReject = reject;\r\n        });\r\n    }\r\n    LazyLanguageLoader.getOrCreate = function (languageId) {\r\n        if (!lazyLanguageLoaders[languageId]) {\r\n            lazyLanguageLoaders[languageId] = new LazyLanguageLoader(languageId);\r\n        }\r\n        return lazyLanguageLoaders[languageId];\r\n    };\r\n    LazyLanguageLoader.prototype.whenLoaded = function () {\r\n        return this._lazyLoadPromise;\r\n    };\r\n    LazyLanguageLoader.prototype.load = function () {\r\n        var _this = this;\r\n        if (!this._loadingTriggered) {\r\n            this._loadingTriggered = true;\r\n            languageDefinitions[this._languageId].loader().then(function (mod) { return _this._lazyLoadPromiseResolve(mod); }, function (err) { return _this._lazyLoadPromiseReject(err); });\r\n        }\r\n        return this._lazyLoadPromise;\r\n    };\r\n    return LazyLanguageLoader;\r\n}());\r\nexport function loadLanguage(languageId) {\r\n    return LazyLanguageLoader.getOrCreate(languageId).load();\r\n}\r\nexport function registerLanguage(def) {\r\n    var languageId = def.id;\r\n    languageDefinitions[languageId] = def;\r\n    _monaco.languages.register(def);\r\n    var lazyLanguageLoader = LazyLanguageLoader.getOrCreate(languageId);\r\n    _monaco.languages.setMonarchTokensProvider(languageId, lazyLanguageLoader.whenLoaded().then(function (mod) { return mod.language; }));\r\n    _monaco.languages.onLanguage(languageId, function () {\r\n        lazyLanguageLoader.load().then(function (mod) {\r\n            _monaco.languages.setLanguageConfiguration(languageId, mod.conf);\r\n        });\r\n    });\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZ;AACA,IAAIA,OAAO,GAAI,OAAOC,MAAM,KAAK,WAAW,GAAGC,IAAI,CAACD,MAAM,GAAGA,MAAO;AACpE,IAAIE,mBAAmB,GAAG,CAAC,CAAC;AAC5B,IAAIC,mBAAmB,GAAG,CAAC,CAAC;AAC5B,IAAIC,kBAAkB,GAAG,aAAe,YAAY;EAChD,SAASA,kBAAkB,CAACC,UAAU,EAAE;IACpC,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,WAAW,GAAGF,UAAU;IAC7B,IAAI,CAACG,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACC,gBAAgB,GAAG,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;MAC3DN,KAAK,CAACO,uBAAuB,GAAGF,OAAO;MACvCL,KAAK,CAACQ,sBAAsB,GAAGF,MAAM;IACzC,CAAC,CAAC;EACN;EACAR,kBAAkB,CAACW,WAAW,GAAG,UAAUV,UAAU,EAAE;IACnD,IAAI,CAACF,mBAAmB,CAACE,UAAU,CAAC,EAAE;MAClCF,mBAAmB,CAACE,UAAU,CAAC,GAAG,IAAID,kBAAkB,CAACC,UAAU,CAAC;IACxE;IACA,OAAOF,mBAAmB,CAACE,UAAU,CAAC;EAC1C,CAAC;EACDD,kBAAkB,CAACY,SAAS,CAACC,UAAU,GAAG,YAAY;IAClD,OAAO,IAAI,CAACR,gBAAgB;EAChC,CAAC;EACDL,kBAAkB,CAACY,SAAS,CAACE,IAAI,GAAG,YAAY;IAC5C,IAAIZ,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAACE,iBAAiB,EAAE;MACzB,IAAI,CAACA,iBAAiB,GAAG,IAAI;MAC7BN,mBAAmB,CAAC,IAAI,CAACK,WAAW,CAAC,CAACY,MAAM,EAAE,CAACC,IAAI,CAAC,UAAUC,GAAG,EAAE;QAAE,OAAOf,KAAK,CAACO,uBAAuB,CAACQ,GAAG,CAAC;MAAE,CAAC,EAAE,UAAUC,GAAG,EAAE;QAAE,OAAOhB,KAAK,CAACQ,sBAAsB,CAACQ,GAAG,CAAC;MAAE,CAAC,CAAC;IACpL;IACA,OAAO,IAAI,CAACb,gBAAgB;EAChC,CAAC;EACD,OAAOL,kBAAkB;AAC7B,CAAC,EAAG;AACJ,OAAO,SAASmB,YAAY,CAAClB,UAAU,EAAE;EACrC,OAAOD,kBAAkB,CAACW,WAAW,CAACV,UAAU,CAAC,CAACa,IAAI,EAAE;AAC5D;AACA,OAAO,SAASM,gBAAgB,CAACC,GAAG,EAAE;EAClC,IAAIpB,UAAU,GAAGoB,GAAG,CAACC,EAAE;EACvBxB,mBAAmB,CAACG,UAAU,CAAC,GAAGoB,GAAG;EACrC1B,OAAO,CAAC4B,SAAS,CAACC,QAAQ,CAACH,GAAG,CAAC;EAC/B,IAAII,kBAAkB,GAAGzB,kBAAkB,CAACW,WAAW,CAACV,UAAU,CAAC;EACnEN,OAAO,CAAC4B,SAAS,CAACG,wBAAwB,CAACzB,UAAU,EAAEwB,kBAAkB,CAACZ,UAAU,EAAE,CAACG,IAAI,CAAC,UAAUC,GAAG,EAAE;IAAE,OAAOA,GAAG,CAACU,QAAQ;EAAE,CAAC,CAAC,CAAC;EACrIhC,OAAO,CAAC4B,SAAS,CAACK,UAAU,CAAC3B,UAAU,EAAE,YAAY;IACjDwB,kBAAkB,CAACX,IAAI,EAAE,CAACE,IAAI,CAAC,UAAUC,GAAG,EAAE;MAC1CtB,OAAO,CAAC4B,SAAS,CAACM,wBAAwB,CAAC5B,UAAU,EAAEgB,GAAG,CAACa,IAAI,CAAC;IACpE,CAAC,CAAC;EACN,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}