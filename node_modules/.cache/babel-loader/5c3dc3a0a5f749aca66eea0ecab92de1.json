{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Utility\\\\defineBotHtmlUtility.js\";\nimport React from 'react';\nimport { Select, Form, Input, Col, Row, Icon, Button, Checkbox, Switch, TreeSelect } from 'antd';\nimport { dynamicValidation, checkPhoneNumber, checkAlphaNumericSpecial, checkNumber, pagesValidation, checkAlphaNumeric, checkEmailAddress, fnDefineBotExternal, checkVersionNumber, checkExistOrNot, checkAlphabet, checkSelect, checkPassword, fnSwitch, fnFileSelect } from './validator';\nimport { fnForSelect, fnKeyUp, fnCheck, dependencyValidation } from '../DefineBot/supportValidation.js';\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip.js';\nvar Option = Select.Option;\nvar FormItem = Form.Item;\nvar TreeNode = TreeSelect.TreeNode;\nvar TextArea = Input.TextArea;\nfunction lowerCasefirst(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\nfunction getFormField(field, allData) {\n  var _React$createElement4, _React$createElement5, _React$createElement8, _React$createElement9;\n  var uploadBtn = /*#__PURE__*/React.createElement(\"a\", {\n    onClick: function onClick() {\n      return allData.showFileDialog(field.attributeName.replace(/ /g, \"\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"file-pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 104\n    }\n  }));\n  switch (field.controlTypeText) {\n    case \"TextBox\":\n      if (field.inputTypeText == \"Password\") {\n        var _React$createElement;\n        return /*#__PURE__*/React.createElement(Input, (_React$createElement = {\n          tabIndex: 0,\n          size: \"small\",\n          type: \"password\"\n        }, _defineProperty(_React$createElement, \"tabIndex\", 0), _defineProperty(_React$createElement, \"id\", field.attributeName.replace(/ /g, \"\")), _defineProperty(_React$createElement, \"disabled\", field.editable == 0 || allData.disabled), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }), _React$createElement));\n      } else if (field.inputTypeText == \"Positive\") {\n        var _React$createElement2;\n        return /*#__PURE__*/React.createElement(Input, (_React$createElement2 = {\n          tabIndex: 0,\n          size: \"small\",\n          onBlur: function onBlur(e) {\n            fnFocusOut(e, allData.props);\n          }\n        }, _defineProperty(_React$createElement2, \"tabIndex\", 0), _defineProperty(_React$createElement2, \"id\", field.attributeName.replace(/ /g, \"\")), _defineProperty(_React$createElement2, \"disabled\", field.editable == 0 || allData.disabled), _defineProperty(_React$createElement2, \"__self\", this), _defineProperty(_React$createElement2, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }), _React$createElement2));\n      } else {\n        var _React$createElement3;\n        return /*#__PURE__*/React.createElement(Input, (_React$createElement3 = {\n          title: field.defaultValue,\n          tabIndex: 0,\n          size: \"small\",\n          onKeyUp: function onKeyUp(e) {\n            fnKeyUp(e, allData.props, field.displayName.replace(/ /g, \"\"));\n          }\n        }, _defineProperty(_React$createElement3, \"tabIndex\", 0), _defineProperty(_React$createElement3, \"id\", field.attributeName.replace(/ /g, \"\")), _defineProperty(_React$createElement3, \"disabled\", field.editable == 0 || allData.disabled), _defineProperty(_React$createElement3, \"__self\", this), _defineProperty(_React$createElement3, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }), _React$createElement3));\n      }\n      break;\n    case \"DropDown\":\n      var tempParam = null;\n      var deafultOption = /*#__PURE__*/React.createElement(Option, {\n        name: field.displayName + \"_Option\",\n        value: tempParam,\n        key: tempParam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }\n      }, \"--Select--\");\n      var allOptions = [deafultOption];\n      var options = [];\n      var dropDownMode = \"single\";\n      var value = allData.props.props.form.getFieldValue(field.displayName.replace(/ /g, \"\"));\n      if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n        if (allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()] != undefined) {\n          options = allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()].map(function (option) {\n            if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"comparator\" || field.attributeName.replace(/ /g, \"\").toLowerCase() == \"operator\") {\n              return /*#__PURE__*/React.createElement(Option, {\n                name: field.displayName + \"_Option\",\n                key: option[\"keyValue\"],\n                value: option[\"literal\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 33\n                }\n              }, option[\"literal\"]);\n            } else {\n              return /*#__PURE__*/React.createElement(Option, {\n                name: field.displayName + \"_Option\",\n                key: option[\"keyValue\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }\n              }, option[\"literal\"]);\n            }\n          });\n        }\n      }\n      if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"value\") {\n        allOptions = options;\n      } else {\n        allOptions = allOptions.concat(options);\n      }\n      return /*#__PURE__*/React.createElement(Select, {\n        \"aria-name\": field.displayName,\n        tabIndex: 0,\n        disabled: field.editable == 0 || allData.disabled,\n        filterOption: \"true\",\n        mode: dropDownMode,\n        onChange: function onChange(value, node) {\n          fnForSelect(value, allData, field.attributeName, node);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, allOptions);\n      break;\n    case \"DropDownWithSearch\":\n      var tempParam = null;\n      var deafultOption = /*#__PURE__*/React.createElement(Option, {\n        name: field.displayName + \"_Option\",\n        value: tempParam,\n        key: tempParam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }\n      }, \"--Select--\");\n      var allOptions = [deafultOption];\n      var options = [];\n      if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n        if (allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()] != undefined) {\n          options = allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()].map(function (option) {\n            if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"comparator\" || field.attributeName.replace(/ /g, \"\").toLowerCase() == \"operator\") {\n              return /*#__PURE__*/React.createElement(Option, {\n                name: field.displayName + \"_Option\",\n                key: option[\"keyValue\"],\n                value: option[\"literal\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 33\n                }\n              }, option[\"literal\"]);\n            } else {\n              return /*#__PURE__*/React.createElement(Option, {\n                name: field.displayName + \"_Option\",\n                key: option[\"keyValue\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }\n              }, option[\"literal\"]);\n            }\n          });\n        }\n      }\n      if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"value\") {\n        allOptions = options;\n      } else {\n        allOptions = allOptions.concat(options);\n      }\n      return /*#__PURE__*/React.createElement(Select, {\n        \"aria-name\": field.displayName,\n        tabIndex: 0,\n        showSearch: true,\n        disabled: field.editable == 0 || allData.disabled,\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        mode: \"single\",\n        onChange: function onChange(value, node) {\n          fnForSelect(value, allData, field.attributeName, node);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, allOptions);\n      break;\n    case \"MultipleDropdown\":\n      var allOptions = [];\n      var options = [];\n      if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n        if (allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()] != undefined) {\n          options = allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()].map(function (option) {\n            return /*#__PURE__*/React.createElement(Option, {\n              name: field.displayName + \"_Option\",\n              key: option[\"keyValue\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }\n            }, field.attributeName.replace(/ /g, \"\").toLowerCase() == \"referencewhereclause\" ? option[\"literal\"].substr(option[\"literal\"].indexOf(\"WC.\") + 3) : field.attributeName.replace(/ /g, \"\").toLowerCase() != \"referencevaluelist\" && field.attributeName.replace(/ /g, \"\").toLowerCase() != \"referencevariable\" && field.attributeName.replace(/ /g, \"\").toLowerCase() != \"referencedomain\" ? option[\"literal\"] : option[\"literal\"].substr(option[\"literal\"].indexOf(\".\") + 1));\n          });\n        }\n      }\n      allOptions = allOptions.concat(options);\n      return /*#__PURE__*/React.createElement(Select, (_React$createElement4 = {\n        tabIndex: 0,\n        \"aria-name\": field.displayName,\n        showSearch: true,\n        disabled: field.editable == 0 || allData.disabled,\n        optionFilterProp: \"children\",\n        placeholder: \"Select \" + field.displayName,\n        mode: \"multiple\"\n      }, _defineProperty(_React$createElement4, \"tabIndex\", field.tabIndex), _defineProperty(_React$createElement4, \"__self\", this), _defineProperty(_React$createElement4, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }), _React$createElement4), allOptions);\n      break;\n    case \"CheckBox\":\n    case \"SpecialCheckBox\":\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        key: field.attributeName.replace(/ /g, \"\"),\n        disabled: field.editable == 0 || allData.disabled,\n        onChange: function onChange(e) {\n          fnCheck(e, allData.props, field.attributeName.replace(/ /g, \"\"));\n        },\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      });\n      break;\n    case \"Switch\":\n      return /*#__PURE__*/React.createElement(Switch, {\n        key: field.attributeName.replace(/ /g, \"\"),\n        disabled: field.editable == 0 || allData.disabled,\n        onChange: function onChange(e) {\n          fnSwitch(e, allData.props, field.attributeName.replace(/ /g, \"\"));\n        },\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      });\n      break;\n    case \"FileSelect\":\n      return /*#__PURE__*/React.createElement(TreeSelect, {\n        tabIndex: 0,\n        showSearch: true,\n        disabled: field.editable == 0 || allData.disabled,\n        multiple: field.inputTypeText == \"MultiBrowse\",\n        allowClear: true,\n        dropdownStyle: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        placeholder: \"Please Select\",\n        treeDefaultExpandedKeys: [allData.treeDefaultExpandedKeys],\n        onChange: function onChange(value, node, extra) {\n          fnFileSelect(value, node, extra, allData.props, field.attributeName.replace(/ /g, \"\"));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, allData.treeData);\n      break;\n    case \"FolderSelect\":\n      return /*#__PURE__*/React.createElement(TreeSelect, {\n        tabIndex: 0,\n        showSearch: true,\n        disabled: field.editable == 0 || allData.disabled,\n        dropdownStyle: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        placeholder: \"Please Select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, allData.folderTreeData);\n      break;\n    case \"SpecialTextBox\":\n      return /*#__PURE__*/React.createElement(Input, (_React$createElement5 = {\n        tabIndex: 0,\n        size: \"small\",\n        style: {\n          borderRadius: \"4px\",\n          border: \"1px solid #e9e9e9\",\n          width: \"calc(100% - 42px)\",\n          height: \"50px\"\n        }\n      }, _defineProperty(_React$createElement5, \"tabIndex\", 0), _defineProperty(_React$createElement5, \"disabled\", field.editable == 0 || allData.disabled), _defineProperty(_React$createElement5, \"__self\", this), _defineProperty(_React$createElement5, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }), _React$createElement5));\n      break;\n    case \"SpecialSettings\":\n      if (field.attributeName.replace(/ /g, \"\") == 'CodeListName') {\n        var _React$createElement6;\n        return /*#__PURE__*/React.createElement(Input, (_React$createElement6 = {\n          tabIndex: 0,\n          size: \"small\",\n          style: {\n            marginLeft: 10,\n            borderRadius: \"4px\",\n            border: \"1px solid #e9e9e9\",\n            width: \"calc(100% - 87px)\"\n          }\n        }, _defineProperty(_React$createElement6, \"tabIndex\", 0), _defineProperty(_React$createElement6, \"disabled\", field.editable == 0 || allData.disabled), _defineProperty(_React$createElement6, \"__self\", this), _defineProperty(_React$createElement6, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }), _React$createElement6));\n      } else {\n        var _React$createElement7;\n        return /*#__PURE__*/React.createElement(Input, (_React$createElement7 = {\n          tabIndex: 0,\n          size: \"small\",\n          style: {\n            borderRadius: \"4px\",\n            border: \"1px solid #e9e9e9\",\n            width: \"calc(100% - 56px)\"\n          }\n        }, _defineProperty(_React$createElement7, \"tabIndex\", 0), _defineProperty(_React$createElement7, \"disabled\", field.editable == 0 || allData.disabled), _defineProperty(_React$createElement7, \"__self\", this), _defineProperty(_React$createElement7, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }), _React$createElement7));\n      }\n      break;\n    case \"TextArea\":\n      return /*#__PURE__*/React.createElement(Input, (_React$createElement8 = {\n        tabIndex: 0,\n        size: \"small\"\n      }, _defineProperty(_React$createElement8, \"tabIndex\", 0), _defineProperty(_React$createElement8, \"disabled\", field.editable == 0 || allData.disabled), _defineProperty(_React$createElement8, \"__self\", this), _defineProperty(_React$createElement8, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }), _React$createElement8));\n      break;\n    case \"CustomBox\":\n      if (field.attributeName.replace(/ /g, \"\") == 'VariableshavingValueLevels') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"VariableshavingValueLevels\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }\n        }, allData.tableElement);\n      }\n      break;\n    default:\n      return /*#__PURE__*/React.createElement(Input, (_React$createElement9 = {\n        tabIndex: 0,\n        size: \"small\"\n      }, _defineProperty(_React$createElement9, \"tabIndex\", 0), _defineProperty(_React$createElement9, \"id\", field.attributeName.replace(/ /g, \"\")), _defineProperty(_React$createElement9, \"disabled\", true), _defineProperty(_React$createElement9, \"__self\", this), _defineProperty(_React$createElement9, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }), _React$createElement9));\n      break;\n  }\n}\nexport function getRules(field, props) {\n  var allRules = [{\n    required: field.inputRequirementText == 'Mandatory' ? true : false,\n    message: field.requirementErrorMessage\n  }];\n  var inputValidator = null;\n  var existValidator = null;\n  var noNeedValidation = [\"DropDown\", \"CheckBox\", \"FileSelect\", \"FolderSelect\", \"MultipleDropdown\", \"Switch\", \"DropDownWithSearch\"];\n  if (noNeedValidation.indexOf(field.controlTypeText) < 0) {\n    if (field.controlTypeText == \"SpecialSettings\" || field.controlTypeText == \"SpecialTextBox\") {\n      allRules.push({\n        min: field.minValue,\n        message: field.validationErrorMessage\n      });\n      allRules.push({\n        max: field.maxValue,\n        message: field.validationErrorMessage\n      });\n      inputValidator = {\n        regExPattern: field.regExText,\n        validator: dependencyValidation,\n        data: field,\n        message: field.inputTypeErrorMessage,\n        type: field.inputTypeText\n      };\n    } else {\n      if (field.displayName.replace(/ /g, \"\") != \"EmailAddress\") {\n        allRules.push({\n          min: field.minValue,\n          message: field.validationErrorMessage\n        });\n        allRules.push({\n          max: field.maxValue,\n          message: field.validationErrorMessage\n        });\n      }\n      if (field.regExText != null) {\n        switch (field.inputTypeText) {\n          //case \"Alpha\":\n          //    inputValidator = { validator: checkAlphabet, message: field.inputTypeErrorMessage };\n          //    break;\n          case \"Alphanumeric\":\n            inputValidator = {\n              validator: dynamicValidation,\n              message: field.inputTypeErrorMessage,\n              props: props,\n              regExPattern: field.regExText\n            };\n            break;\n          case \"AlphanumericSpecial\":\n            inputValidator = {\n              validator: dynamicValidation,\n              message: field.inputTypeErrorMessage,\n              props: props,\n              regExPattern: field.regExText\n            };\n            break;\n          //case \"MobileNumber\":\n          //    inputValidator = { validator: checkPhoneNumber, message: field.inputTypeErrorMessage };\n          //    break;\n          case \"Number\":\n            inputValidator = {\n              validator: checkNumber,\n              message: field.inputTypeErrorMessage,\n              regExPattern: field.regExText\n            };\n            break;\n          //case \"EmailAddress\":\n          //    inputValidator = { validator: checkEmailAddress, message: field.inputTypeErrorMessage };\n          //    break;\n          //case \"Password\":\n          //    inputValidator = { validator: checkPassword, message: field.inputTypeErrorMessage };\n          //    break;\n          //case \"AlphanumericDotSpecial\":\n          //    inputValidator = { validator: checkVersionNumber, message: field.inputTypeErrorMessage , props: props};\n          //    break;\n\n          case \"Positive\":\n            inputValidator = {\n              validator: pagesValidation,\n              message: field.inputTypeErrorMessage,\n              props: props,\n              regExPattern: field.regExText\n            };\n            break;\n          default:\n            inputValidator = null;\n            break;\n        }\n      }\n    }\n  } else if (field.controlTypeText == \"DropDown\") {\n    if (field.inputRequirementText == 'Mandatory') {\n      inputValidator = {\n        validator: checkSelect,\n        message: field.requirementErrorMessage\n      };\n    }\n  }\n  if (inputValidator != null) {\n    allRules.push(inputValidator);\n  }\n  if (existValidator != null) {\n    allRules.push(existValidator);\n  }\n  return allRules;\n}\nfunction fnFocusOut(e, props) {\n  var c = {};\n  var temp = [];\n  var a = e.target.value.split(\" \");\n  props.props.form.validateFields([e.target.id], {\n    force: true\n  }, function (err, values) {\n    if (!err) {\n      a.forEach(function (key, index) {\n        if (index == 0) {\n          if (key != 0) {\n            c[key] = \"temp\";\n            temp.push(key);\n          }\n        } else if (!c.hasOwnProperty(key)) {\n          if (key != 0) {\n            c[key] = \"temp\";\n            temp.push(key);\n          }\n        }\n      });\n      props.props.form.setFieldsValue({\n        Pages: temp.sort(function (a, b) {\n          return a - b;\n        }).toString().replace(/,/g, \" \").trim()\n      });\n    }\n  });\n}\nvar rightRule = function rightRule(index) {\n  return index % 2 != 0;\n};\nvar leftRule = function leftRule(index) {\n  return index % 2 == 0;\n};\nexport function genLeftFormItems(allData) {\n  return genFormItems(allData, leftRule);\n}\nexport function genRightFormItems(allData) {\n  return genFormItems(allData, rightRule);\n}\nfunction dependencyCheckbox(value, field, props) {\n  field.extCom = value.target.checked;\n  props.props.setState({});\n}\nfunction genFormItems(allData, condition) {\n  var i = -1;\n  var formItemsLeft = allData.formData.map(function (field) {\n    i = i + 1;\n    if (condition(field.tabIndex) && i <= allData.formData.length) {\n      var defaultValue = null;\n      if (field.controlTypeText == \"CheckBox\" || field.controlTypeText == \"SpecialCheckBox\") {\n        defaultValue = false;\n        if (field.defaultValue == true) {\n          defaultValue = true;\n        }\n      } else {\n        if (field.defaultValue && typeof field.defaultValue === \"string\" && field.defaultValue.trim() != '') {\n          defaultValue = field.defaultValue;\n        }\n      }\n      return /*#__PURE__*/React.createElement(FormItem, {\n        key: field.displayName.replace(/ /g, \"\"),\n        label: field.attributeName == \"ValueListID\" ? \"\" : field.displayName,\n        className: field.controlTypeText + \"_FormItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      }, field.controlTypeText == \"SpecialTextBox\" ? fnSpecialText(field, defaultValue) : field.controlTypeText == \"SpecialSettings\" ? fnSpecialSettings(field, defaultValue) : field.controlTypeText == \"SpecialCheckBox\" ? fnSpecialCheck(field, defaultValue) : field.controlTypeText == \"MultipleDropdown\" || field.controlTypeText == \"FileSelect\" ? allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\n        rules: field.editable == true ? [{\n          required: field.inputRequirementText == \"Mandatory\" ? true : false,\n          message: field.requirementErrorMessage\n        }] : \"\",\n        initialValue: defaultValue != null ? defaultValue.split(\",\") : []\n      })(getFormField(field, allData)) : allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\n        rules: field.editable == true ? getRules(field, allData.props) : \"\",\n        initialValue: field.formActionText == \"ComplexConfiguration\" && field.attributeName == \"VariableName\" && allData.props.state.flagToResetVarName == false ? allData.props.props.defaultValForVar.replace(/[\\[|\\]\"\"]/g, '') : field.formActionText == \"ComplexConfiguration\" && field.attributeName == \"Domain\" ? allData.props.props.defaultValForDomain : defaultValue,\n        //validateTrigger: ['onKeyup', 'onBlur'],\n        valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value'\n      })(getFormField(field, allData)));\n    }\n    function fnSpecialText(field, defaultValue) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\n        rules: field.editable == true ? getRules(field, allData.props) : \"\",\n        initialValue: defaultValue,\n        //validateTrigger: ['onKeyup', 'onBlur'],\n        valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value'\n      })(getFormField(field, allData))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }\n      }, field.displayName.replace(/ /g, \"\") != \"DatasetComment\" ? /*#__PURE__*/React.createElement(Button, {\n        tabIndex: 0,\n        type: \"primary\",\n        icon: \"setting\",\n        id: field.displayName.replace(/ /g, \"\") + \"Confirm\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        disabled: JSON.parse(sessionStorage.projectStudyLockStatus) && !stringNullCheck(field.defaultValue) ? false : allData.disabled || stringNullCheck(field.defaultValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n        tabIndex: 0,\n        tooltip: \"Add\",\n        shape: \"circle\",\n        classname: \"fas fa-plus\",\n        size: \"small\",\n        id: field.displayName.replace(/ /g, \"\") + \"Confirm\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 29\n        }\n      })));\n    }\n    function fnSpecialSettings(field, defaultValue) {\n      var temp = 0;\n      var id = field.displayName.replace(/ /g, \"\") + \"CheckBox\";\n      if (field.displayName == \"CodeList Name\") {\n        if (!allData.disabled && field.defaultValue != \"\" && field.defaultValue !== null && field.defaultValue != undefined) {\n          temp = /*#__PURE__*/React.createElement(Checkbox, {\n            tabIndex: 0,\n            id: field.displayName.replace(/ /g, \"\") + \"CheckBox\",\n            checked: field.extCom,\n            onChange: function onChange(value) {\n              dependencyCheckbox(value, field, allData);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 28\n            }\n          });\n        } else {\n          temp = /*#__PURE__*/React.createElement(Checkbox, {\n            tabIndex: 0,\n            id: field.displayName.replace(/ /g, \"\") + \"CheckBox\",\n            checked: field.extCom,\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 28\n            }\n          });\n        }\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }\n      }, temp != 0 && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 45\n        }\n      }, temp, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 33\n        }\n      }, \"External\")), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }\n      }, allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\n        rules: field.editable == true ? getRules(field, allData.props) : \"\",\n        initialValue: defaultValue,\n        valuePropName: 'value'\n      })(getFormField(field, allData))), field.displayName.replace(/ /g, \"\") != \"CodeListName\" ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        tabIndex: 0,\n        type: \"primary\",\n        icon: \"setting\",\n        id: field.displayName.replace(/ /g, \"\") + \"Confirm\",\n        style: {\n          marginLeft: \"23px\"\n        },\n        disabled: JSON.parse(sessionStorage.projectStudyLockStatus) && !stringNullCheck(field.defaultValue) ? false : allData.disabled || stringNullCheck(field.defaultValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 37\n        }\n      })) : \"\"));\n    }\n\n    //for value list only\n    function fnSpecialCheck(field, defaultValue) {\n      var disabled;\n      var value = allData.props.props.form.getFieldValue(field.displayName.replace(/ /g, \"\"));\n      if (value && !allData.disabled && allData.props.state.formData_variable.find(function (x) {\n        return x.attributeName === \"ValueListID\";\n      }).extCom) {\n        disabled = false;\n      } else {\n        disabled = true;\n      }\n      var textDefaultValue = field.defaultValue != null ? field.defaultValue.replace(\"VL.\", \"\") : field.defaultValue;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        title: \"Last Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 59\n        }\n      }, field.displayName)), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }\n      }, allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\n        initialValue: field.extCom,\n        valuePropName: 'checked'\n      })(getFormField(field, allData)))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        tabIndex: 0,\n        size: \"small\",\n        value: field.extCom ? textDefaultValue : \"\",\n        style: {\n          width: \"calc(100% - 83px)\",\n          marginLeft: \"10px\"\n        },\n        id: field.displayName.replace(/ /g, \"\") + \"Text\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        tabIndex: 0,\n        type: \"primary\",\n        icon: \"setting\",\n        id: field.displayName.replace(/ /g, \"\") + \"Confirm\",\n        style: {\n          marginLeft: \"23px\"\n        },\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }\n      })));\n    }\n  });\n  return formItemsLeft;\n}\n//stringNullCheck\nfunction stringNullCheck(value) {\n  if (value != null) {\n    return /^\\s*$/.test(value);\n  } else {\n    return true;\n  }\n}","map":{"version":3,"names":["React","Select","Form","Input","Col","Row","Icon","Button","Checkbox","Switch","TreeSelect","dynamicValidation","checkPhoneNumber","checkAlphaNumericSpecial","checkNumber","pagesValidation","checkAlphaNumeric","checkEmailAddress","fnDefineBotExternal","checkVersionNumber","checkExistOrNot","checkAlphabet","checkSelect","checkPassword","fnSwitch","fnFileSelect","fnForSelect","fnKeyUp","fnCheck","dependencyValidation","ButtonWithToolTip","Option","FormItem","Item","TreeNode","TextArea","lowerCasefirst","string","charAt","toLowerCase","slice","getFormField","field","allData","uploadBtn","showFileDialog","attributeName","replace","controlTypeText","inputTypeText","editable","disabled","e","fnFocusOut","props","defaultValue","displayName","tempParam","deafultOption","allOptions","options","dropDownMode","value","form","getFieldValue","selectOptions","Object","keys","length","undefined","map","option","concat","node","input","children","indexOf","substr","tabIndex","maxHeight","overflow","treeDefaultExpandedKeys","extra","treeData","folderTreeData","borderRadius","border","width","height","marginLeft","tableElement","getRules","allRules","required","inputRequirementText","message","requirementErrorMessage","inputValidator","existValidator","noNeedValidation","push","min","minValue","validationErrorMessage","max","maxValue","regExPattern","regExText","validator","data","inputTypeErrorMessage","type","c","temp","a","target","split","validateFields","id","force","err","values","forEach","key","index","hasOwnProperty","setFieldsValue","Pages","sort","b","toString","trim","rightRule","leftRule","genLeftFormItems","genFormItems","genRightFormItems","dependencyCheckbox","extCom","checked","setState","condition","i","formItemsLeft","formData","fnSpecialText","fnSpecialSettings","fnSpecialCheck","getFieldDecorator","rules","initialValue","formActionText","state","flagToResetVarName","defaultValForVar","defaultValForDomain","valuePropName","JSON","parse","sessionStorage","projectStudyLockStatus","stringNullCheck","formData_variable","find","x","textDefaultValue","test"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Utility/defineBotHtmlUtility.js"],"sourcesContent":["import React from 'react';\r\nimport { Select, Form, Input, Col, Row, Icon, Button, Checkbox, Switch, TreeSelect } from 'antd';\r\nimport { dynamicValidation, checkPhoneNumber, checkAlphaNumericSpecial, checkNumber, pagesValidation, checkAlphaNumeric, checkEmailAddress, fnDefineBotExternal, checkVersionNumber, checkExistOrNot, checkAlphabet, checkSelect, checkPassword, fnSwitch, fnFileSelect } from './validator';\r\nimport { fnForSelect, fnKeyUp, fnCheck, dependencyValidation } from '../DefineBot/supportValidation.js';\r\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip.js'\r\n\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nconst TreeNode = TreeSelect.TreeNode;\r\nconst { TextArea } = Input;\r\n\r\nfunction lowerCasefirst(string) {\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n\r\nfunction getFormField(field, allData) {\r\n    const uploadBtn = <a onClick={() => allData.showFileDialog(field.attributeName.replace(/ /g, \"\"))}><Icon type=\"file-pdf\" /></a>;\r\n    switch (field.controlTypeText) {\r\n        case \"TextBox\":\r\n            if (field.inputTypeText == \"Password\") {\r\n                return (<Input tabIndex={0} size=\"small\" type=\"password\" tabIndex={0} id={field.attributeName.replace(/ /g, \"\")} disabled={(field.editable == 0 || allData.disabled)} />);\r\n            }\r\n            else if (field.inputTypeText == \"Positive\") {\r\n                return (<Input tabIndex={0} size=\"small\" onBlur={(e) => { fnFocusOut(e, allData.props) }} tabIndex={0} id={field.attributeName.replace(/ /g, \"\")} disabled={(field.editable == 0 || allData.disabled)} />);\r\n            }\r\n            else {\r\n                return (<Input title={field.defaultValue} tabIndex={0} size=\"small\" onKeyUp={(e) => { fnKeyUp(e, allData.props, field.displayName.replace(/ /g, \"\")) }} tabIndex={0} id={field.attributeName.replace(/ /g, \"\")} disabled={(field.editable == 0 || allData.disabled)} />);\r\n\r\n            }\r\n            break;\r\n        case \"DropDown\":\r\n            var tempParam = null;\r\n            var deafultOption = (<Option name={field.displayName + \"_Option\"} value={tempParam} key={tempParam}>--Select--</Option>);\r\n            var allOptions = [deafultOption];\r\n            var options = [];\r\n            let dropDownMode = \"single\";\r\n            var value = allData.props.props.form.getFieldValue(field.displayName.replace(/ /g, \"\"));\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                if (allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()] != undefined) {\r\n                    options = allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()].map(function (option) {\r\n                        if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"comparator\" || field.attributeName.replace(/ /g, \"\").toLowerCase() == \"operator\") {\r\n                            return (\r\n                                <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]} value={option[\"literal\"]}>\r\n                                    {option[\"literal\"]}\r\n                                </Option>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]} >\r\n                                    {option[\"literal\"]}\r\n                                </Option>\r\n                            )\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"value\") {\r\n                allOptions = options;\r\n            }\r\n            else {\r\n                allOptions = allOptions.concat(options);\r\n            }\r\n            return (<Select aria-name={field.displayName} tabIndex={0} disabled={(field.editable == 0 || allData.disabled)} filterOption=\"true\" mode={dropDownMode} onChange={(value, node) => { fnForSelect(value, allData, field.attributeName, node) }} >\r\n                {allOptions}\r\n            </Select>);\r\n            break;\r\n        case \"DropDownWithSearch\":\r\n            var tempParam = null;\r\n            var deafultOption = (<Option name={field.displayName + \"_Option\"} value={tempParam} key={tempParam}>--Select--</Option>);\r\n            var allOptions = [deafultOption];\r\n            var options = [];\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                if (allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()] != undefined) {\r\n                    options = allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()].map(function (option) {\r\n                        if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"comparator\" || field.attributeName.replace(/ /g, \"\").toLowerCase() == \"operator\") {\r\n                            return (\r\n                                <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]} value={option[\"literal\"]}>\r\n                                    {option[\"literal\"]}\r\n                                </Option>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]}>\r\n                                    {option[\"literal\"]}\r\n                                </Option>\r\n                            )\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"value\") {\r\n                allOptions = options;\r\n            }\r\n            else {\r\n                allOptions = allOptions.concat(options);\r\n            }\r\n            return (<Select aria-name={field.displayName} tabIndex={0} showSearch disabled={(field.editable == 0 || allData.disabled)} optionFilterProp=\"children\" filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} mode=\"single\" onChange={(value, node) => { fnForSelect(value, allData, field.attributeName, node) }}>\r\n                {allOptions}\r\n            </Select>);\r\n            break;\r\n        case \"MultipleDropdown\":\r\n            var allOptions = [];\r\n            var options = [];\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                if (allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()] != undefined) {\r\n                    options = allData.selectOptions[field.attributeName.replace(/ /g, \"\").toLowerCase()].map(function (option) {\r\n                        return (\r\n                            <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]}>\r\n                                {\r\n                                    (field.attributeName.replace(/ /g, \"\").toLowerCase() == \"referencewhereclause\") ?\r\n                                        option[\"literal\"].substr(option[\"literal\"].indexOf(\"WC.\") + 3) :\r\n                                        (field.attributeName.replace(/ /g, \"\").toLowerCase() != \"referencevaluelist\" && field.attributeName.replace(/ /g, \"\").toLowerCase() != \"referencevariable\" && field.attributeName.replace(/ /g, \"\").toLowerCase() != \"referencedomain\") ?\r\n                                            option[\"literal\"] :\r\n                                            option[\"literal\"].substr(option[\"literal\"].indexOf(\".\") + 1)\r\n                                }\r\n                            </Option>\r\n                        )\r\n                    });\r\n                }\r\n            }\r\n            allOptions = allOptions.concat(options);\r\n            return (<Select tabIndex={0} aria-name={field.displayName} showSearch disabled={(field.editable == 0 || allData.disabled)} optionFilterProp=\"children\" placeholder={\"Select \" + field.displayName} mode=\"multiple\" tabIndex={field.tabIndex} >\r\n                {allOptions}\r\n            </Select>);\r\n            break;\r\n        case \"CheckBox\":\r\n        case \"SpecialCheckBox\":\r\n\r\n            return (<Checkbox key={field.attributeName.replace(/ /g, \"\")} disabled={(field.editable == 0 || allData.disabled)} onChange={(e) => { fnCheck(e, allData.props, field.attributeName.replace(/ /g, \"\")) }}\r\n                tabIndex={0}\r\n            >\r\n            </Checkbox>);\r\n            break;\r\n        case \"Switch\":\r\n            return (<Switch key={field.attributeName.replace(/ /g, \"\")} disabled={(field.editable == 0 || allData.disabled)} onChange={(e) => { fnSwitch(e, allData.props, field.attributeName.replace(/ /g, \"\")) }}\r\n                tabIndex={0}\r\n            >\r\n            </Switch>);\r\n            break;\r\n        case \"FileSelect\":\r\n            return (\r\n                <TreeSelect\r\n                    tabIndex={0}\r\n                    showSearch\r\n                    disabled={(field.editable == 0 || allData.disabled)}\r\n                    multiple={(field.inputTypeText == \"MultiBrowse\")}\r\n                    allowClear\r\n                    dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                    placeholder=\"Please Select\"\r\n                    treeDefaultExpandedKeys={[allData.treeDefaultExpandedKeys]}\r\n                    onChange={(value, node, extra) => { fnFileSelect(value, node, extra, allData.props, field.attributeName.replace(/ /g, \"\")) }}>\r\n                    {allData.treeData}\r\n                </TreeSelect>\r\n            );\r\n            break;\r\n        case \"FolderSelect\":\r\n            return (<TreeSelect\r\n                tabIndex={0}\r\n                showSearch\r\n                disabled={(field.editable == 0 || allData.disabled)}\r\n                dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                placeholder=\"Please Select\">\r\n                {allData.folderTreeData}\r\n            </TreeSelect>);\r\n            break;\r\n        case \"SpecialTextBox\":\r\n            return (<Input tabIndex={0} size=\"small\" style={{ borderRadius: \"4px\", border: \"1px solid #e9e9e9\", width: \"calc(100% - 42px)\", height: \"50px\" }} tabIndex={0} disabled={(field.editable == 0 || allData.disabled)} />);\r\n            break;\r\n\r\n        case \"SpecialSettings\":\r\n\r\n            if (field.attributeName.replace(/ /g, \"\") == 'CodeListName') {\r\n                return (<Input tabIndex={0} size=\"small\" style={{ marginLeft:10,borderRadius: \"4px\", border: \"1px solid #e9e9e9\", width: \"calc(100% - 87px)\" }} tabIndex={0} disabled={(field.editable == 0 || allData.disabled)} />);\r\n\r\n            }\r\n            else {\r\n                return (<Input tabIndex={0} size=\"small\" style={{ borderRadius: \"4px\", border: \"1px solid #e9e9e9\", width: \"calc(100% - 56px)\" }} tabIndex={0} disabled={(field.editable == 0 || allData.disabled)} />);\r\n            }\r\n            break;\r\n\r\n        case \"TextArea\":\r\n            return (<Input tabIndex={0} size=\"small\" tabIndex={0} disabled={(field.editable == 0 || allData.disabled)} />);\r\n            break;\r\n\r\n        case \"CustomBox\":\r\n            if (field.attributeName.replace(/ /g, \"\") == 'VariableshavingValueLevels') {\r\n\r\n                return (\r\n                    <div id='VariableshavingValueLevels'>\r\n                        {\r\n                            allData.tableElement\r\n                        }\r\n                    </div>\r\n                );\r\n\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return (<Input tabIndex={0} size=\"small\" tabIndex={0} id={field.attributeName.replace(/ /g, \"\")} disabled />);\r\n            break;\r\n    }\r\n}\r\nexport function getRules(field, props) {\r\n\r\n    var allRules = [{ required: (field.inputRequirementText == 'Mandatory') ? true : false, message: field.requirementErrorMessage }];\r\n    var inputValidator = null;\r\n    var existValidator = null;\r\n\r\n    const noNeedValidation = [\"DropDown\", \"CheckBox\", \"FileSelect\", \"FolderSelect\", \"MultipleDropdown\", \"Switch\", \"DropDownWithSearch\"];\r\n    if (noNeedValidation.indexOf(field.controlTypeText) < 0) {\r\n\r\n        if (field.controlTypeText == \"SpecialSettings\" || field.controlTypeText == \"SpecialTextBox\") {\r\n            allRules.push({ min: field.minValue, message: field.validationErrorMessage });\r\n            allRules.push({ max: field.maxValue, message: field.validationErrorMessage });\r\n            inputValidator = { regExPattern: field.regExText, validator: dependencyValidation, data: field, message: field.inputTypeErrorMessage, type: field.inputTypeText };\r\n        }\r\n        else {\r\n            if (field.displayName.replace(/ /g, \"\") != \"EmailAddress\") {\r\n                allRules.push({ min: field.minValue, message: field.validationErrorMessage });\r\n                allRules.push({ max: field.maxValue, message: field.validationErrorMessage });\r\n            }\r\n            if (field.regExText != null) {\r\n                switch (field.inputTypeText) {\r\n                    //case \"Alpha\":\r\n                    //    inputValidator = { validator: checkAlphabet, message: field.inputTypeErrorMessage };\r\n                    //    break;\r\n                    case \"Alphanumeric\":\r\n                        inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                        break;\r\n                    case \"AlphanumericSpecial\":\r\n                        inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                        break;\r\n                    //case \"MobileNumber\":\r\n                    //    inputValidator = { validator: checkPhoneNumber, message: field.inputTypeErrorMessage };\r\n                    //    break;\r\n                    case \"Number\":\r\n                        inputValidator = { validator: checkNumber, message: field.inputTypeErrorMessage, regExPattern: field.regExText };\r\n                        break;\r\n                    //case \"EmailAddress\":\r\n                    //    inputValidator = { validator: checkEmailAddress, message: field.inputTypeErrorMessage };\r\n                    //    break;\r\n                    //case \"Password\":\r\n                    //    inputValidator = { validator: checkPassword, message: field.inputTypeErrorMessage };\r\n                    //    break;\r\n                    //case \"AlphanumericDotSpecial\":\r\n                    //    inputValidator = { validator: checkVersionNumber, message: field.inputTypeErrorMessage , props: props};\r\n                    //    break;\r\n\r\n                    case \"Positive\":\r\n                        inputValidator = { validator: pagesValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                        break;\r\n\r\n                    default:\r\n                        inputValidator = null;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    } else if (field.controlTypeText == \"DropDown\") {\r\n        if (field.inputRequirementText == 'Mandatory') {\r\n            inputValidator = { validator: checkSelect, message: field.requirementErrorMessage };\r\n        }\r\n    }\r\n\r\n    if (inputValidator != null) {\r\n        allRules.push(inputValidator);\r\n    }\r\n    if (existValidator != null) {\r\n        allRules.push(existValidator);\r\n    }\r\n    return allRules;\r\n\r\n}\r\n\r\nfunction fnFocusOut(e, props) {\r\n    var c = {}; var temp = []; var a = e.target.value.split(\" \");\r\n    props.props.form.validateFields([e.target.id], { force: true }, (err, values) => {\r\n        if (!err) {\r\n            a.forEach(function (key, index) {\r\n                if (index == 0) {\r\n                    if (key != 0) {\r\n                        c[key] = \"temp\";\r\n                        temp.push(key);\r\n                    }\r\n                }\r\n                else if (!c.hasOwnProperty(key)) {\r\n                    if (key != 0) {\r\n                        c[key] = \"temp\";\r\n\r\n                        temp.push(key);\r\n                    }\r\n                }\r\n            })\r\n            props.props.form.setFieldsValue({ Pages: ((temp.sort(function (a, b) { return a - b })).toString().replace(/,/g, \" \")).trim() });\r\n        }\r\n    })\r\n}\r\n\r\nvar rightRule = (index) => {\r\n    return (index % 2 != 0);\r\n}\r\nvar leftRule = (index) => {\r\n    return (index % 2 == 0);\r\n}\r\nexport function genLeftFormItems(allData) {\r\n    return genFormItems(allData, leftRule);\r\n}\r\nexport function genRightFormItems(allData) {\r\n    return genFormItems(allData, rightRule);\r\n}\r\n\r\nfunction dependencyCheckbox(value, field, props) {\r\n    field.extCom = value.target.checked;\r\n    props.props.setState({});\r\n}\r\nfunction genFormItems(allData, condition) {\r\n    var i = -1;\r\n\r\n    var formItemsLeft = allData.formData.map(function (field) {\r\n        i = i + 1;\r\n        if (condition(field.tabIndex) && i <= allData.formData.length) {\r\n            let defaultValue = null;\r\n            if (field.controlTypeText == \"CheckBox\" || field.controlTypeText == \"SpecialCheckBox\") {\r\n                defaultValue = false;\r\n                if (field.defaultValue == true) {\r\n                    defaultValue = true;\r\n                }\r\n            } else {\r\n                if (field.defaultValue && (typeof field.defaultValue === \"string\" && field.defaultValue.trim() != '')) {\r\n                    defaultValue = field.defaultValue;\r\n                }\r\n            }\r\n\r\n            return (\r\n                <FormItem\r\n                    key={field.displayName.replace(/ /g, \"\")}\r\n                    label={(field.attributeName == \"ValueListID\") ? \"\" : field.displayName}\r\n\r\n                    className={field.controlTypeText + \"_FormItem\"}\r\n                >\r\n                    {\r\n                        (field.controlTypeText == \"SpecialTextBox\") ?\r\n                            (fnSpecialText(field, defaultValue)) :\r\n\r\n                            ((field.controlTypeText == \"SpecialSettings\") ?\r\n\r\n                                (fnSpecialSettings(field, defaultValue))\r\n\r\n                                : (field.controlTypeText == \"SpecialCheckBox\") ?\r\n\r\n                                    (fnSpecialCheck(field, defaultValue)) :\r\n\r\n                                    (field.controlTypeText == \"MultipleDropdown\" || field.controlTypeText == \"FileSelect\") ?\r\n                                        (\r\n\r\n                                            allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\r\n                                                rules: (field.editable == true ? [{\r\n                                                    required: (field.inputRequirementText == \"Mandatory\") ? true : false,\r\n                                                    message: field.requirementErrorMessage,\r\n                                                }] : \"\"),\r\n                                                initialValue: (defaultValue != null) ? defaultValue.split(\",\") : []\r\n                                            })(getFormField(field, allData)))\r\n                                        : allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\r\n                                            rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                            initialValue: ((field.formActionText == \"ComplexConfiguration\" && (field.attributeName == \"VariableName\" &&\r\n                                                (allData.props.state.flagToResetVarName == false)) ? (allData.props.props.defaultValForVar.replace(/[\\[|\\]\"\"]/g, '')) :\r\n                                                (field.formActionText == \"ComplexConfiguration\" && field.attributeName == \"Domain\") ? (allData.props.props.defaultValForDomain) : defaultValue)),\r\n                                            //validateTrigger: ['onKeyup', 'onBlur'],\r\n                                            valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value',\r\n                                        })(getFormField(field, allData)))\r\n                    }\r\n\r\n                </FormItem>\r\n            )\r\n        }\r\n\r\n\r\n        function fnSpecialText(field, defaultValue) {\r\n            return (\r\n                <div>\r\n                    <span>\r\n                        {\r\n                            allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\r\n                                rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                initialValue: defaultValue,\r\n                                //validateTrigger: ['onKeyup', 'onBlur'],\r\n                                valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value'\r\n                            })(getFormField(field, allData))\r\n                        }\r\n                    </span>\r\n                    <span>{\r\n                        (field.displayName.replace(/ /g, \"\") != \"DatasetComment\") ?\r\n                            <Button tabIndex={0} type=\"primary\" icon=\"setting\" id={field.displayName.replace(/ /g, \"\") + \"Confirm\"} style={{ marginLeft: \"10px\" }} disabled={((JSON.parse(sessionStorage.projectStudyLockStatus) && !stringNullCheck(field.defaultValue)) ? false : (allData.disabled || stringNullCheck(field.defaultValue)))}  ></Button> :\r\n                            <ButtonWithToolTip tabIndex={0} tooltip=\"Add\" shape=\"circle\" classname=\"fas fa-plus\" size=\"small\" id={field.displayName.replace(/ /g, \"\") + \"Confirm\"} style={{ marginLeft: \"10px\" }} />\r\n                    }\r\n                    </span>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n        function fnSpecialSettings(field, defaultValue) {\r\n            var temp = 0;\r\n            var id = field.displayName.replace(/ /g, \"\") + \"CheckBox\";\r\n            if (field.displayName == \"CodeList Name\") {\r\n                if (!allData.disabled && field.defaultValue != \"\" && field.defaultValue !== null && field.defaultValue != undefined) {\r\n                    temp = <Checkbox tabIndex={0} id={field.displayName.replace(/ /g, \"\") + \"CheckBox\"} checked={field.extCom} onChange={(value) => { dependencyCheckbox(value, field, allData) }} />;\r\n                }\r\n                else {\r\n\r\n                    temp = <Checkbox tabIndex={0} id={field.displayName.replace(/ /g, \"\") + \"CheckBox\"} checked={field.extCom} disabled={true} />;\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    <span>\r\n                        {\r\n                            (temp != 0) && (<span>\r\n                                {\r\n                                    temp\r\n                                }\r\n                                <span>{\"External\"}</span>\r\n                            </span>)\r\n                        }\r\n                        <span>\r\n                            {\r\n                                allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\r\n                                    rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                    initialValue: defaultValue,\r\n                                    valuePropName: 'value',\r\n\r\n                                })(getFormField(field, allData))\r\n                            }\r\n                        </span>\r\n                        {\r\n                            (field.displayName.replace(/ /g, \"\") != \"CodeListName\") ?\r\n                                <span>\r\n                                    <Button tabIndex={0} type=\"primary\" icon=\"setting\" id={field.displayName.replace(/ /g, \"\") + \"Confirm\"} style={{ marginLeft: \"23px\" }} disabled={((JSON.parse(sessionStorage.projectStudyLockStatus) && !stringNullCheck(field.defaultValue)) ? false : (allData.disabled || stringNullCheck(field.defaultValue)))}  ></Button>\r\n                                </span> : \"\"\r\n                        }\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        //for value list only\r\n        function fnSpecialCheck(field, defaultValue) {\r\n            var disabled;\r\n            var value = allData.props.props.form.getFieldValue(field.displayName.replace(/ /g, \"\"));\r\n\r\n            if (value && !allData.disabled && allData.props.state.formData_variable.find(x => x.attributeName === \"ValueListID\").extCom) {\r\n                disabled = false;\r\n            }\r\n            else {\r\n                disabled = true;\r\n            }\r\n            let textDefaultValue = (field.defaultValue != null) ? field.defaultValue.replace(\"VL.\", \"\") : field.defaultValue;\n\r\n\r\n            return (\r\n                <div><div className=\"ant-form-item-label\"><label title=\"Last Page\">{field.displayName}</label></div>\r\n                    <span>\r\n                        <span>\r\n                            {\r\n                                allData.getFieldDecorator(field.displayName.replace(/ /g, \"\"), {\r\n                                    initialValue: field.extCom,\r\n                                    valuePropName: 'checked',\r\n\r\n                                })\r\n                                    (\r\n                                    getFormField(field, allData)\r\n                                    )\r\n                            }</span>\r\n\r\n                    </span>\r\n                    <span>\r\n                        <Input tabIndex={0} size=\"small\" value={(field.extCom) ? textDefaultValue : \"\"} style={{ width: \"calc(100% - 83px)\", marginLeft: \"10px\" }} id={field.displayName.replace(/ /g, \"\") + \"Text\"} disabled={true} />\r\n                    </span>\r\n                    <span>\r\n                        <Button tabIndex={0} type=\"primary\" icon=\"setting\" id={field.displayName.replace(/ /g, \"\") + \"Confirm\"} style={{ marginLeft: \"23px\" }} disabled={disabled}  ></Button>\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    });\r\n    return formItemsLeft;\r\n}\r\n//stringNullCheck\r\nfunction stringNullCheck(value) {\r\n    if (value != null) {\r\n        return /^\\s*$/.test(value)\r\n    } else {\r\n        return true;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}