{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  // the default separators except `@$`\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['{', '}']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\{\\\\$REGION(\\\\s\\\\'.*\\\\')?\\\\}\"),\n      end: new RegExp(\"^\\\\s*\\\\{\\\\$ENDREGION\\\\}\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.pascal',\n  ignoreCase: true,\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  keywords: ['absolute', 'abstract', 'all', 'and_then', 'array', 'as', 'asm', 'attribute', 'begin', 'bindable', 'case', 'class', 'const', 'contains', 'default', 'div', 'else', 'end', 'except', 'exports', 'external', 'far', 'file', 'finalization', 'finally', 'forward', 'generic', 'goto', 'if', 'implements', 'import', 'in', 'index', 'inherited', 'initialization', 'interrupt', 'is', 'label', 'library', 'mod', 'module', 'name', 'near', 'not', 'object', 'of', 'on', 'only', 'operator', 'or_else', 'otherwise', 'override', 'package', 'packed', 'pow', 'private', 'program', 'protected', 'public', 'published', 'interface', 'implementation', 'qualified', 'read', 'record', 'resident', 'requires', 'resourcestring', 'restricted', 'segment', 'set', 'shl', 'shr', 'specialize', 'stored', 'then', 'threadvar', 'to', 'try', 'type', 'unit', 'uses', 'var', 'view', 'virtual', 'dynamic', 'overload', 'reintroduce', 'with', 'write', 'xor', 'true', 'false', 'procedure', 'function', 'constructor', 'destructor', 'property', 'break', 'continue', 'exit', 'abort', 'while', 'do', 'for', 'raise', 'repeat', 'until'],\n  typeKeywords: ['boolean', 'double', 'byte', 'integer', 'shortint', 'char', 'longint', 'float', 'string'],\n  operators: ['=', '>', '<', '<=', '>=', '<>', ':', ':=', 'and', 'or', '+', '-', '*', '/', '@', '&', '^', '%'],\n  // we include these common regular expressions\n  symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // identifiers and keywords\n    [/[a-zA-Z_][\\w]*/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': 'identifier'\n      }\n    }],\n    // whitespace\n    {\n      include: '@whitespace'\n    },\n    // delimiters and operators\n    [/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'delimiter',\n        '@default': ''\n      }\n    }],\n    // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'], [/\\$[0-9a-fA-F]{1,16}/, 'number.hex'], [/\\d+/, 'number'],\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'],\n    // strings\n    [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'], [/'/, 'string', '@string'],\n    // characters\n    [/'[^\\\\']'/, 'string'], [/'/, 'string.invalid'], [/\\#\\d+/, 'string']],\n    comment: [[/[^\\*\\}]+/, 'comment'],\n    //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\n    [/\\}/, 'comment', '@pop'], [/[\\{]/, 'comment']],\n    string: [[/[^\\\\']+/, 'string'], [/\\\\./, 'string.escape.invalid'], [/'/, {\n      token: 'string.quote',\n      bracket: '@close',\n      next: '@pop'\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/\\{/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']]\n  }\n};","map":{"version":3,"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","typeKeywords","operators","symbols","tokenizer","root","cases","include","comment","string","bracket","next","whitespace"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `@$`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['{', '}'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['<', '>'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*\\\\{\\\\$REGION(\\\\s\\\\'.*\\\\')?\\\\}\"),\r\n            end: new RegExp(\"^\\\\s*\\\\{\\\\$ENDREGION\\\\}\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pascal',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'absolute', 'abstract', 'all', 'and_then', 'array', 'as', 'asm',\r\n        'attribute', 'begin', 'bindable', 'case', 'class', 'const',\r\n        'contains', 'default', 'div', 'else', 'end', 'except',\r\n        'exports', 'external', 'far', 'file', 'finalization', 'finally',\r\n        'forward', 'generic', 'goto', 'if', 'implements', 'import', 'in',\r\n        'index', 'inherited', 'initialization', 'interrupt', 'is', 'label',\r\n        'library', 'mod', 'module', 'name', 'near', 'not', 'object', 'of',\r\n        'on', 'only', 'operator', 'or_else', 'otherwise', 'override',\r\n        'package', 'packed', 'pow', 'private', 'program', 'protected',\r\n        'public', 'published', 'interface', 'implementation', 'qualified',\r\n        'read', 'record', 'resident', 'requires', 'resourcestring',\r\n        'restricted', 'segment', 'set', 'shl', 'shr', 'specialize', 'stored',\r\n        'then', 'threadvar', 'to', 'try', 'type', 'unit', 'uses', 'var',\r\n        'view', 'virtual', 'dynamic', 'overload', 'reintroduce', 'with',\r\n        'write', 'xor', 'true', 'false', 'procedure', 'function',\r\n        'constructor', 'destructor', 'property', 'break', 'continue', 'exit',\r\n        'abort', 'while', 'do', 'for', 'raise', 'repeat', 'until'\r\n    ],\r\n    typeKeywords: [\r\n        'boolean', 'double', 'byte', 'integer', 'shortint', 'char',\r\n        'longint', 'float', 'string'\r\n    ],\r\n    operators: [\r\n        '=', '>', '<', '<=', '>=', '<>', ':', ':=', 'and', 'or',\r\n        '+', '-', '*', '/', '@', '&', '^', '%'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_][\\w]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\$[0-9a-fA-F]{1,16}/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/'/, 'string.invalid'],\r\n            [/\\#\\d+/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^\\*\\}]+/, 'comment'],\r\n            //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\r\n            [/\\}/, 'comment', '@pop'],\r\n            [/[\\{]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\{/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}