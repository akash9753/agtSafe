{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\DefineOptimize\\\\Domain\\\\update.js\";\nimport React, { Component } from 'react';\nimport { Breadcrumb, Form, Icon, Tooltip } from 'antd';\nimport { CallServerPost, errorModal, successModalCallback, PostCallWithZoneForDomainCreate, getStudyID, showProgress, hideProgress, definePermission } from '../../Utility/sharedUtility';\nimport SingleForm from '../../Utility/defineBotForm';\nimport DomainCmntPopUp from '../domainCmntPopUp.js';\nimport Confirmation from '../confirmation';\nimport { DefineContext } from '../context';\nvar thisObj;\nvar Update = /*#__PURE__*/function (_Component) {\n  _inherits(Update, _Component);\n  var _super = _createSuper(Update);\n  function Update(_props) {\n    var _this;\n    _classCallCheck(this, Update);\n    _this = _super.call(this, _props);\n    _this.getFormFieldList = function (props) {\n      showProgress();\n      var _ref = _this.context || {},\n        StudyID = _ref.StudyID;\n\n      //Get the required field to form the page\n      CallServerPost('Domain/GetDomainFormData', {\n        FormName: \"Domain\",\n        ActionName: \"Update\",\n        ID: props.ID,\n        StudyID: StudyID,\n        StandardName: sessionStorage.standard\n      }).then(function (response) {\n        hideProgress();\n        var result = response.value;\n        if (result.status == 0) {\n          thisObj.setState({\n            responseData: {\n              formData: []\n            }\n          });\n          errorModal(result.message);\n        } else {\n          //For Custom Domain purpose if custom domain is true the following list should be enable else no need\n          if (response.value.formData_domain.find(function (x) {\n            return x.attributeName == \"CustomDomain\";\n          }).defaultValue != \"0\") {\n            var keyToEnable = [\"AliasName\", \"Context\", \"TranslatedText\", \"Class\", \"IsReferenceData\", \"Structure\", \"KeyVariable\", \"Repeating\", \"Purpose\"];\n            response.value.formData_domain.forEach(function (key, index) {\n              if (keyToEnable.indexOf(key.attributeName) != -1) {\n                key.editable = true;\n                key.inputRequirementID = 8;\n                key.inputRequirementText = \"Mandatory\";\n              }\n            });\n          }\n\n          //set state to render the page\n          thisObj.setState({\n            responseData: {\n              formData: result.formData_domain,\n              keySequence: result.formData_keysequence,\n              selectOptions: result.selectOptions\n            },\n            cmntresponseData: {\n              formData: result.formData_comment,\n              selectOptions: result.selectOptions\n            }\n          });\n\n          //Onclick fn to that comment button\n          (function () {\n            document.getElementById(\"CommentDescriptionConfirm\").onclick = function () {\n              thisObj.cmntPopUp();\n            };\n          })();\n        }\n      }).catch(function (error) {\n        hideProgress();\n      });\n    };\n    _this.handleReadOnlyToSave = function () {\n      thisObj.setState({\n        readOnly: false\n      });\n    };\n    _this.handleSaveToReadOnly = function () {\n      thisObj.props.form.resetFields();\n      thisObj.setState({\n        readOnly: true,\n        responseData: {\n          formData: {}\n        }\n      });\n      thisObj.getFormFieldList(thisObj.props);\n    };\n    _this.cmntPopUp = function () {\n      thisObj.state.cmntresponseData.formData[0].defaultValue = document.getElementById(\"CommentDescription\").value;\n      thisObj.setState({\n        visible: true,\n        cmntresponseData: thisObj.state.cmntresponseData,\n        title: \"Comment\"\n      });\n\n      //description value to fill the pop up description field \n    };\n    _this.handleValidate = function (e) {\n      e.preventDefault();\n      var thisObj = _assertThisInitialized(_this);\n      thisObj.props.form.validateFields(function (err, values) {\n        if (!err) {\n          thisObj.setState({\n            confirmation: true,\n            validValues: values\n          });\n        }\n      });\n    };\n    _this.handleUpdate = function (changeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      var elementID = 0;\n      var _thisObj$state = thisObj.state,\n        validValues = _thisObj$state.validValues,\n        responseData = _thisObj$state.responseData;\n      responseData.formData.forEach(function (key, index) {\n        var fieldName = key[\"displayName\"].replace(/ /g, \"\");\n        var value = key[\"defaultValue\"];\n        if (value == \"\" || value == null) {\n          if (validValues[fieldName] && validValues[fieldName]) {\n            key[\"changed\"] = true;\n          }\n        } else if (validValues[fieldName] != value) {\n          key[\"changed\"] = true;\n        }\n\n        //if value is array is ,convert to string\n        key[\"defaultValue\"] = validValues[fieldName] ? validValues[fieldName].toString() : validValues[fieldName];\n        if (fieldName == \"CommentDescription\") {\n          key[\"comment\"] = true;\n          key[\"parentElementID\"] = elementID;\n        }\n        if (key[\"displayName\"] == \"Name\") {\n          elementID = key[\"elementID\"];\n        }\n        if (fieldName == \"KeyVariable\") {\n          key[\"elementID\"] = elementID;\n        }\n        key[\"timeZone\"] = \"IST\";\n        key[\"changeReason\"] = changeReason;\n        key[\"updatedBy\"] = JSON.parse(sessionStorage.userProfile).userID;\n      });\n      thisObj.state.responseData.formData.map(function (x, indexitem) {\n        if (thisObj.state.responseData.formData[indexitem].wizardID === null) {\n          thisObj.state.responseData.formData[indexitem].wizardID = -1;\n        }\n      });\n      var formData = [].concat(_toConsumableArray(thisObj.state.responseData.keySequence), _toConsumableArray(thisObj.state.responseData.formData));\n      showProgress();\n      PostCallWithZoneForDomainCreate('Domain/UpdateDomainData', thisObj.state.responseData.formData).then(function (response) {\n        hideProgress();\n        if (response.status == 0) {\n          thisObj.setState({\n            confirmation: false\n          });\n          errorModal(response.message);\n        } else {\n          successModalCallback(response.message, function () {\n            thisObj.setState({\n              confirmation: false\n            }, thisObj.props.refresh);\n          });\n        }\n      }).catch(function (error) {\n        hideProgress();\n      });\n    };\n    _this.handleCommentCancel = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n    _this.ConfirmationCancel = function (e) {\n      thisObj.props.form.resetFields([\"Change Reason\"]);\n      thisObj.setState({\n        confirmation: false\n      });\n    };\n    _this.state = {\n      responseData: {\n        formData: {},\n        selectOptions: {}\n      },\n      cmntresponseData: {\n        formData: {},\n        selectOptions: {}\n      },\n      readOnly: true,\n      //for cmnt popup \n      visible: false,\n      title: \"\",\n      //validate fields are saved to this variable @see the handle Validate fn\n      validValues: []\n    };\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(Update, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //fn call to get the form field on ready\n      thisObj.getFormFieldList(thisObj.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        readOnly = _this$state.readOnly,\n        responseData = _this$state.responseData,\n        visible = _this$state.visible,\n        cmntresponseData = _this$state.cmntresponseData,\n        title = _this$state.title;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var defineActivityWorkflowStatus = this.context.defineActivityWorkflowStatus;\n      var _this$props = this.props,\n        prev = _this$props.prev,\n        next = _this$props.next,\n        backToList = _this$props.backToList;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, Object.keys(responseData.formData).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ion-clipboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, \" Domain\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          overflow: \"auto\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SingleForm, {\n        defineActivityWorkflowStatus: defineActivityWorkflowStatus,\n        property: this,\n        props: this,\n        ReadOnlyToSave: this.handleReadOnlyToSave,\n        SaveToReadOnly: this.handleSaveToReadOnly,\n        readOnly: readOnly,\n        responseData: responseData,\n        getFieldDecorator: getFieldDecorator,\n        handleSubmit: this.handleValidate,\n        handleCancel: this.props.backToList,\n        isStudyLock: this.props.isStudyLock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(DomainCmntPopUp, {\n        defineActivityWorkflowStatus: defineActivityWorkflowStatus,\n        title: title,\n        data: cmntresponseData,\n        cmntSubmit: this.cmntSave,\n        visible: visible,\n        handleCancel: this.handleCommentCancel,\n        getFieldDecorator: getFieldDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Confirmation, {\n        loading: false,\n        title: \"Update Domain\",\n        onSubmit: this.handleUpdate,\n        visible: this.state.confirmation,\n        handleCancel: this.ConfirmationCancel,\n        getFieldDecorator: getFieldDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      })));\n    }\n\n    //fn for comment button to show the comment popup\n  }]);\n  return Update;\n}(Component);\nUpdate.contextType = DefineContext;\nvar WrappedApp = Form.create()(Update);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Breadcrumb","Form","Icon","Tooltip","CallServerPost","errorModal","successModalCallback","PostCallWithZoneForDomainCreate","getStudyID","showProgress","hideProgress","definePermission","SingleForm","DomainCmntPopUp","Confirmation","DefineContext","thisObj","Update","props","getFormFieldList","context","StudyID","FormName","ActionName","ID","StandardName","sessionStorage","standard","then","response","result","value","status","setState","responseData","formData","message","formData_domain","find","x","attributeName","defaultValue","keyToEnable","forEach","key","index","indexOf","editable","inputRequirementID","inputRequirementText","keySequence","formData_keysequence","selectOptions","cmntresponseData","formData_comment","document","getElementById","onclick","cmntPopUp","catch","error","handleReadOnlyToSave","readOnly","handleSaveToReadOnly","form","resetFields","state","visible","title","handleValidate","e","preventDefault","validateFields","err","values","confirmation","validValues","handleUpdate","changeReason","elementID","fieldName","replace","toString","JSON","parse","userProfile","userID","map","indexitem","wizardID","refresh","handleCommentCancel","ConfirmationCancel","getFieldDecorator","defineActivityWorkflowStatus","prev","next","backToList","height","width","Object","keys","length","display","flexDirection","overflow","isStudyLock","cmntSave","contextType","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/DefineOptimize/Domain/update.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Breadcrumb, Form, Icon, Tooltip} from 'antd';\r\nimport { CallServerPost, errorModal, successModalCallback, PostCallWithZoneForDomainCreate, getStudyID, showProgress, hideProgress, definePermission } from '../../Utility/sharedUtility';\r\nimport SingleForm from '../../Utility/defineBotForm';\r\nimport DomainCmntPopUp from '../domainCmntPopUp.js';\r\nimport Confirmation from '../confirmation';\r\nimport { DefineContext } from '../context';\r\n\r\n\r\nvar thisObj;\r\n\r\nclass Update extends Component\r\n{\r\n    static contextType = DefineContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n\r\n            responseData:\r\n            {\r\n                formData: {},\r\n                selectOptions: {}\r\n            },\r\n\r\n            cmntresponseData: {\r\n                formData: {},\r\n                selectOptions: {}\r\n            },\r\n            readOnly: true,\r\n            //for cmnt popup \r\n            visible: false,\r\n            title: \"\",\r\n\r\n            //validate fields are saved to this variable @see the handle Validate fn\r\n            validValues: [],\r\n        }\r\n\r\n        thisObj = this;\r\n    }\r\n    componentDidMount()\r\n    {\r\n        //fn call to get the form field on ready\r\n        thisObj.getFormFieldList(thisObj.props);\r\n    }\r\n\r\n    getFormFieldList = (props) =>\r\n    {\r\n        showProgress();\r\n        let { StudyID } = this.context || {};\r\n\r\n        //Get the required field to form the page\r\n        CallServerPost('Domain/GetDomainFormData',\r\n            {\r\n                FormName: \"Domain\",\r\n                ActionName: \"Update\",\r\n                ID: props.ID,\r\n                StudyID: StudyID,\r\n                StandardName: sessionStorage.standard\r\n            }).then(function (response)\r\n                {\r\n                 hideProgress();\r\n                const result = response.value;\r\n                if (result.status == 0)\r\n                {\r\n                    thisObj.setState({\r\n                        responseData: { formData: [] }\r\n                    });\r\n\r\n                    errorModal(result.message);\r\n                }\r\n                else\r\n                {\r\n                    //For Custom Domain purpose if custom domain is true the following list should be enable else no need\r\n                    if (response.value.formData_domain.find(x => x.attributeName == \"CustomDomain\").defaultValue != \"0\")\r\n                    {\r\n                        var keyToEnable = [\"AliasName\", \"Context\", \"TranslatedText\",\"Class\", \"IsReferenceData\", \"Structure\", \"KeyVariable\", \"Repeating\", \"Purpose\"];\r\n                        response.value.formData_domain.forEach(function (key, index) {\r\n\r\n                            if (keyToEnable.indexOf(key.attributeName) != -1) {\r\n                                key.editable = true;\r\n                                key.inputRequirementID = 8;\r\n                                key.inputRequirementText = \"Mandatory\";\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //set state to render the page\r\n                    thisObj.setState({\r\n                        responseData: { formData: result.formData_domain, keySequence: result.formData_keysequence,  selectOptions: result.selectOptions },\r\n                        cmntresponseData: { formData: result.formData_comment, selectOptions: result.selectOptions },\r\n                    });\r\n\r\n                    //Onclick fn to that comment button\r\n                    (function ()\r\n                    {\r\n                        document.getElementById(\"CommentDescriptionConfirm\").onclick = function () {\r\n                            thisObj.cmntPopUp();\r\n                        };\r\n                    })();\r\n\r\n                }\r\n            }).catch(error => { hideProgress(); });\r\n    }\r\n\r\n    handleReadOnlyToSave = () =>\r\n    {\r\n        thisObj.setState({ readOnly: false });\r\n    }\r\n\r\n    handleSaveToReadOnly = () =>\r\n    {\r\n        thisObj.props.form.resetFields();\r\n        thisObj.setState({ readOnly: true, responseData: { formData: {} } });\r\n        thisObj.getFormFieldList(thisObj.props);\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        let { readOnly,responseData,  visible,cmntresponseData, title} = this.state;\r\n        const { getFieldDecorator } = this.props.form;\r\n        const {defineActivityWorkflowStatus} = this.context;\r\n        const { prev, next, backToList } = this.props;\r\n\r\n    return (\r\n        <div  style={{height: \"100%\",width:\"100%\"}}>\r\n            {\r\n                (Object.keys(responseData.formData).length > 0) &&\r\n                <div style={{ height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <i className=\"ion-clipboard\" />\r\n                            <span> Domain</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>Edit\r\n                           </Breadcrumb.Item>\r\n                        \r\n                    </Breadcrumb>\r\n                    <div style={{ overflow: \"auto\", height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                        <SingleForm\r\n                            defineActivityWorkflowStatus={defineActivityWorkflowStatus}\r\n                            property={this}\r\n                            props={this}\r\n                            ReadOnlyToSave={this.handleReadOnlyToSave}\r\n                            SaveToReadOnly={this.handleSaveToReadOnly}\r\n                            readOnly={readOnly}\r\n                            responseData={responseData}\r\n                            getFieldDecorator={getFieldDecorator}\r\n                            handleSubmit={this.handleValidate}\r\n                            handleCancel={this.props.backToList}\r\n                            isStudyLock={this.props.isStudyLock}\r\n                            \r\n                        />\r\n                    </div>\r\n                    <DomainCmntPopUp defineActivityWorkflowStatus={defineActivityWorkflowStatus} title={title} data={cmntresponseData} cmntSubmit={this.cmntSave} visible={visible} handleCancel={this.handleCommentCancel} getFieldDecorator={getFieldDecorator} />\r\n                    <Confirmation loading={false} title=\"Update Domain\" onSubmit={this.handleUpdate} visible={this.state.confirmation} handleCancel={this.ConfirmationCancel} getFieldDecorator={getFieldDecorator} />\r\n                </div>\r\n            }             \r\n         </div>\r\n    );}\r\n\r\n\r\n    //fn for comment button to show the comment popup\r\n    cmntPopUp = () =>\r\n    {\r\n\r\n        thisObj.state.cmntresponseData.formData[0].defaultValue = document.getElementById(\"CommentDescription\").value;\r\n\r\n        thisObj.setState({ visible: true, cmntresponseData: thisObj.state.cmntresponseData, title: \"Comment\" });\r\n\r\n        //description value to fill the pop up description field \r\n    }\r\n\r\n   \r\n\r\n    //Validate the current page fields\r\n    handleValidate = (e) =>\r\n    {\r\n            e.preventDefault();\r\n            const thisObj = this;\r\n            thisObj.props.form.validateFields((err, values) =>\r\n            {\r\n                if (!err)\r\n                {\r\n                    thisObj.setState({ confirmation: true, validValues: values });\r\n                }\r\n            });\r\n    }\r\n\r\n    //fn for Update\r\n    handleUpdate = (changeReason) =>\r\n    {\r\n        const thisObj = this;\r\n        var elementID = 0;\r\n        var { validValues, responseData } = thisObj.state;\r\n  \r\n        responseData.formData.forEach(function (key, index)\r\n        {\r\n            const fieldName = key[\"displayName\"].replace(/ /g, \"\");\r\n\r\n            let value = key[\"defaultValue\"];\r\n            if (value == \"\" || value == null)\r\n            {\r\n                if (validValues[fieldName] && validValues[fieldName])\r\n                {\r\n                    key[\"changed\"] = true;\r\n                }\r\n            }\r\n            else if (validValues[fieldName] != value)\r\n            {\r\n                key[\"changed\"] = true;\r\n            }\r\n\r\n            //if value is array is ,convert to string\r\n            key[\"defaultValue\"] = validValues[fieldName] ? validValues[fieldName].toString() : validValues[fieldName];\r\n\r\n            if (fieldName == \"CommentDescription\")\r\n            {\r\n                key[\"comment\"] = true;\r\n                key[\"parentElementID\"] = elementID;\r\n            }\r\n\r\n            if (key[\"displayName\"] == \"Name\") {\r\n                elementID = key[\"elementID\"]\r\n            }\r\n\r\n            if (fieldName == \"KeyVariable\") {\r\n                key[\"elementID\"] = elementID;\r\n            }\r\n\r\n            key[\"timeZone\"] = \"IST\";\r\n            key[\"changeReason\"] = changeReason;\r\n            key[\"updatedBy\"] = JSON.parse(sessionStorage.userProfile).userID;\r\n        });\r\n\r\n        thisObj.state.responseData.formData.map(function (x, indexitem) {\r\n            if (thisObj.state.responseData.formData[indexitem].wizardID === null) {\r\n                thisObj.state.responseData.formData[indexitem].wizardID = -1;\r\n            }\r\n        })\r\n        var formData = [...thisObj.state.responseData.keySequence, ...thisObj.state.responseData.formData];\r\n        showProgress();\r\n        PostCallWithZoneForDomainCreate('Domain/UpdateDomainData', thisObj.state.responseData.formData).then(\r\n            function (response)\r\n            {\r\n                hideProgress();\r\n                if (response.status == 0)\r\n                {\r\n                    thisObj.setState({ confirmation: false });\r\n                    errorModal(response.message);\r\n                }\r\n                else\r\n                {\r\n                    successModalCallback(response.message, () =>\r\n                    {\r\n                        thisObj.setState({ confirmation: false }, thisObj.props.refresh);\r\n                    });\r\n                }\r\n            }).catch(error => { hideProgress(); });       \r\n    }\r\n\r\n\r\n\r\n    //fn to cancel the comment popup\r\n    handleCommentCancel = () =>\r\n    {\r\n        this.setState({ visible: false });\r\n    }\r\n\r\n    //Cancel confirmation popup\r\n    ConfirmationCancel = (e) => {\r\n       thisObj.props.form.resetFields([\"Change Reason\"])\r\n       thisObj.setState({ confirmation: false })\r\n    }\r\n}\r\nconst WrappedApp = Form.create()(Update);\r\nexport default WrappedApp;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}