{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../../base/browser/globalMouseMoveMonitor.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport * as viewEvents from '../../../common/view/viewEvents.js';\nimport { scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, minimapSelection } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition } from '../../../common/model.js';\nimport { once } from '../../../../base/common/functional.js';\nfunction getMinimapLineHeight(renderMinimap, scale) {\n  if (renderMinimap === 1 /* Text */) {\n    return 2 /* BASE_CHAR_HEIGHT */ * scale;\n  }\n  // RenderMinimap.Blocks\n  return (2 /* BASE_CHAR_HEIGHT */ + 1) * scale;\n}\nfunction getMinimapCharWidth(renderMinimap, scale) {\n  if (renderMinimap === 1 /* Text */) {\n    return 1 /* BASE_CHAR_WIDTH */ * scale;\n  }\n  // RenderMinimap.Blocks\n  return 1 /* BASE_CHAR_WIDTH */ * scale;\n}\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\nvar MOUSE_DRAG_RESET_DISTANCE = 140;\nvar GUTTER_DECORATION_WIDTH = 2;\nvar MinimapOptions = /** @class */function () {\n  function MinimapOptions(configuration) {\n    var _this = this;\n    var options = configuration.options;\n    var pixelRatio = options.get(105 /* pixelRatio */);\n    var layoutInfo = options.get(107 /* layoutInfo */);\n    var fontInfo = options.get(34 /* fontInfo */);\n    this.renderMinimap = layoutInfo.renderMinimap | 0;\n    this.scrollBeyondLastLine = options.get(80 /* scrollBeyondLastLine */);\n    var minimapOpts = options.get(54 /* minimap */);\n    this.showSlider = minimapOpts.showSlider;\n    this.fontScale = Math.round(minimapOpts.scale * pixelRatio);\n    this.charRenderer = once(function () {\n      return MinimapCharRendererFactory.create(_this.fontScale, fontInfo.fontFamily);\n    });\n    this.pixelRatio = pixelRatio;\n    this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    this.lineHeight = options.get(49 /* lineHeight */);\n    this.minimapLeft = layoutInfo.minimapLeft;\n    this.minimapWidth = layoutInfo.minimapWidth;\n    this.minimapHeight = layoutInfo.height;\n    this.canvasInnerWidth = Math.floor(pixelRatio * this.minimapWidth);\n    this.canvasInnerHeight = Math.floor(pixelRatio * this.minimapHeight);\n    this.canvasOuterWidth = this.canvasInnerWidth / pixelRatio;\n    this.canvasOuterHeight = this.canvasInnerHeight / pixelRatio;\n  }\n  MinimapOptions.prototype.equals = function (other) {\n    return this.renderMinimap === other.renderMinimap && this.scrollBeyondLastLine === other.scrollBeyondLastLine && this.showSlider === other.showSlider && this.pixelRatio === other.pixelRatio && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth && this.lineHeight === other.lineHeight && this.fontScale === other.fontScale && this.minimapLeft === other.minimapLeft && this.minimapWidth === other.minimapWidth && this.minimapHeight === other.minimapHeight && this.canvasInnerWidth === other.canvasInnerWidth && this.canvasInnerHeight === other.canvasInnerHeight && this.canvasOuterWidth === other.canvasOuterWidth && this.canvasOuterHeight === other.canvasOuterHeight;\n  };\n  return MinimapOptions;\n}();\nvar MinimapLayout = /** @class */function () {\n  function MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber) {\n    this.scrollTop = scrollTop;\n    this.scrollHeight = scrollHeight;\n    this._computedSliderRatio = computedSliderRatio;\n    this.sliderTop = sliderTop;\n    this.sliderHeight = sliderHeight;\n    this.startLineNumber = startLineNumber;\n    this.endLineNumber = endLineNumber;\n  }\n  /**\r\n   * Compute a desired `scrollPosition` such that the slider moves by `delta`.\r\n   */\n  MinimapLayout.prototype.getDesiredScrollTopFromDelta = function (delta) {\n    var desiredSliderPosition = this.sliderTop + delta;\n    return Math.round(desiredSliderPosition / this._computedSliderRatio);\n  };\n  MinimapLayout.prototype.getDesiredScrollTopFromTouchLocation = function (pageY) {\n    return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n  };\n  MinimapLayout.create = function (options, viewportStartLineNumber, viewportEndLineNumber, viewportHeight, viewportContainsWhitespaceGaps, lineCount, scrollTop, scrollHeight, previousLayout) {\n    var pixelRatio = options.pixelRatio;\n    var minimapLineHeight = getMinimapLineHeight(options.renderMinimap, options.fontScale);\n    var minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n    var lineHeight = options.lineHeight;\n    // The visible line count in a viewport can change due to a number of reasons:\n    //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n    //    e.g. for a line height of 20, and a viewport height of 600\n    //          * scrollTop = 0  => visible lines are [1, 30]\n    //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n    //          * scrollTop = 20 => visible lines are [2, 31]\n    //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n    //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n    // We must first establish a desirable slider height.\n    var sliderHeight;\n    if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n      // case b) from above: there are whitespace gaps in the viewport.\n      // In this case, the height of the slider directly reflects the visible line count.\n      var viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n      sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n    } else {\n      // The slider has a stable height\n      var expectedViewportLineCount = viewportHeight / lineHeight;\n      sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n    }\n    var maxMinimapSliderTop;\n    if (options.scrollBeyondLastLine) {\n      // The minimap slider, when dragged all the way down, will contain the last line at its top\n      maxMinimapSliderTop = (lineCount - 1) * minimapLineHeight / pixelRatio;\n    } else {\n      // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n      maxMinimapSliderTop = Math.max(0, lineCount * minimapLineHeight / pixelRatio - sliderHeight);\n    }\n    maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n    // The slider can move from 0 to `maxMinimapSliderTop`\n    // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n    var computedSliderRatio = maxMinimapSliderTop / (scrollHeight - viewportHeight);\n    var sliderTop = scrollTop * computedSliderRatio;\n    var extraLinesAtTheBottom = 0;\n    if (options.scrollBeyondLastLine) {\n      var expectedViewportLineCount = viewportHeight / lineHeight;\n      extraLinesAtTheBottom = expectedViewportLineCount;\n    }\n    if (minimapLinesFitting >= lineCount + extraLinesAtTheBottom) {\n      // All lines fit in the minimap\n      var startLineNumber = 1;\n      var endLineNumber = lineCount;\n      return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\n    } else {\n      var startLineNumber = Math.max(1, Math.floor(viewportStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n      // Avoid flickering caused by a partial viewport start line\n      // by being consistent w.r.t. the previous layout decision\n      if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n        if (previousLayout.scrollTop > scrollTop) {\n          // Scrolling up => never increase `startLineNumber`\n          startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n        }\n        if (previousLayout.scrollTop < scrollTop) {\n          // Scrolling down => never decrease `startLineNumber`\n          startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n        }\n      }\n      var endLineNumber = Math.min(lineCount, startLineNumber + minimapLinesFitting - 1);\n      return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\n    }\n  };\n  return MinimapLayout;\n}();\nvar MinimapLine = /** @class */function () {\n  function MinimapLine(dy) {\n    this.dy = dy;\n  }\n  MinimapLine.prototype.onContentChanged = function () {\n    this.dy = -1;\n  };\n  MinimapLine.prototype.onTokensChanged = function () {\n    this.dy = -1;\n  };\n  MinimapLine.INVALID = new MinimapLine(-1);\n  return MinimapLine;\n}();\nvar RenderData = /** @class */function () {\n  function RenderData(renderedLayout, imageData, lines) {\n    this.renderedLayout = renderedLayout;\n    this._imageData = imageData;\n    this._renderedLines = new RenderedLinesCollection(function () {\n      return MinimapLine.INVALID;\n    });\n    this._renderedLines._set(renderedLayout.startLineNumber, lines);\n  }\n  /**\r\n   * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\r\n   */\n  RenderData.prototype.linesEquals = function (layout) {\n    if (!this.scrollEquals(layout)) {\n      return false;\n    }\n    var tmp = this._renderedLines._get();\n    var lines = tmp.lines;\n    for (var i = 0, len = lines.length; i < len; i++) {\n      if (lines[i].dy === -1) {\n        // This line is invalid\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\r\n   * Check if the current RenderData matches the new layout's scroll position\r\n   */\n  RenderData.prototype.scrollEquals = function (layout) {\n    return this.renderedLayout.startLineNumber === layout.startLineNumber && this.renderedLayout.endLineNumber === layout.endLineNumber;\n  };\n  RenderData.prototype._get = function () {\n    var tmp = this._renderedLines._get();\n    return {\n      imageData: this._imageData,\n      rendLineNumberStart: tmp.rendLineNumberStart,\n      lines: tmp.lines\n    };\n  };\n  RenderData.prototype.onLinesChanged = function (e) {\n    return this._renderedLines.onLinesChanged(e.fromLineNumber, e.toLineNumber);\n  };\n  RenderData.prototype.onLinesDeleted = function (e) {\n    this._renderedLines.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n  };\n  RenderData.prototype.onLinesInserted = function (e) {\n    this._renderedLines.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n  };\n  RenderData.prototype.onTokensChanged = function (e) {\n    return this._renderedLines.onTokensChanged(e.ranges);\n  };\n  return RenderData;\n}();\n/**\r\n * Some sort of double buffering.\r\n *\r\n * Keeps two buffers around that will be rotated for painting.\r\n * Always gives a buffer that is filled with the background color.\r\n */\nvar MinimapBuffers = /** @class */function () {\n  function MinimapBuffers(ctx, WIDTH, HEIGHT, background) {\n    this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n    this._buffers = [ctx.createImageData(WIDTH, HEIGHT), ctx.createImageData(WIDTH, HEIGHT)];\n    this._lastUsedBuffer = 0;\n  }\n  MinimapBuffers.prototype.getBuffer = function () {\n    // rotate buffers\n    this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n    var result = this._buffers[this._lastUsedBuffer];\n    // fill with background color\n    result.data.set(this._backgroundFillData);\n    return result;\n  };\n  MinimapBuffers._createBackgroundFillData = function (WIDTH, HEIGHT, background) {\n    var backgroundR = background.r;\n    var backgroundG = background.g;\n    var backgroundB = background.b;\n    var result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n    var offset = 0;\n    for (var i = 0; i < HEIGHT; i++) {\n      for (var j = 0; j < WIDTH; j++) {\n        result[offset] = backgroundR;\n        result[offset + 1] = backgroundG;\n        result[offset + 2] = backgroundB;\n        result[offset + 3] = 255;\n        offset += 4;\n      }\n    }\n    return result;\n  };\n  return MinimapBuffers;\n}();\nvar Minimap = /** @class */function (_super) {\n  __extends(Minimap, _super);\n  function Minimap(context) {\n    var _this = _super.call(this, context) || this;\n    _this._selections = [];\n    _this._renderDecorations = false;\n    _this._gestureInProgress = false;\n    _this._options = new MinimapOptions(_this._context.configuration);\n    _this._lastRenderData = null;\n    _this._buffers = null;\n    _this._selectionColor = _this._context.theme.getColor(minimapSelection);\n    _this._domNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this._domNode, 8 /* Minimap */);\n    _this._domNode.setClassName(_this._getMinimapDomNodeClassName());\n    _this._domNode.setPosition('absolute');\n    _this._domNode.setAttribute('role', 'presentation');\n    _this._domNode.setAttribute('aria-hidden', 'true');\n    _this._shadow = createFastDomNode(document.createElement('div'));\n    _this._shadow.setClassName('minimap-shadow-hidden');\n    _this._domNode.appendChild(_this._shadow);\n    _this._canvas = createFastDomNode(document.createElement('canvas'));\n    _this._canvas.setPosition('absolute');\n    _this._canvas.setLeft(0);\n    _this._domNode.appendChild(_this._canvas);\n    _this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n    _this._decorationsCanvas.setPosition('absolute');\n    _this._decorationsCanvas.setClassName('minimap-decorations-layer');\n    _this._decorationsCanvas.setLeft(0);\n    _this._domNode.appendChild(_this._decorationsCanvas);\n    _this._slider = createFastDomNode(document.createElement('div'));\n    _this._slider.setPosition('absolute');\n    _this._slider.setClassName('minimap-slider');\n    _this._slider.setLayerHinting(true);\n    _this._slider.setContain('strict');\n    _this._domNode.appendChild(_this._slider);\n    _this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n    _this._sliderHorizontal.setPosition('absolute');\n    _this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n    _this._slider.appendChild(_this._sliderHorizontal);\n    _this._tokensColorTracker = MinimapTokensColorTracker.getInstance();\n    _this._applyLayout();\n    _this._mouseDownListener = dom.addStandardDisposableListener(_this._domNode.domNode, 'mousedown', function (e) {\n      e.preventDefault();\n      var renderMinimap = _this._options.renderMinimap;\n      if (renderMinimap === 0 /* None */) {\n        return;\n      }\n      if (!_this._lastRenderData) {\n        return;\n      }\n      var minimapLineHeight = getMinimapLineHeight(renderMinimap, _this._options.fontScale);\n      var internalOffsetY = _this._options.pixelRatio * e.browserEvent.offsetY;\n      var lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n      var lineNumber = lineIndex + _this._lastRenderData.renderedLayout.startLineNumber;\n      lineNumber = Math.min(lineNumber, _this._context.model.getLineCount());\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('mouse', new Range(lineNumber, 1, lineNumber, 1), 1 /* Center */, false, 0 /* Smooth */));\n    });\n\n    _this._sliderMouseMoveMonitor = new GlobalMouseMoveMonitor();\n    _this._sliderMouseDownListener = dom.addStandardDisposableListener(_this._slider.domNode, 'mousedown', function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (e.leftButton && _this._lastRenderData) {\n        var initialMousePosition_1 = e.posy;\n        var initialMouseOrthogonalPosition_1 = e.posx;\n        var initialSliderState_1 = _this._lastRenderData.renderedLayout;\n        _this._slider.toggleClassName('active', true);\n        _this._sliderMouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, function (mouseMoveData) {\n          var mouseOrthogonalDelta = Math.abs(mouseMoveData.posx - initialMouseOrthogonalPosition_1);\n          if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\n            // The mouse has wondered away from the scrollbar => reset dragging\n            _this._context.viewLayout.setScrollPositionNow({\n              scrollTop: initialSliderState_1.scrollTop\n            });\n            return;\n          }\n          var mouseDelta = mouseMoveData.posy - initialMousePosition_1;\n          _this._context.viewLayout.setScrollPositionNow({\n            scrollTop: initialSliderState_1.getDesiredScrollTopFromDelta(mouseDelta)\n          });\n        }, function () {\n          _this._slider.toggleClassName('active', false);\n        });\n      }\n    });\n    _this._gestureDisposable = Gesture.addTarget(_this._domNode.domNode);\n    _this._sliderTouchStartListener = dom.addDisposableListener(_this._domNode.domNode, EventType.Start, function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (_this._lastRenderData) {\n        _this._slider.toggleClassName('active', true);\n        _this._gestureInProgress = true;\n        _this.scrollDueToTouchEvent(e);\n      }\n    });\n    _this._sliderTouchMoveListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.Change, function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (_this._lastRenderData && _this._gestureInProgress) {\n        _this.scrollDueToTouchEvent(e);\n      }\n    });\n    _this._sliderTouchEndListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.End, function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      _this._gestureInProgress = false;\n      _this._slider.toggleClassName('active', false);\n    });\n    return _this;\n  }\n  Minimap.prototype.scrollDueToTouchEvent = function (touch) {\n    var startY = this._domNode.domNode.getBoundingClientRect().top;\n    var scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n    this._context.viewLayout.setScrollPositionNow({\n      scrollTop: scrollTop\n    });\n  };\n  Minimap.prototype.dispose = function () {\n    this._mouseDownListener.dispose();\n    this._sliderMouseMoveMonitor.dispose();\n    this._sliderMouseDownListener.dispose();\n    this._gestureDisposable.dispose();\n    this._sliderTouchStartListener.dispose();\n    this._sliderTouchMoveListener.dispose();\n    this._sliderTouchEndListener.dispose();\n    _super.prototype.dispose.call(this);\n  };\n  Minimap.prototype._getMinimapDomNodeClassName = function () {\n    if (this._options.showSlider === 'always') {\n      return 'minimap slider-always';\n    }\n    return 'minimap slider-mouseover';\n  };\n  Minimap.prototype.getDomNode = function () {\n    return this._domNode;\n  };\n  Minimap.prototype._applyLayout = function () {\n    this._domNode.setLeft(this._options.minimapLeft);\n    this._domNode.setWidth(this._options.minimapWidth);\n    this._domNode.setHeight(this._options.minimapHeight);\n    this._shadow.setHeight(this._options.minimapHeight);\n    this._canvas.setWidth(this._options.canvasOuterWidth);\n    this._canvas.setHeight(this._options.canvasOuterHeight);\n    this._canvas.domNode.width = this._options.canvasInnerWidth;\n    this._canvas.domNode.height = this._options.canvasInnerHeight;\n    this._decorationsCanvas.setWidth(this._options.canvasOuterWidth);\n    this._decorationsCanvas.setHeight(this._options.canvasOuterHeight);\n    this._decorationsCanvas.domNode.width = this._options.canvasInnerWidth;\n    this._decorationsCanvas.domNode.height = this._options.canvasInnerHeight;\n    this._slider.setWidth(this._options.minimapWidth);\n  };\n  Minimap.prototype._getBuffer = function () {\n    if (!this._buffers) {\n      if (this._options.canvasInnerWidth > 0 && this._options.canvasInnerHeight > 0) {\n        this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._options.canvasInnerWidth, this._options.canvasInnerHeight, this._tokensColorTracker.getColor(2 /* DefaultBackground */));\n      }\n    }\n\n    return this._buffers ? this._buffers.getBuffer() : null;\n  };\n  Minimap.prototype._onOptionsMaybeChanged = function () {\n    var opts = new MinimapOptions(this._context.configuration);\n    if (this._options.equals(opts)) {\n      return false;\n    }\n    this._options = opts;\n    this._lastRenderData = null;\n    this._buffers = null;\n    this._applyLayout();\n    this._domNode.setClassName(this._getMinimapDomNodeClassName());\n    return true;\n  };\n  // ---- begin view event handlers\n  Minimap.prototype.onConfigurationChanged = function (e) {\n    return this._onOptionsMaybeChanged();\n  };\n  Minimap.prototype.onCursorStateChanged = function (e) {\n    this._selections = e.selections;\n    this._renderDecorations = true;\n    return true;\n  };\n  Minimap.prototype.onFlushed = function (e) {\n    this._lastRenderData = null;\n    return true;\n  };\n  Minimap.prototype.onLinesChanged = function (e) {\n    if (this._lastRenderData) {\n      return this._lastRenderData.onLinesChanged(e);\n    }\n    return false;\n  };\n  Minimap.prototype.onLinesDeleted = function (e) {\n    if (this._lastRenderData) {\n      this._lastRenderData.onLinesDeleted(e);\n    }\n    return true;\n  };\n  Minimap.prototype.onLinesInserted = function (e) {\n    if (this._lastRenderData) {\n      this._lastRenderData.onLinesInserted(e);\n    }\n    return true;\n  };\n  Minimap.prototype.onScrollChanged = function (e) {\n    this._renderDecorations = true;\n    return true;\n  };\n  Minimap.prototype.onTokensChanged = function (e) {\n    if (this._lastRenderData) {\n      return this._lastRenderData.onTokensChanged(e);\n    }\n    return false;\n  };\n  Minimap.prototype.onTokensColorsChanged = function (e) {\n    this._lastRenderData = null;\n    this._buffers = null;\n    return true;\n  };\n  Minimap.prototype.onZonesChanged = function (e) {\n    this._lastRenderData = null;\n    return true;\n  };\n  Minimap.prototype.onDecorationsChanged = function (e) {\n    this._renderDecorations = true;\n    return true;\n  };\n  Minimap.prototype.onThemeChanged = function (e) {\n    this._context.model.invalidateMinimapColorCache();\n    this._selectionColor = this._context.theme.getColor(minimapSelection);\n    this._renderDecorations = true;\n    return true;\n  };\n  // --- end event handlers\n  Minimap.prototype.prepareRender = function (ctx) {\n    // Nothing to read\n  };\n  Minimap.prototype.render = function (renderingCtx) {\n    var renderMinimap = this._options.renderMinimap;\n    if (renderMinimap === 0 /* None */) {\n      this._shadow.setClassName('minimap-shadow-hidden');\n      this._sliderHorizontal.setWidth(0);\n      this._sliderHorizontal.setHeight(0);\n      return;\n    }\n    if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n      this._shadow.setClassName('minimap-shadow-hidden');\n    } else {\n      this._shadow.setClassName('minimap-shadow-visible');\n    }\n    var layout = MinimapLayout.create(this._options, renderingCtx.visibleRange.startLineNumber, renderingCtx.visibleRange.endLineNumber, renderingCtx.viewportHeight, renderingCtx.viewportData.whitespaceViewportData.length > 0, this._context.model.getLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n    this._slider.setTop(layout.sliderTop);\n    this._slider.setHeight(layout.sliderHeight);\n    // Compute horizontal slider coordinates\n    var scrollLeftChars = renderingCtx.scrollLeft / this._options.typicalHalfwidthCharacterWidth;\n    var horizontalSliderLeft = Math.min(this._options.minimapWidth, Math.round(scrollLeftChars * getMinimapCharWidth(this._options.renderMinimap, this._options.fontScale) / this._options.pixelRatio));\n    this._sliderHorizontal.setLeft(horizontalSliderLeft);\n    this._sliderHorizontal.setWidth(this._options.minimapWidth - horizontalSliderLeft);\n    this._sliderHorizontal.setTop(0);\n    this._sliderHorizontal.setHeight(layout.sliderHeight);\n    this.renderDecorations(layout);\n    this._lastRenderData = this.renderLines(layout);\n  };\n  Minimap.prototype.renderDecorations = function (layout) {\n    if (this._renderDecorations) {\n      this._renderDecorations = false;\n      var decorations = this._context.model.getDecorationsInViewport(new Range(layout.startLineNumber, 1, layout.endLineNumber, this._context.model.getLineMaxColumn(layout.endLineNumber)));\n      var _a = this._options,\n        renderMinimap = _a.renderMinimap,\n        canvasInnerWidth = _a.canvasInnerWidth,\n        canvasInnerHeight = _a.canvasInnerHeight;\n      var lineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale);\n      var characterWidth = getMinimapCharWidth(renderMinimap, this._options.fontScale);\n      var tabSize = this._context.model.getOptions().tabSize;\n      var canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n      canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n      var lineOffsetMap = new Map();\n      for (var i = 0; i < this._selections.length; i++) {\n        var selection = this._selections[i];\n        for (var line = selection.startLineNumber; line <= selection.endLineNumber; line++) {\n          this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\n        }\n      }\n      // Loop over decorations, ignoring those that don't have the minimap property set and rendering rectangles for each line the decoration spans\n      for (var i = 0; i < decorations.length; i++) {\n        var decoration = decorations[i];\n        if (!decoration.options.minimap) {\n          continue;\n        }\n        var decorationColor = decoration.options.minimap.getColor(this._context.theme);\n        for (var line = decoration.range.startLineNumber; line <= decoration.range.endLineNumber; line++) {\n          switch (decoration.options.minimap.position) {\n            case MinimapPosition.Inline:\n              this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\n              continue;\n            case MinimapPosition.Gutter:\n              var y = (line - layout.startLineNumber) * lineHeight;\n              var x = 2;\n              this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, lineHeight);\n              continue;\n          }\n        }\n      }\n    }\n  };\n  Minimap.prototype.renderDecorationOnLine = function (canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, lineHeight, tabSize, charWidth) {\n    var y = (lineNumber - layout.startLineNumber) * lineHeight;\n    // Skip rendering the line if it's vertically outside our viewport\n    if (y + height < 0 || y > this._options.canvasInnerHeight) {\n      return;\n    }\n    // Cache line offset data so that it is only read once per line\n    var lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n    var isFirstDecorationForLine = !lineIndexToXOffset;\n    if (!lineIndexToXOffset) {\n      var lineData = this._context.model.getLineContent(lineNumber);\n      lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n      for (var i = 1; i < lineData.length + 1; i++) {\n        var charCode = lineData.charCodeAt(i - 1);\n        var dx = charCode === 9 /* Tab */ ? tabSize * charWidth : strings.isFullWidthCharacter(charCode) ? 2 * charWidth : charWidth;\n        lineIndexToXOffset[i] = lineIndexToXOffset[i - 1] + dx;\n      }\n      lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n    }\n    var startColumn = decorationRange.startColumn,\n      endColumn = decorationRange.endColumn,\n      startLineNumber = decorationRange.startLineNumber,\n      endLineNumber = decorationRange.endLineNumber;\n    var x = startLineNumber === lineNumber ? lineIndexToXOffset[startColumn - 1] : MINIMAP_GUTTER_WIDTH;\n    var endColumnForLine = endLineNumber > lineNumber ? lineIndexToXOffset.length - 1 : endColumn - 1;\n    if (endColumnForLine > 0) {\n      // If the decoration starts at the last character of the column and spans over it, ensure it has a width\n      var width = lineIndexToXOffset[endColumnForLine] - x || 2;\n      this.renderDecoration(canvasContext, decorationColor, x, y, width, height);\n    }\n    if (isFirstDecorationForLine) {\n      this.renderLineHighlight(canvasContext, decorationColor, y, height);\n    }\n  };\n  Minimap.prototype.renderLineHighlight = function (canvasContext, decorationColor, y, height) {\n    canvasContext.fillStyle = decorationColor && decorationColor.transparent(0.5).toString() || '';\n    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, height);\n  };\n  Minimap.prototype.renderDecoration = function (canvasContext, decorationColor, x, y, width, height) {\n    canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n    canvasContext.fillRect(x, y, width, height);\n  };\n  Minimap.prototype.renderLines = function (layout) {\n    var renderMinimap = this._options.renderMinimap;\n    var charRenderer = this._options.charRenderer();\n    var startLineNumber = layout.startLineNumber;\n    var endLineNumber = layout.endLineNumber;\n    var minimapLineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale);\n    // Check if nothing changed w.r.t. lines from last frame\n    if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n      var _lastData = this._lastRenderData._get();\n      // Nice!! Nothing changed from last frame\n      return new RenderData(layout, _lastData.imageData, _lastData.lines);\n    }\n    // Oh well!! We need to repaint some lines...\n    var imageData = this._getBuffer();\n    if (!imageData) {\n      // 0 width or 0 height canvas, nothing to do\n      return null;\n    }\n    // Render untouched lines by using last rendered data.\n    var _a = Minimap._renderUntouchedLines(imageData, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData),\n      _dirtyY1 = _a[0],\n      _dirtyY2 = _a[1],\n      needed = _a[2];\n    // Fetch rendering info from view model for rest of lines that need rendering.\n    var lineInfo = this._context.model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n    var tabSize = lineInfo.tabSize;\n    var background = this._tokensColorTracker.getColor(2 /* DefaultBackground */);\n    var useLighterFont = this._tokensColorTracker.backgroundIsLight();\n    // Render the rest of lines\n    var dy = 0;\n    var renderedLines = [];\n    for (var lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n      if (needed[lineIndex]) {\n        Minimap._renderLine(imageData, background, useLighterFont, renderMinimap, this._tokensColorTracker, charRenderer, dy, tabSize, lineInfo.data[lineIndex], this._options.fontScale);\n      }\n      renderedLines[lineIndex] = new MinimapLine(dy);\n      dy += minimapLineHeight;\n    }\n    var dirtyY1 = _dirtyY1 === -1 ? 0 : _dirtyY1;\n    var dirtyY2 = _dirtyY2 === -1 ? imageData.height : _dirtyY2;\n    var dirtyHeight = dirtyY2 - dirtyY1;\n    // Finally, paint to the canvas\n    var ctx = this._canvas.domNode.getContext('2d');\n    ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n    // Save rendered data for reuse on next frame if possible\n    return new RenderData(layout, imageData, renderedLines);\n  };\n  Minimap._renderUntouchedLines = function (target, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n    var needed = [];\n    if (!lastRenderData) {\n      for (var i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n        needed[i] = true;\n      }\n      return [-1, -1, needed];\n    }\n    var _lastData = lastRenderData._get();\n    var lastTargetData = _lastData.imageData.data;\n    var lastStartLineNumber = _lastData.rendLineNumberStart;\n    var lastLines = _lastData.lines;\n    var lastLinesLength = lastLines.length;\n    var WIDTH = target.width;\n    var targetData = target.data;\n    var maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n    var dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n    var dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n    var copySourceStart = -1;\n    var copySourceEnd = -1;\n    var copyDestStart = -1;\n    var copyDestEnd = -1;\n    var dest_dy = 0;\n    for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n      var lineIndex = lineNumber - startLineNumber;\n      var lastLineIndex = lineNumber - lastStartLineNumber;\n      var source_dy = lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1;\n      if (source_dy === -1) {\n        needed[lineIndex] = true;\n        dest_dy += minimapLineHeight;\n        continue;\n      }\n      var sourceStart = source_dy * WIDTH * 4;\n      var sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n      var destStart = dest_dy * WIDTH * 4;\n      var destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n      if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n        // contiguous zone => extend copy request\n        copySourceEnd = sourceEnd;\n        copyDestEnd = destEnd;\n      } else {\n        if (copySourceStart !== -1) {\n          // flush existing copy request\n          targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n          if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n            dirtyPixel1 = copySourceEnd;\n          }\n          if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n            dirtyPixel2 = copySourceStart;\n          }\n        }\n        copySourceStart = sourceStart;\n        copySourceEnd = sourceEnd;\n        copyDestStart = destStart;\n        copyDestEnd = destEnd;\n      }\n      needed[lineIndex] = false;\n      dest_dy += minimapLineHeight;\n    }\n    if (copySourceStart !== -1) {\n      // flush existing copy request\n      targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n      if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n        dirtyPixel1 = copySourceEnd;\n      }\n      if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n        dirtyPixel2 = copySourceStart;\n      }\n    }\n    var dirtyY1 = dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4);\n    var dirtyY2 = dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4);\n    return [dirtyY1, dirtyY2, needed];\n  };\n  Minimap._renderLine = function (target, backgroundColor, useLighterFont, renderMinimap, colorTracker, minimapCharRenderer, dy, tabSize, lineData, fontScale) {\n    var content = lineData.content;\n    var tokens = lineData.tokens;\n    var charWidth = getMinimapCharWidth(renderMinimap, fontScale);\n    var maxDx = target.width - charWidth;\n    var dx = MINIMAP_GUTTER_WIDTH;\n    var charIndex = 0;\n    var tabsCharDelta = 0;\n    for (var tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n      var tokenEndIndex = tokens.getEndOffset(tokenIndex);\n      var tokenColorId = tokens.getForeground(tokenIndex);\n      var tokenColor = colorTracker.getColor(tokenColorId);\n      for (; charIndex < tokenEndIndex; charIndex++) {\n        if (dx > maxDx) {\n          // hit edge of minimap\n          return;\n        }\n        var charCode = content.charCodeAt(charIndex);\n        if (charCode === 9 /* Tab */) {\n          var insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n          tabsCharDelta += insertSpacesCount - 1;\n          // No need to render anything since tab is invisible\n          dx += insertSpacesCount * charWidth;\n        } else if (charCode === 32 /* Space */) {\n          // No need to render anything since space is invisible\n          dx += charWidth;\n        } else {\n          // Render twice for a full width character\n          var count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n          for (var i = 0; i < count; i++) {\n            if (renderMinimap === 2 /* Blocks */) {\n              minimapCharRenderer.blockRenderChar(target, dx, dy, tokenColor, backgroundColor, useLighterFont);\n            } else {\n              // RenderMinimap.Text\n              minimapCharRenderer.renderChar(target, dx, dy, charCode, tokenColor, backgroundColor, fontScale, useLighterFont);\n            }\n            dx += charWidth;\n            if (dx > maxDx) {\n              // hit edge of minimap\n              return;\n            }\n          }\n        }\n      }\n    }\n  };\n  return Minimap;\n}(ViewPart);\nexport { Minimap };\nregisterThemingParticipant(function (theme, collector) {\n  var sliderBackground = theme.getColor(scrollbarSliderBackground);\n  if (sliderBackground) {\n    var halfSliderBackground = sliderBackground.transparent(0.5);\n    collector.addRule(\".monaco-editor .minimap-slider, .monaco-editor .minimap-slider .minimap-slider-horizontal { background: \" + halfSliderBackground + \"; }\");\n  }\n  var sliderHoverBackground = theme.getColor(scrollbarSliderHoverBackground);\n  if (sliderHoverBackground) {\n    var halfSliderHoverBackground = sliderHoverBackground.transparent(0.5);\n    collector.addRule(\".monaco-editor .minimap-slider:hover, .monaco-editor .minimap-slider:hover .minimap-slider-horizontal { background: \" + halfSliderHoverBackground + \"; }\");\n  }\n  var sliderActiveBackground = theme.getColor(scrollbarSliderActiveBackground);\n  if (sliderActiveBackground) {\n    var halfSliderActiveBackground = sliderActiveBackground.transparent(0.5);\n    collector.addRule(\".monaco-editor .minimap-slider.active, .monaco-editor .minimap-slider.active .minimap-slider-horizontal { background: \" + halfSliderActiveBackground + \"; }\");\n  }\n  var shadow = theme.getColor(scrollbarShadow);\n  if (shadow) {\n    collector.addRule(\".monaco-editor .minimap-shadow-visible { box-shadow: \" + shadow + \" -6px 0 6px -6px inset; }\");\n  }\n});","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","dom","createFastDomNode","GlobalMouseMoveMonitor","standardMouseMoveMerger","platform","strings","RenderedLinesCollection","PartFingerprints","ViewPart","MINIMAP_GUTTER_WIDTH","Range","MinimapTokensColorTracker","viewEvents","scrollbarShadow","scrollbarSliderActiveBackground","scrollbarSliderBackground","scrollbarSliderHoverBackground","minimapSelection","registerThemingParticipant","EventType","Gesture","MinimapCharRendererFactory","MinimapPosition","once","getMinimapLineHeight","renderMinimap","scale","getMinimapCharWidth","MOUSE_DRAG_RESET_DISTANCE","GUTTER_DECORATION_WIDTH","MinimapOptions","configuration","_this","options","pixelRatio","get","layoutInfo","fontInfo","scrollBeyondLastLine","minimapOpts","showSlider","fontScale","Math","round","charRenderer","fontFamily","typicalHalfwidthCharacterWidth","lineHeight","minimapLeft","minimapWidth","minimapHeight","height","canvasInnerWidth","floor","canvasInnerHeight","canvasOuterWidth","canvasOuterHeight","equals","other","MinimapLayout","scrollTop","scrollHeight","computedSliderRatio","sliderTop","sliderHeight","startLineNumber","endLineNumber","_computedSliderRatio","getDesiredScrollTopFromDelta","delta","desiredSliderPosition","getDesiredScrollTopFromTouchLocation","pageY","viewportStartLineNumber","viewportEndLineNumber","viewportHeight","viewportContainsWhitespaceGaps","lineCount","previousLayout","minimapLineHeight","minimapLinesFitting","viewportLineCount","expectedViewportLineCount","maxMinimapSliderTop","max","min","extraLinesAtTheBottom","MinimapLine","dy","onContentChanged","onTokensChanged","INVALID","RenderData","renderedLayout","imageData","lines","_imageData","_renderedLines","_set","linesEquals","layout","scrollEquals","tmp","_get","i","len","length","rendLineNumberStart","onLinesChanged","e","fromLineNumber","toLineNumber","onLinesDeleted","onLinesInserted","ranges","MinimapBuffers","ctx","WIDTH","HEIGHT","background","_backgroundFillData","_createBackgroundFillData","_buffers","createImageData","_lastUsedBuffer","getBuffer","result","data","set","backgroundR","r","backgroundG","g","backgroundB","Uint8ClampedArray","offset","j","Minimap","_super","context","call","_selections","_renderDecorations","_gestureInProgress","_options","_context","_lastRenderData","_selectionColor","theme","getColor","_domNode","document","createElement","write","setClassName","_getMinimapDomNodeClassName","setPosition","setAttribute","_shadow","appendChild","_canvas","setLeft","_decorationsCanvas","_slider","setLayerHinting","setContain","_sliderHorizontal","_tokensColorTracker","getInstance","_applyLayout","_mouseDownListener","addStandardDisposableListener","domNode","preventDefault","internalOffsetY","browserEvent","offsetY","lineIndex","lineNumber","model","getLineCount","privateViewEventBus","emit","ViewRevealRangeRequestEvent","_sliderMouseMoveMonitor","_sliderMouseDownListener","stopPropagation","leftButton","initialMousePosition_1","posy","initialMouseOrthogonalPosition_1","posx","initialSliderState_1","toggleClassName","startMonitoring","target","buttons","mouseMoveData","mouseOrthogonalDelta","abs","isWindows","viewLayout","setScrollPositionNow","mouseDelta","_gestureDisposable","addTarget","_sliderTouchStartListener","addDisposableListener","Start","scrollDueToTouchEvent","_sliderTouchMoveListener","Change","_sliderTouchEndListener","End","touch","startY","getBoundingClientRect","top","dispose","getDomNode","setWidth","setHeight","width","_getBuffer","getContext","_onOptionsMaybeChanged","opts","onConfigurationChanged","onCursorStateChanged","selections","onFlushed","onScrollChanged","onTokensColorsChanged","onZonesChanged","onDecorationsChanged","onThemeChanged","invalidateMinimapColorCache","prepareRender","render","renderingCtx","scrollLeft","viewportWidth","scrollWidth","visibleRange","viewportData","whitespaceViewportData","setTop","scrollLeftChars","horizontalSliderLeft","renderDecorations","renderLines","decorations","getDecorationsInViewport","getLineMaxColumn","_a","characterWidth","tabSize","getOptions","canvasContext","clearRect","lineOffsetMap","Map","selection","line","renderDecorationOnLine","decoration","minimap","decorationColor","range","position","Inline","Gutter","y","x","renderDecoration","decorationRange","charWidth","lineIndexToXOffset","isFirstDecorationForLine","lineData","getLineContent","charCode","charCodeAt","dx","isFullWidthCharacter","startColumn","endColumn","endColumnForLine","renderLineHighlight","fillStyle","transparent","toString","fillRect","canvas","_lastData","_renderUntouchedLines","_dirtyY1","_dirtyY2","needed","lineInfo","getMinimapLinesRenderingData","useLighterFont","backgroundIsLight","renderedLines","_renderLine","dirtyY1","dirtyY2","dirtyHeight","putImageData","lastRenderData","lastTargetData","lastStartLineNumber","lastLines","lastLinesLength","targetData","maxDestPixel","dirtyPixel1","dirtyPixel2","copySourceStart","copySourceEnd","copyDestStart","copyDestEnd","dest_dy","lastLineIndex","source_dy","sourceStart","sourceEnd","destStart","destEnd","subarray","backgroundColor","colorTracker","minimapCharRenderer","content","tokens","maxDx","charIndex","tabsCharDelta","tokenIndex","tokensLen","getCount","tokenEndIndex","getEndOffset","tokenColorId","getForeground","tokenColor","insertSpacesCount","count","blockRenderChar","renderChar","collector","sliderBackground","halfSliderBackground","addRule","sliderHoverBackground","halfSliderHoverBackground","sliderActiveBackground","halfSliderActiveBackground","shadow"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './minimap.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../../base/browser/globalMouseMoveMonitor.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\r\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\r\nimport { MINIMAP_GUTTER_WIDTH } from '../../../common/config/editorOptions.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\r\nimport * as viewEvents from '../../../common/view/viewEvents.js';\r\nimport { scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, minimapSelection } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\r\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\r\nimport { MinimapPosition } from '../../../common/model.js';\r\nimport { once } from '../../../../base/common/functional.js';\r\nfunction getMinimapLineHeight(renderMinimap, scale) {\r\n    if (renderMinimap === 1 /* Text */) {\r\n        return 2 /* BASE_CHAR_HEIGHT */ * scale;\r\n    }\r\n    // RenderMinimap.Blocks\r\n    return (2 /* BASE_CHAR_HEIGHT */ + 1) * scale;\r\n}\r\nfunction getMinimapCharWidth(renderMinimap, scale) {\r\n    if (renderMinimap === 1 /* Text */) {\r\n        return 1 /* BASE_CHAR_WIDTH */ * scale;\r\n    }\r\n    // RenderMinimap.Blocks\r\n    return 1 /* BASE_CHAR_WIDTH */ * scale;\r\n}\r\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\r\nvar MOUSE_DRAG_RESET_DISTANCE = 140;\r\nvar GUTTER_DECORATION_WIDTH = 2;\r\nvar MinimapOptions = /** @class */ (function () {\r\n    function MinimapOptions(configuration) {\r\n        var _this = this;\r\n        var options = configuration.options;\r\n        var pixelRatio = options.get(105 /* pixelRatio */);\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        this.renderMinimap = layoutInfo.renderMinimap | 0;\r\n        this.scrollBeyondLastLine = options.get(80 /* scrollBeyondLastLine */);\r\n        var minimapOpts = options.get(54 /* minimap */);\r\n        this.showSlider = minimapOpts.showSlider;\r\n        this.fontScale = Math.round(minimapOpts.scale * pixelRatio);\r\n        this.charRenderer = once(function () { return MinimapCharRendererFactory.create(_this.fontScale, fontInfo.fontFamily); });\r\n        this.pixelRatio = pixelRatio;\r\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\r\n        this.lineHeight = options.get(49 /* lineHeight */);\r\n        this.minimapLeft = layoutInfo.minimapLeft;\r\n        this.minimapWidth = layoutInfo.minimapWidth;\r\n        this.minimapHeight = layoutInfo.height;\r\n        this.canvasInnerWidth = Math.floor(pixelRatio * this.minimapWidth);\r\n        this.canvasInnerHeight = Math.floor(pixelRatio * this.minimapHeight);\r\n        this.canvasOuterWidth = this.canvasInnerWidth / pixelRatio;\r\n        this.canvasOuterHeight = this.canvasInnerHeight / pixelRatio;\r\n    }\r\n    MinimapOptions.prototype.equals = function (other) {\r\n        return (this.renderMinimap === other.renderMinimap\r\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\r\n            && this.showSlider === other.showSlider\r\n            && this.pixelRatio === other.pixelRatio\r\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\r\n            && this.lineHeight === other.lineHeight\r\n            && this.fontScale === other.fontScale\r\n            && this.minimapLeft === other.minimapLeft\r\n            && this.minimapWidth === other.minimapWidth\r\n            && this.minimapHeight === other.minimapHeight\r\n            && this.canvasInnerWidth === other.canvasInnerWidth\r\n            && this.canvasInnerHeight === other.canvasInnerHeight\r\n            && this.canvasOuterWidth === other.canvasOuterWidth\r\n            && this.canvasOuterHeight === other.canvasOuterHeight);\r\n    };\r\n    return MinimapOptions;\r\n}());\r\nvar MinimapLayout = /** @class */ (function () {\r\n    function MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber) {\r\n        this.scrollTop = scrollTop;\r\n        this.scrollHeight = scrollHeight;\r\n        this._computedSliderRatio = computedSliderRatio;\r\n        this.sliderTop = sliderTop;\r\n        this.sliderHeight = sliderHeight;\r\n        this.startLineNumber = startLineNumber;\r\n        this.endLineNumber = endLineNumber;\r\n    }\r\n    /**\r\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\r\n     */\r\n    MinimapLayout.prototype.getDesiredScrollTopFromDelta = function (delta) {\r\n        var desiredSliderPosition = this.sliderTop + delta;\r\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\r\n    };\r\n    MinimapLayout.prototype.getDesiredScrollTopFromTouchLocation = function (pageY) {\r\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\r\n    };\r\n    MinimapLayout.create = function (options, viewportStartLineNumber, viewportEndLineNumber, viewportHeight, viewportContainsWhitespaceGaps, lineCount, scrollTop, scrollHeight, previousLayout) {\r\n        var pixelRatio = options.pixelRatio;\r\n        var minimapLineHeight = getMinimapLineHeight(options.renderMinimap, options.fontScale);\r\n        var minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\r\n        var lineHeight = options.lineHeight;\r\n        // The visible line count in a viewport can change due to a number of reasons:\r\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\r\n        //    e.g. for a line height of 20, and a viewport height of 600\r\n        //          * scrollTop = 0  => visible lines are [1, 30]\r\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\r\n        //          * scrollTop = 20 => visible lines are [2, 31]\r\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\r\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\r\n        // We must first establish a desirable slider height.\r\n        var sliderHeight;\r\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\r\n            // case b) from above: there are whitespace gaps in the viewport.\r\n            // In this case, the height of the slider directly reflects the visible line count.\r\n            var viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\r\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\r\n        }\r\n        else {\r\n            // The slider has a stable height\r\n            var expectedViewportLineCount = viewportHeight / lineHeight;\r\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\r\n        }\r\n        var maxMinimapSliderTop;\r\n        if (options.scrollBeyondLastLine) {\r\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\r\n            maxMinimapSliderTop = (lineCount - 1) * minimapLineHeight / pixelRatio;\r\n        }\r\n        else {\r\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\r\n            maxMinimapSliderTop = Math.max(0, lineCount * minimapLineHeight / pixelRatio - sliderHeight);\r\n        }\r\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\r\n        // The slider can move from 0 to `maxMinimapSliderTop`\r\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\r\n        var computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\r\n        var sliderTop = (scrollTop * computedSliderRatio);\r\n        var extraLinesAtTheBottom = 0;\r\n        if (options.scrollBeyondLastLine) {\r\n            var expectedViewportLineCount = viewportHeight / lineHeight;\r\n            extraLinesAtTheBottom = expectedViewportLineCount;\r\n        }\r\n        if (minimapLinesFitting >= lineCount + extraLinesAtTheBottom) {\r\n            // All lines fit in the minimap\r\n            var startLineNumber = 1;\r\n            var endLineNumber = lineCount;\r\n            return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\r\n        }\r\n        else {\r\n            var startLineNumber = Math.max(1, Math.floor(viewportStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\r\n            // Avoid flickering caused by a partial viewport start line\r\n            // by being consistent w.r.t. the previous layout decision\r\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\r\n                if (previousLayout.scrollTop > scrollTop) {\r\n                    // Scrolling up => never increase `startLineNumber`\r\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\r\n                }\r\n                if (previousLayout.scrollTop < scrollTop) {\r\n                    // Scrolling down => never decrease `startLineNumber`\r\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\r\n                }\r\n            }\r\n            var endLineNumber = Math.min(lineCount, startLineNumber + minimapLinesFitting - 1);\r\n            return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\r\n        }\r\n    };\r\n    return MinimapLayout;\r\n}());\r\nvar MinimapLine = /** @class */ (function () {\r\n    function MinimapLine(dy) {\r\n        this.dy = dy;\r\n    }\r\n    MinimapLine.prototype.onContentChanged = function () {\r\n        this.dy = -1;\r\n    };\r\n    MinimapLine.prototype.onTokensChanged = function () {\r\n        this.dy = -1;\r\n    };\r\n    MinimapLine.INVALID = new MinimapLine(-1);\r\n    return MinimapLine;\r\n}());\r\nvar RenderData = /** @class */ (function () {\r\n    function RenderData(renderedLayout, imageData, lines) {\r\n        this.renderedLayout = renderedLayout;\r\n        this._imageData = imageData;\r\n        this._renderedLines = new RenderedLinesCollection(function () { return MinimapLine.INVALID; });\r\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\r\n    }\r\n    /**\r\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\r\n     */\r\n    RenderData.prototype.linesEquals = function (layout) {\r\n        if (!this.scrollEquals(layout)) {\r\n            return false;\r\n        }\r\n        var tmp = this._renderedLines._get();\r\n        var lines = tmp.lines;\r\n        for (var i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].dy === -1) {\r\n                // This line is invalid\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Check if the current RenderData matches the new layout's scroll position\r\n     */\r\n    RenderData.prototype.scrollEquals = function (layout) {\r\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\r\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\r\n    };\r\n    RenderData.prototype._get = function () {\r\n        var tmp = this._renderedLines._get();\r\n        return {\r\n            imageData: this._imageData,\r\n            rendLineNumberStart: tmp.rendLineNumberStart,\r\n            lines: tmp.lines\r\n        };\r\n    };\r\n    RenderData.prototype.onLinesChanged = function (e) {\r\n        return this._renderedLines.onLinesChanged(e.fromLineNumber, e.toLineNumber);\r\n    };\r\n    RenderData.prototype.onLinesDeleted = function (e) {\r\n        this._renderedLines.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\r\n    };\r\n    RenderData.prototype.onLinesInserted = function (e) {\r\n        this._renderedLines.onLinesInserted(e.fromLineNumber, e.toLineNumber);\r\n    };\r\n    RenderData.prototype.onTokensChanged = function (e) {\r\n        return this._renderedLines.onTokensChanged(e.ranges);\r\n    };\r\n    return RenderData;\r\n}());\r\n/**\r\n * Some sort of double buffering.\r\n *\r\n * Keeps two buffers around that will be rotated for painting.\r\n * Always gives a buffer that is filled with the background color.\r\n */\r\nvar MinimapBuffers = /** @class */ (function () {\r\n    function MinimapBuffers(ctx, WIDTH, HEIGHT, background) {\r\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\r\n        this._buffers = [\r\n            ctx.createImageData(WIDTH, HEIGHT),\r\n            ctx.createImageData(WIDTH, HEIGHT)\r\n        ];\r\n        this._lastUsedBuffer = 0;\r\n    }\r\n    MinimapBuffers.prototype.getBuffer = function () {\r\n        // rotate buffers\r\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\r\n        var result = this._buffers[this._lastUsedBuffer];\r\n        // fill with background color\r\n        result.data.set(this._backgroundFillData);\r\n        return result;\r\n    };\r\n    MinimapBuffers._createBackgroundFillData = function (WIDTH, HEIGHT, background) {\r\n        var backgroundR = background.r;\r\n        var backgroundG = background.g;\r\n        var backgroundB = background.b;\r\n        var result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\r\n        var offset = 0;\r\n        for (var i = 0; i < HEIGHT; i++) {\r\n            for (var j = 0; j < WIDTH; j++) {\r\n                result[offset] = backgroundR;\r\n                result[offset + 1] = backgroundG;\r\n                result[offset + 2] = backgroundB;\r\n                result[offset + 3] = 255;\r\n                offset += 4;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return MinimapBuffers;\r\n}());\r\nvar Minimap = /** @class */ (function (_super) {\r\n    __extends(Minimap, _super);\r\n    function Minimap(context) {\r\n        var _this = _super.call(this, context) || this;\r\n        _this._selections = [];\r\n        _this._renderDecorations = false;\r\n        _this._gestureInProgress = false;\r\n        _this._options = new MinimapOptions(_this._context.configuration);\r\n        _this._lastRenderData = null;\r\n        _this._buffers = null;\r\n        _this._selectionColor = _this._context.theme.getColor(minimapSelection);\r\n        _this._domNode = createFastDomNode(document.createElement('div'));\r\n        PartFingerprints.write(_this._domNode, 8 /* Minimap */);\r\n        _this._domNode.setClassName(_this._getMinimapDomNodeClassName());\r\n        _this._domNode.setPosition('absolute');\r\n        _this._domNode.setAttribute('role', 'presentation');\r\n        _this._domNode.setAttribute('aria-hidden', 'true');\r\n        _this._shadow = createFastDomNode(document.createElement('div'));\r\n        _this._shadow.setClassName('minimap-shadow-hidden');\r\n        _this._domNode.appendChild(_this._shadow);\r\n        _this._canvas = createFastDomNode(document.createElement('canvas'));\r\n        _this._canvas.setPosition('absolute');\r\n        _this._canvas.setLeft(0);\r\n        _this._domNode.appendChild(_this._canvas);\r\n        _this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\r\n        _this._decorationsCanvas.setPosition('absolute');\r\n        _this._decorationsCanvas.setClassName('minimap-decorations-layer');\r\n        _this._decorationsCanvas.setLeft(0);\r\n        _this._domNode.appendChild(_this._decorationsCanvas);\r\n        _this._slider = createFastDomNode(document.createElement('div'));\r\n        _this._slider.setPosition('absolute');\r\n        _this._slider.setClassName('minimap-slider');\r\n        _this._slider.setLayerHinting(true);\r\n        _this._slider.setContain('strict');\r\n        _this._domNode.appendChild(_this._slider);\r\n        _this._sliderHorizontal = createFastDomNode(document.createElement('div'));\r\n        _this._sliderHorizontal.setPosition('absolute');\r\n        _this._sliderHorizontal.setClassName('minimap-slider-horizontal');\r\n        _this._slider.appendChild(_this._sliderHorizontal);\r\n        _this._tokensColorTracker = MinimapTokensColorTracker.getInstance();\r\n        _this._applyLayout();\r\n        _this._mouseDownListener = dom.addStandardDisposableListener(_this._domNode.domNode, 'mousedown', function (e) {\r\n            e.preventDefault();\r\n            var renderMinimap = _this._options.renderMinimap;\r\n            if (renderMinimap === 0 /* None */) {\r\n                return;\r\n            }\r\n            if (!_this._lastRenderData) {\r\n                return;\r\n            }\r\n            var minimapLineHeight = getMinimapLineHeight(renderMinimap, _this._options.fontScale);\r\n            var internalOffsetY = _this._options.pixelRatio * e.browserEvent.offsetY;\r\n            var lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\r\n            var lineNumber = lineIndex + _this._lastRenderData.renderedLayout.startLineNumber;\r\n            lineNumber = Math.min(lineNumber, _this._context.model.getLineCount());\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('mouse', new Range(lineNumber, 1, lineNumber, 1), 1 /* Center */, false, 0 /* Smooth */));\r\n        });\r\n        _this._sliderMouseMoveMonitor = new GlobalMouseMoveMonitor();\r\n        _this._sliderMouseDownListener = dom.addStandardDisposableListener(_this._slider.domNode, 'mousedown', function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (e.leftButton && _this._lastRenderData) {\r\n                var initialMousePosition_1 = e.posy;\r\n                var initialMouseOrthogonalPosition_1 = e.posx;\r\n                var initialSliderState_1 = _this._lastRenderData.renderedLayout;\r\n                _this._slider.toggleClassName('active', true);\r\n                _this._sliderMouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, function (mouseMoveData) {\r\n                    var mouseOrthogonalDelta = Math.abs(mouseMoveData.posx - initialMouseOrthogonalPosition_1);\r\n                    if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\r\n                        // The mouse has wondered away from the scrollbar => reset dragging\r\n                        _this._context.viewLayout.setScrollPositionNow({\r\n                            scrollTop: initialSliderState_1.scrollTop\r\n                        });\r\n                        return;\r\n                    }\r\n                    var mouseDelta = mouseMoveData.posy - initialMousePosition_1;\r\n                    _this._context.viewLayout.setScrollPositionNow({\r\n                        scrollTop: initialSliderState_1.getDesiredScrollTopFromDelta(mouseDelta)\r\n                    });\r\n                }, function () {\r\n                    _this._slider.toggleClassName('active', false);\r\n                });\r\n            }\r\n        });\r\n        _this._gestureDisposable = Gesture.addTarget(_this._domNode.domNode);\r\n        _this._sliderTouchStartListener = dom.addDisposableListener(_this._domNode.domNode, EventType.Start, function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (_this._lastRenderData) {\r\n                _this._slider.toggleClassName('active', true);\r\n                _this._gestureInProgress = true;\r\n                _this.scrollDueToTouchEvent(e);\r\n            }\r\n        });\r\n        _this._sliderTouchMoveListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.Change, function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (_this._lastRenderData && _this._gestureInProgress) {\r\n                _this.scrollDueToTouchEvent(e);\r\n            }\r\n        });\r\n        _this._sliderTouchEndListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.End, function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            _this._gestureInProgress = false;\r\n            _this._slider.toggleClassName('active', false);\r\n        });\r\n        return _this;\r\n    }\r\n    Minimap.prototype.scrollDueToTouchEvent = function (touch) {\r\n        var startY = this._domNode.domNode.getBoundingClientRect().top;\r\n        var scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\r\n        this._context.viewLayout.setScrollPositionNow({\r\n            scrollTop: scrollTop\r\n        });\r\n    };\r\n    Minimap.prototype.dispose = function () {\r\n        this._mouseDownListener.dispose();\r\n        this._sliderMouseMoveMonitor.dispose();\r\n        this._sliderMouseDownListener.dispose();\r\n        this._gestureDisposable.dispose();\r\n        this._sliderTouchStartListener.dispose();\r\n        this._sliderTouchMoveListener.dispose();\r\n        this._sliderTouchEndListener.dispose();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    Minimap.prototype._getMinimapDomNodeClassName = function () {\r\n        if (this._options.showSlider === 'always') {\r\n            return 'minimap slider-always';\r\n        }\r\n        return 'minimap slider-mouseover';\r\n    };\r\n    Minimap.prototype.getDomNode = function () {\r\n        return this._domNode;\r\n    };\r\n    Minimap.prototype._applyLayout = function () {\r\n        this._domNode.setLeft(this._options.minimapLeft);\r\n        this._domNode.setWidth(this._options.minimapWidth);\r\n        this._domNode.setHeight(this._options.minimapHeight);\r\n        this._shadow.setHeight(this._options.minimapHeight);\r\n        this._canvas.setWidth(this._options.canvasOuterWidth);\r\n        this._canvas.setHeight(this._options.canvasOuterHeight);\r\n        this._canvas.domNode.width = this._options.canvasInnerWidth;\r\n        this._canvas.domNode.height = this._options.canvasInnerHeight;\r\n        this._decorationsCanvas.setWidth(this._options.canvasOuterWidth);\r\n        this._decorationsCanvas.setHeight(this._options.canvasOuterHeight);\r\n        this._decorationsCanvas.domNode.width = this._options.canvasInnerWidth;\r\n        this._decorationsCanvas.domNode.height = this._options.canvasInnerHeight;\r\n        this._slider.setWidth(this._options.minimapWidth);\r\n    };\r\n    Minimap.prototype._getBuffer = function () {\r\n        if (!this._buffers) {\r\n            if (this._options.canvasInnerWidth > 0 && this._options.canvasInnerHeight > 0) {\r\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._options.canvasInnerWidth, this._options.canvasInnerHeight, this._tokensColorTracker.getColor(2 /* DefaultBackground */));\r\n            }\r\n        }\r\n        return this._buffers ? this._buffers.getBuffer() : null;\r\n    };\r\n    Minimap.prototype._onOptionsMaybeChanged = function () {\r\n        var opts = new MinimapOptions(this._context.configuration);\r\n        if (this._options.equals(opts)) {\r\n            return false;\r\n        }\r\n        this._options = opts;\r\n        this._lastRenderData = null;\r\n        this._buffers = null;\r\n        this._applyLayout();\r\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\r\n        return true;\r\n    };\r\n    // ---- begin view event handlers\r\n    Minimap.prototype.onConfigurationChanged = function (e) {\r\n        return this._onOptionsMaybeChanged();\r\n    };\r\n    Minimap.prototype.onCursorStateChanged = function (e) {\r\n        this._selections = e.selections;\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onFlushed = function (e) {\r\n        this._lastRenderData = null;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onLinesChanged = function (e) {\r\n        if (this._lastRenderData) {\r\n            return this._lastRenderData.onLinesChanged(e);\r\n        }\r\n        return false;\r\n    };\r\n    Minimap.prototype.onLinesDeleted = function (e) {\r\n        if (this._lastRenderData) {\r\n            this._lastRenderData.onLinesDeleted(e);\r\n        }\r\n        return true;\r\n    };\r\n    Minimap.prototype.onLinesInserted = function (e) {\r\n        if (this._lastRenderData) {\r\n            this._lastRenderData.onLinesInserted(e);\r\n        }\r\n        return true;\r\n    };\r\n    Minimap.prototype.onScrollChanged = function (e) {\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onTokensChanged = function (e) {\r\n        if (this._lastRenderData) {\r\n            return this._lastRenderData.onTokensChanged(e);\r\n        }\r\n        return false;\r\n    };\r\n    Minimap.prototype.onTokensColorsChanged = function (e) {\r\n        this._lastRenderData = null;\r\n        this._buffers = null;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onZonesChanged = function (e) {\r\n        this._lastRenderData = null;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onDecorationsChanged = function (e) {\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onThemeChanged = function (e) {\r\n        this._context.model.invalidateMinimapColorCache();\r\n        this._selectionColor = this._context.theme.getColor(minimapSelection);\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    Minimap.prototype.prepareRender = function (ctx) {\r\n        // Nothing to read\r\n    };\r\n    Minimap.prototype.render = function (renderingCtx) {\r\n        var renderMinimap = this._options.renderMinimap;\r\n        if (renderMinimap === 0 /* None */) {\r\n            this._shadow.setClassName('minimap-shadow-hidden');\r\n            this._sliderHorizontal.setWidth(0);\r\n            this._sliderHorizontal.setHeight(0);\r\n            return;\r\n        }\r\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\r\n            this._shadow.setClassName('minimap-shadow-hidden');\r\n        }\r\n        else {\r\n            this._shadow.setClassName('minimap-shadow-visible');\r\n        }\r\n        var layout = MinimapLayout.create(this._options, renderingCtx.visibleRange.startLineNumber, renderingCtx.visibleRange.endLineNumber, renderingCtx.viewportHeight, (renderingCtx.viewportData.whitespaceViewportData.length > 0), this._context.model.getLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\r\n        this._slider.setTop(layout.sliderTop);\r\n        this._slider.setHeight(layout.sliderHeight);\r\n        // Compute horizontal slider coordinates\r\n        var scrollLeftChars = renderingCtx.scrollLeft / this._options.typicalHalfwidthCharacterWidth;\r\n        var horizontalSliderLeft = Math.min(this._options.minimapWidth, Math.round(scrollLeftChars * getMinimapCharWidth(this._options.renderMinimap, this._options.fontScale) / this._options.pixelRatio));\r\n        this._sliderHorizontal.setLeft(horizontalSliderLeft);\r\n        this._sliderHorizontal.setWidth(this._options.minimapWidth - horizontalSliderLeft);\r\n        this._sliderHorizontal.setTop(0);\r\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\r\n        this.renderDecorations(layout);\r\n        this._lastRenderData = this.renderLines(layout);\r\n    };\r\n    Minimap.prototype.renderDecorations = function (layout) {\r\n        if (this._renderDecorations) {\r\n            this._renderDecorations = false;\r\n            var decorations = this._context.model.getDecorationsInViewport(new Range(layout.startLineNumber, 1, layout.endLineNumber, this._context.model.getLineMaxColumn(layout.endLineNumber)));\r\n            var _a = this._options, renderMinimap = _a.renderMinimap, canvasInnerWidth = _a.canvasInnerWidth, canvasInnerHeight = _a.canvasInnerHeight;\r\n            var lineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale);\r\n            var characterWidth = getMinimapCharWidth(renderMinimap, this._options.fontScale);\r\n            var tabSize = this._context.model.getOptions().tabSize;\r\n            var canvasContext = this._decorationsCanvas.domNode.getContext('2d');\r\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\r\n            var lineOffsetMap = new Map();\r\n            for (var i = 0; i < this._selections.length; i++) {\r\n                var selection = this._selections[i];\r\n                for (var line = selection.startLineNumber; line <= selection.endLineNumber; line++) {\r\n                    this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\r\n                }\r\n            }\r\n            // Loop over decorations, ignoring those that don't have the minimap property set and rendering rectangles for each line the decoration spans\r\n            for (var i = 0; i < decorations.length; i++) {\r\n                var decoration = decorations[i];\r\n                if (!decoration.options.minimap) {\r\n                    continue;\r\n                }\r\n                var decorationColor = decoration.options.minimap.getColor(this._context.theme);\r\n                for (var line = decoration.range.startLineNumber; line <= decoration.range.endLineNumber; line++) {\r\n                    switch (decoration.options.minimap.position) {\r\n                        case MinimapPosition.Inline:\r\n                            this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\r\n                            continue;\r\n                        case MinimapPosition.Gutter:\r\n                            var y = (line - layout.startLineNumber) * lineHeight;\r\n                            var x = 2;\r\n                            this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, lineHeight);\r\n                            continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Minimap.prototype.renderDecorationOnLine = function (canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, lineHeight, tabSize, charWidth) {\r\n        var y = (lineNumber - layout.startLineNumber) * lineHeight;\r\n        // Skip rendering the line if it's vertically outside our viewport\r\n        if (y + height < 0 || y > this._options.canvasInnerHeight) {\r\n            return;\r\n        }\r\n        // Cache line offset data so that it is only read once per line\r\n        var lineIndexToXOffset = lineOffsetMap.get(lineNumber);\r\n        var isFirstDecorationForLine = !lineIndexToXOffset;\r\n        if (!lineIndexToXOffset) {\r\n            var lineData = this._context.model.getLineContent(lineNumber);\r\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\r\n            for (var i = 1; i < lineData.length + 1; i++) {\r\n                var charCode = lineData.charCodeAt(i - 1);\r\n                var dx = charCode === 9 /* Tab */\r\n                    ? tabSize * charWidth\r\n                    : strings.isFullWidthCharacter(charCode)\r\n                        ? 2 * charWidth\r\n                        : charWidth;\r\n                lineIndexToXOffset[i] = lineIndexToXOffset[i - 1] + dx;\r\n            }\r\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\r\n        }\r\n        var startColumn = decorationRange.startColumn, endColumn = decorationRange.endColumn, startLineNumber = decorationRange.startLineNumber, endLineNumber = decorationRange.endLineNumber;\r\n        var x = startLineNumber === lineNumber ? lineIndexToXOffset[startColumn - 1] : MINIMAP_GUTTER_WIDTH;\r\n        var endColumnForLine = endLineNumber > lineNumber ? lineIndexToXOffset.length - 1 : endColumn - 1;\r\n        if (endColumnForLine > 0) {\r\n            // If the decoration starts at the last character of the column and spans over it, ensure it has a width\r\n            var width = lineIndexToXOffset[endColumnForLine] - x || 2;\r\n            this.renderDecoration(canvasContext, decorationColor, x, y, width, height);\r\n        }\r\n        if (isFirstDecorationForLine) {\r\n            this.renderLineHighlight(canvasContext, decorationColor, y, height);\r\n        }\r\n    };\r\n    Minimap.prototype.renderLineHighlight = function (canvasContext, decorationColor, y, height) {\r\n        canvasContext.fillStyle = decorationColor && decorationColor.transparent(0.5).toString() || '';\r\n        canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, height);\r\n    };\r\n    Minimap.prototype.renderDecoration = function (canvasContext, decorationColor, x, y, width, height) {\r\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\r\n        canvasContext.fillRect(x, y, width, height);\r\n    };\r\n    Minimap.prototype.renderLines = function (layout) {\r\n        var renderMinimap = this._options.renderMinimap;\r\n        var charRenderer = this._options.charRenderer();\r\n        var startLineNumber = layout.startLineNumber;\r\n        var endLineNumber = layout.endLineNumber;\r\n        var minimapLineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale);\r\n        // Check if nothing changed w.r.t. lines from last frame\r\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\r\n            var _lastData = this._lastRenderData._get();\r\n            // Nice!! Nothing changed from last frame\r\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\r\n        }\r\n        // Oh well!! We need to repaint some lines...\r\n        var imageData = this._getBuffer();\r\n        if (!imageData) {\r\n            // 0 width or 0 height canvas, nothing to do\r\n            return null;\r\n        }\r\n        // Render untouched lines by using last rendered data.\r\n        var _a = Minimap._renderUntouchedLines(imageData, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData), _dirtyY1 = _a[0], _dirtyY2 = _a[1], needed = _a[2];\r\n        // Fetch rendering info from view model for rest of lines that need rendering.\r\n        var lineInfo = this._context.model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\r\n        var tabSize = lineInfo.tabSize;\r\n        var background = this._tokensColorTracker.getColor(2 /* DefaultBackground */);\r\n        var useLighterFont = this._tokensColorTracker.backgroundIsLight();\r\n        // Render the rest of lines\r\n        var dy = 0;\r\n        var renderedLines = [];\r\n        for (var lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\r\n            if (needed[lineIndex]) {\r\n                Minimap._renderLine(imageData, background, useLighterFont, renderMinimap, this._tokensColorTracker, charRenderer, dy, tabSize, lineInfo.data[lineIndex], this._options.fontScale);\r\n            }\r\n            renderedLines[lineIndex] = new MinimapLine(dy);\r\n            dy += minimapLineHeight;\r\n        }\r\n        var dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\r\n        var dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\r\n        var dirtyHeight = dirtyY2 - dirtyY1;\r\n        // Finally, paint to the canvas\r\n        var ctx = this._canvas.domNode.getContext('2d');\r\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\r\n        // Save rendered data for reuse on next frame if possible\r\n        return new RenderData(layout, imageData, renderedLines);\r\n    };\r\n    Minimap._renderUntouchedLines = function (target, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\r\n        var needed = [];\r\n        if (!lastRenderData) {\r\n            for (var i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\r\n                needed[i] = true;\r\n            }\r\n            return [-1, -1, needed];\r\n        }\r\n        var _lastData = lastRenderData._get();\r\n        var lastTargetData = _lastData.imageData.data;\r\n        var lastStartLineNumber = _lastData.rendLineNumberStart;\r\n        var lastLines = _lastData.lines;\r\n        var lastLinesLength = lastLines.length;\r\n        var WIDTH = target.width;\r\n        var targetData = target.data;\r\n        var maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\r\n        var dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\r\n        var dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\r\n        var copySourceStart = -1;\r\n        var copySourceEnd = -1;\r\n        var copyDestStart = -1;\r\n        var copyDestEnd = -1;\r\n        var dest_dy = 0;\r\n        for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n            var lineIndex = lineNumber - startLineNumber;\r\n            var lastLineIndex = lineNumber - lastStartLineNumber;\r\n            var source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\r\n            if (source_dy === -1) {\r\n                needed[lineIndex] = true;\r\n                dest_dy += minimapLineHeight;\r\n                continue;\r\n            }\r\n            var sourceStart = source_dy * WIDTH * 4;\r\n            var sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\r\n            var destStart = dest_dy * WIDTH * 4;\r\n            var destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\r\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\r\n                // contiguous zone => extend copy request\r\n                copySourceEnd = sourceEnd;\r\n                copyDestEnd = destEnd;\r\n            }\r\n            else {\r\n                if (copySourceStart !== -1) {\r\n                    // flush existing copy request\r\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\r\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\r\n                        dirtyPixel1 = copySourceEnd;\r\n                    }\r\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\r\n                        dirtyPixel2 = copySourceStart;\r\n                    }\r\n                }\r\n                copySourceStart = sourceStart;\r\n                copySourceEnd = sourceEnd;\r\n                copyDestStart = destStart;\r\n                copyDestEnd = destEnd;\r\n            }\r\n            needed[lineIndex] = false;\r\n            dest_dy += minimapLineHeight;\r\n        }\r\n        if (copySourceStart !== -1) {\r\n            // flush existing copy request\r\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\r\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\r\n                dirtyPixel1 = copySourceEnd;\r\n            }\r\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\r\n                dirtyPixel2 = copySourceStart;\r\n            }\r\n        }\r\n        var dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\r\n        var dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\r\n        return [dirtyY1, dirtyY2, needed];\r\n    };\r\n    Minimap._renderLine = function (target, backgroundColor, useLighterFont, renderMinimap, colorTracker, minimapCharRenderer, dy, tabSize, lineData, fontScale) {\r\n        var content = lineData.content;\r\n        var tokens = lineData.tokens;\r\n        var charWidth = getMinimapCharWidth(renderMinimap, fontScale);\r\n        var maxDx = target.width - charWidth;\r\n        var dx = MINIMAP_GUTTER_WIDTH;\r\n        var charIndex = 0;\r\n        var tabsCharDelta = 0;\r\n        for (var tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\r\n            var tokenEndIndex = tokens.getEndOffset(tokenIndex);\r\n            var tokenColorId = tokens.getForeground(tokenIndex);\r\n            var tokenColor = colorTracker.getColor(tokenColorId);\r\n            for (; charIndex < tokenEndIndex; charIndex++) {\r\n                if (dx > maxDx) {\r\n                    // hit edge of minimap\r\n                    return;\r\n                }\r\n                var charCode = content.charCodeAt(charIndex);\r\n                if (charCode === 9 /* Tab */) {\r\n                    var insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\r\n                    tabsCharDelta += insertSpacesCount - 1;\r\n                    // No need to render anything since tab is invisible\r\n                    dx += insertSpacesCount * charWidth;\r\n                }\r\n                else if (charCode === 32 /* Space */) {\r\n                    // No need to render anything since space is invisible\r\n                    dx += charWidth;\r\n                }\r\n                else {\r\n                    // Render twice for a full width character\r\n                    var count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\r\n                    for (var i = 0; i < count; i++) {\r\n                        if (renderMinimap === 2 /* Blocks */) {\r\n                            minimapCharRenderer.blockRenderChar(target, dx, dy, tokenColor, backgroundColor, useLighterFont);\r\n                        }\r\n                        else { // RenderMinimap.Text\r\n                            minimapCharRenderer.renderChar(target, dx, dy, charCode, tokenColor, backgroundColor, fontScale, useLighterFont);\r\n                        }\r\n                        dx += charWidth;\r\n                        if (dx > maxDx) {\r\n                            // hit edge of minimap\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return Minimap;\r\n}(ViewPart));\r\nexport { Minimap };\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var sliderBackground = theme.getColor(scrollbarSliderBackground);\r\n    if (sliderBackground) {\r\n        var halfSliderBackground = sliderBackground.transparent(0.5);\r\n        collector.addRule(\".monaco-editor .minimap-slider, .monaco-editor .minimap-slider .minimap-slider-horizontal { background: \" + halfSliderBackground + \"; }\");\r\n    }\r\n    var sliderHoverBackground = theme.getColor(scrollbarSliderHoverBackground);\r\n    if (sliderHoverBackground) {\r\n        var halfSliderHoverBackground = sliderHoverBackground.transparent(0.5);\r\n        collector.addRule(\".monaco-editor .minimap-slider:hover, .monaco-editor .minimap-slider:hover .minimap-slider-horizontal { background: \" + halfSliderHoverBackground + \"; }\");\r\n    }\r\n    var sliderActiveBackground = theme.getColor(scrollbarSliderActiveBackground);\r\n    if (sliderActiveBackground) {\r\n        var halfSliderActiveBackground = sliderActiveBackground.transparent(0.5);\r\n        collector.addRule(\".monaco-editor .minimap-slider.active, .monaco-editor .minimap-slider.active .minimap-slider-horizontal { background: \" + halfSliderActiveBackground + \"; }\");\r\n    }\r\n    var shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(\".monaco-editor .minimap-shadow-visible { box-shadow: \" + shadow + \" -6px 0 6px -6px inset; }\");\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}