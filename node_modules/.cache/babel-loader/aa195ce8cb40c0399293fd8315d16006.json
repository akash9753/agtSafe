{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Study\\\\StudyConfig\\\\activityConfig.js\";\nimport React, { Component } from 'react';\nimport { Tabs, Icon } from 'antd';\nimport { Annotation } from '.././ActivityConfig/Annotation';\nimport { DefineGeneration } from '../ActivityConfig/Define';\nimport ConfirmWithEsign from '../confirmationWithEsign';\nimport { validJSON, showProgress, hideProgress, CallServerPost, errorModal, errorModalCallback, successModalCallback, successModal, PostCallWithZone, DownloadFileWithPostData, checkPermission, getProjectRole, dynamicModal } from '../../Utility/sharedUtility';\nimport { TreeNode } from '../../../components/uielements/tree';\nimport moment from 'moment-timezone';\nimport WorkflowStatus from '../ActivityConfig/WorkflowStatus';\nimport Progress from '../../Utility/ProgressBar';\nvar offProgress = false;\nvar TabPane = Tabs.TabPane;\nvar tabStyle = {\n  height: \"calc(100vh - 99px)\",\n  overflow: \"auto\"\n};\nvar thisObj;\nvar ActivityConfig = /*#__PURE__*/function (_Component) {\n  _inherits(ActivityConfig, _Component);\n  var _super = _createSuper(ActivityConfig);\n  function ActivityConfig(props) {\n    var _this;\n    _classCallCheck(this, ActivityConfig);\n    _this = _super.call(this, props);\n    _this.initialiseStatus = function () {\n      return {\n        Annot: {\n          text: \"Not yet configured\",\n          id: -1\n        },\n        Trans: {\n          text: \"Not yet configured\",\n          id: -1\n        },\n        Define: {\n          text: \"Not yet configured\",\n          id: -1\n        }\n      };\n    };\n    _this.beforeUpdateTheWorkFlow = function (targetStatusID, Activitie) {\n      //Selcted study workflow obj\n      var _thisObj$props = thisObj.props,\n        study = _thisObj$props.study,\n        workflowObj = _thisObj$props.workflowObj;\n      var ActivityConfigStatusDetailsList = _this.state.ActivityConfigStatusDetailsList;\n      var changedWorkflowToUpdate = Activitie && Activitie.find(function (wrkflo) {\n        return wrkflo.targetStatusID === targetStatusID;\n      });\n      var selectedActivityWorkflow = changedWorkflowToUpdate && ActivityConfigStatusDetailsList.find(function (wf) {\n        return wf.workflowActivityStatusID == changedWorkflowToUpdate.sourceStatusID;\n      });\n      var workflowActivityID = selectedActivityWorkflow.workflowActivityID,\n        workflowActivityStatusID = selectedActivityWorkflow.workflowActivityStatusID;\n      var data = {\n        studyID: study.studyID,\n        projectID: study.projectID,\n        workflowActivityID: workflowActivityID,\n        //targetStatusID means selected Workflow workflowActivityStatusID\n        workflowActivityStatusID: targetStatusID,\n        changeReason: changedWorkflowToUpdate.targetStatusText,\n        workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID,\n        updatedDateTime: selectedActivityWorkflow.updatedDateTime,\n        StudyWorkFlowID: selectedActivityWorkflow.studyWorkflowID\n      };\n      dynamicModal({\n        title: \"Confirmation\",\n        icon: \"exclamation-circle\",\n        msg: \"Do you want to change the status?\",\n        className: \"UserAssignedPop\",\n        onOk: function onOk() {\n          if (changedWorkflowToUpdate.eSignRequired) {\n            showProgress();\n            thisObj.setState({\n              esign: true,\n              workFlowDataToUpdate: data,\n              esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\n            });\n            _this.props.UpdateStudyList();\n            hideProgress();\n          } else {\n            thisObj.updateWorkFlow(data);\n          }\n        },\n        onCancel: function onCancel() {\n          thisObj.props.form.resetFields();\n        }\n      });\n    };\n    _this.afterEsignVerfied = function () {\n      var workFlowDataToUpdate = thisObj.state.workFlowDataToUpdate;\n      workFlowDataToUpdate[\"eSignVerified\"] = true;\n      thisObj.updateWorkFlow(workFlowDataToUpdate);\n    };\n    _this.esignText = function (WorkFlow) {\n      var text = {\n        AnnotationReviewCompleted: \"I have reviewed this annotated document.\",\n        TransformationReviewCompleted: \"I have reviewed the mapping logic and verified the transformed output.\",\n        DefineGenerationReviewCompleted: \"I have reviewed generated define XML.\",\n        StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\"\n      };\n      return text[WorkFlow];\n    };\n    _this.updateWorkFlow = function (data) {\n      var projectRole = getProjectRole();\n      var zones = moment.tz.guess();\n      var timezone = moment.tz(zones).zoneAbbr();\n      var updatedBy = projectRole.userProfile.userID;\n      data.TimeZone = timezone;\n      data.UpdatedBy = updatedBy;\n      if (data.workflowActivityStatusTransitionID == 23) {\n        thisObj.setState({\n          progress: \"active\"\n        });\n      } else {\n        showProgress();\n      }\n      PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(function (response) {\n        hideProgress();\n        if (response.status == 1) {\n          thisObj.setState({\n            esign: false,\n            progress: \"exception\"\n          });\n          successModalCallback(response.message, function () {\n            thisObj.reload();\n          });\n        } else {\n          thisObj.setState({\n            esign: false,\n            progress: \"exception\"\n          });\n          thisObj.props.form.resetFields();\n          thisObj.setState({\n            esign: false\n          });\n          errorModalCallback(response.message, function () {\n            thisObj.props.form.resetFields();\n          });\n        }\n      });\n    };\n    _this.cancelEsign = function (studyID) {\n      thisObj.props.form.resetFields();\n      _this.setState({\n        esign: false\n      });\n    };\n    _this.getGetActivityConfigurationByStudyID = function () {\n      var screen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var thisObj = _assertThisInitialized(_this);\n      var _thisObj$props2 = thisObj.props,\n        study = _thisObj$props2.study,\n        workflowObj = _thisObj$props2.workflowObj;\n\n      //for filter the dropdown values of Annotation,Transformation,Define\n      var StudyWorkflow = workflowObj.StudyWorkflow,\n        WorkflowActivityStatusTransition = workflowObj.WorkflowActivityStatusTransition;\n      //Selcted study workflow obj\n      var currentWrkflwOfStudy = StudyWorkflow.find(function (w) {\n        return w.studyID === study.studyID;\n      });\n      //selected study workflowActivityStatusID\n      var currentWorkflowActivityStatusID = currentWrkflwOfStudy && currentWrkflwOfStudy.workflowActivityStatusID;\n      showProgress();\n      CallServerPost('ActivityConfiguration/GetActivityConfigurationByStudyID', {\n        FormName: \"Study\",\n        ActionName: \"Create\",\n        StudyID: study.studyID,\n        ProjectID: _this.props.projectID\n      }).then(function (response) {\n        //Maintain offProgress why because we are calling two controller simultaneously\n        offProgress && hideProgress();\n        offProgress = !offProgress;\n        if (response.status === 1) {\n          var data = response.value;\n          if (data && typeof data === \"object\") {\n            var status = thisObj.initialiseStatus();\n            var annotationWorkFlows, transFormationWorkFlows, defineWorkFlows;\n            //Set the Status of Annotation,transformation and Define\n            (data.ActivityConfigStatusDetailsList || []).map(function (activitie) {\n              switch (activitie.workflowActivityID) {\n                //Annotation\n                case 2:\n                  {\n                    var AnnotWrkFlw = data.annotationStatus;\n                    var AnnotStaus = AnnotWrkFlw && AnnotWrkFlw.find(function (x) {\n                      return x.workflowActivityStatusID === activitie.workflowActivityStatusID;\n                    });\n                    status.Annot = {\n                      text: AnnotStaus && AnnotStaus.displayText,\n                      id: AnnotStaus && AnnotStaus.workflowActivityStatusID && AnnotStaus.workflowActivityStatusID\n                    };\n                    //filter workflow based on current activitie workflowActivityStatusID                   \n                    annotationWorkFlows = WorkflowActivityStatusTransition.filter(function (wrkFlo) {\n                      return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID;\n                    });\n                  }\n                  break;\n                //Transformation\n                case 3:\n                  {\n                    var TransWrkFlw = data.transformationStatus;\n                    var TransStaus = TransWrkFlw && TransWrkFlw.find(function (x) {\n                      return x.workflowActivityStatusID === activitie.workflowActivityStatusID;\n                    });\n                    status.Trans = {\n                      text: TransStaus && TransStaus.displayText,\n                      id: TransStaus && TransStaus.workflowActivityStatusID && TransStaus.workflowActivityStatusID\n                    };\n                    //filter workflow based on current activitie workflowActivityStatusID                       \n                    transFormationWorkFlows = WorkflowActivityStatusTransition.filter(function (wrkFlo) {\n                      return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID;\n                    });\n                  }\n                  break;\n                //Define\n                case 4:\n                  {\n                    var DefineWrkFlw = data.defineStatus;\n                    var DefineStaus = DefineWrkFlw && DefineWrkFlw.find(function (x) {\n                      return x.workflowActivityStatusID === activitie.workflowActivityStatusID;\n                    });\n                    status.Define = {\n                      text: DefineStaus && DefineStaus.displayText,\n                      id: DefineStaus && DefineStaus.workflowActivityStatusID && DefineStaus.workflowActivityStatusID\n                    };\n\n                    //filter workflow based on current activitie workflowActivityStatusID                       \n                    defineWorkFlows = WorkflowActivityStatusTransition.filter(function (wrkFlo) {\n                      return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID;\n                    });\n                  }\n                  break;\n              }\n            });\n\n            //the following line is used only for when save the activity config\n            //have to reset the selected dropdown values\n            thisObj.props.form.resetFields();\n            //end\n\n            thisObj.setState({\n              status: status,\n              //screen: \"Home\",\n              updateData: data.ActivityConfigList,\n              defineWorkFlows: defineWorkFlows,\n              annotationWorkFlows: annotationWorkFlows,\n              transFormationWorkFlows: transFormationWorkFlows,\n              ActivityConfigStatusDetailsList: data.ActivityConfigStatusDetailsList\n            });\n          }\n        } else {\n          hideProgress();\n          thisObj.setState({\n            screen: \"Home\",\n            updateData: [],\n            defineWorkFlows: [],\n            annotationWorkFlows: [],\n            transFormationWorkFlows: [],\n            status: thisObj.initialiseStatus(),\n            ActivityConfigStatusDetailsList: []\n          });\n        }\n      });\n    };\n    _this.reload = function () {\n      offProgress = true;\n      _this.getGetActivityConfigurationByStudyID();\n      _this.props.UpdateStudyList();\n    };\n    _this.onTabChange = function (activeKey) {\n      _this.setState({\n        activeKey: activeKey\n      });\n    };\n    _this.state = {\n      ModalText: 'Content of the modal',\n      screen: \"\",\n      home: false,\n      esign: false,\n      pdfFiles: [],\n      esignText: \"\",\n      xptLocation: [],\n      progress: \"\",\n      selectedStatus: \"\",\n      changeReason: false,\n      defineWorkFlows: [],\n      rawDatasetLocaton: [],\n      fileRawDatasetSelect: [],\n      workFlowDataToUpdate: [],\n      annotationWorkFlows: [],\n      transFormationWorkFlows: [],\n      defineOutputTypeDropDown: [],\n      activityConfigStatusDetails: [],\n      ActivityConfigStatusDetailsList: [],\n      updateData: [],\n      status: _this.initialiseStatus(),\n      activeKey: \"workflow_key\"\n    };\n    thisObj = _assertThisInitialized(_this);\n    _this.getGetActivityConfigurationByStudyID();\n    _this.getDDL();\n    return _this;\n  }\n  _createClass(ActivityConfig, [{\n    key: \"getDDL\",\n    value: function getDDL() {\n      var thisObj = this;\n      var study = thisObj.props.study;\n      showProgress();\n      CallServerPost('ActivityConfiguration/GetValuesForCreateActivityConfiguration', {\n        FormName: \"Study\",\n        ActionName: \"Create\",\n        StudyID: study.studyID,\n        ProjectID: this.props.projectID\n      }).then(function (response) {\n        var _this2 = this;\n        //console.log(response);\n        //Maintain offProgress why because we are calling two controller simultaneously\n        offProgress && hideProgress();\n        offProgress = !offProgress;\n        if (response.status === 1) {\n          var studyData = response.value;\n          var treeLoop = function treeLoop(data, folderOnly) {\n            var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n            var isRaw = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            return data.map(function (item) {\n              if (item.children) {\n                var notRaw = isRaw ? item.children.filter(function (ch) {\n                  return ch.folder === false;\n                }).length > 0 : true;\n                return /*#__PURE__*/React.createElement(TreeNode, {\n                  selectable: folderOnly && item.folder && notRaw,\n                  key: item.key,\n                  value: item.key,\n                  title: item.title,\n                  parent: item.key,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 37\n                  }\n                }, treeLoop(item.children, folderOnly, item.key, isRaw));\n              } else {\n                var selectable = true;\n                if (folderOnly && !item.folder) {\n                  selectable = false;\n                }\n                if (item.key !== studyData[\"protocolDoc\"]) {\n                  return /*#__PURE__*/React.createElement(TreeNode, {\n                    parent: parent,\n                    selectable: selectable,\n                    key: item.key,\n                    value: item.key,\n                    title: item.title,\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 44\n                    }\n                  });\n                }\n              }\n            });\n          };\n\n          //Annotatoin,TransFormation,Define Dropdown values\n\n          //for Annotation CRFDocument\n          var pdfFiles = treeLoop([studyData[\"DocumentsTree\"].pdfLocation], false);\n\n          //for transformation Output Standardized Dataset Location\n          //for Define Standardized Dataset Location\n          var xptLocation = treeLoop([studyData[\"DocumentsTree\"].xptLocation], true);\n\n          //for Transformation Raw Dataset Location\n          var fileRawDatasetSelect = treeLoop([studyData[\"DocumentsTree\"].sas7BdatLocation], false);\n\n          //for Transformation Raw Dataset Location\n          var rawDatasetLocaton = treeLoop([studyData[\"DocumentsTree\"].sas7BdatLocation], true, -1, true);\n          thisObj.setState({\n            screen: \"Home\",\n            pdfFiles: pdfFiles,\n            xptLocation: xptLocation,\n            rawDatasetLocaton: rawDatasetLocaton,\n            fileRawDatasetSelect: fileRawDatasetSelect,\n            defineOutputTypeDropDown: studyData.defineOutputType\n          });\n        } else {\n          thisObj.setState({\n            screen: \"Home\",\n            pdfFiles: [],\n            xptLocation: [],\n            rawDatasetLocaton: [],\n            fileRawDatasetSelect: [],\n            defineOutputTypeDropDown: []\n          });\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var property = _objectSpread({}, this.props);\n      var progress = this.state.progress;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: tabStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        activeKey: this.state.activeKey,\n        onChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tab: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"line-chart\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 33\n          }\n        }), \"Workflow Status\"),\n        key: \"workflow_key\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(WorkflowStatus, Object.assign({}, property, thisObj.state, {\n        reload: this.reload,\n        beforeUpdateTheWorkFlow: this.beforeUpdateTheWorkFlow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 29\n        }\n      }))), (property.study.annotationRequired || property.study.mappingRequried) && /*#__PURE__*/React.createElement(TabPane, {\n        tab: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"apple\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 33\n          }\n        }), \"Transformation\"),\n        key: \"transformation_key\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 95\n        }\n      }, /*#__PURE__*/React.createElement(Annotation, Object.assign({}, property, thisObj.state, {\n        reload: this.reload,\n        beforeUpdateTheWorkFlow: this.beforeUpdateTheWorkFlow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 29\n        }\n      }))), property.study.defineRequired && /*#__PURE__*/React.createElement(TabPane, {\n        tab: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"android\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 37\n          }\n        }), \"Define XML\"),\n        key: \"define_key\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DefineGeneration, Object.assign({}, property, thisObj.state, {\n        reload: this.reload,\n        beforeUpdateTheWorkFlow: this.beforeUpdateTheWorkFlow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 29\n        }\n      })))), this.state.esign && /*#__PURE__*/React.createElement(ConfirmWithEsign, {\n        visible: this.state.esign,\n        studyPage: this,\n        defaultValue: \"\",\n        esignText: this.state.esignText,\n        cancelEsign: this.cancelEsign,\n        onSubmit: this.afterEsignVerfied,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Progress, {\n        progress: progress,\n        NoInitialPercent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 18\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, currentState) {\n      var activeKey = newProps.activeKey;\n      if (activeKey !== \"Activity Configuration\" && currentState.updateData.length > 0) {\n        return {\n          annotationWorkFlows: [],\n          transFormationWorkFlows: [],\n          defineOutputTypeDropDown: [],\n          activityConfigStatusDetails: [],\n          ActivityConfigStatusDetailsList: [],\n          updateData: [],\n          activeKey: \"workflow_key\"\n        };\n      }\n    }\n\n    //workflow Start\n    //Before update\n  }]);\n  return ActivityConfig;\n}(Component);\nexport { ActivityConfig as default };","map":{"version":3,"names":["React","Component","Tabs","Icon","Annotation","DefineGeneration","ConfirmWithEsign","validJSON","showProgress","hideProgress","CallServerPost","errorModal","errorModalCallback","successModalCallback","successModal","PostCallWithZone","DownloadFileWithPostData","checkPermission","getProjectRole","dynamicModal","TreeNode","moment","WorkflowStatus","Progress","offProgress","TabPane","tabStyle","height","overflow","thisObj","ActivityConfig","props","initialiseStatus","Annot","text","id","Trans","Define","beforeUpdateTheWorkFlow","targetStatusID","Activitie","study","workflowObj","ActivityConfigStatusDetailsList","state","changedWorkflowToUpdate","find","wrkflo","selectedActivityWorkflow","wf","workflowActivityStatusID","sourceStatusID","workflowActivityID","data","studyID","projectID","changeReason","targetStatusText","workflowActivityStatusTransitionID","updatedDateTime","StudyWorkFlowID","studyWorkflowID","title","icon","msg","className","onOk","eSignRequired","setState","esign","workFlowDataToUpdate","esignText","replace","UpdateStudyList","updateWorkFlow","onCancel","form","resetFields","afterEsignVerfied","WorkFlow","AnnotationReviewCompleted","TransformationReviewCompleted","DefineGenerationReviewCompleted","StudyCompleted","projectRole","zones","tz","guess","timezone","zoneAbbr","updatedBy","userProfile","userID","TimeZone","UpdatedBy","progress","then","response","status","message","reload","cancelEsign","getGetActivityConfigurationByStudyID","screen","StudyWorkflow","WorkflowActivityStatusTransition","currentWrkflwOfStudy","w","currentWorkflowActivityStatusID","FormName","ActionName","StudyID","ProjectID","value","annotationWorkFlows","transFormationWorkFlows","defineWorkFlows","map","activitie","AnnotWrkFlw","annotationStatus","AnnotStaus","x","displayText","filter","wrkFlo","TransWrkFlw","transformationStatus","TransStaus","DefineWrkFlw","defineStatus","DefineStaus","updateData","ActivityConfigList","onTabChange","activeKey","ModalText","home","pdfFiles","xptLocation","selectedStatus","rawDatasetLocaton","fileRawDatasetSelect","defineOutputTypeDropDown","activityConfigStatusDetails","getDDL","studyData","treeLoop","folderOnly","parent","isRaw","item","children","notRaw","ch","folder","length","key","selectable","pdfLocation","sas7BdatLocation","defineOutputType","catch","error","property","annotationRequired","mappingRequried","defineRequired","newProps","currentState"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Study/StudyConfig/activityConfig.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Tabs, Icon } from 'antd';\r\nimport { Annotation } from '.././ActivityConfig/Annotation';\r\nimport { DefineGeneration } from '../ActivityConfig/Define';\r\nimport ConfirmWithEsign from '../confirmationWithEsign';\r\nimport {\r\n    validJSON,\r\n    showProgress,\r\n    hideProgress,\r\n    CallServerPost,\r\n    errorModal,\r\n    errorModalCallback,\r\n    successModalCallback,\r\n    successModal,\r\n    PostCallWithZone,\r\n    DownloadFileWithPostData,\r\n    checkPermission,\r\n    getProjectRole,\r\n    dynamicModal\r\n} from '../../Utility/sharedUtility';\r\nimport {\r\n    TreeNode\r\n} from '../../../components/uielements/tree';\r\nimport moment from 'moment-timezone';\r\nimport WorkflowStatus from '../ActivityConfig/WorkflowStatus';\r\nimport Progress from '../../Utility/ProgressBar';\r\n\r\n\r\nlet offProgress = false;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst tabStyle = { height: \"calc(100vh - 99px)\", overflow: \"auto\" };\r\nvar thisObj;\r\nexport default class ActivityConfig extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ModalText: 'Content of the modal',\r\n            screen: \"\",\r\n            home: false,\r\n            esign: false,\r\n            pdfFiles: [],\r\n            esignText: \"\",\r\n            xptLocation: [],\r\n            progress:\"\",\r\n            selectedStatus: \"\",\r\n            changeReason: false,\r\n            defineWorkFlows: [],\r\n            rawDatasetLocaton: [],\r\n            fileRawDatasetSelect: [],\r\n            workFlowDataToUpdate: [],\r\n            annotationWorkFlows: [],\r\n            transFormationWorkFlows: [],\r\n            defineOutputTypeDropDown: [],\r\n            activityConfigStatusDetails: [],\r\n            ActivityConfigStatusDetailsList: [],\r\n            updateData: [],\r\n            status: this.initialiseStatus(),\r\n            activeKey: \"workflow_key\"\r\n        };\r\n        thisObj = this;\r\n        this.getGetActivityConfigurationByStudyID();\r\n        this.getDDL();\r\n\r\n    }\r\n\r\n    initialiseStatus = () => {\r\n        return {\r\n            Annot: { text: \"Not yet configured\", id: -1 },\r\n            Trans: { text: \"Not yet configured\", id: -1 },\r\n            Define: { text: \"Not yet configured\", id: -1 },\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(newProps, currentState) {\r\n        let { activeKey } = newProps;\r\n        if (activeKey !== \"Activity Configuration\" && currentState.updateData.length > 0) {\r\n            return {\r\n                annotationWorkFlows: [],\r\n                transFormationWorkFlows: [],\r\n                defineOutputTypeDropDown: [],\r\n                activityConfigStatusDetails: [],\r\n                ActivityConfigStatusDetailsList: [],\r\n                updateData: [], activeKey: \"workflow_key\"\r\n            }\r\n        }\r\n    }\r\n\r\n    //workflow Start\r\n    //Before update\r\n    beforeUpdateTheWorkFlow = (targetStatusID, Activitie) => {\r\n\r\n        //Selcted study workflow obj\r\n        let { study, workflowObj } = thisObj.props;\r\n\r\n        let { ActivityConfigStatusDetailsList } = this.state;\r\n\r\n\r\n        let changedWorkflowToUpdate = Activitie && Activitie.find(wrkflo => wrkflo.targetStatusID === targetStatusID);\r\n        let selectedActivityWorkflow = changedWorkflowToUpdate && ActivityConfigStatusDetailsList.find(wf => wf.workflowActivityStatusID == changedWorkflowToUpdate.sourceStatusID);\r\n        let { workflowActivityID, workflowActivityStatusID } = selectedActivityWorkflow;\r\n\r\n        let data =\r\n        {\r\n            studyID: study.studyID,\r\n            projectID: study.projectID,\r\n            workflowActivityID: workflowActivityID,\r\n            //targetStatusID means selected Workflow workflowActivityStatusID\r\n            workflowActivityStatusID: targetStatusID,\r\n            changeReason: changedWorkflowToUpdate.targetStatusText,\r\n            workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID,\r\n            updatedDateTime: selectedActivityWorkflow.updatedDateTime,\r\n            StudyWorkFlowID: selectedActivityWorkflow.studyWorkflowID\r\n        }\r\n        dynamicModal({\r\n            title: \"Confirmation\",\r\n            icon: \"exclamation-circle\",\r\n            msg: \"Do you want to change the status?\",\r\n            className: \"UserAssignedPop\",\r\n\r\n            onOk: () => {\r\n                if (changedWorkflowToUpdate.eSignRequired) {\r\n                    showProgress();\r\n                    thisObj.setState({\r\n                        esign: true,\r\n                        workFlowDataToUpdate: data,\r\n                        esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\r\n                    });\r\n                    this.props.UpdateStudyList();\r\n                    hideProgress();\r\n                }\r\n                else {\r\n                    thisObj.updateWorkFlow(data);\r\n                }\r\n            },\r\n            onCancel: () => {\r\n                thisObj.props.form.resetFields();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //After Esifn verify\r\n    afterEsignVerfied = () => {\r\n        let { workFlowDataToUpdate } = thisObj.state;\r\n        workFlowDataToUpdate[\"eSignVerified\"] = true;\r\n        thisObj.updateWorkFlow(workFlowDataToUpdate);\r\n    }\r\n\r\n    //Get Manual Esign text\r\n    esignText = (WorkFlow) => {\r\n        let text =\r\n        {\r\n            AnnotationReviewCompleted: \"I have reviewed this annotated document.\",\r\n            TransformationReviewCompleted: \"I have reviewed the mapping logic and verified the transformed output.\",\r\n            DefineGenerationReviewCompleted: \"I have reviewed generated define XML.\",\r\n            StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\",\r\n        }\r\n\r\n        return text[WorkFlow];\r\n    }\r\n\r\n\r\n    //Final\r\n    updateWorkFlow = (data) => {\r\n\r\n        const projectRole = getProjectRole();\r\n        const zones = moment.tz.guess();\r\n        const timezone = moment.tz(zones).zoneAbbr();\r\n        let updatedBy = projectRole.userProfile.userID;\r\n        data.TimeZone = timezone;\r\n        data.UpdatedBy = updatedBy;\r\n\r\n\r\n        if (data.workflowActivityStatusTransitionID == 23)\r\n        {\r\n            thisObj.setState({ progress: \"active\" });\r\n\r\n        }\r\n        else {\r\n            showProgress();\r\n        }\r\n        PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(\r\n            function (response) {\r\n                hideProgress();\r\n                if (response.status == 1) \r\n                {\r\n                    thisObj.setState({ esign: false, progress: \"exception\"  });\r\n                    successModalCallback(response.message, () => { thisObj.reload() });\r\n                }\r\n                else {\r\n                    thisObj.setState({ esign: false, progress: \"exception\" });\r\n\r\n                    thisObj.props.form.resetFields();\r\n                    thisObj.setState({ esign: false });\r\n                    errorModalCallback(response.message, () => {\r\n                        thisObj.props.form.resetFields();\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    cancelEsign = (studyID) => {\r\n        thisObj.props.form.resetFields();\r\n        this.setState({ esign: false });\r\n    }\r\n\r\n\r\n    //getGetActivityConfigurationByStudyID\r\n    getGetActivityConfigurationByStudyID = (screen = \"\") => {\r\n        const thisObj = this;\r\n        let { study, workflowObj } = thisObj.props;\r\n\r\n        //for filter the dropdown values of Annotation,Transformation,Define\r\n        let { StudyWorkflow, WorkflowActivityStatusTransition } = workflowObj;\r\n        //Selcted study workflow obj\r\n        let currentWrkflwOfStudy = StudyWorkflow.find(w => w.studyID === study.studyID);\r\n        //selected study workflowActivityStatusID\r\n        let currentWorkflowActivityStatusID = currentWrkflwOfStudy && currentWrkflwOfStudy.workflowActivityStatusID;\r\n\r\n        showProgress();\r\n\r\n        CallServerPost('ActivityConfiguration/GetActivityConfigurationByStudyID',\r\n            {\r\n                FormName: \"Study\",\r\n                ActionName: \"Create\",\r\n                StudyID: study.studyID,\r\n                ProjectID: this.props.projectID\r\n            }).then(function (response) {\r\n                //Maintain offProgress why because we are calling two controller simultaneously\r\n                offProgress && hideProgress();\r\n                offProgress = !offProgress;\r\n\r\n                if (response.status === 1) {\r\n                    let data = response.value;\r\n                    if (data && typeof data === \"object\") {\r\n                        let status = thisObj.initialiseStatus();\r\n                        let annotationWorkFlows, transFormationWorkFlows, defineWorkFlows;\r\n                        //Set the Status of Annotation,transformation and Define\r\n                        (data.ActivityConfigStatusDetailsList || []).map(activitie => {\r\n                            switch (activitie.workflowActivityID) {\r\n                                //Annotation\r\n                                case 2:\r\n                                    {\r\n                                        let AnnotWrkFlw = data.annotationStatus;\r\n\r\n                                        let AnnotStaus = AnnotWrkFlw && AnnotWrkFlw.find(x => x.workflowActivityStatusID === activitie.workflowActivityStatusID);\r\n\r\n                                        status.Annot =\r\n                                        {\r\n                                            text: AnnotStaus && AnnotStaus.displayText,\r\n                                            id: AnnotStaus && AnnotStaus.workflowActivityStatusID && AnnotStaus.workflowActivityStatusID\r\n                                        }\r\n                                        //filter workflow based on current activitie workflowActivityStatusID                   \r\n                                        annotationWorkFlows = WorkflowActivityStatusTransition.filter(wrkFlo => {\r\n                                            return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID\r\n                                        });\r\n\r\n                                    }\r\n                                    break;\r\n                                //Transformation\r\n                                case 3:\r\n                                    {\r\n                                        let TransWrkFlw = data.transformationStatus;\r\n                                        let TransStaus = TransWrkFlw && TransWrkFlw.find(x => x.workflowActivityStatusID === activitie.workflowActivityStatusID);\r\n                                        status.Trans =\r\n                                        {\r\n                                            text: TransStaus && TransStaus.displayText,\r\n                                            id: TransStaus && TransStaus.workflowActivityStatusID && TransStaus.workflowActivityStatusID\r\n                                        }\r\n                                        //filter workflow based on current activitie workflowActivityStatusID                       \r\n                                        transFormationWorkFlows = WorkflowActivityStatusTransition.filter(wrkFlo => {\r\n                                            return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                                //Define\r\n                                case 4:\r\n                                    {\r\n                                        let DefineWrkFlw = data.defineStatus;\r\n                                        let DefineStaus = DefineWrkFlw && DefineWrkFlw.find(x => x.workflowActivityStatusID === activitie.workflowActivityStatusID);\r\n                                        status.Define =\r\n                                        {\r\n                                            text: DefineStaus && DefineStaus.displayText,\r\n                                            id: DefineStaus && DefineStaus.workflowActivityStatusID && DefineStaus.workflowActivityStatusID\r\n                                        }\r\n\r\n                                        //filter workflow based on current activitie workflowActivityStatusID                       \r\n                                        defineWorkFlows = WorkflowActivityStatusTransition.filter(wrkFlo => {\r\n                                            return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n                        });\r\n\r\n                        //the following line is used only for when save the activity config\r\n                        //have to reset the selected dropdown values\r\n                        thisObj.props.form.resetFields();\r\n                        //end\r\n\r\n                        thisObj.setState({\r\n\r\n                            status,\r\n                            //screen: \"Home\",\r\n                            updateData: data.ActivityConfigList,\r\n                            defineWorkFlows: defineWorkFlows,\r\n                            annotationWorkFlows: annotationWorkFlows,\r\n                            transFormationWorkFlows: transFormationWorkFlows,\r\n                            ActivityConfigStatusDetailsList: data.ActivityConfigStatusDetailsList,\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    hideProgress();\r\n                    thisObj.setState({\r\n                        screen: \"Home\",\r\n                        updateData: [],\r\n                        defineWorkFlows: [],\r\n                        annotationWorkFlows: [],\r\n                        transFormationWorkFlows: [],\r\n                        status: thisObj.initialiseStatus(),\r\n                        ActivityConfigStatusDetailsList: [],\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    getDDL() {\r\n        const thisObj = this;\r\n        let { study } = thisObj.props;\r\n        showProgress();\r\n\r\n        CallServerPost('ActivityConfiguration/GetValuesForCreateActivityConfiguration', {\r\n            FormName: \"Study\",\r\n            ActionName: \"Create\",\r\n            StudyID: study.studyID,\r\n            ProjectID: this.props.projectID\r\n        }).then(\r\n            function (response) {\r\n                //console.log(response);\r\n                //Maintain offProgress why because we are calling two controller simultaneously\r\n                offProgress && hideProgress();\r\n                offProgress = !offProgress;\r\n\r\n                if (response.status === 1) {\r\n                    const studyData = response.value;\r\n                    const treeLoop = (data, folderOnly, parent = -1, isRaw = false) =>\r\n                        data.map(item => {\r\n                            if (item.children) {\r\n                                var notRaw = isRaw ? item.children.filter(ch => ch.folder === false).length > 0 : true;\r\n                                return (\r\n                                    <TreeNode selectable={folderOnly && item.folder && notRaw}\r\n                                        key={item.key}\r\n                                        value={item.key}\r\n                                        title={item.title}\r\n                                        parent={item.key}\r\n                                    >\r\n                                        {treeLoop(item.children, folderOnly, item.key,isRaw)}\r\n                                    </TreeNode>\r\n                                );\r\n                            }\r\n                            else {\r\n                                var selectable = true;\r\n                                if (folderOnly && !item.folder) {\r\n                                    selectable = false;\r\n                                }\r\n                                if (item.key !== studyData[\"protocolDoc\"]) {\r\n                                    return <TreeNode parent={parent} selectable={selectable} key={item.key} value={item.key} title={item.title} />;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n\r\n                    //Annotatoin,TransFormation,Define Dropdown values\r\n\r\n                    //for Annotation CRFDocument\r\n                    const pdfFiles = treeLoop([studyData[\"DocumentsTree\"].pdfLocation], false);\r\n\r\n                    //for transformation Output Standardized Dataset Location\r\n                    //for Define Standardized Dataset Location\r\n                    const xptLocation = treeLoop([studyData[\"DocumentsTree\"].xptLocation], true);\r\n\r\n\r\n                    //for Transformation Raw Dataset Location\r\n                    const fileRawDatasetSelect = treeLoop([studyData[\"DocumentsTree\"].sas7BdatLocation], false);\r\n\r\n                    //for Transformation Raw Dataset Location\r\n                    const rawDatasetLocaton = treeLoop([studyData[\"DocumentsTree\"].sas7BdatLocation], true,-1,true);\r\n\r\n                    thisObj.setState(\r\n                        {\r\n                            screen: \"Home\",\r\n                            pdfFiles: pdfFiles,\r\n                            xptLocation: xptLocation,\r\n                            rawDatasetLocaton: rawDatasetLocaton,\r\n                            fileRawDatasetSelect: fileRawDatasetSelect,\r\n                            defineOutputTypeDropDown: studyData.defineOutputType,\r\n                        });\r\n                }\r\n                else {\r\n                    thisObj.setState(\r\n                        {\r\n                            screen: \"Home\",\r\n                            pdfFiles: [],\r\n                            xptLocation: [],\r\n                            rawDatasetLocaton: [],\r\n                            fileRawDatasetSelect: [],\r\n                            defineOutputTypeDropDown: [],\r\n                        });\r\n                }\r\n            }).catch(error => error);\r\n    }\r\n\r\n    reload = () => {\r\n        offProgress = true;\r\n        this.getGetActivityConfigurationByStudyID();\r\n        this.props.UpdateStudyList();\r\n    }\r\n\r\n    onTabChange = (activeKey) => {\r\n        this.setState({ activeKey: activeKey });\r\n    };\r\n\r\n    render() {\r\n        var property = { ...this.props };\r\n        let { progress } = this.state;\r\n        return (\r\n            <div style={tabStyle}>\r\n                <Tabs activeKey={this.state.activeKey}\r\n                    onChange={this.onTabChange}\r\n                >\r\n                    <TabPane\r\n                        tab={\r\n                            <span>\r\n                                <Icon type=\"line-chart\" />\r\n                                Workflow Status\r\n                            </span>\r\n                        }\r\n                        key=\"workflow_key\"\r\n                    >\r\n                        {\r\n                            <WorkflowStatus\r\n                                {...property}\r\n                                {...thisObj.state}\r\n                                reload={this.reload}\r\n                                beforeUpdateTheWorkFlow={this.beforeUpdateTheWorkFlow}\r\n                            />}\r\n                    </TabPane>\r\n                    {(property.study.annotationRequired || property.study.mappingRequried) && <TabPane\r\n                        tab={\r\n                            <span>\r\n                                <Icon type=\"apple\" />\r\n                                Transformation\r\n                            </span>\r\n                        }\r\n                        key=\"transformation_key\"\r\n                    >\r\n                            <Annotation\r\n                                {...property}\r\n                                {...thisObj.state}\r\n                                reload={this.reload}\r\n                                beforeUpdateTheWorkFlow={this.beforeUpdateTheWorkFlow} />\r\n\r\n                    </TabPane>}\r\n                    {property.study.defineRequired &&\r\n                        <TabPane\r\n                            tab={\r\n                                <span>\r\n                                    <Icon type=\"android\" />\r\n                                    Define XML\r\n                                </span>\r\n                            }\r\n                        key=\"define_key\"\r\n                        >\r\n                            <DefineGeneration {...property} {...thisObj.state} reload={this.reload} beforeUpdateTheWorkFlow={this.beforeUpdateTheWorkFlow} />\r\n                        </TabPane>\r\n                    }\r\n                </Tabs>\r\n                {this.state.esign &&\r\n                    <ConfirmWithEsign\r\n                        visible={this.state.esign}\r\n                        studyPage={this}\r\n                        defaultValue={\"\"}\r\n                        esignText={this.state.esignText}\r\n                        cancelEsign={this.cancelEsign}\r\n                        onSubmit={this.afterEsignVerfied}\r\n                    />\r\n                }\r\n               { <Progress progress={progress} NoInitialPercent={true} />}\r\n\r\n            </div>)\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}