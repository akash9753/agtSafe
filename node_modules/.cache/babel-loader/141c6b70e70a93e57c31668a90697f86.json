{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Standards\\\\cDISCDataStdDomainList.js\";\nimport React, { Component } from 'react';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport AddStdDomain from './addStandardDomain.js';\nimport ReactTable from '../Utility/reactTable';\nimport { Icon, Spin, Form, Breadcrumb } from 'antd';\nimport Button from '../../components/uielements/button';\nimport { CallServerPost, PostCallWithZone, successModal, successModalCallback, errorModal, checkPermission } from '../Utility/sharedUtility';\nimport ConfirmModal from '../Utility/ConfirmModal';\nimport { stringSorter } from '../Utility/htmlUtility';\n//Importing ButtonWithToolTip for Edit and Delete Icon\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\nvar dataSource = [];\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }\n});\nvar thisObj;\nvar StdDomainList = /*#__PURE__*/function (_Component) {\n  _inherits(StdDomainList, _Component);\n  var _super = _createSuper(StdDomainList);\n  function StdDomainList(props) {\n    var _this;\n    _classCallCheck(this, StdDomainList);\n    _this = _super.call(this, props);\n    _this.getList = function (data) {\n      CallServerPost('CDISCDataStdDomainMetadata/GetCDISCDataStdDomainMetadataByStdDomainClass', {\n        CDISCDataStdDomainClassID: data.currentTreeNodeObject.dataRef.key\n      }).then(function (response) {\n        if (response.value != null) {\n          thisObj.doaminList(response);\n          thisObj.setState({\n            loading: false\n          });\n        } else {\n          thisObj.setState({\n            dataSource: [],\n            loading: false\n          });\n        }\n      });\n    };\n    _this.doaminList = function (response) {\n      var datas = [];\n      var domainList = response.value;\n      var permissions = _this.props.permissions;\n      var perLevel = checkPermission(permissions, [\"self\"]);\n      // Loop to create table datasource\n      var _loop = function _loop() {\n        var cdiscDataStdDomainMetadataID = domainList[i].cdiscDataStdDomainMetadataID;\n        var currentList = domainList[i];\n        var editCell = /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 30\n          }\n        }, perLevel >= 2 /* && cdiscDataStdDomainMetadataID > 10195*/ ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n          name: domainList[i].domain + \"_Edit\",\n          style: {\n            marginRight: 5\n          },\n          tooltip: perLevel >= 2 ? \"Edit\" : \"View\",\n          shape: \"circle\",\n          classname: \"fas fa-pen\",\n          size: \"small\",\n          onClick: function onClick() {\n            return thisObj.editStdDomain(cdiscDataStdDomainMetadataID);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 78\n          }\n        }) : \"\", perLevel >= 4 /*&& cdiscDataStdDomainMetadataID > 10195*/ ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n          name: domainList[i].domain + \"_Delete\",\n          style: {\n            marginRight: 5\n          },\n          tooltip: \"Delete\",\n          shape: \"circle\",\n          classname: \"fas fa-trash-alt\",\n          size: \"small\",\n          onClick: function onClick() {\n            return thisObj.deleteDomain(cdiscDataStdDomainMetadataID);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 78\n          }\n        }) : \"\");\n        datas.push({\n          key: domainList[i].cdiscDataStdDomainMetadataID,\n          domain: domainList[i].domain,\n          domainDescription: domainList[i].domainDescription,\n          structure: domainList[i].structure,\n          actions: editCell\n        });\n      };\n      for (var i = 0; i < domainList.length; i++) {\n        _loop();\n      }\n\n      //Setting values to state for re-rendering\n      thisObj.setState({\n        dataSource: datas,\n        loading: false\n      });\n    };\n    _this.addStdDomain = function () {\n      _this.setState({\n        title: \"Add Domain\",\n        showAddStdDomain: true,\n        action: 'Create',\n        cDISCDataStdDomainMetadataID: 0\n      });\n    };\n    _this.editStdDomain = function (cdiscDataStdDomainMetadataID) {\n      _this.setState({\n        title: \"Edit Domain\",\n        showAddStdDomain: true,\n        action: 'Update',\n        cDISCDataStdDomainMetadataID: cdiscDataStdDomainMetadataID\n      });\n    };\n    _this.deleteDomain = function (cdiscDataStdDomainMetadataID) {\n      _this.setState({\n        title: \"Delete Domain\",\n        showDeleteConfirmationModal: true,\n        cDISCDataStdDomainMetadataID: cdiscDataStdDomainMetadataID,\n        action: \"Delete\"\n      });\n    };\n    _this.handleAddStdDomainCancel = function () {\n      _this.setState({\n        action: \"\",\n        showAddStdDomain: false\n      });\n    };\n    _this.handleCancelDeleteConfirmationModal = function () {\n      _this.setState({\n        showDeleteConfirmationModal: false\n      });\n      _this.props.form.resetFields([\"Change Reason\"]);\n    };\n    _this.handleDelete = function (ChangeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      var values = {};\n      thisObj.setState({\n        modalLoad: true\n      });\n      values[\"ChangeReason\"] = ChangeReason;\n      values[\"CDISCDataStdDomainMetadataID\"] = thisObj.state.cDISCDataStdDomainMetadataID;\n      PostCallWithZone('CDISCDataStdDomainMetadata/Delete', values).then(function (response) {\n        thisObj.setState({\n          modalLoad: false\n        });\n        if (response.status == 1) {\n          thisObj.setState({\n            showDeleteConfirmationModal: false\n          });\n          successModalCallback(response.message, thisObj.refreshTree);\n        } else {\n          thisObj.setState({\n            showDeleteConfirmationModal: false\n          });\n          errorModal(response.message);\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.refreshTree = function () {\n      thisObj.props.history();\n      thisObj.setState({\n        modalLoading: false,\n        action: '',\n        showDeleteConfirmationModal: false,\n        showAddStdDomain: false\n      });\n    };\n    _this.addStdDomain = _this.addStdDomain.bind(_assertThisInitialized(_this));\n    _this.state = {\n      title: null,\n      showAddStdDomain: false,\n      showDeleteConfirmationModal: false,\n      action: \"\",\n      dataSource: dataSource,\n      cDISCDataStdDomainMetadataID: 0,\n      cDISCDataStdDomainClassID: 0,\n      cDISCDataStdVersionID: 0,\n      loading: true,\n      modalLoad: false\n    };\n    thisObj = _assertThisInitialized(_this);\n    thisObj.getList(thisObj.props);\n    return _this;\n  }\n  _createClass(StdDomainList, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.pageRefresh) {\n        thisObj.setState({\n          loading: true\n        });\n        thisObj.getList(nextProps);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        title: 'Domain',\n        dataIndex: 'domain',\n        key: 'domain',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'domain');\n        },\n        width: 50\n      }, {\n        title: 'Domain Description',\n        dataIndex: 'domainDescription',\n        key: 'domainDescription',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'domainDescription');\n        },\n        width: 150\n      }, {\n        title: 'Structure',\n        dataIndex: 'structure',\n        key: 'structure',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'structure');\n        },\n        width: 150\n      }, {\n        title: 'Actions',\n        dataIndex: 'actions',\n        key: 'actions',\n        width: 50\n      }];\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n        showAddStdDomain = _this$state.showAddStdDomain,\n        title = _this$state.title,\n        action = _this$state.action,\n        cDISCDataStdDomainMetadataID = _this$state.cDISCDataStdDomainMetadataID;\n      var permissions = this.props.permissions;\n      return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-list-ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, \"Domain\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }, \"List\")), /*#__PURE__*/React.createElement(LayoutContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: antIcon,\n        spinning: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactTable, {\n        columns: columns,\n        dataSource: this.state.dataSource,\n        addAction: checkPermission(permissions, [\"self\"]) >= 3 ? this.addStdDomain : null,\n        scroll: {\n          y: \"calc(100vh - 314px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      })), (action == \"Update\" || action == \"Create\") && /*#__PURE__*/React.createElement(AddStdDomain, {\n        readOnly: checkPermission(permissions, [\"self\"]) <= 1,\n        title: title,\n        visible: showAddStdDomain,\n        cDISCDataStdVersionID: this.props.currentTreeNodeObject.parentKey,\n        cDISCDataStdDomainClassID: this.props.currentTreeNodeObject.dataRef.key,\n        cDISCDataStdDomainMetadataID: cDISCDataStdDomainMetadataID,\n        handleCancel: this.handleAddStdDomainCancel,\n        history: this.refreshTree,\n        action: action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 68\n        }\n      }), action == \"Delete\" && /*#__PURE__*/React.createElement(ConfirmModal, {\n        title: \"Delete Domain\",\n        SubmitButtonName: \"Delete\",\n        onSubmit: this.handleDelete,\n        visible: this.state.showDeleteConfirmationModal,\n        handleCancel: this.handleCancelDeleteConfirmationModal,\n        getFieldDecorator: getFieldDecorator,\n        loading: this.state.modalLoad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 46\n        }\n      })));\n    }\n  }]);\n  return StdDomainList;\n}(Component);\nvar WrappedApp = Form.create()(StdDomainList);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","LayoutContentWrapper","LayoutContent","AddStdDomain","ReactTable","Icon","Spin","Form","Breadcrumb","Button","CallServerPost","PostCallWithZone","successModal","successModalCallback","errorModal","checkPermission","ConfirmModal","stringSorter","ButtonWithToolTip","dataSource","antIcon","fontSize","color","thisObj","StdDomainList","props","getList","data","CDISCDataStdDomainClassID","currentTreeNodeObject","dataRef","key","then","response","value","doaminList","setState","loading","datas","domainList","permissions","perLevel","cdiscDataStdDomainMetadataID","i","currentList","editCell","domain","marginRight","editStdDomain","deleteDomain","push","domainDescription","structure","actions","length","addStdDomain","title","showAddStdDomain","action","cDISCDataStdDomainMetadataID","showDeleteConfirmationModal","handleAddStdDomainCancel","handleCancelDeleteConfirmationModal","form","resetFields","handleDelete","ChangeReason","values","modalLoad","state","status","message","refreshTree","catch","error","history","modalLoading","bind","cDISCDataStdDomainClassID","cDISCDataStdVersionID","nextProps","pageRefresh","columns","dataIndex","sorter","a","b","width","getFieldDecorator","y","parentKey","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Standards/cDISCDataStdDomainList.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport AddStdDomain from './addStandardDomain.js';\r\nimport ReactTable from '../Utility/reactTable';\r\nimport { Icon, Spin, Form, Breadcrumb } from 'antd';\r\nimport Button from '../../components/uielements/button';\r\nimport { CallServerPost, PostCallWithZone, successModal, successModalCallback, errorModal, checkPermission } from '../Utility/sharedUtility';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\nimport { stringSorter } from '../Utility/htmlUtility';\r\n//Importing ButtonWithToolTip for Edit and Delete Icon\r\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\r\n\r\nconst dataSource = [];\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\r\nvar thisObj;\r\n\r\nclass StdDomainList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addStdDomain = this.addStdDomain.bind(this);\r\n\r\n        this.state = {\r\n            title: null,\r\n            showAddStdDomain: false,\n            showDeleteConfirmationModal: false,\n            action: \"\",\n            dataSource,\n            cDISCDataStdDomainMetadataID: 0,\n            cDISCDataStdDomainClassID: 0,\n            cDISCDataStdVersionID: 0,\n            loading: true,\n            modalLoad: false,\n        }\n\n        thisObj = this;\n        thisObj.getList(thisObj.props);\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.pageRefresh) {\r\n            thisObj.setState({ loading: true });\r\n            thisObj.getList(nextProps);\r\n        }\r\n    }\r\n\r\n    getList = (data) => {\r\n        CallServerPost('CDISCDataStdDomainMetadata/GetCDISCDataStdDomainMetadataByStdDomainClass', { CDISCDataStdDomainClassID: data.currentTreeNodeObject.dataRef.key })\r\n            .then(\r\n                function (response) {\r\n                    if (response.value != null) {\r\n                        thisObj.doaminList(response);\r\n                        thisObj.setState({ loading: false });\r\n                    }\r\n                    else {\r\n                        thisObj.setState({ dataSource: [], loading: false });\r\n                    }\r\n                });\r\n    }\r\n\r\n    doaminList = (response) => {\r\n\r\n        var datas = [];\r\n        const domainList = response.value\n        const permissions = this.props.permissions;\r\n        const perLevel = checkPermission(permissions, [\"self\"]);\r\n        // Loop to create table datasource\r\n        for (var i = 0; i < domainList.length; i++) {\r\n\r\n            const cdiscDataStdDomainMetadataID = domainList[i].cdiscDataStdDomainMetadataID;\r\n            const currentList = domainList[i];\r\n\r\n            const editCell = <div>\n\n                {perLevel >= 2/* && cdiscDataStdDomainMetadataID > 10195*/ ? <ButtonWithToolTip\n                    name={domainList[i].domain + \"_Edit\"}\n                    style={{ marginRight: 5 }}\n                    tooltip={perLevel >= 2 ? \"Edit\" : \"View\"}\n                    shape=\"circle\"\n                    classname=\"fas fa-pen\"\n                    size=\"small\"\n                    onClick={() => thisObj.editStdDomain(cdiscDataStdDomainMetadataID)}\n                /> : \"\"}\n\n                {perLevel >= 4 /*&& cdiscDataStdDomainMetadataID > 10195*/ ? <ButtonWithToolTip\n                    name={domainList[i].domain + \"_Delete\"}\n                    style={{ marginRight: 5 }}\n                    tooltip=\"Delete\"\n                    shape=\"circle\"\n                    classname=\"fas fa-trash-alt\"\n                    size=\"small\"\n                    onClick={() => thisObj.deleteDomain(cdiscDataStdDomainMetadataID)}\r\n                /> : \"\"}\r\n\r\n            </div>\r\n\r\n            datas.push({\r\n                key: domainList[i].cdiscDataStdDomainMetadataID,\r\n                domain: domainList[i].domain,\r\n                domainDescription: domainList[i].domainDescription,\r\n                structure: domainList[i].structure,\r\n                actions: editCell\r\n            });\r\n\r\n        }\r\n\r\n        //Setting values to state for re-rendering\r\n        thisObj.setState({ dataSource: datas, loading: false });\r\n    }\r\n\r\n    addStdDomain = () => {\r\n        this.setState({ title: \"Add Domain\", showAddStdDomain: true, action: 'Create', cDISCDataStdDomainMetadataID: 0 })\r\n    }\r\n\r\n    editStdDomain = (cdiscDataStdDomainMetadataID) => {\r\n        this.setState({ title: \"Edit Domain\", showAddStdDomain: true, action: 'Update', cDISCDataStdDomainMetadataID: cdiscDataStdDomainMetadataID })\r\n    }\r\n\r\n    deleteDomain = (cdiscDataStdDomainMetadataID) => {\r\n        this.setState({ title: \"Delete Domain\", showDeleteConfirmationModal: true, cDISCDataStdDomainMetadataID: cdiscDataStdDomainMetadataID, action: \"Delete\" })\r\n    }\r\n\r\n    handleAddStdDomainCancel = () => {\r\n        this.setState({ action: \"\", showAddStdDomain: false });\r\n    }\r\n\r\n    handleCancelDeleteConfirmationModal = () => {\r\n        this.setState({ showDeleteConfirmationModal: false });\r\n        this.props.form.resetFields([\"Change Reason\"]);\r\n    }\r\n\r\n    handleDelete = (ChangeReason) => {\r\n        const thisObj = this;\r\n        let values = {}\r\n\r\n        thisObj.setState({ modalLoad: true });\r\n        values[\"ChangeReason\"] = ChangeReason;\r\n        values[\"CDISCDataStdDomainMetadataID\"] = thisObj.state.cDISCDataStdDomainMetadataID;\r\n\r\n        PostCallWithZone('CDISCDataStdDomainMetadata/Delete', values)\r\n            .then(\r\n                function (response) {\r\n                    thisObj.setState({ modalLoad: false });\r\n                    if (response.status == 1) {\r\n                        thisObj.setState({ showDeleteConfirmationModal: false });\r\n                        successModalCallback(response.message, thisObj.refreshTree);\r\n                    }\r\n                    else {\r\n                        thisObj.setState({ showDeleteConfirmationModal: false });\r\n                        errorModal(response.message);\r\n                    }\r\n                }).catch(error => error);\r\n\r\n    }\r\n\r\n    refreshTree = () => {\r\n        thisObj.props.history();\r\n        thisObj.setState({ modalLoading: false, action: '', showDeleteConfirmationModal: false, showAddStdDomain: false })\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'Domain',\r\n                dataIndex: 'domain',\r\n                key: 'domain',\r\n                sorter: (a, b) => stringSorter(a, b, 'domain'),\r\n                width: 50\r\n            },\r\n            {\r\n                title: 'Domain Description',\r\n                dataIndex: 'domainDescription',\r\n                key: 'domainDescription',\r\n                sorter: (a, b) => stringSorter(a, b, 'domainDescription'),\r\n                width: 150\r\n            },\r\n            {\r\n                title: 'Structure',\r\n                dataIndex: 'structure',\r\n                key: 'structure',\r\n                sorter: (a, b) => stringSorter(a, b, 'structure'),\r\n                width: 150\r\n            },\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'actions',\r\n                key: 'actions',\r\n                width: 50\r\n            }\r\n        ];\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { showAddStdDomain, title, action, cDISCDataStdDomainMetadataID } = this.state;\n        const permissions = this.props.permissions;\n\r\n        return (\r\n            <LayoutContentWrapper>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <i className=\"fas fa-list-ul\" />\r\n                        <span>Domain</span>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        List\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <LayoutContent>\r\n\r\n                    <Spin indicator={antIcon} spinning={this.state.loading}>\r\n\r\n                        <ReactTable\r\n                            columns={columns}\r\n                            dataSource={this.state.dataSource}\r\n                            addAction={checkPermission(permissions, [\"self\"]) >= 3 ? this.addStdDomain : null}\r\n                            scroll={{ y: \"calc(100vh - 314px)\" }}\r\n                        />\r\n                    </Spin>\n\r\n                    {(action == \"Update\" || action == \"Create\") && <AddStdDomain readOnly={checkPermission(permissions, [\"self\"]) <= 1} title={title} visible={showAddStdDomain} cDISCDataStdVersionID={this.props.currentTreeNodeObject.parentKey} cDISCDataStdDomainClassID={this.props.currentTreeNodeObject.dataRef.key} cDISCDataStdDomainMetadataID={cDISCDataStdDomainMetadataID} handleCancel={this.handleAddStdDomainCancel} history={this.refreshTree} action={action} />}\r\n                    {(action == \"Delete\") && <ConfirmModal title=\"Delete Domain\" SubmitButtonName=\"Delete\" onSubmit={this.handleDelete} visible={this.state.showDeleteConfirmationModal} handleCancel={this.handleCancelDeleteConfirmationModal} getFieldDecorator={getFieldDecorator} loading={this.state.modalLoad} />}\r\n\r\n                </LayoutContent>\r\n            </LayoutContentWrapper>\r\n        );\r\n    }\r\n}\r\nconst WrappedApp = Form.create()(StdDomainList);\r\nexport default WrappedApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}