{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { HorizontalRange, VisibleRanges } from '../../../common/view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { CharacterMapping, RenderLineInput, renderViewLine, LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { HIGH_CONTRAST } from '../../../../platform/theme/common/themeService.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nvar canUseFastRenderedViewLine = function () {\n  if (platform.isNative) {\n    // In VSCode we know very well when the zoom level changes\n    return true;\n  }\n  if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n    // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n    // --\n    // Even though we read character widths correctly, having read them at a specific zoom level\n    // does not mean they are the same at the current zoom level.\n    // --\n    // This could be improved if we ever figure out how to get an event when browsers zoom,\n    // but until then we have to stick with reading client rects.\n    // --\n    // The same has been observed with Firefox on Windows7\n    // --\n    // The same has been oversved with Safari\n    return false;\n  }\n  return true;\n}();\nvar alwaysRenderInlineSelection = browser.isEdgeOrIE;\nvar DomReadingContext = /** @class */function () {\n  function DomReadingContext(domNode, endNode) {\n    this._domNode = domNode;\n    this._clientRectDeltaLeft = 0;\n    this._clientRectDeltaLeftRead = false;\n    this.endNode = endNode;\n  }\n  Object.defineProperty(DomReadingContext.prototype, \"clientRectDeltaLeft\", {\n    get: function get() {\n      if (!this._clientRectDeltaLeftRead) {\n        this._clientRectDeltaLeftRead = true;\n        this._clientRectDeltaLeft = this._domNode.getBoundingClientRect().left;\n      }\n      return this._clientRectDeltaLeft;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DomReadingContext;\n}();\nexport { DomReadingContext };\nvar ViewLineOptions = /** @class */function () {\n  function ViewLineOptions(config, themeType) {\n    this.themeType = themeType;\n    var options = config.options;\n    var fontInfo = options.get(34 /* fontInfo */);\n    this.renderWhitespace = options.get(74 /* renderWhitespace */);\n    this.renderControlCharacters = options.get(69 /* renderControlCharacters */);\n    this.spaceWidth = fontInfo.spaceWidth;\n    this.middotWidth = fontInfo.middotWidth;\n    this.useMonospaceOptimizations = fontInfo.isMonospace && !options.get(23 /* disableMonospaceOptimizations */);\n    this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n    this.lineHeight = options.get(49 /* lineHeight */);\n    this.stopRenderingLineAfter = options.get(88 /* stopRenderingLineAfter */);\n    this.fontLigatures = options.get(35 /* fontLigatures */);\n  }\n\n  ViewLineOptions.prototype.equals = function (other) {\n    return this.themeType === other.themeType && this.renderWhitespace === other.renderWhitespace && this.renderControlCharacters === other.renderControlCharacters && this.spaceWidth === other.spaceWidth && this.middotWidth === other.middotWidth && this.useMonospaceOptimizations === other.useMonospaceOptimizations && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow && this.lineHeight === other.lineHeight && this.stopRenderingLineAfter === other.stopRenderingLineAfter && this.fontLigatures === other.fontLigatures;\n  };\n  return ViewLineOptions;\n}();\nexport { ViewLineOptions };\nvar ViewLine = /** @class */function () {\n  function ViewLine(options) {\n    this._options = options;\n    this._isMaybeInvalid = true;\n    this._renderedViewLine = null;\n  }\n  // --- begin IVisibleLineData\n  ViewLine.prototype.getDomNode = function () {\n    if (this._renderedViewLine && this._renderedViewLine.domNode) {\n      return this._renderedViewLine.domNode.domNode;\n    }\n    return null;\n  };\n  ViewLine.prototype.setDomNode = function (domNode) {\n    if (this._renderedViewLine) {\n      this._renderedViewLine.domNode = createFastDomNode(domNode);\n    } else {\n      throw new Error('I have no rendered view line to set the dom node to...');\n    }\n  };\n  ViewLine.prototype.onContentChanged = function () {\n    this._isMaybeInvalid = true;\n  };\n  ViewLine.prototype.onTokensChanged = function () {\n    this._isMaybeInvalid = true;\n  };\n  ViewLine.prototype.onDecorationsChanged = function () {\n    this._isMaybeInvalid = true;\n  };\n  ViewLine.prototype.onOptionsChanged = function (newOptions) {\n    this._isMaybeInvalid = true;\n    this._options = newOptions;\n  };\n  ViewLine.prototype.onSelectionChanged = function () {\n    if (alwaysRenderInlineSelection || this._options.themeType === HIGH_CONTRAST || this._options.renderWhitespace === 'selection') {\n      this._isMaybeInvalid = true;\n      return true;\n    }\n    return false;\n  };\n  ViewLine.prototype.renderLine = function (lineNumber, deltaTop, viewportData, sb) {\n    if (this._isMaybeInvalid === false) {\n      // it appears that nothing relevant has changed\n      return false;\n    }\n    this._isMaybeInvalid = false;\n    var lineData = viewportData.getViewLineRenderingData(lineNumber);\n    var options = this._options;\n    var actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n    // Only send selection information when needed for rendering whitespace\n    var selectionsOnLine = null;\n    if (alwaysRenderInlineSelection || options.themeType === HIGH_CONTRAST || this._options.renderWhitespace === 'selection') {\n      var selections = viewportData.selections;\n      for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\n        var selection = selections_1[_i];\n        if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n          // Selection does not intersect line\n          continue;\n        }\n        var startColumn = selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn;\n        var endColumn = selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn;\n        if (startColumn < endColumn) {\n          if (this._options.renderWhitespace !== 'selection') {\n            actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* Regular */));\n          } else {\n            if (!selectionsOnLine) {\n              selectionsOnLine = [];\n            }\n            selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n          }\n        }\n      }\n    }\n    var renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n    if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n      // no need to do anything, we have the same render input\n      return false;\n    }\n    sb.appendASCIIString('<div style=\"top:');\n    sb.appendASCIIString(String(deltaTop));\n    sb.appendASCIIString('px;height:');\n    sb.appendASCIIString(String(this._options.lineHeight));\n    sb.appendASCIIString('px;\" class=\"');\n    sb.appendASCIIString(ViewLine.CLASS_NAME);\n    sb.appendASCIIString('\">');\n    var output = renderViewLine(renderLineInput, sb);\n    sb.appendASCIIString('</div>');\n    var renderedViewLine = null;\n    if (canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* None */) {\n      if (lineData.content.length < 300 && renderLineInput.lineTokens.getCount() < 100) {\n        // Browser rounding errors have been observed in Chrome and IE, so using the fast\n        // view line only for short lines. Please test before removing the length check...\n        // ---\n        // Another rounding error has been observed on Linux in VSCode, where <span> width\n        // rounding errors add up to an observable large number...\n        // ---\n        // Also see another example of rounding errors on Windows in\n        // https://github.com/Microsoft/vscode/issues/33178\n        renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n      }\n    }\n    if (!renderedViewLine) {\n      renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n    }\n    this._renderedViewLine = renderedViewLine;\n    return true;\n  };\n  ViewLine.prototype.layoutLine = function (lineNumber, deltaTop) {\n    if (this._renderedViewLine && this._renderedViewLine.domNode) {\n      this._renderedViewLine.domNode.setTop(deltaTop);\n      this._renderedViewLine.domNode.setHeight(this._options.lineHeight);\n    }\n  };\n  // --- end IVisibleLineData\n  ViewLine.prototype.getWidth = function () {\n    if (!this._renderedViewLine) {\n      return 0;\n    }\n    return this._renderedViewLine.getWidth();\n  };\n  ViewLine.prototype.getWidthIsFast = function () {\n    if (!this._renderedViewLine) {\n      return true;\n    }\n    return this._renderedViewLine.getWidthIsFast();\n  };\n  ViewLine.prototype.getVisibleRangesForRange = function (startColumn, endColumn, context) {\n    if (!this._renderedViewLine) {\n      return null;\n    }\n    startColumn = startColumn | 0; // @perf\n    endColumn = endColumn | 0; // @perf\n    startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n    endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n    var stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter | 0; // @perf\n    var outsideRenderedLine = false;\n    if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n      // This range is obviously not visible\n      outsideRenderedLine = true;\n    }\n    if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n      startColumn = stopRenderingLineAfter + 1;\n    }\n    if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n      endColumn = stopRenderingLineAfter + 1;\n    }\n    var horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(startColumn, endColumn, context);\n    if (horizontalRanges && horizontalRanges.length > 0) {\n      return new VisibleRanges(outsideRenderedLine, horizontalRanges);\n    }\n    return null;\n  };\n  ViewLine.prototype.getColumnOfNodeOffset = function (lineNumber, spanNode, offset) {\n    if (!this._renderedViewLine) {\n      return 1;\n    }\n    return this._renderedViewLine.getColumnOfNodeOffset(lineNumber, spanNode, offset);\n  };\n  ViewLine.CLASS_NAME = 'view-line';\n  return ViewLine;\n}();\nexport { ViewLine };\n/**\r\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\r\n */\nvar FastRenderedViewLine = /** @class */function () {\n  function FastRenderedViewLine(domNode, renderLineInput, characterMapping) {\n    this.domNode = domNode;\n    this.input = renderLineInput;\n    this._characterMapping = characterMapping;\n    this._charWidth = renderLineInput.spaceWidth;\n  }\n  FastRenderedViewLine.prototype.getWidth = function () {\n    return this._getCharPosition(this._characterMapping.length);\n  };\n  FastRenderedViewLine.prototype.getWidthIsFast = function () {\n    return true;\n  };\n  FastRenderedViewLine.prototype.getVisibleRangesForRange = function (startColumn, endColumn, context) {\n    var startPosition = this._getCharPosition(startColumn);\n    var endPosition = this._getCharPosition(endColumn);\n    return [new HorizontalRange(startPosition, endPosition - startPosition)];\n  };\n  FastRenderedViewLine.prototype._getCharPosition = function (column) {\n    var charOffset = this._characterMapping.getAbsoluteOffsets();\n    if (charOffset.length === 0) {\n      // No characters on this line\n      return 0;\n    }\n    return Math.round(this._charWidth * charOffset[column - 1]);\n  };\n  FastRenderedViewLine.prototype.getColumnOfNodeOffset = function (lineNumber, spanNode, offset) {\n    var spanNodeTextContentLength = spanNode.textContent.length;\n    var spanIndex = -1;\n    while (spanNode) {\n      spanNode = spanNode.previousSibling;\n      spanIndex++;\n    }\n    var charOffset = this._characterMapping.partDataToCharOffset(spanIndex, spanNodeTextContentLength, offset);\n    return charOffset + 1;\n  };\n  return FastRenderedViewLine;\n}();\n/**\r\n * Every time we render a line, we save what we have rendered in an instance of this class.\r\n */\nvar RenderedViewLine = /** @class */function () {\n  function RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    this.domNode = domNode;\n    this.input = renderLineInput;\n    this._characterMapping = characterMapping;\n    this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n    this._containsForeignElements = containsForeignElements;\n    this._cachedWidth = -1;\n    this._pixelOffsetCache = null;\n    if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n      this._pixelOffsetCache = new Int32Array(Math.max(2, this._characterMapping.length + 1));\n      for (var column = 0, len = this._characterMapping.length; column <= len; column++) {\n        this._pixelOffsetCache[column] = -1;\n      }\n    }\n  }\n  // --- Reading from the DOM methods\n  RenderedViewLine.prototype._getReadingTarget = function (myDomNode) {\n    return myDomNode.domNode.firstChild;\n  };\n  /**\r\n   * Width of the line in pixels\r\n   */\n  RenderedViewLine.prototype.getWidth = function () {\n    if (!this.domNode) {\n      return 0;\n    }\n    if (this._cachedWidth === -1) {\n      this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n    }\n    return this._cachedWidth;\n  };\n  RenderedViewLine.prototype.getWidthIsFast = function () {\n    if (this._cachedWidth === -1) {\n      return false;\n    }\n    return true;\n  };\n  /**\r\n   * Visible ranges for a model range\r\n   */\n  RenderedViewLine.prototype.getVisibleRangesForRange = function (startColumn, endColumn, context) {\n    if (!this.domNode) {\n      return null;\n    }\n    if (this._pixelOffsetCache !== null) {\n      // the text is LTR\n      var startOffset = this._readPixelOffset(this.domNode, startColumn, context);\n      if (startOffset === -1) {\n        return null;\n      }\n      var endOffset = this._readPixelOffset(this.domNode, endColumn, context);\n      if (endOffset === -1) {\n        return null;\n      }\n      return [new HorizontalRange(startOffset, endOffset - startOffset)];\n    }\n    return this._readVisibleRangesForRange(this.domNode, startColumn, endColumn, context);\n  };\n  RenderedViewLine.prototype._readVisibleRangesForRange = function (domNode, startColumn, endColumn, context) {\n    if (startColumn === endColumn) {\n      var pixelOffset = this._readPixelOffset(domNode, startColumn, context);\n      if (pixelOffset === -1) {\n        return null;\n      } else {\n        return [new HorizontalRange(pixelOffset, 0)];\n      }\n    } else {\n      return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n    }\n  };\n  RenderedViewLine.prototype._readPixelOffset = function (domNode, column, context) {\n    if (this._characterMapping.length === 0) {\n      // This line has no content\n      if (this._containsForeignElements === 0 /* None */) {\n        // We can assume the line is really empty\n        return 0;\n      }\n      if (this._containsForeignElements === 2 /* After */) {\n        // We have foreign elements after the (empty) line\n        return 0;\n      }\n      if (this._containsForeignElements === 1 /* Before */) {\n        // We have foreign elements before the (empty) line\n        return this.getWidth();\n      }\n      // We have foreign elements before & after the (empty) line\n      var readingTarget = this._getReadingTarget(domNode);\n      if (readingTarget.firstChild) {\n        return readingTarget.firstChild.offsetWidth;\n      } else {\n        return 0;\n      }\n    }\n    if (this._pixelOffsetCache !== null) {\n      // the text is LTR\n      var cachedPixelOffset = this._pixelOffsetCache[column];\n      if (cachedPixelOffset !== -1) {\n        return cachedPixelOffset;\n      }\n      var result = this._actualReadPixelOffset(domNode, column, context);\n      this._pixelOffsetCache[column] = result;\n      return result;\n    }\n    return this._actualReadPixelOffset(domNode, column, context);\n  };\n  RenderedViewLine.prototype._actualReadPixelOffset = function (domNode, column, context) {\n    if (this._characterMapping.length === 0) {\n      // This line has no content\n      var r_1 = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context.clientRectDeltaLeft, context.endNode);\n      if (!r_1 || r_1.length === 0) {\n        return -1;\n      }\n      return r_1[0].left;\n    }\n    if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* None */) {\n      // This branch helps in the case of whitespace only lines which have a width set\n      return this.getWidth();\n    }\n    var partData = this._characterMapping.charOffsetToPartData(column - 1);\n    var partIndex = CharacterMapping.getPartIndex(partData);\n    var charOffsetInPart = CharacterMapping.getCharIndex(partData);\n    var r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), partIndex, charOffsetInPart, partIndex, charOffsetInPart, context.clientRectDeltaLeft, context.endNode);\n    if (!r || r.length === 0) {\n      return -1;\n    }\n    return r[0].left;\n  };\n  RenderedViewLine.prototype._readRawVisibleRangesForRange = function (domNode, startColumn, endColumn, context) {\n    if (startColumn === 1 && endColumn === this._characterMapping.length) {\n      // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n      return [new HorizontalRange(0, this.getWidth())];\n    }\n    var startPartData = this._characterMapping.charOffsetToPartData(startColumn - 1);\n    var startPartIndex = CharacterMapping.getPartIndex(startPartData);\n    var startCharOffsetInPart = CharacterMapping.getCharIndex(startPartData);\n    var endPartData = this._characterMapping.charOffsetToPartData(endColumn - 1);\n    var endPartIndex = CharacterMapping.getPartIndex(endPartData);\n    var endCharOffsetInPart = CharacterMapping.getCharIndex(endPartData);\n    return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startPartIndex, startCharOffsetInPart, endPartIndex, endCharOffsetInPart, context.clientRectDeltaLeft, context.endNode);\n  };\n  /**\r\n   * Returns the column for the text found at a specific offset inside a rendered dom node\r\n   */\n  RenderedViewLine.prototype.getColumnOfNodeOffset = function (lineNumber, spanNode, offset) {\n    var spanNodeTextContentLength = spanNode.textContent.length;\n    var spanIndex = -1;\n    while (spanNode) {\n      spanNode = spanNode.previousSibling;\n      spanIndex++;\n    }\n    var charOffset = this._characterMapping.partDataToCharOffset(spanIndex, spanNodeTextContentLength, offset);\n    return charOffset + 1;\n  };\n  return RenderedViewLine;\n}();\nvar WebKitRenderedViewLine = /** @class */function (_super) {\n  __extends(WebKitRenderedViewLine, _super);\n  function WebKitRenderedViewLine() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  WebKitRenderedViewLine.prototype._readVisibleRangesForRange = function (domNode, startColumn, endColumn, context) {\n    var output = _super.prototype._readVisibleRangesForRange.call(this, domNode, startColumn, endColumn, context);\n    if (!output || output.length === 0 || startColumn === endColumn || startColumn === 1 && endColumn === this._characterMapping.length) {\n      return output;\n    }\n    // WebKit is buggy and returns an expanded range (to contain words in some cases)\n    // The last client rect is enlarged (I think)\n    if (!this.input.containsRTL) {\n      // This is an attempt to patch things up\n      // Find position of last column\n      var endPixelOffset = this._readPixelOffset(domNode, endColumn, context);\n      if (endPixelOffset !== -1) {\n        var lastRange = output[output.length - 1];\n        if (lastRange.left < endPixelOffset) {\n          // Trim down the width of the last visible range to not go after the last column's position\n          lastRange.width = endPixelOffset - lastRange.left;\n        }\n      }\n    }\n    return output;\n  };\n  return WebKitRenderedViewLine;\n}(RenderedViewLine);\nvar createRenderedLine = function () {\n  if (browser.isWebKit) {\n    return createWebKitRenderedLine;\n  }\n  return createNormalRenderedLine;\n}();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n  return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n  return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","browser","createFastDomNode","platform","RangeUtil","HorizontalRange","VisibleRanges","LineDecoration","CharacterMapping","RenderLineInput","renderViewLine","LineRange","HIGH_CONTRAST","EditorFontLigatures","canUseFastRenderedViewLine","isNative","isLinux","isFirefox","isSafari","alwaysRenderInlineSelection","isEdgeOrIE","DomReadingContext","domNode","endNode","_domNode","_clientRectDeltaLeft","_clientRectDeltaLeftRead","defineProperty","get","getBoundingClientRect","left","enumerable","configurable","ViewLineOptions","config","themeType","options","fontInfo","renderWhitespace","renderControlCharacters","spaceWidth","middotWidth","useMonospaceOptimizations","isMonospace","canUseHalfwidthRightwardsArrow","lineHeight","stopRenderingLineAfter","fontLigatures","equals","other","ViewLine","_options","_isMaybeInvalid","_renderedViewLine","getDomNode","setDomNode","Error","onContentChanged","onTokensChanged","onDecorationsChanged","onOptionsChanged","newOptions","onSelectionChanged","renderLine","lineNumber","deltaTop","viewportData","sb","lineData","getViewLineRenderingData","actualInlineDecorations","filter","inlineDecorations","minColumn","maxColumn","selectionsOnLine","selections","_i","selections_1","length","selection","endLineNumber","startLineNumber","startColumn","endColumn","push","renderLineInput","content","continuesWithWrappedLine","isBasicASCII","containsRTL","tokens","tabSize","startVisibleColumn","OFF","input","appendASCIIString","String","CLASS_NAME","output","renderedViewLine","containsForeignElements","lineTokens","getCount","FastRenderedViewLine","characterMapping","createRenderedLine","layoutLine","setTop","setHeight","getWidth","getWidthIsFast","getVisibleRangesForRange","context","Math","min","lineContent","max","outsideRenderedLine","horizontalRanges","getColumnOfNodeOffset","spanNode","offset","_characterMapping","_charWidth","_getCharPosition","startPosition","endPosition","column","charOffset","getAbsoluteOffsets","round","spanNodeTextContentLength","textContent","spanIndex","previousSibling","partDataToCharOffset","RenderedViewLine","_isWhitespaceOnly","test","_containsForeignElements","_cachedWidth","_pixelOffsetCache","Int32Array","len","_getReadingTarget","myDomNode","firstChild","offsetWidth","startOffset","_readPixelOffset","endOffset","_readVisibleRangesForRange","pixelOffset","_readRawVisibleRangesForRange","readingTarget","cachedPixelOffset","result","_actualReadPixelOffset","r_1","readHorizontalRanges","clientRectDeltaLeft","partData","charOffsetToPartData","partIndex","getPartIndex","charOffsetInPart","getCharIndex","r","startPartData","startPartIndex","startCharOffsetInPart","endPartData","endPartIndex","endCharOffsetInPart","WebKitRenderedViewLine","_super","apply","arguments","call","endPixelOffset","lastRange","width","isWebKit","createWebKitRenderedLine","createNormalRenderedLine"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as browser from '../../../../base/browser/browser.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport { RangeUtil } from './rangeUtil.js';\r\nimport { HorizontalRange, VisibleRanges } from '../../../common/view/renderingContext.js';\r\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\r\nimport { CharacterMapping, RenderLineInput, renderViewLine, LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\r\nimport { HIGH_CONTRAST } from '../../../../platform/theme/common/themeService.js';\r\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\r\nvar canUseFastRenderedViewLine = (function () {\r\n    if (platform.isNative) {\r\n        // In VSCode we know very well when the zoom level changes\r\n        return true;\r\n    }\r\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\r\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\r\n        // --\r\n        // Even though we read character widths correctly, having read them at a specific zoom level\r\n        // does not mean they are the same at the current zoom level.\r\n        // --\r\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\r\n        // but until then we have to stick with reading client rects.\r\n        // --\r\n        // The same has been observed with Firefox on Windows7\r\n        // --\r\n        // The same has been oversved with Safari\r\n        return false;\r\n    }\r\n    return true;\r\n})();\r\nvar alwaysRenderInlineSelection = (browser.isEdgeOrIE);\r\nvar DomReadingContext = /** @class */ (function () {\r\n    function DomReadingContext(domNode, endNode) {\r\n        this._domNode = domNode;\r\n        this._clientRectDeltaLeft = 0;\r\n        this._clientRectDeltaLeftRead = false;\r\n        this.endNode = endNode;\r\n    }\r\n    Object.defineProperty(DomReadingContext.prototype, \"clientRectDeltaLeft\", {\r\n        get: function () {\r\n            if (!this._clientRectDeltaLeftRead) {\r\n                this._clientRectDeltaLeftRead = true;\r\n                this._clientRectDeltaLeft = this._domNode.getBoundingClientRect().left;\r\n            }\r\n            return this._clientRectDeltaLeft;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DomReadingContext;\r\n}());\r\nexport { DomReadingContext };\r\nvar ViewLineOptions = /** @class */ (function () {\r\n    function ViewLineOptions(config, themeType) {\r\n        this.themeType = themeType;\r\n        var options = config.options;\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        this.renderWhitespace = options.get(74 /* renderWhitespace */);\r\n        this.renderControlCharacters = options.get(69 /* renderControlCharacters */);\r\n        this.spaceWidth = fontInfo.spaceWidth;\r\n        this.middotWidth = fontInfo.middotWidth;\r\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\r\n            && !options.get(23 /* disableMonospaceOptimizations */));\r\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\r\n        this.lineHeight = options.get(49 /* lineHeight */);\r\n        this.stopRenderingLineAfter = options.get(88 /* stopRenderingLineAfter */);\r\n        this.fontLigatures = options.get(35 /* fontLigatures */);\r\n    }\r\n    ViewLineOptions.prototype.equals = function (other) {\r\n        return (this.themeType === other.themeType\r\n            && this.renderWhitespace === other.renderWhitespace\r\n            && this.renderControlCharacters === other.renderControlCharacters\r\n            && this.spaceWidth === other.spaceWidth\r\n            && this.middotWidth === other.middotWidth\r\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\r\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\r\n            && this.lineHeight === other.lineHeight\r\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\r\n            && this.fontLigatures === other.fontLigatures);\r\n    };\r\n    return ViewLineOptions;\r\n}());\r\nexport { ViewLineOptions };\r\nvar ViewLine = /** @class */ (function () {\r\n    function ViewLine(options) {\r\n        this._options = options;\r\n        this._isMaybeInvalid = true;\r\n        this._renderedViewLine = null;\r\n    }\r\n    // --- begin IVisibleLineData\r\n    ViewLine.prototype.getDomNode = function () {\r\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\r\n            return this._renderedViewLine.domNode.domNode;\r\n        }\r\n        return null;\r\n    };\r\n    ViewLine.prototype.setDomNode = function (domNode) {\r\n        if (this._renderedViewLine) {\r\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\r\n        }\r\n        else {\r\n            throw new Error('I have no rendered view line to set the dom node to...');\r\n        }\r\n    };\r\n    ViewLine.prototype.onContentChanged = function () {\r\n        this._isMaybeInvalid = true;\r\n    };\r\n    ViewLine.prototype.onTokensChanged = function () {\r\n        this._isMaybeInvalid = true;\r\n    };\r\n    ViewLine.prototype.onDecorationsChanged = function () {\r\n        this._isMaybeInvalid = true;\r\n    };\r\n    ViewLine.prototype.onOptionsChanged = function (newOptions) {\r\n        this._isMaybeInvalid = true;\r\n        this._options = newOptions;\r\n    };\r\n    ViewLine.prototype.onSelectionChanged = function () {\r\n        if (alwaysRenderInlineSelection || this._options.themeType === HIGH_CONTRAST || this._options.renderWhitespace === 'selection') {\r\n            this._isMaybeInvalid = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ViewLine.prototype.renderLine = function (lineNumber, deltaTop, viewportData, sb) {\r\n        if (this._isMaybeInvalid === false) {\r\n            // it appears that nothing relevant has changed\r\n            return false;\r\n        }\r\n        this._isMaybeInvalid = false;\r\n        var lineData = viewportData.getViewLineRenderingData(lineNumber);\r\n        var options = this._options;\r\n        var actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\r\n        // Only send selection information when needed for rendering whitespace\r\n        var selectionsOnLine = null;\r\n        if (alwaysRenderInlineSelection || options.themeType === HIGH_CONTRAST || this._options.renderWhitespace === 'selection') {\r\n            var selections = viewportData.selections;\r\n            for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\r\n                var selection = selections_1[_i];\r\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\r\n                    // Selection does not intersect line\r\n                    continue;\r\n                }\r\n                var startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\r\n                var endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\r\n                if (startColumn < endColumn) {\r\n                    if (this._options.renderWhitespace !== 'selection') {\r\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* Regular */));\r\n                    }\r\n                    else {\r\n                        if (!selectionsOnLine) {\r\n                            selectionsOnLine = [];\r\n                        }\r\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\r\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\r\n            // no need to do anything, we have the same render input\r\n            return false;\r\n        }\r\n        sb.appendASCIIString('<div style=\"top:');\r\n        sb.appendASCIIString(String(deltaTop));\r\n        sb.appendASCIIString('px;height:');\r\n        sb.appendASCIIString(String(this._options.lineHeight));\r\n        sb.appendASCIIString('px;\" class=\"');\r\n        sb.appendASCIIString(ViewLine.CLASS_NAME);\r\n        sb.appendASCIIString('\">');\r\n        var output = renderViewLine(renderLineInput, sb);\r\n        sb.appendASCIIString('</div>');\r\n        var renderedViewLine = null;\r\n        if (canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* None */) {\r\n            if (lineData.content.length < 300 && renderLineInput.lineTokens.getCount() < 100) {\r\n                // Browser rounding errors have been observed in Chrome and IE, so using the fast\r\n                // view line only for short lines. Please test before removing the length check...\r\n                // ---\r\n                // Another rounding error has been observed on Linux in VSCode, where <span> width\r\n                // rounding errors add up to an observable large number...\r\n                // ---\r\n                // Also see another example of rounding errors on Windows in\r\n                // https://github.com/Microsoft/vscode/issues/33178\r\n                renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\r\n            }\r\n        }\r\n        if (!renderedViewLine) {\r\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\r\n        }\r\n        this._renderedViewLine = renderedViewLine;\r\n        return true;\r\n    };\r\n    ViewLine.prototype.layoutLine = function (lineNumber, deltaTop) {\r\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\r\n            this._renderedViewLine.domNode.setTop(deltaTop);\r\n            this._renderedViewLine.domNode.setHeight(this._options.lineHeight);\r\n        }\r\n    };\r\n    // --- end IVisibleLineData\r\n    ViewLine.prototype.getWidth = function () {\r\n        if (!this._renderedViewLine) {\r\n            return 0;\r\n        }\r\n        return this._renderedViewLine.getWidth();\r\n    };\r\n    ViewLine.prototype.getWidthIsFast = function () {\r\n        if (!this._renderedViewLine) {\r\n            return true;\r\n        }\r\n        return this._renderedViewLine.getWidthIsFast();\r\n    };\r\n    ViewLine.prototype.getVisibleRangesForRange = function (startColumn, endColumn, context) {\r\n        if (!this._renderedViewLine) {\r\n            return null;\r\n        }\r\n        startColumn = startColumn | 0; // @perf\r\n        endColumn = endColumn | 0; // @perf\r\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\r\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\r\n        var stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter | 0; // @perf\r\n        var outsideRenderedLine = false;\r\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\r\n            // This range is obviously not visible\r\n            outsideRenderedLine = true;\r\n        }\r\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\r\n            startColumn = stopRenderingLineAfter + 1;\r\n        }\r\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\r\n            endColumn = stopRenderingLineAfter + 1;\r\n        }\r\n        var horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(startColumn, endColumn, context);\r\n        if (horizontalRanges && horizontalRanges.length > 0) {\r\n            return new VisibleRanges(outsideRenderedLine, horizontalRanges);\r\n        }\r\n        return null;\r\n    };\r\n    ViewLine.prototype.getColumnOfNodeOffset = function (lineNumber, spanNode, offset) {\r\n        if (!this._renderedViewLine) {\r\n            return 1;\r\n        }\r\n        return this._renderedViewLine.getColumnOfNodeOffset(lineNumber, spanNode, offset);\r\n    };\r\n    ViewLine.CLASS_NAME = 'view-line';\r\n    return ViewLine;\r\n}());\r\nexport { ViewLine };\r\n/**\r\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\r\n */\r\nvar FastRenderedViewLine = /** @class */ (function () {\r\n    function FastRenderedViewLine(domNode, renderLineInput, characterMapping) {\r\n        this.domNode = domNode;\r\n        this.input = renderLineInput;\r\n        this._characterMapping = characterMapping;\r\n        this._charWidth = renderLineInput.spaceWidth;\r\n    }\r\n    FastRenderedViewLine.prototype.getWidth = function () {\r\n        return this._getCharPosition(this._characterMapping.length);\r\n    };\r\n    FastRenderedViewLine.prototype.getWidthIsFast = function () {\r\n        return true;\r\n    };\r\n    FastRenderedViewLine.prototype.getVisibleRangesForRange = function (startColumn, endColumn, context) {\r\n        var startPosition = this._getCharPosition(startColumn);\r\n        var endPosition = this._getCharPosition(endColumn);\r\n        return [new HorizontalRange(startPosition, endPosition - startPosition)];\r\n    };\r\n    FastRenderedViewLine.prototype._getCharPosition = function (column) {\r\n        var charOffset = this._characterMapping.getAbsoluteOffsets();\r\n        if (charOffset.length === 0) {\r\n            // No characters on this line\r\n            return 0;\r\n        }\r\n        return Math.round(this._charWidth * charOffset[column - 1]);\r\n    };\r\n    FastRenderedViewLine.prototype.getColumnOfNodeOffset = function (lineNumber, spanNode, offset) {\r\n        var spanNodeTextContentLength = spanNode.textContent.length;\r\n        var spanIndex = -1;\r\n        while (spanNode) {\r\n            spanNode = spanNode.previousSibling;\r\n            spanIndex++;\r\n        }\r\n        var charOffset = this._characterMapping.partDataToCharOffset(spanIndex, spanNodeTextContentLength, offset);\r\n        return charOffset + 1;\r\n    };\r\n    return FastRenderedViewLine;\r\n}());\r\n/**\r\n * Every time we render a line, we save what we have rendered in an instance of this class.\r\n */\r\nvar RenderedViewLine = /** @class */ (function () {\r\n    function RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\r\n        this.domNode = domNode;\r\n        this.input = renderLineInput;\r\n        this._characterMapping = characterMapping;\r\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\r\n        this._containsForeignElements = containsForeignElements;\r\n        this._cachedWidth = -1;\r\n        this._pixelOffsetCache = null;\r\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\r\n            this._pixelOffsetCache = new Int32Array(Math.max(2, this._characterMapping.length + 1));\r\n            for (var column = 0, len = this._characterMapping.length; column <= len; column++) {\r\n                this._pixelOffsetCache[column] = -1;\r\n            }\r\n        }\r\n    }\r\n    // --- Reading from the DOM methods\r\n    RenderedViewLine.prototype._getReadingTarget = function (myDomNode) {\r\n        return myDomNode.domNode.firstChild;\r\n    };\r\n    /**\r\n     * Width of the line in pixels\r\n     */\r\n    RenderedViewLine.prototype.getWidth = function () {\r\n        if (!this.domNode) {\r\n            return 0;\r\n        }\r\n        if (this._cachedWidth === -1) {\r\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\r\n        }\r\n        return this._cachedWidth;\r\n    };\r\n    RenderedViewLine.prototype.getWidthIsFast = function () {\r\n        if (this._cachedWidth === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Visible ranges for a model range\r\n     */\r\n    RenderedViewLine.prototype.getVisibleRangesForRange = function (startColumn, endColumn, context) {\r\n        if (!this.domNode) {\r\n            return null;\r\n        }\r\n        if (this._pixelOffsetCache !== null) {\r\n            // the text is LTR\r\n            var startOffset = this._readPixelOffset(this.domNode, startColumn, context);\r\n            if (startOffset === -1) {\r\n                return null;\r\n            }\r\n            var endOffset = this._readPixelOffset(this.domNode, endColumn, context);\r\n            if (endOffset === -1) {\r\n                return null;\r\n            }\r\n            return [new HorizontalRange(startOffset, endOffset - startOffset)];\r\n        }\r\n        return this._readVisibleRangesForRange(this.domNode, startColumn, endColumn, context);\r\n    };\r\n    RenderedViewLine.prototype._readVisibleRangesForRange = function (domNode, startColumn, endColumn, context) {\r\n        if (startColumn === endColumn) {\r\n            var pixelOffset = this._readPixelOffset(domNode, startColumn, context);\r\n            if (pixelOffset === -1) {\r\n                return null;\r\n            }\r\n            else {\r\n                return [new HorizontalRange(pixelOffset, 0)];\r\n            }\r\n        }\r\n        else {\r\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\r\n        }\r\n    };\r\n    RenderedViewLine.prototype._readPixelOffset = function (domNode, column, context) {\r\n        if (this._characterMapping.length === 0) {\r\n            // This line has no content\r\n            if (this._containsForeignElements === 0 /* None */) {\r\n                // We can assume the line is really empty\r\n                return 0;\r\n            }\r\n            if (this._containsForeignElements === 2 /* After */) {\r\n                // We have foreign elements after the (empty) line\r\n                return 0;\r\n            }\r\n            if (this._containsForeignElements === 1 /* Before */) {\r\n                // We have foreign elements before the (empty) line\r\n                return this.getWidth();\r\n            }\r\n            // We have foreign elements before & after the (empty) line\r\n            var readingTarget = this._getReadingTarget(domNode);\r\n            if (readingTarget.firstChild) {\r\n                return readingTarget.firstChild.offsetWidth;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        if (this._pixelOffsetCache !== null) {\r\n            // the text is LTR\r\n            var cachedPixelOffset = this._pixelOffsetCache[column];\r\n            if (cachedPixelOffset !== -1) {\r\n                return cachedPixelOffset;\r\n            }\r\n            var result = this._actualReadPixelOffset(domNode, column, context);\r\n            this._pixelOffsetCache[column] = result;\r\n            return result;\r\n        }\r\n        return this._actualReadPixelOffset(domNode, column, context);\r\n    };\r\n    RenderedViewLine.prototype._actualReadPixelOffset = function (domNode, column, context) {\r\n        if (this._characterMapping.length === 0) {\r\n            // This line has no content\r\n            var r_1 = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context.clientRectDeltaLeft, context.endNode);\r\n            if (!r_1 || r_1.length === 0) {\r\n                return -1;\r\n            }\r\n            return r_1[0].left;\r\n        }\r\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* None */) {\r\n            // This branch helps in the case of whitespace only lines which have a width set\r\n            return this.getWidth();\r\n        }\r\n        var partData = this._characterMapping.charOffsetToPartData(column - 1);\r\n        var partIndex = CharacterMapping.getPartIndex(partData);\r\n        var charOffsetInPart = CharacterMapping.getCharIndex(partData);\r\n        var r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), partIndex, charOffsetInPart, partIndex, charOffsetInPart, context.clientRectDeltaLeft, context.endNode);\r\n        if (!r || r.length === 0) {\r\n            return -1;\r\n        }\r\n        return r[0].left;\r\n    };\r\n    RenderedViewLine.prototype._readRawVisibleRangesForRange = function (domNode, startColumn, endColumn, context) {\r\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\r\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\r\n            return [new HorizontalRange(0, this.getWidth())];\r\n        }\r\n        var startPartData = this._characterMapping.charOffsetToPartData(startColumn - 1);\r\n        var startPartIndex = CharacterMapping.getPartIndex(startPartData);\r\n        var startCharOffsetInPart = CharacterMapping.getCharIndex(startPartData);\r\n        var endPartData = this._characterMapping.charOffsetToPartData(endColumn - 1);\r\n        var endPartIndex = CharacterMapping.getPartIndex(endPartData);\r\n        var endCharOffsetInPart = CharacterMapping.getCharIndex(endPartData);\r\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startPartIndex, startCharOffsetInPart, endPartIndex, endCharOffsetInPart, context.clientRectDeltaLeft, context.endNode);\r\n    };\r\n    /**\r\n     * Returns the column for the text found at a specific offset inside a rendered dom node\r\n     */\r\n    RenderedViewLine.prototype.getColumnOfNodeOffset = function (lineNumber, spanNode, offset) {\r\n        var spanNodeTextContentLength = spanNode.textContent.length;\r\n        var spanIndex = -1;\r\n        while (spanNode) {\r\n            spanNode = spanNode.previousSibling;\r\n            spanIndex++;\r\n        }\r\n        var charOffset = this._characterMapping.partDataToCharOffset(spanIndex, spanNodeTextContentLength, offset);\r\n        return charOffset + 1;\r\n    };\r\n    return RenderedViewLine;\r\n}());\r\nvar WebKitRenderedViewLine = /** @class */ (function (_super) {\r\n    __extends(WebKitRenderedViewLine, _super);\r\n    function WebKitRenderedViewLine() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebKitRenderedViewLine.prototype._readVisibleRangesForRange = function (domNode, startColumn, endColumn, context) {\r\n        var output = _super.prototype._readVisibleRangesForRange.call(this, domNode, startColumn, endColumn, context);\r\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\r\n            return output;\r\n        }\r\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\r\n        // The last client rect is enlarged (I think)\r\n        if (!this.input.containsRTL) {\r\n            // This is an attempt to patch things up\r\n            // Find position of last column\r\n            var endPixelOffset = this._readPixelOffset(domNode, endColumn, context);\r\n            if (endPixelOffset !== -1) {\r\n                var lastRange = output[output.length - 1];\r\n                if (lastRange.left < endPixelOffset) {\r\n                    // Trim down the width of the last visible range to not go after the last column's position\r\n                    lastRange.width = endPixelOffset - lastRange.left;\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return WebKitRenderedViewLine;\r\n}(RenderedViewLine));\r\nvar createRenderedLine = (function () {\r\n    if (browser.isWebKit) {\r\n        return createWebKitRenderedLine;\r\n    }\r\n    return createNormalRenderedLine;\r\n})();\r\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\r\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\r\n}\r\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\r\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}