{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from '../../registry/common/platform.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\n// color registry\nexport var Extensions = {\n  ColorContribution: 'base.contributions.colors'\n};\nvar ColorRegistry = /** @class */function () {\n  function ColorRegistry() {\n    this._onDidChangeSchema = new Emitter();\n    this.onDidChangeSchema = this._onDidChangeSchema.event;\n    this.colorSchema = {\n      type: 'object',\n      properties: {}\n    };\n    this.colorReferenceSchema = {\n      type: 'string',\n      enum: [],\n      enumDescriptions: []\n    };\n    this.colorsById = {};\n  }\n  ColorRegistry.prototype.registerColor = function (id, defaults, description, needsTransparency, deprecationMessage) {\n    if (needsTransparency === void 0) {\n      needsTransparency = false;\n    }\n    var colorContribution = {\n      id: id,\n      description: description,\n      defaults: defaults,\n      needsTransparency: needsTransparency,\n      deprecationMessage: deprecationMessage\n    };\n    this.colorsById[id] = colorContribution;\n    var propertySchema = {\n      type: 'string',\n      description: description,\n      format: 'color-hex',\n      defaultSnippets: [{\n        body: '${1:#ff0000}'\n      }]\n    };\n    if (deprecationMessage) {\n      propertySchema.deprecationMessage = deprecationMessage;\n    }\n    this.colorSchema.properties[id] = propertySchema;\n    this.colorReferenceSchema.enum.push(id);\n    this.colorReferenceSchema.enumDescriptions.push(description);\n    this._onDidChangeSchema.fire();\n    return id;\n  };\n  ColorRegistry.prototype.resolveDefaultColor = function (id, theme) {\n    var colorDesc = this.colorsById[id];\n    if (colorDesc && colorDesc.defaults) {\n      var colorValue = colorDesc.defaults[theme.type];\n      return resolveColorValue(colorValue, theme);\n    }\n    return undefined;\n  };\n  ColorRegistry.prototype.getColorSchema = function () {\n    return this.colorSchema;\n  };\n  ColorRegistry.prototype.toString = function () {\n    var _this = this;\n    var sorter = function sorter(a, b) {\n      var cat1 = a.indexOf('.') === -1 ? 0 : 1;\n      var cat2 = b.indexOf('.') === -1 ? 0 : 1;\n      if (cat1 !== cat2) {\n        return cat1 - cat2;\n      }\n      return a.localeCompare(b);\n    };\n    return Object.keys(this.colorsById).sort(sorter).map(function (k) {\n      return \"- `\" + k + \"`: \" + _this.colorsById[k].description;\n    }).join('\\n');\n  };\n  return ColorRegistry;\n}();\nvar colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n  return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- base colors\nexport var foreground = registerColor('foreground', {\n  dark: '#CCCCCC',\n  light: '#616161',\n  hc: '#FFFFFF'\n}, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport var errorForeground = registerColor('errorForeground', {\n  dark: '#F48771',\n  light: '#A1260D',\n  hc: '#F48771'\n}, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport var focusBorder = registerColor('focusBorder', {\n  dark: Color.fromHex('#0E639C').transparent(0.8),\n  light: Color.fromHex('#007ACC').transparent(0.4),\n  hc: '#F38518'\n}, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport var contrastBorder = registerColor('contrastBorder', {\n  light: null,\n  dark: null,\n  hc: '#6FC3DF'\n}, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport var activeContrastBorder = registerColor('contrastActiveBorder', {\n  light: null,\n  dark: null,\n  hc: focusBorder\n}, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport var textLinkForeground = registerColor('textLink.foreground', {\n  light: '#006AB1',\n  dark: '#3794FF',\n  hc: '#3794FF'\n}, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport var textCodeBlockBackground = registerColor('textCodeBlock.background', {\n  light: '#dcdcdc66',\n  dark: '#0a0a0a66',\n  hc: Color.black\n}, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n// ----- widgets\nexport var widgetShadow = registerColor('widget.shadow', {\n  dark: '#000000',\n  light: '#A8A8A8',\n  hc: null\n}, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport var inputBackground = registerColor('input.background', {\n  dark: '#3C3C3C',\n  light: Color.white,\n  hc: Color.black\n}, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport var inputForeground = registerColor('input.foreground', {\n  dark: foreground,\n  light: foreground,\n  hc: foreground\n}, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport var inputBorder = registerColor('input.border', {\n  dark: null,\n  light: null,\n  hc: contrastBorder\n}, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport var inputActiveOptionBorder = registerColor('inputOption.activeBorder', {\n  dark: '#007ACC00',\n  light: '#007ACC00',\n  hc: contrastBorder\n}, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport var inputActiveOptionBackground = registerColor('inputOption.activeBackground', {\n  dark: transparent(focusBorder, 0.5),\n  light: transparent(focusBorder, 0.3),\n  hc: null\n}, nls.localize('inputOption.activeBackground', \"Background color of activated options in input fields.\"));\nexport var inputValidationInfoBackground = registerColor('inputValidation.infoBackground', {\n  dark: '#063B49',\n  light: '#D6ECF2',\n  hc: Color.black\n}, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport var inputValidationInfoForeground = registerColor('inputValidation.infoForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport var inputValidationInfoBorder = registerColor('inputValidation.infoBorder', {\n  dark: '#007acc',\n  light: '#007acc',\n  hc: contrastBorder\n}, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport var inputValidationWarningBackground = registerColor('inputValidation.warningBackground', {\n  dark: '#352A05',\n  light: '#F6F5D2',\n  hc: Color.black\n}, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport var inputValidationWarningForeground = registerColor('inputValidation.warningForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport var inputValidationWarningBorder = registerColor('inputValidation.warningBorder', {\n  dark: '#B89500',\n  light: '#B89500',\n  hc: contrastBorder\n}, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport var inputValidationErrorBackground = registerColor('inputValidation.errorBackground', {\n  dark: '#5A1D1D',\n  light: '#F2DEDE',\n  hc: Color.black\n}, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport var inputValidationErrorForeground = registerColor('inputValidation.errorForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport var inputValidationErrorBorder = registerColor('inputValidation.errorBorder', {\n  dark: '#BE1100',\n  light: '#BE1100',\n  hc: contrastBorder\n}, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport var selectBackground = registerColor('dropdown.background', {\n  dark: '#3C3C3C',\n  light: Color.white,\n  hc: Color.black\n}, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport var selectForeground = registerColor('dropdown.foreground', {\n  dark: '#F0F0F0',\n  light: null,\n  hc: Color.white\n}, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport var pickerGroupForeground = registerColor('pickerGroup.foreground', {\n  dark: '#3794FF',\n  light: '#0066BF',\n  hc: Color.white\n}, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport var pickerGroupBorder = registerColor('pickerGroup.border', {\n  dark: '#3F3F46',\n  light: '#CCCEDB',\n  hc: Color.white\n}, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\nexport var badgeBackground = registerColor('badge.background', {\n  dark: '#4D4D4D',\n  light: '#C4C4C4',\n  hc: Color.black\n}, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport var badgeForeground = registerColor('badge.foreground', {\n  dark: Color.white,\n  light: '#333',\n  hc: Color.white\n}, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport var scrollbarShadow = registerColor('scrollbar.shadow', {\n  dark: '#000000',\n  light: '#DDDDDD',\n  hc: null\n}, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport var scrollbarSliderBackground = registerColor('scrollbarSlider.background', {\n  dark: Color.fromHex('#797979').transparent(0.4),\n  light: Color.fromHex('#646464').transparent(0.4),\n  hc: transparent(contrastBorder, 0.6)\n}, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport var scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', {\n  dark: Color.fromHex('#646464').transparent(0.7),\n  light: Color.fromHex('#646464').transparent(0.7),\n  hc: transparent(contrastBorder, 0.8)\n}, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport var scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', {\n  dark: Color.fromHex('#BFBFBF').transparent(0.4),\n  light: Color.fromHex('#000000').transparent(0.6),\n  hc: contrastBorder\n}, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport var progressBarBackground = registerColor('progressBar.background', {\n  dark: Color.fromHex('#0E70C0'),\n  light: Color.fromHex('#0E70C0'),\n  hc: contrastBorder\n}, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport var editorErrorForeground = registerColor('editorError.foreground', {\n  dark: '#F48771',\n  light: '#E51400',\n  hc: null\n}, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport var editorErrorBorder = registerColor('editorError.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#E47777').transparent(0.8)\n}, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\nexport var editorWarningForeground = registerColor('editorWarning.foreground', {\n  dark: '#CCA700',\n  light: '#E9A700',\n  hc: null\n}, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport var editorWarningBorder = registerColor('editorWarning.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#FFCC00').transparent(0.8)\n}, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\nexport var editorInfoForeground = registerColor('editorInfo.foreground', {\n  dark: '#75BEFF',\n  light: '#75BEFF',\n  hc: null\n}, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport var editorInfoBorder = registerColor('editorInfo.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#75BEFF').transparent(0.8)\n}, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\nexport var editorHintForeground = registerColor('editorHint.foreground', {\n  dark: Color.fromHex('#eeeeee').transparent(0.7),\n  light: '#6c6c6c',\n  hc: null\n}, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport var editorHintBorder = registerColor('editorHint.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#eeeeee').transparent(0.8)\n}, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\n/**\r\n * Editor background color.\r\n * Because of bug https://monacotools.visualstudio.com/DefaultCollection/Monaco/_workitems/edit/13254\r\n * we are *not* using the color white (or #ffffff, rgba(255,255,255)) but something very close to white.\r\n */\nexport var editorBackground = registerColor('editor.background', {\n  light: '#fffffe',\n  dark: '#1E1E1E',\n  hc: Color.black\n}, nls.localize('editorBackground', \"Editor background color.\"));\n/**\r\n * Editor foreground color.\r\n */\nexport var editorForeground = registerColor('editor.foreground', {\n  light: '#333333',\n  dark: '#BBBBBB',\n  hc: Color.white\n}, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\r\n * Editor widgets\r\n */\nexport var editorWidgetBackground = registerColor('editorWidget.background', {\n  dark: '#252526',\n  light: '#F3F3F3',\n  hc: '#0C141F'\n}, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport var editorWidgetForeground = registerColor('editorWidget.foreground', {\n  dark: foreground,\n  light: foreground,\n  hc: foreground\n}, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport var editorWidgetBorder = registerColor('editorWidget.border', {\n  dark: '#454545',\n  light: '#C8C8C8',\n  hc: contrastBorder\n}, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport var editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', {\n  light: null,\n  dark: null,\n  hc: null\n}, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\r\n * Editor selection colors.\r\n */\nexport var editorSelectionBackground = registerColor('editor.selectionBackground', {\n  light: '#ADD6FF',\n  dark: '#264F78',\n  hc: '#f3f518'\n}, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport var editorSelectionForeground = registerColor('editor.selectionForeground', {\n  light: null,\n  dark: null,\n  hc: '#000000'\n}, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport var editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', {\n  light: transparent(editorSelectionBackground, 0.5),\n  dark: transparent(editorSelectionBackground, 0.5),\n  hc: transparent(editorSelectionBackground, 0.5)\n}, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport var editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', {\n  light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6),\n  dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6),\n  hc: null\n}, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', {\n  light: null,\n  dark: null,\n  hc: activeContrastBorder\n}, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\r\n * Editor find match colors.\r\n */\nexport var editorFindMatch = registerColor('editor.findMatchBackground', {\n  light: '#A8AC94',\n  dark: '#515C6A',\n  hc: null\n}, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport var editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', {\n  light: '#EA5C0055',\n  dark: '#EA5C0055',\n  hc: null\n}, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport var editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', {\n  dark: '#3a3d4166',\n  light: '#b4b4b44d',\n  hc: null\n}, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport var editorFindMatchBorder = registerColor('editor.findMatchBorder', {\n  light: null,\n  dark: null,\n  hc: activeContrastBorder\n}, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport var editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', {\n  light: null,\n  dark: null,\n  hc: activeContrastBorder\n}, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport var editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: transparent(activeContrastBorder, 0.4)\n}, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\r\n * Editor hover\r\n */\nexport var editorHoverHighlight = registerColor('editor.hoverHighlightBackground', {\n  light: '#ADD6FF26',\n  dark: '#264f7840',\n  hc: '#ADD6FF26'\n}, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var editorHoverBackground = registerColor('editorHoverWidget.background', {\n  light: editorWidgetBackground,\n  dark: editorWidgetBackground,\n  hc: editorWidgetBackground\n}, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport var editorHoverForeground = registerColor('editorHoverWidget.foreground', {\n  light: editorWidgetForeground,\n  dark: editorWidgetForeground,\n  hc: editorWidgetForeground\n}, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport var editorHoverBorder = registerColor('editorHoverWidget.border', {\n  light: editorWidgetBorder,\n  dark: editorWidgetBorder,\n  hc: editorWidgetBorder\n}, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport var editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', {\n  dark: lighten(editorHoverBackground, 0.2),\n  light: darken(editorHoverBackground, 0.05),\n  hc: editorWidgetBackground\n}, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\r\n * Editor link colors\r\n */\nexport var editorActiveLinkForeground = registerColor('editorLink.activeForeground', {\n  dark: '#4E94CE',\n  light: Color.blue,\n  hc: Color.cyan\n}, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\r\n * Editor lighbulb icon colors\r\n */\nexport var editorLightBulbForeground = registerColor('editorLightBulb.foreground', {\n  dark: '#FFCC00',\n  light: '#DDB100',\n  hc: '#FFCC00'\n}, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport var editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', {\n  dark: '#75BEFF',\n  light: '#007ACC',\n  hc: '#75BEFF'\n}, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\r\n * Diff Editor Colors\r\n */\nexport var defaultInsertColor = new Color(new RGBA(155, 185, 85, 0.2));\nexport var defaultRemoveColor = new Color(new RGBA(255, 0, 0, 0.2));\nexport var diffInserted = registerColor('diffEditor.insertedTextBackground', {\n  dark: defaultInsertColor,\n  light: defaultInsertColor,\n  hc: null\n}, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var diffRemoved = registerColor('diffEditor.removedTextBackground', {\n  dark: defaultRemoveColor,\n  light: defaultRemoveColor,\n  hc: null\n}, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', {\n  dark: null,\n  light: null,\n  hc: '#33ff2eff'\n}, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport var diffRemovedOutline = registerColor('diffEditor.removedTextBorder', {\n  dark: null,\n  light: null,\n  hc: '#FF008F'\n}, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport var diffBorder = registerColor('diffEditor.border', {\n  dark: null,\n  light: null,\n  hc: contrastBorder\n}, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\n/**\r\n * List and tree colors\r\n */\nexport var listFocusBackground = registerColor('list.focusBackground', {\n  dark: '#062F4A',\n  light: '#D6EBFF',\n  hc: null\n}, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listFocusForeground = registerColor('list.focusForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listActiveSelectionBackground = registerColor('list.activeSelectionBackground', {\n  dark: '#094771',\n  light: '#0074E8',\n  hc: null\n}, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listActiveSelectionForeground = registerColor('list.activeSelectionForeground', {\n  dark: Color.white,\n  light: Color.white,\n  hc: null\n}, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', {\n  dark: '#37373D',\n  light: '#E4E6F1',\n  hc: null\n}, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listHoverBackground = registerColor('list.hoverBackground', {\n  dark: '#2A2D2E',\n  light: '#F0F0F0',\n  hc: null\n}, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport var listHoverForeground = registerColor('list.hoverForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport var listDropBackground = registerColor('list.dropBackground', {\n  dark: listFocusBackground,\n  light: listFocusBackground,\n  hc: null\n}, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport var listHighlightForeground = registerColor('list.highlightForeground', {\n  dark: '#0097fb',\n  light: '#0066BF',\n  hc: focusBorder\n}, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport var listFilterWidgetBackground = registerColor('listFilterWidget.background', {\n  light: '#efc1ad',\n  dark: '#653723',\n  hc: Color.black\n}, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport var listFilterWidgetOutline = registerColor('listFilterWidget.outline', {\n  dark: Color.transparent,\n  light: Color.transparent,\n  hc: '#f38518'\n}, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport var listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', {\n  dark: '#BE1100',\n  light: '#BE1100',\n  hc: contrastBorder\n}, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport var treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', {\n  dark: '#585858',\n  light: '#a9a9a9',\n  hc: '#a9a9a9'\n}, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\n/**\r\n * Menu colors\r\n */\nexport var menuBorder = registerColor('menu.border', {\n  dark: null,\n  light: null,\n  hc: contrastBorder\n}, nls.localize('menuBorder', \"Border color of menus.\"));\nexport var menuForeground = registerColor('menu.foreground', {\n  dark: selectForeground,\n  light: foreground,\n  hc: selectForeground\n}, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport var menuBackground = registerColor('menu.background', {\n  dark: selectBackground,\n  light: selectBackground,\n  hc: selectBackground\n}, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport var menuSelectionForeground = registerColor('menu.selectionForeground', {\n  dark: listActiveSelectionForeground,\n  light: listActiveSelectionForeground,\n  hc: listActiveSelectionForeground\n}, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport var menuSelectionBackground = registerColor('menu.selectionBackground', {\n  dark: listActiveSelectionBackground,\n  light: listActiveSelectionBackground,\n  hc: listActiveSelectionBackground\n}, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport var menuSelectionBorder = registerColor('menu.selectionBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport var menuSeparatorBackground = registerColor('menu.separatorBackground', {\n  dark: '#BBBBBB',\n  light: '#888888',\n  hc: contrastBorder\n}, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\r\n * Snippet placeholder colors\r\n */\nexport var snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', {\n  dark: new Color(new RGBA(124, 124, 124, 0.3)),\n  light: new Color(new RGBA(10, 50, 100, 0.2)),\n  hc: new Color(new RGBA(124, 124, 124, 0.3))\n}, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport var snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport var snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport var snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', {\n  dark: '#525252',\n  light: new Color(new RGBA(10, 50, 100, 0.5)),\n  hc: '#525252'\n}, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final stabstop of a snippet.\"));\nexport var overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', {\n  dark: '#d186167e',\n  light: '#d186167e',\n  hc: '#AB5A00'\n}, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', {\n  dark: '#A0A0A0CC',\n  light: '#A0A0A0CC',\n  hc: '#A0A0A0CC'\n}, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var minimapFindMatch = registerColor('minimap.findMatchHighlight', {\n  light: '#d18616',\n  dark: '#d18616',\n  hc: '#AB5A00'\n}, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport var minimapSelection = registerColor('minimap.selectionHighlight', {\n  light: '#ADD6FF',\n  dark: '#264F78',\n  hc: '#ffffff'\n}, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport var minimapError = registerColor('minimap.errorHighlight', {\n  dark: new Color(new RGBA(255, 18, 18, 0.7)),\n  light: new Color(new RGBA(255, 18, 18, 0.7)),\n  hc: new Color(new RGBA(255, 50, 50, 1))\n}, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport var minimapWarning = registerColor('minimap.warningHighlight', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hc: editorWarningBorder\n}, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport var problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', {\n  dark: editorErrorForeground,\n  light: editorErrorForeground,\n  hc: editorErrorForeground\n}, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport var problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hc: editorWarningForeground\n}, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport var problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hc: editorInfoForeground\n}, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n// ----- color functions\nexport function darken(colorValue, factor) {\n  return function (theme) {\n    var color = resolveColorValue(colorValue, theme);\n    if (color) {\n      return color.darken(factor);\n    }\n    return undefined;\n  };\n}\nexport function lighten(colorValue, factor) {\n  return function (theme) {\n    var color = resolveColorValue(colorValue, theme);\n    if (color) {\n      return color.lighten(factor);\n    }\n    return undefined;\n  };\n}\nexport function transparent(colorValue, factor) {\n  return function (theme) {\n    var color = resolveColorValue(colorValue, theme);\n    if (color) {\n      return color.transparent(factor);\n    }\n    return undefined;\n  };\n}\nexport function oneOf() {\n  var colorValues = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    colorValues[_i] = arguments[_i];\n  }\n  return function (theme) {\n    for (var _i = 0, colorValues_1 = colorValues; _i < colorValues_1.length; _i++) {\n      var colorValue = colorValues_1[_i];\n      var color = resolveColorValue(colorValue, theme);\n      if (color) {\n        return color;\n      }\n    }\n    return undefined;\n  };\n}\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n  return function (theme) {\n    var from = resolveColorValue(colorValue, theme);\n    if (from) {\n      var backgroundColor = resolveColorValue(backgroundColorValue, theme);\n      if (backgroundColor) {\n        if (from.isDarkerThan(backgroundColor)) {\n          return Color.getLighterColor(from, backgroundColor, factor).transparent(transparency);\n        }\n        return Color.getDarkerColor(from, backgroundColor, factor).transparent(transparency);\n      }\n      return from.transparent(factor * transparency);\n    }\n    return undefined;\n  };\n}\n// ----- implementation\n/**\r\n * @param colorValue Resolve a color value in the context of a theme\r\n */\nexport function resolveColorValue(colorValue, theme) {\n  if (colorValue === null) {\n    return undefined;\n  } else if (typeof colorValue === 'string') {\n    if (colorValue[0] === '#') {\n      return Color.fromHex(colorValue);\n    }\n    return theme.getColor(colorValue);\n  } else if (colorValue instanceof Color) {\n    return colorValue;\n  } else if (typeof colorValue === 'function') {\n    return colorValue(theme);\n  }\n  return undefined;\n}\nexport var workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nvar schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nvar delayer = new RunOnceScheduler(function () {\n  return schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId);\n}, 200);\ncolorRegistry.onDidChangeSchema(function () {\n  if (!delayer.isScheduled()) {\n    delayer.schedule();\n  }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);","map":{"version":3,"names":["platform","Color","RGBA","Emitter","nls","Extensions","JSONExtensions","RunOnceScheduler","ColorContribution","ColorRegistry","_onDidChangeSchema","onDidChangeSchema","event","colorSchema","type","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","prototype","registerColor","id","defaults","description","needsTransparency","deprecationMessage","colorContribution","propertySchema","format","defaultSnippets","body","push","fire","resolveDefaultColor","theme","colorDesc","colorValue","resolveColorValue","undefined","getColorSchema","toString","_this","sorter","a","b","cat1","indexOf","cat2","localeCompare","Object","keys","sort","map","k","join","colorRegistry","Registry","add","foreground","dark","light","hc","localize","errorForeground","focusBorder","fromHex","transparent","contrastBorder","activeContrastBorder","textLinkForeground","textCodeBlockBackground","black","widgetShadow","inputBackground","white","inputForeground","inputBorder","inputActiveOptionBorder","inputActiveOptionBackground","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","selectBackground","selectForeground","pickerGroupForeground","pickerGroupBorder","badgeBackground","badgeForeground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","progressBarBackground","editorErrorForeground","editorErrorBorder","editorWarningForeground","editorWarningBorder","editorInfoForeground","editorInfoBorder","editorHintForeground","editorHintBorder","editorBackground","editorForeground","editorWidgetBackground","editorWidgetForeground","editorWidgetBorder","editorWidgetResizeBorder","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","lessProminent","editorSelectionHighlightBorder","editorFindMatch","editorFindMatchHighlight","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverHighlight","editorHoverBackground","editorHoverForeground","editorHoverBorder","editorHoverStatusBarBackground","lighten","darken","editorActiveLinkForeground","blue","cyan","editorLightBulbForeground","editorLightBulbAutoFixForeground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffInsertedOutline","diffRemovedOutline","diffBorder","listFocusBackground","listFocusForeground","listActiveSelectionBackground","listActiveSelectionForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listInactiveFocusBackground","listHoverBackground","listHoverForeground","listDropBackground","listHighlightForeground","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","treeIndentGuidesStroke","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","snippetTabstopHighlightBackground","snippetTabstopHighlightBorder","snippetFinalTabstopHighlightBackground","snippetFinalTabstopHighlightBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","minimapFindMatch","minimapSelection","minimapError","minimapWarning","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","factor","color","oneOf","colorValues","_i","arguments","length","colorValues_1","backgroundColorValue","transparency","from","backgroundColor","isDarkerThan","getLighterColor","getDarkerColor","getColor","workbenchColorsSchemaId","schemaRegistry","as","JSONContribution","registerSchema","delayer","notifySchemaChanged","isScheduled","schedule"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as platform from '../../registry/common/platform.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\n// color registry\r\nexport var Extensions = {\r\n    ColorContribution: 'base.contributions.colors'\r\n};\r\nvar ColorRegistry = /** @class */ (function () {\r\n    function ColorRegistry() {\r\n        this._onDidChangeSchema = new Emitter();\r\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\r\n        this.colorSchema = { type: 'object', properties: {} };\r\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\r\n        this.colorsById = {};\r\n    }\r\n    ColorRegistry.prototype.registerColor = function (id, defaults, description, needsTransparency, deprecationMessage) {\r\n        if (needsTransparency === void 0) { needsTransparency = false; }\r\n        var colorContribution = { id: id, description: description, defaults: defaults, needsTransparency: needsTransparency, deprecationMessage: deprecationMessage };\r\n        this.colorsById[id] = colorContribution;\r\n        var propertySchema = { type: 'string', description: description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\r\n        if (deprecationMessage) {\r\n            propertySchema.deprecationMessage = deprecationMessage;\r\n        }\r\n        this.colorSchema.properties[id] = propertySchema;\r\n        this.colorReferenceSchema.enum.push(id);\r\n        this.colorReferenceSchema.enumDescriptions.push(description);\r\n        this._onDidChangeSchema.fire();\r\n        return id;\r\n    };\r\n    ColorRegistry.prototype.resolveDefaultColor = function (id, theme) {\r\n        var colorDesc = this.colorsById[id];\r\n        if (colorDesc && colorDesc.defaults) {\r\n            var colorValue = colorDesc.defaults[theme.type];\r\n            return resolveColorValue(colorValue, theme);\r\n        }\r\n        return undefined;\r\n    };\r\n    ColorRegistry.prototype.getColorSchema = function () {\r\n        return this.colorSchema;\r\n    };\r\n    ColorRegistry.prototype.toString = function () {\r\n        var _this = this;\r\n        var sorter = function (a, b) {\r\n            var cat1 = a.indexOf('.') === -1 ? 0 : 1;\r\n            var cat2 = b.indexOf('.') === -1 ? 0 : 1;\r\n            if (cat1 !== cat2) {\r\n                return cat1 - cat2;\r\n            }\r\n            return a.localeCompare(b);\r\n        };\r\n        return Object.keys(this.colorsById).sort(sorter).map(function (k) { return \"- `\" + k + \"`: \" + _this.colorsById[k].description; }).join('\\n');\r\n    };\r\n    return ColorRegistry;\r\n}());\r\nvar colorRegistry = new ColorRegistry();\r\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\r\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\r\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\r\n}\r\n// ----- base colors\r\nexport var foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hc: '#FFFFFF' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\r\nexport var errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hc: '#F48771' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\r\nexport var focusBorder = registerColor('focusBorder', { dark: Color.fromHex('#0E639C').transparent(0.8), light: Color.fromHex('#007ACC').transparent(0.4), hc: '#F38518' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\r\nexport var contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hc: '#6FC3DF' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\r\nexport var activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hc: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\r\nexport var textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hc: '#3794FF' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\r\nexport var textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hc: Color.black }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\r\n// ----- widgets\r\nexport var widgetShadow = registerColor('widget.shadow', { dark: '#000000', light: '#A8A8A8', hc: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\r\nexport var inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('inputBoxBackground', \"Input box background.\"));\r\nexport var inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\r\nexport var inputBorder = registerColor('input.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\r\nexport var inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC00', light: '#007ACC00', hc: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\r\nexport var inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.5), light: transparent(focusBorder, 0.3), hc: null }, nls.localize('inputOption.activeBackground', \"Background color of activated options in input fields.\"));\r\nexport var inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hc: Color.black }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\r\nexport var inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\r\nexport var inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hc: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\r\nexport var inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hc: Color.black }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\r\nexport var inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\r\nexport var inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hc: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\r\nexport var inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hc: Color.black }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\r\nexport var inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\r\nexport var inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\r\nexport var selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('dropdownBackground', \"Dropdown background.\"));\r\nexport var selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: null, hc: Color.white }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\r\nexport var pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hc: Color.white }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\r\nexport var pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hc: Color.white }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\r\nexport var badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hc: Color.black }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\r\nexport var badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hc: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\r\nexport var scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hc: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\r\nexport var scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hc: transparent(contrastBorder, 0.6) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\r\nexport var scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hc: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\r\nexport var scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hc: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\r\nexport var progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hc: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\r\nexport var editorErrorForeground = registerColor('editorError.foreground', { dark: '#F48771', light: '#E51400', hc: null }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\r\nexport var editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hc: Color.fromHex('#E47777').transparent(0.8) }, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\r\nexport var editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#E9A700', hc: null }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\r\nexport var editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hc: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\r\nexport var editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#75BEFF', light: '#75BEFF', hc: null }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\r\nexport var editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hc: Color.fromHex('#75BEFF').transparent(0.8) }, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\r\nexport var editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hc: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\r\nexport var editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hc: Color.fromHex('#eeeeee').transparent(0.8) }, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\r\n/**\r\n * Editor background color.\r\n * Because of bug https://monacotools.visualstudio.com/DefaultCollection/Monaco/_workitems/edit/13254\r\n * we are *not* using the color white (or #ffffff, rgba(255,255,255)) but something very close to white.\r\n */\r\nexport var editorBackground = registerColor('editor.background', { light: '#fffffe', dark: '#1E1E1E', hc: Color.black }, nls.localize('editorBackground', \"Editor background color.\"));\r\n/**\r\n * Editor foreground color.\r\n */\r\nexport var editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hc: Color.white }, nls.localize('editorForeground', \"Editor default foreground color.\"));\r\n/**\r\n * Editor widgets\r\n */\r\nexport var editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hc: '#0C141F' }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\r\nexport var editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\r\nexport var editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hc: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\r\nexport var editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hc: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\r\n/**\r\n * Editor selection colors.\r\n */\r\nexport var editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hc: '#f3f518' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\r\nexport var editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hc: '#000000' }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\r\nexport var editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hc: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport var editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hc: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\r\n/**\r\n * Editor find match colors.\r\n */\r\nexport var editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hc: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\r\nexport var editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hc: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport var editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hc: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport var editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\r\nexport var editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\r\nexport var editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hc: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\n/**\r\n * Editor hover\r\n */\r\nexport var editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hc: '#ADD6FF26' }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\r\nexport var editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hc: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\r\nexport var editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\r\nexport var editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hc: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\r\n/**\r\n * Editor link colors\r\n */\r\nexport var editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hc: Color.cyan }, nls.localize('activeLinkForeground', 'Color of active links.'));\r\n/**\r\n * Editor lighbulb icon colors\r\n */\r\nexport var editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hc: '#FFCC00' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\r\nexport var editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hc: '#75BEFF' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\r\n/**\r\n * Diff Editor Colors\r\n */\r\nexport var defaultInsertColor = new Color(new RGBA(155, 185, 85, 0.2));\r\nexport var defaultRemoveColor = new Color(new RGBA(255, 0, 0, 0.2));\r\nexport var diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: defaultInsertColor, light: defaultInsertColor, hc: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hc: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hc: '#33ff2eff' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\r\nexport var diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hc: '#FF008F' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\r\nexport var diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\r\n/**\r\n * List and tree colors\r\n */\r\nexport var listFocusBackground = registerColor('list.focusBackground', { dark: '#062F4A', light: '#D6EBFF', hc: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hc: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#094771', light: '#0074E8', hc: null }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hc: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hc: null }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hc: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hc: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hc: null }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\r\nexport var listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hc: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\r\nexport var listDropBackground = registerColor('list.dropBackground', { dark: listFocusBackground, light: listFocusBackground, hc: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\r\nexport var listHighlightForeground = registerColor('list.highlightForeground', { dark: '#0097fb', light: '#0066BF', hc: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\r\nexport var listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: '#efc1ad', dark: '#653723', hc: Color.black }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\r\nexport var listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hc: '#f38518' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\r\nexport var listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\r\nexport var treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hc: '#a9a9a9' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\r\n/**\r\n * Menu colors\r\n */\r\nexport var menuBorder = registerColor('menu.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\r\nexport var menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: foreground, hc: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\r\nexport var menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hc: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\r\nexport var menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hc: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\r\nexport var menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hc: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\r\nexport var menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\r\nexport var menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#BBBBBB', light: '#888888', hc: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\r\n/**\r\n * Snippet placeholder colors\r\n */\r\nexport var snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hc: new Color(new RGBA(124, 124, 124, 0.3)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\r\nexport var snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hc: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\r\nexport var snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\r\nexport var snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hc: '#525252' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final stabstop of a snippet.\"));\r\nexport var overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hc: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hc: '#AB5A00' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\r\nexport var minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hc: '#ffffff' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\r\nexport var minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('minimapError', 'Minimap marker color for errors.'));\r\nexport var minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\r\nexport var problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hc: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\r\nexport var problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\r\nexport var problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\r\n// ----- color functions\r\nexport function darken(colorValue, factor) {\r\n    return function (theme) {\r\n        var color = resolveColorValue(colorValue, theme);\r\n        if (color) {\r\n            return color.darken(factor);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nexport function lighten(colorValue, factor) {\r\n    return function (theme) {\r\n        var color = resolveColorValue(colorValue, theme);\r\n        if (color) {\r\n            return color.lighten(factor);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nexport function transparent(colorValue, factor) {\r\n    return function (theme) {\r\n        var color = resolveColorValue(colorValue, theme);\r\n        if (color) {\r\n            return color.transparent(factor);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nexport function oneOf() {\r\n    var colorValues = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        colorValues[_i] = arguments[_i];\r\n    }\r\n    return function (theme) {\r\n        for (var _i = 0, colorValues_1 = colorValues; _i < colorValues_1.length; _i++) {\r\n            var colorValue = colorValues_1[_i];\r\n            var color = resolveColorValue(colorValue, theme);\r\n            if (color) {\r\n                return color;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\r\n    return function (theme) {\r\n        var from = resolveColorValue(colorValue, theme);\r\n        if (from) {\r\n            var backgroundColor = resolveColorValue(backgroundColorValue, theme);\r\n            if (backgroundColor) {\r\n                if (from.isDarkerThan(backgroundColor)) {\r\n                    return Color.getLighterColor(from, backgroundColor, factor).transparent(transparency);\r\n                }\r\n                return Color.getDarkerColor(from, backgroundColor, factor).transparent(transparency);\r\n            }\r\n            return from.transparent(factor * transparency);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\n// ----- implementation\r\n/**\r\n * @param colorValue Resolve a color value in the context of a theme\r\n */\r\nexport function resolveColorValue(colorValue, theme) {\r\n    if (colorValue === null) {\r\n        return undefined;\r\n    }\r\n    else if (typeof colorValue === 'string') {\r\n        if (colorValue[0] === '#') {\r\n            return Color.fromHex(colorValue);\r\n        }\r\n        return theme.getColor(colorValue);\r\n    }\r\n    else if (colorValue instanceof Color) {\r\n        return colorValue;\r\n    }\r\n    else if (typeof colorValue === 'function') {\r\n        return colorValue(theme);\r\n    }\r\n    return undefined;\r\n}\r\nexport var workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\r\nvar schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\r\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\r\nvar delayer = new RunOnceScheduler(function () { return schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId); }, 200);\r\ncolorRegistry.onDidChangeSchema(function () {\r\n    if (!delayer.isScheduled()) {\r\n        delayer.schedule();\r\n    }\r\n});\r\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}