{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from '../parser/htmlScanner.js';\nimport { Range } from './../_deps/vscode-languageserver-types/main.js';\nimport * as strings from '../utils/strings.js';\nimport { URI as Uri } from './../../vscode-uri/index.js';\nimport { TokenType } from '../htmlLanguageTypes.js';\nfunction normalizeRef(url) {\n  var first = url[0];\n  var last = url[url.length - 1];\n  if (first === last && (first === '\\'' || first === '\\\"')) {\n    url = url.substr(1, url.length - 2);\n  }\n  return url;\n}\nfunction validateRef(url, languageId) {\n  if (!url.length) {\n    return false;\n  }\n  if (languageId === 'handlebars' && /{{.*}}/.test(url)) {\n    return false;\n  }\n  return /\\b(w[\\w\\d+.-]*:\\/\\/)?[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|\\/?))/.test(url);\n}\nfunction getWorkspaceUrl(documentUri, tokenContent, documentContext, base) {\n  if (/^\\s*javascript\\:/i.test(tokenContent) || /[\\n\\r]/.test(tokenContent)) {\n    return undefined;\n  }\n  tokenContent = tokenContent.replace(/^\\s*/g, '');\n  if (/^https?:\\/\\//i.test(tokenContent) || /^file:\\/\\//i.test(tokenContent)) {\n    // Absolute link that needs no treatment\n    return tokenContent;\n  }\n  if (/^\\#/i.test(tokenContent)) {\n    return documentUri + tokenContent;\n  }\n  if (/^\\/\\//i.test(tokenContent)) {\n    // Absolute link (that does not name the protocol)\n    var pickedScheme = strings.startsWith(documentUri, 'https://') ? 'https' : 'http';\n    return pickedScheme + ':' + tokenContent.replace(/^\\s*/g, '');\n  }\n  if (documentContext) {\n    return documentContext.resolveReference(tokenContent, base || documentUri);\n  }\n  return tokenContent;\n}\nfunction createLink(document, documentContext, attributeValue, startOffset, endOffset, base) {\n  var tokenContent = normalizeRef(attributeValue);\n  if (!validateRef(tokenContent, document.languageId)) {\n    return undefined;\n  }\n  if (tokenContent.length < attributeValue.length) {\n    startOffset++;\n    endOffset--;\n  }\n  var workspaceUrl = getWorkspaceUrl(document.uri, tokenContent, documentContext, base);\n  if (!workspaceUrl || !isValidURI(workspaceUrl)) {\n    return undefined;\n  }\n  return {\n    range: Range.create(document.positionAt(startOffset), document.positionAt(endOffset)),\n    target: workspaceUrl\n  };\n}\nfunction isValidURI(uri) {\n  try {\n    Uri.parse(uri);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nexport function findDocumentLinks(document, documentContext) {\n  var newLinks = [];\n  var scanner = createScanner(document.getText(), 0);\n  var token = scanner.scan();\n  var lastAttributeName = undefined;\n  var afterBase = false;\n  var base = void 0;\n  var idLocations = {};\n  while (token !== TokenType.EOS) {\n    switch (token) {\n      case TokenType.StartTag:\n        if (!base) {\n          var tagName = scanner.getTokenText().toLowerCase();\n          afterBase = tagName === 'base';\n        }\n        break;\n      case TokenType.AttributeName:\n        lastAttributeName = scanner.getTokenText().toLowerCase();\n        break;\n      case TokenType.AttributeValue:\n        if (lastAttributeName === 'src' || lastAttributeName === 'href') {\n          var attributeValue = scanner.getTokenText();\n          if (!afterBase) {\n            // don't highlight the base link itself\n            var link = createLink(document, documentContext, attributeValue, scanner.getTokenOffset(), scanner.getTokenEnd(), base);\n            if (link) {\n              newLinks.push(link);\n            }\n          }\n          if (afterBase && typeof base === 'undefined') {\n            base = normalizeRef(attributeValue);\n            if (base && documentContext) {\n              base = documentContext.resolveReference(base, document.uri);\n            }\n          }\n          afterBase = false;\n          lastAttributeName = undefined;\n        } else if (lastAttributeName === 'id') {\n          var id = normalizeRef(scanner.getTokenText());\n          idLocations[id] = scanner.getTokenOffset();\n        }\n        break;\n    }\n    token = scanner.scan();\n  }\n  // change local links with ids to actual positions\n  for (var _i = 0, newLinks_1 = newLinks; _i < newLinks_1.length; _i++) {\n    var link = newLinks_1[_i];\n    var localWithHash = document.uri + '#';\n    if (link.target && strings.startsWith(link.target, localWithHash)) {\n      var target = link.target.substr(localWithHash.length);\n      var offset = idLocations[target];\n      if (offset !== undefined) {\n        var pos = document.positionAt(offset);\n        link.target = \"\" + localWithHash + (pos.line + 1) + \",\" + (pos.character + 1);\n      }\n    }\n  }\n  return newLinks;\n}","map":{"version":3,"names":["createScanner","Range","strings","URI","Uri","TokenType","normalizeRef","url","first","last","length","substr","validateRef","languageId","test","getWorkspaceUrl","documentUri","tokenContent","documentContext","base","undefined","replace","pickedScheme","startsWith","resolveReference","createLink","document","attributeValue","startOffset","endOffset","workspaceUrl","uri","isValidURI","range","create","positionAt","target","parse","e","findDocumentLinks","newLinks","scanner","getText","token","scan","lastAttributeName","afterBase","idLocations","EOS","StartTag","tagName","getTokenText","toLowerCase","AttributeName","AttributeValue","link","getTokenOffset","getTokenEnd","push","id","_i","newLinks_1","localWithHash","offset","pos","line","character"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlLinks.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from '../parser/htmlScanner.js';\nimport { Range } from './../_deps/vscode-languageserver-types/main.js';\nimport * as strings from '../utils/strings.js';\nimport { URI as Uri } from './../../vscode-uri/index.js';\nimport { TokenType } from '../htmlLanguageTypes.js';\nfunction normalizeRef(url) {\n    var first = url[0];\n    var last = url[url.length - 1];\n    if (first === last && (first === '\\'' || first === '\\\"')) {\n        url = url.substr(1, url.length - 2);\n    }\n    return url;\n}\nfunction validateRef(url, languageId) {\n    if (!url.length) {\n        return false;\n    }\n    if (languageId === 'handlebars' && /{{.*}}/.test(url)) {\n        return false;\n    }\n    return /\\b(w[\\w\\d+.-]*:\\/\\/)?[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|\\/?))/.test(url);\n}\nfunction getWorkspaceUrl(documentUri, tokenContent, documentContext, base) {\n    if (/^\\s*javascript\\:/i.test(tokenContent) || /[\\n\\r]/.test(tokenContent)) {\n        return undefined;\n    }\n    tokenContent = tokenContent.replace(/^\\s*/g, '');\n    if (/^https?:\\/\\//i.test(tokenContent) || /^file:\\/\\//i.test(tokenContent)) {\n        // Absolute link that needs no treatment\n        return tokenContent;\n    }\n    if (/^\\#/i.test(tokenContent)) {\n        return documentUri + tokenContent;\n    }\n    if (/^\\/\\//i.test(tokenContent)) {\n        // Absolute link (that does not name the protocol)\n        var pickedScheme = strings.startsWith(documentUri, 'https://') ? 'https' : 'http';\n        return pickedScheme + ':' + tokenContent.replace(/^\\s*/g, '');\n    }\n    if (documentContext) {\n        return documentContext.resolveReference(tokenContent, base || documentUri);\n    }\n    return tokenContent;\n}\nfunction createLink(document, documentContext, attributeValue, startOffset, endOffset, base) {\n    var tokenContent = normalizeRef(attributeValue);\n    if (!validateRef(tokenContent, document.languageId)) {\n        return undefined;\n    }\n    if (tokenContent.length < attributeValue.length) {\n        startOffset++;\n        endOffset--;\n    }\n    var workspaceUrl = getWorkspaceUrl(document.uri, tokenContent, documentContext, base);\n    if (!workspaceUrl || !isValidURI(workspaceUrl)) {\n        return undefined;\n    }\n    return {\n        range: Range.create(document.positionAt(startOffset), document.positionAt(endOffset)),\n        target: workspaceUrl\n    };\n}\nfunction isValidURI(uri) {\n    try {\n        Uri.parse(uri);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexport function findDocumentLinks(document, documentContext) {\n    var newLinks = [];\n    var scanner = createScanner(document.getText(), 0);\n    var token = scanner.scan();\n    var lastAttributeName = undefined;\n    var afterBase = false;\n    var base = void 0;\n    var idLocations = {};\n    while (token !== TokenType.EOS) {\n        switch (token) {\n            case TokenType.StartTag:\n                if (!base) {\n                    var tagName = scanner.getTokenText().toLowerCase();\n                    afterBase = tagName === 'base';\n                }\n                break;\n            case TokenType.AttributeName:\n                lastAttributeName = scanner.getTokenText().toLowerCase();\n                break;\n            case TokenType.AttributeValue:\n                if (lastAttributeName === 'src' || lastAttributeName === 'href') {\n                    var attributeValue = scanner.getTokenText();\n                    if (!afterBase) { // don't highlight the base link itself\n                        var link = createLink(document, documentContext, attributeValue, scanner.getTokenOffset(), scanner.getTokenEnd(), base);\n                        if (link) {\n                            newLinks.push(link);\n                        }\n                    }\n                    if (afterBase && typeof base === 'undefined') {\n                        base = normalizeRef(attributeValue);\n                        if (base && documentContext) {\n                            base = documentContext.resolveReference(base, document.uri);\n                        }\n                    }\n                    afterBase = false;\n                    lastAttributeName = undefined;\n                }\n                else if (lastAttributeName === 'id') {\n                    var id = normalizeRef(scanner.getTokenText());\n                    idLocations[id] = scanner.getTokenOffset();\n                }\n                break;\n        }\n        token = scanner.scan();\n    }\n    // change local links with ids to actual positions\n    for (var _i = 0, newLinks_1 = newLinks; _i < newLinks_1.length; _i++) {\n        var link = newLinks_1[_i];\n        var localWithHash = document.uri + '#';\n        if (link.target && strings.startsWith(link.target, localWithHash)) {\n            var target = link.target.substr(localWithHash.length);\n            var offset = idLocations[target];\n            if (offset !== undefined) {\n                var pos = document.positionAt(offset);\n                link.target = \"\" + localWithHash + (pos.line + 1) + \",\" + (pos.character + 1);\n            }\n        }\n    }\n    return newLinks;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}