{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\DefineOptimize\\\\ValueLevelConfig.js\";\nimport React, { Component } from 'react';\nimport { Input, Col, Button, Row, Select, Checkbox, Form, Steps, message, Modal, Icon, Spin } from 'antd';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport { CallServerPost, PostCallWithZoneForDomainCreate, PostCallWithZone, errorModal, successModal, successModalCallback, showProgress, hideProgress } from '../Utility/sharedUtility';\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\nimport ConfirmModal from '../Utility/ConfirmModal';\nimport SingleForm from '../Utility/defineBotForm';\nimport ReactTable from '../Utility/reactTable';\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\nimport { SelectOption } from '../../components/uielements/select';\nimport ComplexWhereClause from './ComplexWhereClause';\nimport { deleteRowWhenEdit, externalComplexWhereClauseName } from './ComplexWhereClause';\nvar Option = SelectOption;\nvar FormItem = Form.Item;\nvar CheckboxGroup = Checkbox.Group;\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 17\n  }\n});\nvar thisObj;\nvar loopControl = true;\nvar description = \"\";\nvar checkedListBeforeOpenClause = \"\";\nvar complexWhereClauseFormData = [];\nvar valuesForComparator = [];\nvar valuesForOperator = [];\n//let complexWhereClauseFormData = [];\n//let complexWhereClauseFormData = [];\nvar ValueLevelConfig = /*#__PURE__*/function (_Component) {\n  _inherits(ValueLevelConfig, _Component);\n  var _super = _createSuper(ValueLevelConfig);\n  function ValueLevelConfig(props) {\n    var _this;\n    _classCallCheck(this, ValueLevelConfig);\n    _this = _super.call(this, props);\n    _this.isNotUndefined = function (list) {\n      if (list != null && list != undefined) {\n        if (list.length == 0) {\n          return false;\n        } else {\n          if (Object.keys(list).length != 0) {\n            return true;\n          }\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n    _this.tableRow = function (prop, list, result, formData, fnFor) {\n      if (thisObj.isNotUndefined(list)) {\n        var tempResult = thisObj.rowFormation(list);\n        result.clauseRow = tempResult.clauseRow;\n        var tempStore = [];\n        tempStore.push(tempResult.concat);\n        result.savedclauseRows = JSON.stringify(tempStore);\n        result.copyOfClauseRow = tempResult.concat;\n        if (fnFor == \"onOpen\") {\n          result.copyOfClauseRow = list;\n          result.checkedList = thisObj.state.savedCheckedList;\n          result.DeletedClauseRows = JSON.parse(thisObj.state.savedDeletedClauseRows);\n        }\n        thisObj.CommonEach(formData, [{\n          name: \"Domain\",\n          action: \"defaultValue\",\n          set: prop.data.Domain\n        }, {\n          name: \"VariableName\",\n          action: \"defaultValue\",\n          set: prop.data.Variable\n        }]);\n        if (fnFor == \"onLoad\") {\n          result.selectOptions = {\n            topicvariable: result.TopicVariable,\n            topicvariablelabel: result.TopicVariableLabel\n          };\n          if (thisObj.props.action == \"Update\") {\n            result.savedCheckedList = JSON.stringify(prop.variablelevelwherecondition[0].groupBy.split(\",\"));\n            result.checkedList = result.savedCheckedList;\n            thisObj.CommonEach(formData, [{\n              name: \"ShortName\",\n              action: \"defaultValue\",\n              set: prop.variablelevelwherecondition[0].topicVariable\n            }, {\n              name: \"LongName\",\n              action: \"defaultValue\",\n              set: prop.variablelevelwherecondition[0].topicVariableLabel\n            }, {\n              name: \"ShortName\",\n              action: \"editable\",\n              set: false\n            }, {\n              name: \"LongName\",\n              action: \"editable\",\n              set: false\n            }]);\n          }\n        }\n      } else {\n        if (fnFor == \"onOpen\") {\n          thisObj.rowFormation([]);\n          result.clauseRow = [];\n          result.copyOfClauseRow = {};\n          result.checkedList = \"[]\";\n          result.DeletedClauseRows = [];\n        }\n        thisObj.CommonEach(formData, [{\n          name: \"Domain\",\n          action: \"defaultValue\",\n          set: prop.data.Domain\n        }, {\n          name: \"VariableName\",\n          action: \"defaultValue\",\n          set: prop.data.Variable\n        }, {\n          name: \"ShortName\",\n          action: \"editable\",\n          set: true\n        }, {\n          name: \"LongName\",\n          action: \"editable\",\n          set: true\n        }]);\n      }\n      if (fnFor == \"onLoad\") {\n        result.OriginalCheckBoxList = result.CheckBoxList;\n        result.CheckBoxList = thisObj.checkDataFormation(result.CheckBoxList, \"\");\n        result.selectOptions = {\n          topicvariable: result.TopicVariable,\n          topicvariablelabel: result.TopicVariableLabel\n        };\n      }\n      result.visible = prop.visible;\n      prop.handleLoader();\n    };\n    _this.checkDataFormation = function (CheckBoxList, name, dataArr) {\n      var data = dataArr != undefined ? dataArr : [];\n      var originalCheckBoxList = CheckBoxList;\n      if (typeof name == \"string\") {\n        originalCheckBoxList.forEach(function (key) {\n          if (key == thisObj.props.form.getFieldValue(\"ShortName\")) {\n            if (data.findIndex(function (x) {\n              return x.label == key;\n            }) === -1) {\n              data.push({\n                label: key,\n                value: key,\n                disabled: true\n              });\n            }\n          } else {\n            if (data.findIndex(function (x) {\n              return x.label == key;\n            }) === -1) {\n              data.push({\n                label: key,\n                value: key,\n                disabled: false\n              });\n            }\n          }\n        });\n      } else {\n        name.forEach(function (opt) {\n          thisObj.checkDataFormation(originalCheckBoxList, opt, data);\n        });\n      }\n      return data;\n    };\n    _this.fnPageFieldValidation = function (value) {\n      thisObj.props.form.setFieldsValue({\n        Pages: value\n      });\n    };\n    _this.Clause = function () {\n      thisObj.props.form.validateFields([\"ShortName\", \"LongName\"], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          var state = thisObj.state;\n          checkedListBeforeOpenClause = thisObj.state.checkedList;\n          var tempCheckedList = [];\n          tempCheckedList = [thisObj.props.form.getFieldValue(\"ShortName\")];\n          if (JSON.parse(thisObj.state.checkedList).length !== 0 && JSON.parse(thisObj.state.checkedList)[0] !== \"\") {\n            tempCheckedList = JSON.parse(thisObj.state.checkedList);\n          }\n          thisObj.setState({\n            readyShow: false,\n            checkedList: JSON.stringify(tempCheckedList),\n            clauseShow: true,\n            condnShow: false,\n            CheckBoxList: thisObj.checkDataFormation(state.OriginalCheckBoxList, tempCheckedList)\n          });\n        }\n      });\n    };\n    _this.CommonEach = function (data, searchData) {\n      data.forEach(function (key, index) {\n        searchData.forEach(function (key1, index) {\n          if (key.displayName.replace(/ /g, \"\") == key1.name) {\n            key[key1.action] = key1.set;\n            return false;\n          }\n        });\n      });\n    };\n    _this.Cancel = function () {\n      var state = thisObj.state;\n      if (state.readyShow) {\n        //thisObj.setState({\n        //    clauseRow: []\n        //});\n        thisObj.props.handleCancel();\n      } else if (state.clauseShow) {\n        thisObj.setState({\n          readyShow: true,\n          condnShow: false,\n          clauseShow: false,\n          checkedList: checkedListBeforeOpenClause\n        });\n      } else {\n        thisObj.setState({\n          readyShow: true,\n          condnShow: false,\n          clauseShow: false,\n          complexWhereClauseFormData: [],\n          selectOptionsForComplexWhere: {\n            domain: [],\n            variablename: [],\n            value: [],\n            comparator: [],\n            operator: []\n          },\n          selectOptionsForComplexWhereForValue: [],\n          selectOptionsForComplexWhereForVariable: []\n        });\n      }\n    };\n    _this.onChange = function (e) {\n      thisObj.setState({\n        checkedList: JSON.stringify(e)\n      });\n    };\n    _this.shortNameChange = function (value) {\n      var data = [value];\n      thisObj.setState({\n        checkedList: JSON.stringify(data),\n        CheckBoxList: thisObj.checkDataFormation(thisObj.state.OriginalCheckBoxList, value)\n      });\n    };\n    _this.save = function () {\n      thisObj.props.form.validateFields(function (err, values) {\n        if (!err) {\n          values.GroupBy = [];\n          if (JSON.parse(thisObj.state.checkedList).length != 0) {\n            values.GroupBy = JSON.parse(thisObj.state.checkedList).toString();\n          }\n          values.whereClauseType = 1; //Simple\n          values.StudyID = JSON.parse(sessionStorage.studyDetails).studyID;\n          if (thisObj.state.readyShow) {\n            var formData = thisObj.state.formData;\n            var tempData = [];\n            Object.keys(thisObj.state.copyOfClauseRow).forEach(function (key, index) {\n              var currentObj = thisObj.state.copyOfClauseRow[key];\n              var temp = {\n                joinClause: currentObj.joinClause,\n                whereClauseCondition: currentObj.whereClauseCondition,\n                whereClauseName: currentObj.whereClauseName,\n                domain: values.Domain,\n                topicVariable: values.ShortName,\n                topicVariableLabel: values.LongName,\n                groupBy: thisObj.state.whereClauseModalTitle == \"Complex WhereClause\" || thisObj.state.whereClauseModalTitle == \"Advance WhereClause\" ? \"\" : values.GroupBy.length === 0 ? \"\" : values.GroupBy,\n                studyID: values.StudyID,\n                variableName: values.VariableName,\n                variableAttributeID: currentObj.variableAttributeID,\n                valueListAttributeID: currentObj.valueListAttributeID,\n                itemDefAttributeID: currentObj.itemDefAttributeID,\n                variableLevelWhereConditionID: currentObj.variableLevelWhereConditionID,\n                whereClauseType: currentObj.whereClauseType,\n                //1 -- Simple , 2 --Complex, 3 --Advance(across Domain)\n                modificationStatus: currentObj.modificationStatus,\n                updatedBy: JSON.parse(sessionStorage.userProfile).userID\n              };\n              tempData.push(temp);\n            });\n            thisObj.CommonEach(formData, [{\n              name: \"ShortName\",\n              action: \"defaultValue\",\n              set: values.ShortName\n            }, {\n              name: \"LongName\",\n              action: \"defaultValue\",\n              set: values.LongName\n            }]);\n            if (tempData.length === 0) {\n              errorModal(\"Please configure the where conditions to generate the valuelists\");\n            } else {\n              thisObj.setState({\n                savedDeletedClauseRows: JSON.stringify(thisObj.state.DeletedClauseRows),\n                savedCheckedList: thisObj.state.checkedList,\n                savedclauseRows: JSON.stringify([thisObj.state.copyOfClauseRow])\n              });\n              thisObj.props.saveValueLevel(tempData);\n            }\n          } else {\n            showProgress();\n\n            //thisObj.props.saveValueLevel({valueLevelConfig:values})\n            PostCallWithZoneForDomainCreate('Variable/GenerateDefaultWhereCondition', values).then(function (response) {\n              hideProgress();\n              //console.log(response);\n              var responseData = response;\n              if (responseData.status == 0) {\n                errorModal(responseData.message);\n              } else {\n                var data = thisObj.rowForm(responseData.value.ConditionList, \"Create\");\n                //successModalCallback(responseData.message, thisObj.Cancel);\n              }\n            }).catch(function (error) {\n              return error;\n            });\n          }\n        }\n      });\n    };\n    _this.addComplexWhereClause = function () {\n      thisObj.props.form.validateFields(function (err, values) {\n        if (!err) {}\n      }).catch(function (err) {\n        return err;\n      });\n    };\n    _this.fnToDeleteBothRow = function (rowindex) {\n      var rows = thisObj.state.copyOfClauseRow;\n      if (rows[rowindex].modificationStatus == 1) {\n        delete rows[rowindex];\n      } else {\n        var tempDelete = thisObj.state.DeletedClauseRows;\n        rows[rowindex].modificationStatus = 3;\n        var deletedClauses = [];\n        deletedClauses = tempDelete;\n        deletedClauses.push(rows[rowindex]);\n        thisObj.setState({\n          DeletedClauseRows: deletedClauses\n        });\n      }\n      thisObj.rowForm(rows, \"delete\");\n    };\n    _this.fnCheckcondn = function (actionFor, updatedKey, wherename) {\n      if (actionFor == \"ComplexMergeUpdate\") {\n        if (updatedKey != wherename) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    };\n    _this.concat = function (updatedRows, newdata, actionFor) {\n      var tempbool = 0;\n      var pushcont = 0;\n      var concatRows = [];\n      var isSatisfy = false;\n      var newlyCreatedJSon = JSON.parse(newdata);\n      var data = JSON.parse(newdata);\n      Object.keys(updatedRows).forEach(function (updatedKey, updatedIndex) {\n        isSatisfy = false;\n        var tempCurrentSet = updatedRows[updatedKey];\n        if (tempbool == 0) {\n          data.forEach(function (key, index) {\n            pushcont = 1;\n            if (thisObj.fnCheckcondn(actionFor, updatedKey, key.beforUpdate)) {\n              pushcont = 0;\n              //edit the databaserow then delete the row then create the database row again will go this condn\n              if (tempCurrentSet.modificationStatus == 3 && tempCurrentSet.dataBaseName != undefined && tempCurrentSet.dataBaseName != null) {\n                if (tempCurrentSet.dataBaseName == key.whereClauseName) {\n                  tempbool = data.length == 1 ? 1 : 0;\n                  tempCurrentSet.dataBaseName = null;\n                  tempCurrentSet.whereClauseName = key.whereClauseName;\n                  tempCurrentSet.whereClauseCondition = key.whereClauseCondition;\n                  tempCurrentSet.modificationStatus = 0;\n                  concatRows.push(tempCurrentSet);\n                  newlyCreatedJSon.splice(index - (data.length - newlyCreatedJSon.length), 1);\n                  isSatisfy = true;\n                }\n              } else if (tempCurrentSet.whereClauseName == key.whereClauseName) {\n                isSatisfy = true;\n                //false condn\n                //if newly created not to care ,and updated --> edited (if edited name is same to newly created then no need to change the status to unmodify)\n                //true condn\n                //if unmodify is created again then it consider as unmodify only.\n                //if we delete the database data then again newly create that also consider as unmodify\n                if (tempCurrentSet.modificationStatus == 3 || tempCurrentSet.modificationStatus == 0) {\n                  tempCurrentSet.modificationStatus = 0;\n                  concatRows.push(tempCurrentSet);\n                  tempbool = data.length == 1 ? 1 : 0;\n                  newlyCreatedJSon.splice(index - (data.length - newlyCreatedJSon.length), 1);\n                }\n                //if database one is already edited then create the same modified one again that also under edited one only not under created one\n                //if create the new one again create the new one will also use this for row arrangements\n                else {\n                  concatRows.push(tempCurrentSet);\n                  tempbool = data.length == 1 ? 1 : 0;\n                  newlyCreatedJSon.splice(index - (data.length - newlyCreatedJSon.length), 1);\n                }\n                return;\n              }\n            }\n          });\n        }\n        if (!isSatisfy) {\n          if (actionFor == \"ComplexMerge\" || actionFor == \"ComplexMergeUpdate\") {\n            if (pushcont == 0) {\n              concatRows.push(tempCurrentSet);\n            }\n          } else if (tempCurrentSet.whereClauseType == 2 || tempCurrentSet.whereClauseType == 3) {\n            //2 - Complex, 3 - Advance\n            concatRows.push(tempCurrentSet);\n          } else if (tempCurrentSet.modificationStatus == 0 || tempCurrentSet.modificationStatus == 3 || tempCurrentSet.modificationStatus == 2) {\n            tempCurrentSet.modificationStatus = 3;\n            concatRows.push(tempCurrentSet);\n          }\n        }\n      });\n      if (actionFor == \"ComplexMergeUpdate\") {\n        var update = updatedRows[data[0].beforUpdate];\n        if (tempbool == 0) {\n          if (update.modificationStatus != 1) {\n            update.whereClauseName = data[0].whereClauseName;\n            update.whereClauseCondition = data[0].whereClauseCondition;\n            update.modificationStatus = update.dataBaseName == data[0].whereClauseName ? 0 : 2;\n            update.whereClauseType = data[0].whereClauseType;\n            update.joinClause = data[0].joinClause; //Added join clause for Advance where clause\n            return concatRows.concat(update);\n          } else {\n            return concatRows.concat(data[0]);\n          }\n        } else {\n          if (update.modificationStatus != 1) {\n            update.modificationStatus = 3;\n            return concatRows.concat(update);\n          } else {\n            return concatRows;\n          }\n        }\n      } else {\n        return concatRows.concat(newlyCreatedJSon);\n      }\n    };\n    _this.rowForm = function (data, actionFor) {\n      var formData = thisObj.state.formData;\n      var concatData = [];\n      if (actionFor != \"delete\" && actionFor != undefined) {\n        concatData = thisObj.concat(thisObj.state.copyOfClauseRow, JSON.stringify(data), actionFor);\n      } else {\n        concatData = data;\n      }\n      var result = {\n        showRow: 0\n      };\n      if (Object.keys(concatData).length > 0) {\n        result = thisObj.rowFormation(concatData);\n      }\n      if (result.showRow == 0) {\n        thisObj.CommonEach(formData, [{\n          name: \"ShortName\",\n          action: \"editable\",\n          set: true\n        }, {\n          name: \"LongName\",\n          action: \"editable\",\n          set: true\n        }]);\n        thisObj.setState({\n          copyOfClauseRow: concatData,\n          checkedList: \"[]\",\n          clauseRow: [],\n          readyShow: true,\n          loading: false\n        });\n      } else {\n        thisObj.setState({\n          copyOfClauseRow: result.concat,\n          clauseRow: result.clauseRow,\n          readyShow: true,\n          loading: false\n        });\n      }\n    };\n    _this.rowFormation = function (row) {\n      var formData = thisObj.state.formData;\n      var showRow = 0;\n      var temp = [];\n      var concat = {};\n      Object.keys(row).forEach(function (key, index) {\n        var rowKey = row[key];\n        if (index == 0) {\n          thisObj.CommonEach(formData, [{\n            name: \"ShortName\",\n            action: \"editable\",\n            set: false\n          }, {\n            name: \"LongName\",\n            action: \"editable\",\n            set: false\n          }]);\n        }\n        var rowIndex = rowKey.whereClauseName;\n        concat[rowIndex] = rowKey;\n        var rowIndexForEdit = rowKey.whereClauseName + (rowKey.whereClauseType == 3 ? \"AdvanceWhereClause\" : \"ComplexWhereClause\");\n        var variableLevelWhereConditionID = rowKey.variableLevelWhereConditionID;\n        var btn = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n          onClick: function onClick() {\n            return thisObj.Condition(\"edit\", rowIndexForEdit);\n          },\n          tooltip: \"Edit\",\n          name: \"Edit\",\n          shape: \"circle\",\n          style: {\n            marginRight: \"5px\"\n          },\n          classname: \"fas fa-pen\",\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 30\n          }\n        }), /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n          onClick: function onClick() {\n            return thisObj.fnToDeleteBothRow(rowIndex, variableLevelWhereConditionID);\n          },\n          tooltip: \"Delete\",\n          name: \"Delete\",\n          shape: \"circle\",\n          classname: \"fas fa-trash-alt\",\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }\n        }));\n        if (rowKey.modificationStatus != 3) {\n          showRow = 1;\n          temp.push({\n            key: index,\n            Actions: btn,\n            whereClauseCondition: rowKey.whereClauseCondition,\n            whereClauseName: rowKey.whereClauseName,\n            modificationStatus: rowKey.modificationStatus\n          });\n        }\n      });\n      return {\n        clauseRow: temp,\n        showRow: showRow,\n        concat: concat\n      };\n    };\n    _this.Condition = function (actionFor, whichRow) {\n      thisObj.props.form.validateFields([\"ShortName\", \"LongName\"], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          var values = {};\n          var modalTitle = \"Complex WhereClause\";\n          var domainName = thisObj.props.data.Domain;\n          values[\"FormName\"] = \"ValuelevelConfiguration\";\n          values[\"ActionName\"] = \"ComplexConfiguration\";\n          values[\"VariableName\"] = thisObj.state.checkedList;\n          values[\"StudyID\"] = JSON.parse(sessionStorage.studyDetails).studyID;\n          values[\"DomainID\"] = thisObj.props.data.DomainID;\n          values[\"DomainName\"] = thisObj.props.data.Domain;\n          if (actionFor.currentTarget != undefined && actionFor.currentTarget.textContent.trim() == \"Advanced Where Clause\" || actionFor == \"edit\" && whichRow.includes(\"AdvanceWhereClause\")) {\n            values[\"DomainID\"] = \"-1\";\n            values[\"DomainName\"] = \"\";\n            modalTitle = \"Advance WhereClause\";\n          }\n          CallServerPost('Variable/GetComplexValuelevelConfigurationFormData', values).then(function (response) {\n            var responseData = response.value;\n            if (responseData.status == 0) {\n              errorModal(responseData.message);\n            } else {\n              if (actionFor != \"edit\") {\n                thisObj.setState({\n                  edit: false,\n                  readyShow: false,\n                  condnShow: true,\n                  clauseShow: false,\n                  complexWhereClauseFormData: responseData.formData,\n                  selectOptionsForComplexWhere: {\n                    domain: responseData.Domain,\n                    comparator: responseData.selectOptions.comparator,\n                    operator: responseData.selectOptions.operator\n                  },\n                  selectOptionsForComplexWhereForValue: responseData.Value,\n                  selectOptionsForComplexWhereForVariable: responseData.VariableName,\n                  variableName: thisObj.props.form.getFieldValue(\"ShortName\"),\n                  whichRowToEdit: [],\n                  forSaveEditedObj: [],\n                  whereClauseModalTitle: modalTitle,\n                  defaultValForDmain: domainName\n                });\n              } else {\n                if (whichRow != undefined) {\n                  whichRow = whichRow.replace(/AdvanceWhereClause|ComplexWhereClause/gi, '');\n                }\n                thisObj.fnToEditRow(whichRow, responseData, modalTitle, domainName);\n              }\n            }\n          }).catch(function (error) {\n            return error;\n          });\n        }\n      });\n    };\n    _this.fnToEditRow = function (rowindex, responseData, modalTitle, domainName) {\n      var neededRowObj = thisObj.state.copyOfClauseRow[rowindex];\n      var temp = [];\n      var i = 0;\n      var whereClauseDomainList = [];\n      rowindex.split(\".AND.\").forEach(function (key, index) {\n        key.split(\".OR.\").forEach(function (key1, index1) {\n          var tempStore = \"\";\n          var stringValidation = key[0] == \".\" ? (tempStore = key.substring(1), tempStore[tempStore.length - 1] == \".\" ? tempStore.substring(0, tempStore.length - 1) : tempStore) : key[key.length - 1] == \".\" ? key.substring(0, key.length - 1) : key;\n          var column = stringValidation.split(\".\");\n          var thirdData = stringValidation.substr(stringValidation.indexOf('.') + 1);\n          thirdData = modalTitle == \"AdvanceWhereClause\" ? thirdData.substr(thirdData.indexOf('.') + 1) : thirdData;\n          var column3 = thirdData.substr(thirdData.indexOf('.') + 1);\n          var param = i;\n          var btn = /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 30\n            }\n          }, /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n            onClick: function onClick() {\n              return deleteRowWhenEdit(param);\n            },\n            tooltip: \"Delete\",\n            name: \"Delete\",\n            shape: \"circle\",\n            classname: \"fas fa-trash-alt\",\n            size: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 21\n            }\n          }));\n          var newDomain = domainName;\n          var newVariableName = column[0];\n          var newComparator = column[1];\n          if (modalTitle == \"AdvanceWhereClause\") {\n            newDomain = column[0];\n            newVariableName = column[0] + '.' + column[1];\n            newComparator = column[2];\n          }\n          if (index1 != key.split(\".OR.\").length - 1) {\n            temp.push({\n              Actions: btn,\n              key: i,\n              DomainName: newDomain,\n              VariableName: newVariableName,\n              Comparator: externalComplexWhereClauseName(newComparator),\n              Value: column3,\n              Operator: \"OR\"\n            });\n          } else {\n            if (index != rowindex.split(\".AND.\").length - 1) {\n              temp.push({\n                Actions: btn,\n                key: i,\n                DomainName: newDomain,\n                VariableName: newVariableName,\n                Comparator: externalComplexWhereClauseName(newComparator),\n                Value: column3,\n                Operator: \"AND\"\n              });\n            } else {\n              temp.push({\n                Actions: btn,\n                key: i,\n                DomainName: newDomain,\n                VariableName: newVariableName,\n                Comparator: externalComplexWhereClauseName(newComparator),\n                Value: column3 == undefined ? \"\" : column3,\n                Operator: null\n              });\n            }\n          }\n          if (modalTitle == \"AdvanceWhereClause\") {\n            if (whereClauseDomainList.indexOf(column[0]) == -1) {\n              whereClauseDomainList.push(column[0]);\n            }\n          } else {\n            if (whereClauseDomainList.indexOf(domainName) == -1) {\n              whereClauseDomainList.push(domainName);\n            }\n          }\n          i++;\n        });\n      });\n      //Add DomainList entry to make join clause string\n      neededRowObj.whereClauseDomainList = whereClauseDomainList;\n      thisObj.setState({\n        readyShow: false,\n        condnShow: true,\n        clauseShow: false,\n        complexWhereClauseFormData: responseData.formData,\n        selectOptionsForComplexWhere: {\n          domain: responseData.Domain,\n          comparator: responseData.selectOptions.comparator,\n          operator: responseData.selectOptions.operator\n        },\n        selectOptionsForComplexWhereForValue: responseData.Value,\n        selectOptionsForComplexWhereForVariable: responseData.VariableName,\n        variableName: thisObj.props.form.getFieldValue(\"ShortName\"),\n        edit: true,\n        whichRowToEdit: temp,\n        forSaveEditedObj: neededRowObj,\n        whereClauseModalTitle: modalTitle,\n        defaultValForDmain: domainName\n      });\n    };\n    _this.fnEditSave = function (whereClauseCnd, whereClauseName, joinClause, editObj) {\n      var temp = JSON.stringify(editObj);\n      var parse = JSON.parse(temp);\n      if (parse.whereClauseName != whereClauseName) {\n        if (parse.modificationStatus == 0 || parse.modificationStatus == 2) {\n          if (parse.dataBaseName == undefined || parse.dataBaseName == null) {\n            editObj.dataBaseName = parse.whereClauseName;\n            parse.dataBaseName = parse.whereClauseName;\n          }\n          parse.variableLevelWhereConditionID = editObj.variableLevelWhereConditionID;\n          parse.modificationStatus = 2;\n        }\n        parse.beforUpdate = parse.whereClauseName;\n        parse.whereClauseCondition = whereClauseCnd;\n        //parse.whereClauseType = 2;\n        parse.joinClause = joinClause;\n        parse.whereClauseName = whereClauseName;\n        thisObj.rowForm([parse], \"ComplexMergeUpdate\");\n      }\n      thisObj.setState({\n        readyShow: true,\n        loading: false,\n        condnShow: false\n      });\n    };\n    _this.saveComplexWhereClause = function (whereClauseCnd, whereClauseName, joinClause, whereClauseDomainList) {\n      var temp = [{\n        whereClauseType: thisObj.state.whereClauseModalTitle === \"Complex WhereClause\" ? 2 : 3,\n        modificationStatus: 1,\n        whereClauseCondition: whereClauseCnd,\n        whereClauseName: whereClauseName,\n        joinClause: joinClause,\n        whereClauseDomainList: whereClauseDomainList\n      }];\n      thisObj.setState({\n        readyShow: true,\n        loading: false,\n        condnShow: false\n      });\n      thisObj.rowForm(temp, \"ComplexMerge\");\n    };\n    _this.state = {\n      visible: false,\n      loading: false,\n      CheckBoxList: [],\n      OriginalCheckBoxList: [],\n      selectOptions: {\n        topicvariable: [],\n        topicvariablelabel: []\n      },\n      clauseShow: false,\n      condnShow: false,\n      formData: [],\n      checkedList: \"[]\",\n      clauseRow: [],\n      copyOfClauseRow: [],\n      savedclauseRows: \"[{}]\",\n      savedCheckedList: \"[]\",\n      readyShow: true,\n      DeletedClauseRows: [],\n      savedDeletedClauseRows: \"[]\",\n      complexWhereClauseFormData: [],\n      selectOptionsForComplexWhere: {\n        domain: [],\n        variablename: [],\n        value: [],\n        comparator: [],\n        operator: []\n      },\n      selectOptionsForComplexWhereForVariable: [],\n      selectOptionsForComplexWhereForValue: [],\n      variableName: \"\",\n      edit: false,\n      whichRowToEdit: [],\n      forSaveEditedObj: {},\n      whereClauseModalTitle: \"\",\n      defaultValForDmain: \"\"\n    };\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  //Get the required field to form the pop up\n  _createClass(ValueLevelConfig, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props$form = this.props.form,\n        getFieldDecorator = _this$props$form.getFieldDecorator,\n        getFieldValue = _this$props$form.getFieldValue;\n      var _this$state = this.state,\n        whichRowToEdit = _this$state.whichRowToEdit,\n        edit = _this$state.edit,\n        forSaveEditedObj = _this$state.forSaveEditedObj;\n      var deafultOption = /*#__PURE__*/React.createElement(Option, {\n        disabled: true,\n        key: \"-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 30\n        }\n      }, \"--Select--\");\n      var allOptions = [deafultOption];\n      var _this$state2 = this.state,\n        clauseRow = _this$state2.clauseRow,\n        formData = _this$state2.formData,\n        selectOptions = _this$state2.selectOptions,\n        loading = _this$state2.loading,\n        visible = _this$state2.visible,\n        readyShow = _this$state2.readyShow,\n        clauseShow = _this$state2.clauseShow,\n        condnShow = _this$state2.condnShow,\n        checkedList = _this$state2.checkedList,\n        CheckBoxList = _this$state2.CheckBoxList,\n        complexWhereClauseFormData = _this$state2.complexWhereClauseFormData,\n        selectOptionsForComplexWhere = _this$state2.selectOptionsForComplexWhere,\n        selectOptionsForComplexWhereForValue = _this$state2.selectOptionsForComplexWhereForValue,\n        selectOptionsForComplexWhereForVariable = _this$state2.selectOptionsForComplexWhereForVariable;\n      var _this$props = this.props,\n        visible = _this$props.visible,\n        defineActivityWorkflowStatus = _this$props.defineActivityWorkflowStatus;\n      var clauseColumns = [{\n        title: 'Actions',\n        dataIndex: 'Actions',\n        key: 'Actions',\n        width: 100\n      }, {\n        title: 'Where Condition',\n        dataIndex: 'whereClauseCondition',\n        key: 'whereClauseCondition',\n        width: 200\n      }, {\n        title: 'WhereClause Name',\n        dataIndex: 'whereClauseName',\n        key: 'whereClauseName',\n        width: 200\n      }];\n      var condnColumns = [{\n        title: 'Actions',\n        dataIndex: 'Actions',\n        key: 'Actions',\n        width: 100\n      }, {\n        title: 'Variable Name',\n        dataIndex: 'VariableName',\n        key: 'VariableName',\n        width: 100\n      }, {\n        title: 'Comparator',\n        dataIndex: 'Comparator',\n        key: 'Comparator',\n        width: 100\n      }, {\n        title: 'Value',\n        dataIndex: 'Value',\n        key: 'Value',\n        width: 100\n      }, {\n        title: 'Operator',\n        dataIndex: 'Operator',\n        key: 'Operator',\n        width: 100\n      }];\n      var checkbox = [];\n      return /*#__PURE__*/React.createElement(Modal, {\n        visible: visible,\n        title: \"Value Level Configuration\",\n        cancelType: \"danger\",\n        onCancel: this.Cancel,\n        onOk: this.handleSubmit,\n        maskClosable: false,\n        wrapClassName: \"modalwrap\",\n        footer: [/*#__PURE__*/React.createElement(Button, {\n          key: \"Cancel\",\n          name: \"Cancel\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-danger\",\n          style: {\n            float: 'left'\n          },\n          onClick: this.Cancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 21\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          key: \"Save\",\n          name: \"Save\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ saveBtn\",\n          style: {\n            color: \"#ffffff\"\n          },\n          onClick: this.save,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 21\n          }\n        }, \"Save\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: antIcon,\n        spinning: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        id: \"defineBotTable\",\n        style: {\n          overflow: \"auto\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 25\n        }\n      }, visible ? Object.keys(formData).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          height: \"100%\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(SingleForm, {\n        FullHeight: true,\n        props: this,\n        responseData: {\n          formData: formData,\n          selectOptions: selectOptions\n        },\n        getFieldDecorator: getFieldDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 49\n        }\n      })), readyShow ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          border: \"1px solid lightgray\",\n          display: \"flex\",\n          height: \"calc(100% - 142px)\",\n          flexDirection: \"column\",\n          padding: \"5px\",\n          margin: \"0 10px\",\n          borderRadius: \"5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"scroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(ReactTable, {\n        size: \"small\",\n        pagination: false,\n        columns: clauseColumns,\n        dataSource: clauseRow,\n        filterDropdownVisible: false,\n        scroll: {\n          x: 400,\n          y: \"calc(100% - 60px)\"\n        },\n        simpleWhereClause: this.Clause,\n        complexWhereClause: this.Condition,\n        advancedWhereClause: this.Condition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 57\n        }\n      }))) : clauseShow ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: \"0 10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        title: \"variableBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 61\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 89\n        }\n      }, \" Choose the variables to construct the Where Condition \")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          border: \"1px solid lightgray\",\n          borderRadius: \"5px\",\n          overflowY: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: \"5px\"\n        },\n        id: \"checkboxgroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(CheckboxGroup, {\n        value: JSON.parse(checkedList),\n        name: \"SimpleWhereClause\",\n        onChange: function onChange(e) {\n          _this2.onChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 69\n        }\n      }, CheckBoxList.map(function (ch) {\n        return /*#__PURE__*/React.createElement(Checkbox, {\n          className: \"ant-checkbox-group-item\",\n          value: ch.value,\n          disabled: ch.disabled,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 84\n          }\n        }, ch.label);\n      })))), /*#__PURE__*/React.createElement(\"label\", {\n        title: \"Selected Variable\",\n        style: {\n          marginTop: \"6px\",\n          marginBottom: \"-10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 61\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 147\n        }\n      }, \"Selected Variable\")), /*#__PURE__*/React.createElement(Input, {\n        onChange: function onChange() {\n          return;\n        },\n        value: JSON.parse(checkedList).toString(),\n        defaultValue: JSON.parse(checkedList),\n        style: {\n          marginTop: \"10px\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 61\n        }\n      })) : condnShow ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"complexWhereClause\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(ComplexWhereClause, {\n        fnEditSave: this.fnEditSave,\n        title: this.state.whereClauseModalTitle,\n        editOBj: forSaveEditedObj,\n        whichRowToEdit: whichRowToEdit,\n        edit: edit,\n        visible: condnShow,\n        handleCancel: this.Cancel,\n        complexWhereClauseFormData: complexWhereClauseFormData,\n        selectOptionsForComplexWhere: selectOptionsForComplexWhere,\n        selectOptionsForComplexWhereForValue: selectOptionsForComplexWhereForValue,\n        selectOptionsForComplexWhereForVariable: selectOptionsForComplexWhereForVariable,\n        saveComplexWhereClause: this.saveComplexWhereClause,\n        defaultValForVar: this.state.variableName,\n        defaultValForDomain: this.state.defaultValForDmain,\n        property: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 65\n        }\n      })) : \"\") : \"\"))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(prop) {\n      if (prop.visible && loopControl) {\n        prop.form.resetFields();\n        if (thisObj.state.formData.length == 0) {\n          CallServerPost('Variable/GetValuelevelConfigurationFormData', {\n            FormName: \"ValuelevelConfiguration\",\n            ActionName: \"Configure\",\n            DomainName: prop.data.Domain,\n            VariableName: prop.data.Variable,\n            StudyID: JSON.parse(sessionStorage.studyDetails).studyID\n          }).then(function (response) {\n            var result = response.value;\n            if (result.status == 0) {\n              thisObj.setState({\n                whereClause: {\n                  Show: false\n                },\n                whereCondn: {\n                  Data: {},\n                  Show: false\n                },\n                visible: prop.visible\n              });\n              errorModal(result.message);\n            } else {\n              thisObj.tableRow(prop, prop.variablelevelwherecondition, result, result.formData, \"onLoad\");\n              thisObj.setState(result);\n            }\n          }).catch(function (error) {\n            return error;\n          });\n        } else {\n          var result = {};\n          var resultData = [];\n          var tempSavedclauseRows = JSON.parse(thisObj.state.savedclauseRows)[0];\n          thisObj.tableRow(prop, tempSavedclauseRows, result, thisObj.state.formData, \"onOpen\");\n          thisObj.setState(result);\n        }\n        loopControl = false;\n      } else if (!prop.visible) {\n        description = \"\";\n        prop.form.resetFields();\n        loopControl = true;\n      }\n    }\n  }]);\n  return ValueLevelConfig;\n}(Component);\nvar WrappedApp = Form.create()(ValueLevelConfig);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Input","Col","Button","Row","Select","Checkbox","Form","Steps","message","Modal","Icon","Spin","LayoutContentWrapper","LayoutContent","CallServerPost","PostCallWithZoneForDomainCreate","PostCallWithZone","errorModal","successModal","successModalCallback","showProgress","hideProgress","rowStyle","ConfirmModal","SingleForm","ReactTable","ButtonWithToolTip","SelectOption","ComplexWhereClause","deleteRowWhenEdit","externalComplexWhereClauseName","Option","FormItem","Item","CheckboxGroup","Group","antIcon","fontSize","color","thisObj","loopControl","description","checkedListBeforeOpenClause","complexWhereClauseFormData","valuesForComparator","valuesForOperator","ValueLevelConfig","props","isNotUndefined","list","undefined","length","Object","keys","tableRow","prop","result","formData","fnFor","tempResult","rowFormation","clauseRow","tempStore","push","concat","savedclauseRows","JSON","stringify","copyOfClauseRow","checkedList","state","savedCheckedList","DeletedClauseRows","parse","savedDeletedClauseRows","CommonEach","name","action","set","data","Domain","Variable","selectOptions","topicvariable","TopicVariable","topicvariablelabel","TopicVariableLabel","variablelevelwherecondition","groupBy","split","topicVariable","topicVariableLabel","OriginalCheckBoxList","CheckBoxList","checkDataFormation","visible","handleLoader","dataArr","originalCheckBoxList","forEach","key","form","getFieldValue","findIndex","x","label","value","disabled","opt","fnPageFieldValidation","setFieldsValue","Pages","Clause","validateFields","force","err","values","tempCheckedList","setState","readyShow","clauseShow","condnShow","searchData","index","key1","displayName","replace","Cancel","handleCancel","selectOptionsForComplexWhere","domain","variablename","comparator","operator","selectOptionsForComplexWhereForValue","selectOptionsForComplexWhereForVariable","onChange","e","shortNameChange","save","GroupBy","toString","whereClauseType","StudyID","sessionStorage","studyDetails","studyID","tempData","currentObj","temp","joinClause","whereClauseCondition","whereClauseName","ShortName","LongName","whereClauseModalTitle","variableName","VariableName","variableAttributeID","valueListAttributeID","itemDefAttributeID","variableLevelWhereConditionID","modificationStatus","updatedBy","userProfile","userID","saveValueLevel","then","response","responseData","status","rowForm","ConditionList","catch","error","addComplexWhereClause","fnToDeleteBothRow","rowindex","rows","tempDelete","deletedClauses","fnCheckcondn","actionFor","updatedKey","wherename","updatedRows","newdata","tempbool","pushcont","concatRows","isSatisfy","newlyCreatedJSon","updatedIndex","tempCurrentSet","beforUpdate","dataBaseName","splice","update","concatData","showRow","loading","row","rowKey","rowIndex","rowIndexForEdit","btn","Condition","marginRight","Actions","whichRow","modalTitle","domainName","DomainID","currentTarget","textContent","trim","includes","edit","Value","whichRowToEdit","forSaveEditedObj","defaultValForDmain","fnToEditRow","neededRowObj","i","whereClauseDomainList","index1","stringValidation","substring","column","thirdData","substr","indexOf","column3","param","newDomain","newVariableName","newComparator","DomainName","Comparator","Operator","fnEditSave","whereClauseCnd","editObj","saveComplexWhereClause","getFieldDecorator","deafultOption","allOptions","defineActivityWorkflowStatus","clauseColumns","title","dataIndex","width","condnColumns","checkbox","handleSubmit","float","overflow","height","display","flexDirection","border","padding","margin","borderRadius","y","overflowY","map","ch","marginTop","marginBottom","resetFields","FormName","ActionName","whereClause","Show","whereCondn","Data","resultData","tempSavedclauseRows","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/DefineOptimize/ValueLevelConfig.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, Col, Button, Row, Select, Checkbox, Form, Steps, message, Modal, Icon, Spin } from 'antd';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport { CallServerPost, PostCallWithZoneForDomainCreate, PostCallWithZone, errorModal, successModal, successModalCallback, showProgress, hideProgress } from '../Utility/sharedUtility';\r\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\nimport SingleForm from '../Utility/defineBotForm';\r\nimport ReactTable from '../Utility/reactTable';\r\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\r\nimport { SelectOption } from '../../components/uielements/select';\r\nimport ComplexWhereClause from './ComplexWhereClause';\r\nimport { deleteRowWhenEdit, externalComplexWhereClauseName } from './ComplexWhereClause';\r\nconst Option = SelectOption;\r\n\r\nconst FormItem = Form.Item;\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\r\n\r\nvar thisObj;\r\nvar loopControl = true;\r\nvar description = \"\";\r\nlet checkedListBeforeOpenClause = \"\";\r\nlet complexWhereClauseFormData = [];\r\nlet valuesForComparator = [];\r\nlet valuesForOperator = [];\r\n//let complexWhereClauseFormData = [];\r\n//let complexWhereClauseFormData = [];\r\nclass ValueLevelConfig extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            loading: false,\r\n            CheckBoxList: [],\r\n            OriginalCheckBoxList: [],\r\n            selectOptions: {\r\n                topicvariable: [], topicvariablelabel: []\r\n            },\r\n            clauseShow: false,\r\n            condnShow: false,\r\n            formData: [],\r\n            checkedList: \"[]\",\r\n            clauseRow: [],\r\n            copyOfClauseRow: [],\r\n            savedclauseRows: \"[{}]\",\r\n            savedCheckedList: \"[]\",\r\n            readyShow: true,\r\n            DeletedClauseRows: [],\r\n            savedDeletedClauseRows: \"[]\",\r\n            complexWhereClauseFormData: [],\r\n            selectOptionsForComplexWhere: {\r\n                domain: [], variablename: [], value: [], comparator: [], operator: []\r\n            },\r\n            selectOptionsForComplexWhereForVariable: [],\r\n            selectOptionsForComplexWhereForValue: [],\r\n            variableName: \"\",\r\n            edit: false,\r\n            whichRowToEdit: [],\r\n            forSaveEditedObj: {},\r\n            whereClauseModalTitle: \"\",\r\n            defaultValForDmain: \"\"\r\n        }\r\n\r\n        thisObj = this;\r\n\r\n    }\r\n\r\n\r\n    //Get the required field to form the pop up\r\n    static getDerivedStateFromProps (prop) {\r\n        if (prop.visible && loopControl) {\r\n            prop.form.resetFields();\r\n            if (thisObj.state.formData.length == 0) {\r\n                CallServerPost('Variable/GetValuelevelConfigurationFormData', { FormName: \"ValuelevelConfiguration\", ActionName: \"Configure\", DomainName: prop.data.Domain, VariableName: prop.data.Variable, StudyID: JSON.parse(sessionStorage.studyDetails).studyID }).then(\r\n                    function (response) {\r\n                        var result = response.value;\r\n                        if (result.status == 0) {\r\n                            thisObj.setState({\r\n                                whereClause: { Show: false }, whereCondn: { Data: {}, Show: false }, visible: prop.visible\r\n                            });\r\n                            errorModal(result.message);\r\n                        }\r\n                        else {\r\n                            thisObj.tableRow(prop, prop.variablelevelwherecondition, result, result.formData, \"onLoad\");\r\n                            thisObj.setState(result);\r\n                        }\r\n\r\n                    }).catch(error => error);\r\n            }\r\n            else {\r\n                var result = {};\r\n                let resultData = [];\r\n                var tempSavedclauseRows = JSON.parse(thisObj.state.savedclauseRows)[0];\r\n                thisObj.tableRow(prop, tempSavedclauseRows, result, thisObj.state.formData, \"onOpen\");\r\n\r\n                thisObj.setState(result);\r\n            }\r\n\r\n            loopControl = false;\r\n        }\r\n        else if (!prop.visible) {\r\n            description = \"\";\r\n            prop.form.resetFields();\r\n            loopControl = true;           \r\n        }\r\n    }\r\n\r\n    isNotUndefined = (list) => {\r\n        if (list != null && list != undefined) {\r\n            if (list.length == 0) {\r\n                return false;\r\n            }\r\n            else {\r\n                if (Object.keys(list).length != 0) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n\r\n        } else {\r\n            return false;\r\n\r\n        }\r\n    }\r\n\r\n    //handle the datas to display when open and column[0] time load \r\n    tableRow = (prop, list, result, formData, fnFor) => {\r\n        if (thisObj.isNotUndefined(list)) {\r\n            let tempResult = thisObj.rowFormation(list);\r\n            result.clauseRow = tempResult.clauseRow;\r\n            let tempStore = [];\r\n            tempStore.push(tempResult.concat);\r\n            result.savedclauseRows = JSON.stringify(tempStore);\r\n            result.copyOfClauseRow = tempResult.concat;\r\n            if (fnFor == \"onOpen\") {\r\n                result.copyOfClauseRow = list;\r\n                result.checkedList = thisObj.state.savedCheckedList;\r\n                result.DeletedClauseRows = JSON.parse(thisObj.state.savedDeletedClauseRows);\r\n            }\r\n\r\n            thisObj.CommonEach(formData,\r\n                [{ name: \"Domain\", action: \"defaultValue\", set: prop.data.Domain },\r\n                { name: \"VariableName\", action: \"defaultValue\", set: prop.data.Variable },\r\n\r\n                ]);\r\n\r\n            if (fnFor == \"onLoad\") {\r\n                result.selectOptions = { topicvariable: result.TopicVariable, topicvariablelabel: result.TopicVariableLabel }\r\n\r\n                if (thisObj.props.action == \"Update\") {\r\n                    result.savedCheckedList = JSON.stringify(prop.variablelevelwherecondition[0].groupBy.split(\",\"));\r\n                    result.checkedList = result.savedCheckedList;\r\n                    thisObj.CommonEach(formData,\r\n                        [\r\n                            { name: \"ShortName\", action: \"defaultValue\", set: prop.variablelevelwherecondition[0].topicVariable },\r\n                            { name: \"LongName\", action: \"defaultValue\", set: prop.variablelevelwherecondition[0].topicVariableLabel },\r\n                            { name: \"ShortName\", action: \"editable\", set: false },\r\n                            { name: \"LongName\", action: \"editable\", set: false },\r\n                        ]);\r\n                }\r\n            } \r\n        }\r\n        else {\r\n            if (fnFor == \"onOpen\") {\r\n                thisObj.rowFormation([]);\r\n                result.clauseRow = [];\r\n                result.copyOfClauseRow = {};\r\n                result.checkedList = \"[]\";\r\n                result.DeletedClauseRows = [];\r\n            }\r\n\r\n            thisObj.CommonEach(formData,\r\n                [{ name: \"Domain\", action: \"defaultValue\", set: prop.data.Domain },\r\n                { name: \"VariableName\", action: \"defaultValue\", set: prop.data.Variable },\r\n                { name: \"ShortName\", action: \"editable\", set: true },\r\n                { name: \"LongName\", action: \"editable\", set: true }]);\r\n\r\n\r\n        }\r\n        if (fnFor == \"onLoad\") {\r\n            result.OriginalCheckBoxList = result.CheckBoxList;\r\n            result.CheckBoxList = thisObj.checkDataFormation(result.CheckBoxList, \"\");\r\n            result.selectOptions = { topicvariable: result.TopicVariable, topicvariablelabel: result.TopicVariableLabel }\r\n        }\r\n        result.visible = prop.visible;\r\n        prop.handleLoader();\r\n    }\r\n\r\n    checkDataFormation = (CheckBoxList, name, dataArr) => {\r\n        let data = dataArr != undefined ? dataArr : [];\r\n        let originalCheckBoxList = CheckBoxList;        \r\n        if (typeof(name) == \"string\") {\r\n            originalCheckBoxList.forEach(function (key) {\r\n                if (key == thisObj.props.form.getFieldValue(\"ShortName\")) {\r\n                    if (data.findIndex(x => x.label == key) === -1) {\r\n                        data.push({ label: key, value: key, disabled: true });\r\n                    }\r\n                }\r\n                else {\r\n                    if (data.findIndex(x => x.label == key) === -1) {\r\n                        data.push({ label: key, value: key, disabled: false });\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            name.forEach(function (opt) {\r\n                thisObj.checkDataFormation(originalCheckBoxList, opt, data);\r\n            });\r\n        }\r\n        \r\n        return data;\r\n    }\r\n\r\n    fnPageFieldValidation = (value) => {\r\n        thisObj.props.form.setFieldsValue({ Pages: value });\r\n    }\r\n\r\n    Clause = () => {\r\n        thisObj.props.form.validateFields([\"ShortName\", \"LongName\"], { force: true }, (err, values) => {\r\n            if (!err) {\r\n                const state = thisObj.state;\r\n                checkedListBeforeOpenClause = thisObj.state.checkedList;\r\n                var tempCheckedList = [];\r\n               \r\n                tempCheckedList = [thisObj.props.form.getFieldValue(\"ShortName\")];\r\n                \r\n                if (JSON.parse(thisObj.state.checkedList).length !== 0 && JSON.parse(thisObj.state.checkedList)[0] !== \"\") {\r\n                    tempCheckedList = JSON.parse(thisObj.state.checkedList);\r\n                }\r\n\r\n                thisObj.setState({\r\n                    readyShow: false, checkedList: JSON.stringify(tempCheckedList),\r\n                    clauseShow: true, condnShow: false, CheckBoxList: thisObj.checkDataFormation(state.OriginalCheckBoxList, tempCheckedList)\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    CommonEach = (data, searchData) => {\r\n        data.forEach(function (key, index) {\r\n            searchData.forEach(function (key1, index) {\r\n                if (key.displayName.replace(/ /g, \"\") == key1.name) {\r\n                    key[key1.action] = key1.set;\r\n                    return false;\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    Cancel = () => {\r\n        const state = thisObj.state;\r\n        if (state.readyShow) {\r\n            //thisObj.setState({\r\n            //    clauseRow: []\r\n            //});\r\n            thisObj.props.handleCancel();\r\n        }\r\n        else if (state.clauseShow) {\r\n            thisObj.setState({\r\n                readyShow: true, condnShow: false, clauseShow: false, checkedList: checkedListBeforeOpenClause\r\n            });\r\n        }\r\n        else {\r\n            thisObj.setState({\r\n                readyShow: true, condnShow: false, clauseShow: false, complexWhereClauseFormData: [],\r\n                selectOptionsForComplexWhere: { domain: [], variablename: [], value: [], comparator: [], operator: [] },\r\n                selectOptionsForComplexWhereForValue: [],\r\n                selectOptionsForComplexWhereForVariable: []\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (e) =>\r\n    {\r\n        thisObj.setState({ checkedList: JSON.stringify(e) });\r\n    }\r\n    shortNameChange = (value) => {\r\n        var data = [value];\r\n        thisObj.setState({ checkedList: JSON.stringify(data), CheckBoxList: thisObj.checkDataFormation(thisObj.state.OriginalCheckBoxList, value) });\r\n    }\r\n\r\n    save = () => {\r\n        thisObj.props.form.validateFields((err, values) => {\r\n\r\n            if (!err) {\r\n                values.GroupBy = [];\r\n                if (JSON.parse(thisObj.state.checkedList).length != 0) {\r\n                    values.GroupBy = JSON.parse(thisObj.state.checkedList).toString();\r\n                }\r\n                values.whereClauseType = 1; //Simple\r\n                values.StudyID = JSON.parse(sessionStorage.studyDetails).studyID;\r\n                if (thisObj.state.readyShow) {\r\n                    const formData = thisObj.state.formData;\r\n\r\n                    var tempData = [];\r\n                    Object.keys(thisObj.state.copyOfClauseRow).forEach(function (key, index) {\r\n                        let currentObj = thisObj.state.copyOfClauseRow[key];\r\n\r\n                        let temp = {\r\n                            joinClause: currentObj.joinClause,\r\n                            whereClauseCondition: currentObj.whereClauseCondition,\r\n                            whereClauseName: currentObj.whereClauseName,\r\n                            domain: values.Domain,\r\n                            topicVariable: values.ShortName,\r\n                            topicVariableLabel: values.LongName,\r\n                            groupBy: (thisObj.state.whereClauseModalTitle == \"Complex WhereClause\" || thisObj.state.whereClauseModalTitle == \"Advance WhereClause\") ? \"\" : (values.GroupBy.length === 0) ? \"\" : values.GroupBy,\r\n                            studyID: values.StudyID,\r\n                            variableName: values.VariableName,\r\n                            variableAttributeID: currentObj.variableAttributeID,\r\n                            valueListAttributeID: currentObj.valueListAttributeID,\r\n                            itemDefAttributeID: currentObj.itemDefAttributeID,\r\n                            variableLevelWhereConditionID: currentObj.variableLevelWhereConditionID,\r\n                            whereClauseType: currentObj.whereClauseType,//1 -- Simple , 2 --Complex, 3 --Advance(across Domain)\r\n                            modificationStatus: currentObj.modificationStatus,\r\n                            updatedBy: JSON.parse(sessionStorage.userProfile).userID,\r\n                        };\r\n                        tempData.push(temp)\r\n                    })\r\n                    thisObj.CommonEach(formData,\r\n                        [{ name: \"ShortName\", action: \"defaultValue\", set: values.ShortName },\r\n                        { name: \"LongName\", action: \"defaultValue\", set: values.LongName }]);\r\n\r\n                    if (tempData.length === 0) {\r\n                        errorModal(\"Please configure the where conditions to generate the valuelists\");\r\n                    } else {\r\n                        thisObj.setState({ savedDeletedClauseRows: JSON.stringify(thisObj.state.DeletedClauseRows), savedCheckedList: thisObj.state.checkedList, savedclauseRows: JSON.stringify([thisObj.state.copyOfClauseRow]) });\r\n                        thisObj.props.saveValueLevel(tempData);\r\n                    }\r\n                }\r\n                else {\r\n                    showProgress();\r\n\r\n                    //thisObj.props.saveValueLevel({valueLevelConfig:values})\r\n                    PostCallWithZoneForDomainCreate('Variable/GenerateDefaultWhereCondition', values).then(\r\n                        function (response)\r\n                        {\r\n                            hideProgress();\r\n                            //console.log(response);\r\n                            const responseData = response;\r\n                            if (responseData.status == 0) {\r\n                                errorModal(responseData.message);\r\n                            }\r\n                            else {\r\n                                let data = thisObj.rowForm(responseData.value.ConditionList, \"Create\")\r\n                                //successModalCallback(responseData.message, thisObj.Cancel);\r\n\r\n\r\n                            }\r\n                        }).catch(error => error);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //this method called when Add button pressed after selecting variable, comparator, value and operator to form complex where clause \r\n    addComplexWhereClause = () => {\r\n        thisObj.props.form.validateFields((err, values) => {\r\n\r\n            if (!err) {\r\n            }\r\n        }).catch(err => err);\r\n    }\r\n\r\n    fnToDeleteBothRow = (rowindex) => {\r\n        var rows = thisObj.state.copyOfClauseRow;\r\n        if (rows[rowindex].modificationStatus == 1) {\r\n\r\n            delete rows[rowindex]\r\n\r\n        }\r\n        else {\r\n            let tempDelete = thisObj.state.DeletedClauseRows;\r\n\r\n\r\n            rows[rowindex].modificationStatus = 3;\r\n            let deletedClauses = [];\r\n            deletedClauses = tempDelete;\r\n            deletedClauses.push(rows[rowindex]);\r\n            thisObj.setState({ DeletedClauseRows: deletedClauses });\r\n        }\r\n\r\n        thisObj.rowForm(rows, \"delete\");\r\n\r\n    }\r\n    fnCheckcondn = (actionFor,updatedKey,wherename) => {\r\n        if (actionFor == \"ComplexMergeUpdate\") {\r\n            if (updatedKey != wherename)\r\n            {\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    concat = (updatedRows, newdata, actionFor) => {\r\n        let tempbool = 0;\r\n        let pushcont = 0;\r\n        let concatRows = [];\r\n        let isSatisfy = false;\r\n        let newlyCreatedJSon = JSON.parse(newdata);\r\n        let data = JSON.parse(newdata);\r\n        Object.keys(updatedRows).forEach(function (updatedKey, updatedIndex) {\r\n            isSatisfy = false;\r\n\r\n            let tempCurrentSet = updatedRows[updatedKey];\r\n            if (tempbool == 0) {\r\n\r\n                data.forEach(function(key, index) {\r\n                    pushcont = 1;\r\n                    if (thisObj.fnCheckcondn(actionFor, updatedKey, key.beforUpdate)) {\r\n                        pushcont = 0;\r\n                        //edit the databaserow then delete the row then create the database row again will go this condn\r\n                        if (tempCurrentSet.modificationStatus == 3 && tempCurrentSet.dataBaseName != undefined && tempCurrentSet.dataBaseName != null) {\r\n                            if (tempCurrentSet.dataBaseName == key.whereClauseName) {\r\n                                tempbool = (data.length == 1) ? 1 : 0;\r\n                                tempCurrentSet.dataBaseName = null;\r\n                                tempCurrentSet.whereClauseName = key.whereClauseName;\r\n                                tempCurrentSet.whereClauseCondition = key.whereClauseCondition;\r\n                                tempCurrentSet.modificationStatus = 0;\r\n                                concatRows.push(tempCurrentSet);\r\n                                newlyCreatedJSon.splice(index - (data.length - newlyCreatedJSon.length), 1);\r\n\r\n                                isSatisfy = true;\r\n                            }\r\n                        }\r\n                        else if (tempCurrentSet.whereClauseName == key.whereClauseName) {\r\n                            isSatisfy = true;\r\n                            //false condn\r\n                            //if newly created not to care ,and updated --> edited (if edited name is same to newly created then no need to change the status to unmodify)\r\n                            //true condn\r\n                            //if unmodify is created again then it consider as unmodify only.\r\n                            //if we delete the database data then again newly create that also consider as unmodify\r\n                            if (tempCurrentSet.modificationStatus == 3 || tempCurrentSet.modificationStatus == 0) {\r\n                                tempCurrentSet.modificationStatus = 0;\r\n                                concatRows.push(tempCurrentSet);\r\n                                tempbool = (data.length == 1) ? 1 : 0;\r\n                                newlyCreatedJSon.splice(index - (data.length - newlyCreatedJSon.length), 1);\r\n\r\n                            }\r\n                            //if database one is already edited then create the same modified one again that also under edited one only not under created one\r\n                            //if create the new one again create the new one will also use this for row arrangements\r\n                            else {\r\n                                concatRows.push(tempCurrentSet);\r\n                                tempbool = (data.length == 1) ? 1 : 0;\r\n                                newlyCreatedJSon.splice(index - (data.length - newlyCreatedJSon.length), 1);\r\n\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n            })\r\n        }\r\n            if (!isSatisfy) {\r\n                if (actionFor == \"ComplexMerge\" || actionFor == \"ComplexMergeUpdate\") {\r\n                    if (pushcont == 0) {\r\n                        concatRows.push(tempCurrentSet);\r\n                    }\r\n                }\r\n                else if (tempCurrentSet.whereClauseType == 2 || tempCurrentSet.whereClauseType == 3) {//2 - Complex, 3 - Advance\r\n                    concatRows.push(tempCurrentSet);\r\n                }\r\n                else if (tempCurrentSet.modificationStatus == 0 || tempCurrentSet.modificationStatus == 3 || tempCurrentSet.modificationStatus == 2) {\r\n                    tempCurrentSet.modificationStatus = 3;\r\n                    concatRows.push(tempCurrentSet);\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n        if (actionFor == \"ComplexMergeUpdate\") {\r\n            let update = updatedRows[data[0].beforUpdate];\r\n\r\n            if (tempbool == 0) {\r\n                if (update.modificationStatus != 1) {\r\n          \r\n                    update.whereClauseName = data[0].whereClauseName;\r\n                    update.whereClauseCondition = data[0].whereClauseCondition;\r\n                    update.modificationStatus = (update.dataBaseName == data[0].whereClauseName) ? 0 : 2; \r\n                    update.whereClauseType = data[0].whereClauseType;\r\n                    update.joinClause = data[0].joinClause;//Added join clause for Advance where clause\r\n                    return concatRows.concat(update);\r\n                } else {\r\n                    return concatRows.concat(data[0]);\r\n\r\n                }\r\n\r\n            } else {\r\n                if (update.modificationStatus != 1) {\r\n                    update.modificationStatus = 3;\r\n                    return concatRows.concat(update);\r\n                } else {\r\n                    return concatRows;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return concatRows.concat(newlyCreatedJSon);\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    rowForm = (data, actionFor) => {\r\n        const formData = thisObj.state.formData;\r\n        let concatData = [];\r\n        if (actionFor != \"delete\" && actionFor != undefined) {\r\n            concatData = thisObj.concat(thisObj.state.copyOfClauseRow, JSON.stringify(data), actionFor);\r\n        }\r\n        else {\r\n            concatData = data;\r\n        }\r\n        var result = { showRow: 0 };\r\n        if (Object.keys(concatData).length > 0) {\r\n            result = thisObj.rowFormation(concatData);\r\n        }\r\n        if (result.showRow == 0) {\r\n            thisObj.CommonEach(formData, [{ name: \"ShortName\", action: \"editable\", set: true },\r\n            { name: \"LongName\", action: \"editable\", set: true }]);\r\n\r\n            thisObj.setState({ copyOfClauseRow: concatData, checkedList: \"[]\", clauseRow: [], readyShow: true, loading: false });\r\n        }\r\n        else {\r\n            thisObj.setState({ copyOfClauseRow: result.concat, clauseRow: result.clauseRow, readyShow: true, loading: false });\r\n        }\r\n    }\r\n\r\n\r\n    rowFormation = (row) => {\r\n        const formData = thisObj.state.formData;\r\n\r\n        let showRow = 0;\r\n        let temp = [];\r\n        let concat = {};\r\n        Object.keys(row).forEach(function (key, index) {\r\n            var rowKey = row[key];\r\n\r\n            if (index == 0) {\r\n                thisObj.CommonEach(formData,\r\n                    [{ name: \"ShortName\", action: \"editable\", set: false },\r\n                    { name: \"LongName\", action: \"editable\", set: false }]);\r\n            }\r\n            const rowIndex = rowKey.whereClauseName;\r\n            concat[rowIndex] = rowKey;\r\n            let rowIndexForEdit = rowKey.whereClauseName + (rowKey.whereClauseType == 3 ? \"AdvanceWhereClause\" : \"ComplexWhereClause\");\r\n            const variableLevelWhereConditionID = rowKey.variableLevelWhereConditionID;\r\n\r\n            const btn = <div><ButtonWithToolTip onClick={() => thisObj.Condition(\"edit\", rowIndexForEdit)} tooltip=\"Edit\" name=\"Edit\" shape=\"circle\" style={{ marginRight: \"5px\" }} classname=\"fas fa-pen\" size=\"small\" />\r\n                <ButtonWithToolTip onClick={() => thisObj.fnToDeleteBothRow(rowIndex, variableLevelWhereConditionID)} tooltip=\"Delete\" name=\"Delete\" shape=\"circle\" classname=\"fas fa-trash-alt\" size=\"small\" />\r\n            </div>\r\n\r\n            if (rowKey.modificationStatus != 3) {\r\n                showRow = 1;\r\n                temp.push({ key: index, Actions: btn, whereClauseCondition: rowKey.whereClauseCondition, whereClauseName: rowKey.whereClauseName, modificationStatus: rowKey.modificationStatus })\r\n            }\r\n\r\n        });\r\n        return { clauseRow: temp, showRow: showRow, concat: concat };\r\n    }\r\n\r\n    //called when complexWhereClause button pressed\r\n    Condition = (actionFor, whichRow) => {\r\n        thisObj.props.form.validateFields([\"ShortName\", \"LongName\"], { force: true }, (err, values) => {\r\n            if (!err) {\r\n                var values = {};\r\n                let modalTitle = \"Complex WhereClause\";\r\n                let domainName = thisObj.props.data.Domain;\r\n                values[\"FormName\"] = \"ValuelevelConfiguration\";\r\n                values[\"ActionName\"] = \"ComplexConfiguration\";                \r\n                values[\"VariableName\"] = thisObj.state.checkedList;\r\n                values[\"StudyID\"] = JSON.parse(sessionStorage.studyDetails).studyID;\r\n                values[\"DomainID\"] = thisObj.props.data.DomainID;\r\n                values[\"DomainName\"] = thisObj.props.data.Domain;\r\n                if ((actionFor.currentTarget != undefined && actionFor.currentTarget.textContent.trim() == \"Advanced Where Clause\") ||\r\n                    (actionFor == \"edit\" && whichRow.includes(\"AdvanceWhereClause\"))) {\r\n                    values[\"DomainID\"] = \"-1\";\r\n                    values[\"DomainName\"] = \"\";\r\n                    modalTitle = \"Advance WhereClause\";\r\n                }\r\n                CallServerPost('Variable/GetComplexValuelevelConfigurationFormData', values).then(\r\n                    function (response) {\r\n                        const responseData = response.value;\r\n                        if (responseData.status == 0) {\r\n                            errorModal(responseData.message);\r\n                        } else {\r\n                            if (actionFor != \"edit\") {\r\n                                thisObj.setState({\r\n                                    edit: false,\r\n                                    readyShow: false, condnShow: true, clauseShow: false,\r\n                                    complexWhereClauseFormData: responseData.formData,\r\n                                    selectOptionsForComplexWhere: { domain: responseData.Domain, comparator: responseData.selectOptions.comparator, operator: responseData.selectOptions.operator },\r\n                                    selectOptionsForComplexWhereForValue: responseData.Value,\r\n                                    selectOptionsForComplexWhereForVariable: responseData.VariableName,\r\n                                    variableName: thisObj.props.form.getFieldValue(\"ShortName\"),\r\n                                    whichRowToEdit: [],\r\n                                    forSaveEditedObj: [],\r\n                                    whereClauseModalTitle: modalTitle,\r\n                                    defaultValForDmain: domainName\r\n\r\n                                })\r\n                            } else {\r\n                                if (whichRow != undefined) {\r\n                                    whichRow = whichRow.replace(/AdvanceWhereClause|ComplexWhereClause/gi, '');\r\n                                }\r\n                                thisObj.fnToEditRow(whichRow, responseData, modalTitle, domainName)\r\n                            }\r\n                        }\r\n                    }).catch(error => error);\r\n\r\n            }\r\n        })\r\n    }\r\n    fnToEditRow = (rowindex, responseData, modalTitle, domainName) => {\r\n        var neededRowObj = thisObj.state.copyOfClauseRow[rowindex];\r\n        var temp = [];\r\n        let i = 0;\r\n        let whereClauseDomainList = [];\r\n        \r\n        rowindex.split(\".AND.\").forEach(function (key, index) {\r\n\r\n            key.split(\".OR.\").forEach(function (key1, index1) {\r\n\r\n                var tempStore = \"\";\r\n                let stringValidation = (key[0] == \".\") ? (tempStore = key.substring(1), (tempStore[tempStore.length - 1] == \".\") ? tempStore.substring(0, tempStore.length - 1) : tempStore) : (key[key.length - 1] == \".\") ? key.substring(0, key.length - 1) : key;\r\n\r\n                let column = stringValidation.split(\".\");\r\n                let thirdData = stringValidation.substr(stringValidation.indexOf('.') + 1);\r\n                thirdData = (modalTitle == \"AdvanceWhereClause\" ? thirdData.substr(thirdData.indexOf('.') + 1) : thirdData);\r\n                let column3 = thirdData.substr(thirdData.indexOf('.') + 1);\r\n\r\n                const param = i;\r\n                const btn = (<div>\r\n                    <ButtonWithToolTip onClick={() => deleteRowWhenEdit(param)} tooltip=\"Delete\" name=\"Delete\" shape=\"circle\" classname=\"fas fa-trash-alt\" size=\"small\" />\r\n                </div>);\r\n                let newDomain = domainName;\r\n                let newVariableName = column[0];\r\n                let newComparator = column[1];\r\n                if (modalTitle == \"AdvanceWhereClause\") {\r\n                    newDomain = column[0];\r\n                    newVariableName = column[0] + '.' + column[1];\r\n                    newComparator = column[2];\r\n                }\r\n\r\n                if (index1 != (key.split(\".OR.\").length - 1)) {\r\n                    temp.push({ Actions: btn, key: i, DomainName: newDomain, VariableName: newVariableName, Comparator: externalComplexWhereClauseName(newComparator), Value: column3, Operator: \"OR\" });\r\n                } else {\r\n                    if (index != (rowindex.split(\".AND.\").length - 1)) {\r\n                        temp.push({ Actions: btn, key: i, DomainName: newDomain, VariableName: newVariableName, Comparator: externalComplexWhereClauseName(newComparator), Value: column3, Operator: \"AND\" });\r\n\r\n                    }\r\n                    else {\r\n                        temp.push({ Actions: btn, key: i, DomainName: newDomain, VariableName: newVariableName, Comparator: externalComplexWhereClauseName(newComparator), Value: (column3 == undefined) ? \"\" : column3, Operator: null });\r\n\r\n                    }\r\n\r\n                }\r\n                if (modalTitle == \"AdvanceWhereClause\") {\r\n                    if (whereClauseDomainList.indexOf(column[0]) == -1) {\r\n                        whereClauseDomainList.push(column[0]);\r\n                    }\r\n                } else {\r\n                    if (whereClauseDomainList.indexOf(domainName) == -1) {\r\n                        whereClauseDomainList.push(domainName);\r\n                    }\r\n                }\r\n                \r\n                i++;\r\n            })\r\n        });\r\n        //Add DomainList entry to make join clause string\r\n        neededRowObj.whereClauseDomainList = whereClauseDomainList;\r\n        thisObj.setState({\r\n            readyShow: false, condnShow: true, clauseShow: false,\r\n            complexWhereClauseFormData: responseData.formData,\r\n            selectOptionsForComplexWhere: { domain: responseData.Domain, comparator: responseData.selectOptions.comparator, operator: responseData.selectOptions.operator },\r\n            selectOptionsForComplexWhereForValue: responseData.Value,\r\n            selectOptionsForComplexWhereForVariable: responseData.VariableName,\r\n            variableName: thisObj.props.form.getFieldValue(\"ShortName\"),\r\n            edit: true,\r\n            whichRowToEdit: temp,\r\n            forSaveEditedObj: neededRowObj,\r\n            whereClauseModalTitle: modalTitle,\r\n            defaultValForDmain: domainName\r\n\r\n        });\r\n    }\r\n\r\n    fnEditSave = (whereClauseCnd, whereClauseName, joinClause, editObj) => {\r\n        let temp = JSON.stringify(editObj);\r\n        let parse = JSON.parse(temp);\r\n        if (parse.whereClauseName != whereClauseName) {\r\n            if (parse.modificationStatus == 0 || parse.modificationStatus == 2) {\r\n                if (parse.dataBaseName == undefined || parse.dataBaseName == null) {\r\n                    editObj.dataBaseName = parse.whereClauseName;\r\n                    parse.dataBaseName = parse.whereClauseName;\r\n                }\r\n                parse.variableLevelWhereConditionID = editObj.variableLevelWhereConditionID;\r\n                parse.modificationStatus = 2;\r\n\r\n            }\r\n            parse.beforUpdate = parse.whereClauseName;\r\n\r\n            parse.whereClauseCondition = whereClauseCnd;\r\n            //parse.whereClauseType = 2;\r\n            parse.joinClause = joinClause;\r\n            parse.whereClauseName = whereClauseName;\r\n            thisObj.rowForm([parse], \"ComplexMergeUpdate\",);\r\n        }         \r\n\r\n        thisObj.setState({ readyShow: true, loading: false, condnShow: false });\r\n    }\r\n\r\n\r\n    //saveComplexWhereClause\r\n    saveComplexWhereClause = (whereClauseCnd, whereClauseName, joinClause, whereClauseDomainList) => {\r\n        let temp = [{ whereClauseType: (thisObj.state.whereClauseModalTitle === \"Complex WhereClause\" ? 2 : 3), modificationStatus: 1, whereClauseCondition: whereClauseCnd, whereClauseName: whereClauseName, joinClause: joinClause, whereClauseDomainList: whereClauseDomainList }];\r\n        thisObj.setState({readyShow: true, loading: false, condnShow: false });\r\n        thisObj.rowForm(temp, \"ComplexMerge\")\r\n    }\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator, getFieldValue } = this.props.form;\r\n        const { whichRowToEdit, edit, forSaveEditedObj } = this.state;\r\n        var deafultOption = (<Option disabled key=\"-1\" >--Select--</Option>);\r\n        var allOptions = [deafultOption];\r\n        var { clauseRow, formData, selectOptions, loading, visible, readyShow, clauseShow, condnShow, checkedList, CheckBoxList, complexWhereClauseFormData, selectOptionsForComplexWhere, selectOptionsForComplexWhereForValue, selectOptionsForComplexWhereForVariable} = this.state;\r\n        var { visible, defineActivityWorkflowStatus} = this.props;\r\n        const clauseColumns = [\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'Actions',\r\n                key: 'Actions',\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Where Condition',\r\n                dataIndex: 'whereClauseCondition',\r\n                key: 'whereClauseCondition',\r\n                width: 200\r\n            },\r\n            {\r\n                title: 'WhereClause Name',\r\n                dataIndex: 'whereClauseName',\r\n                key: 'whereClauseName',\r\n                width: 200\r\n\r\n            },\r\n        ];\r\n        const condnColumns = [\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'Actions',\r\n                key: 'Actions',\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Variable Name',\r\n                dataIndex: 'VariableName',\r\n                key: 'VariableName',\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Comparator',\r\n                dataIndex: 'Comparator',\r\n                key: 'Comparator',\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Value',\r\n                dataIndex: 'Value',\r\n                key: 'Value',\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Operator',\r\n                dataIndex: 'Operator',\r\n                key: 'Operator',\r\n                width: 100\r\n            },\r\n        ];\r\n        let checkbox = [];\r\n\r\n        return (\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Value Level Configuration\"\r\n                cancelType='danger'\r\n                onCancel={this.Cancel}\r\n                onOk={this.handleSubmit}\r\n                maskClosable={false}\r\n                wrapClassName=\"modalwrap\"\r\n                footer={[\r\n                    <Button key=\"Cancel\" name=\"Cancel\" className='ant-btn sc-ifAKCX fcfmNQ ant-btn-danger' style={{ float: 'left' }} onClick={this.Cancel}>\r\n                        Cancel\r\n                    </Button>,\r\n\r\n                    <Button key=\"Save\" name=\"Save\" className='ant-btn sc-ifAKCX fcfmNQ saveBtn' style={{ color: \"#ffffff\" }} onClick={this.save}>\r\n                        Save\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <Spin indicator={antIcon} spinning={loading}>\r\n                    <LayoutContentWrapper id=\"defineBotTable\" style={{ overflow: \"auto\", height: \"100%\"}}>\r\n                        <div style={{ height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            {\r\n                                (visible) ?\r\n                                    Object.keys(formData).length > 0 && (\r\n\r\n                                        <div style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }}>\r\n                                            <div >\r\n                                                <SingleForm FullHeight={true} props={this} responseData={{ formData: formData, selectOptions: selectOptions }} getFieldDecorator={getFieldDecorator} />\r\n                                            </div>\r\n                                            {\r\n                                                (readyShow) ?\r\n                                                    <div style={{ border: \"1px solid lightgray\", display: \"flex\", height: \"calc(100% - 142px)\", flexDirection: \"column\", padding: \"5px\", margin: \"0 10px\", borderRadius: \"5px\" }}>\r\n                                                        <div className=\"scroll\">\r\n                                                        <ReactTable\r\n                                                            size=\"small\"\r\n                                                            pagination={false}\r\n                                                            columns={clauseColumns}\r\n                                                            dataSource={clauseRow}\r\n                                                            filterDropdownVisible={false}\r\n                                                            scroll={{ x: 400, y: \"calc(100% - 60px)\" }}\r\n                                                            simpleWhereClause={this.Clause}\r\n                                                            complexWhereClause={this.Condition}\r\n                                                            advancedWhereClause={this.Condition}\r\n                                                            />\r\n                                                            </div>\r\n                                                    </div> :\r\n                                                    (clauseShow) ?\r\n                                                        <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", padding: \"0 10px\" }}>\r\n                                                            <label title=\"variableBox\"> <strong> Choose the variables to construct the Where Condition </strong></label>\r\n                                                            <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", border: \"1px solid lightgray\", borderRadius: \"5px\", overflowY: \"auto\" }}>\r\n                                                                <div style={{ padding: \"5px\" }} id=\"checkboxgroup\">\r\n                                                                    <CheckboxGroup value={JSON.parse(checkedList)} name=\"SimpleWhereClause\" onChange={(e) => { this.onChange(e) }} >\r\n                                                                        {CheckBoxList.map(ch => {\r\n                                                                            return <Checkbox className=\"ant-checkbox-group-item\" value={ch.value} disabled={ch.disabled}>{ch.label}</Checkbox>})}\r\n                                                                    </CheckboxGroup>\r\n                                                                 \r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <label title=\"Selected Variable\" style={{ marginTop: \"6px\", marginBottom: \"-10px\" }}> <strong>Selected Variable</strong></label>\r\n                                                            <Input onChange={() => {return}}  value={ JSON.parse(checkedList).toString() } defaultValue={JSON.parse(checkedList)} style={{ marginTop: \"10px\", width: \"100%\" }} />\r\n                                                        </div> :\r\n                                                        (condnShow) ?\r\n                                                            <div id=\"complexWhereClause\">\r\n                                                                <ComplexWhereClause fnEditSave={this.fnEditSave} title={this.state.whereClauseModalTitle} editOBj={forSaveEditedObj} whichRowToEdit={whichRowToEdit} edit={edit} visible={condnShow} handleCancel={this.Cancel} complexWhereClauseFormData={complexWhereClauseFormData} selectOptionsForComplexWhere={selectOptionsForComplexWhere} selectOptionsForComplexWhereForValue={selectOptionsForComplexWhereForValue} selectOptionsForComplexWhereForVariable={selectOptionsForComplexWhereForVariable} saveComplexWhereClause={this.saveComplexWhereClause} defaultValForVar={this.state.variableName} defaultValForDomain={this.state.defaultValForDmain} property={this} />\r\n                                                            </div> : \"\"\r\n                                            }\r\n\r\n                                        </div>)\r\n\r\n\r\n                                    : \"\"\r\n                            }\r\n                        </div>\r\n                    </LayoutContentWrapper>\r\n                </Spin>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedApp = Form.create()(ValueLevelConfig);\r\nexport default WrappedApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}