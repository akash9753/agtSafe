{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { LineTokens } from '../core/lineTokens.js';\nimport { NULL_STATE, nullTokenize2 } from './nullMode.js';\nvar fallback = {\n  getInitialState: function getInitialState() {\n    return NULL_STATE;\n  },\n  tokenize2: function tokenize2(buffer, state, deltaOffset) {\n    return nullTokenize2(0 /* Null */, buffer, state, deltaOffset);\n  }\n};\nexport function tokenizeToString(text, tokenizationSupport) {\n  if (tokenizationSupport === void 0) {\n    tokenizationSupport = fallback;\n  }\n  return _tokenizeToString(text, tokenizationSupport || fallback);\n}\nexport function tokenizeLineToHTML(text, viewLineTokens, colorMap, startOffset, endOffset, tabSize, useNbsp) {\n  var result = \"<div>\";\n  var charIndex = startOffset;\n  var tabsCharDelta = 0;\n  for (var tokenIndex = 0, tokenCount = viewLineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\n    var tokenEndIndex = viewLineTokens.getEndOffset(tokenIndex);\n    if (tokenEndIndex <= startOffset) {\n      continue;\n    }\n    var partContent = '';\n    for (; charIndex < tokenEndIndex && charIndex < endOffset; charIndex++) {\n      var charCode = text.charCodeAt(charIndex);\n      switch (charCode) {\n        case 9 /* Tab */:\n          var insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n          tabsCharDelta += insertSpacesCount - 1;\n          while (insertSpacesCount > 0) {\n            partContent += useNbsp ? '&#160;' : ' ';\n            insertSpacesCount--;\n          }\n          break;\n        case 60 /* LessThan */:\n          partContent += '&lt;';\n          break;\n        case 62 /* GreaterThan */:\n          partContent += '&gt;';\n          break;\n        case 38 /* Ampersand */:\n          partContent += '&amp;';\n          break;\n        case 0 /* Null */:\n          partContent += '&#00;';\n          break;\n        case 65279 /* UTF8_BOM */:\n        case 8232 /* LINE_SEPARATOR_2028 */:\n          partContent += \"\\uFFFD\";\n          break;\n        case 13 /* CarriageReturn */:\n          // zero width space, because carriage return would introduce a line break\n          partContent += '&#8203';\n          break;\n        case 32 /* Space */:\n          partContent += useNbsp ? '&#160;' : ' ';\n          break;\n        default:\n          partContent += String.fromCharCode(charCode);\n      }\n    }\n    result += \"<span style=\\\"\" + viewLineTokens.getInlineStyle(tokenIndex, colorMap) + \"\\\">\" + partContent + \"</span>\";\n    if (tokenEndIndex > endOffset || charIndex >= endOffset) {\n      break;\n    }\n  }\n  result += \"</div>\";\n  return result;\n}\nfunction _tokenizeToString(text, tokenizationSupport) {\n  var result = \"<div class=\\\"monaco-tokenized-source\\\">\";\n  var lines = text.split(/\\r\\n|\\r|\\n/);\n  var currentState = tokenizationSupport.getInitialState();\n  for (var i = 0, len = lines.length; i < len; i++) {\n    var line = lines[i];\n    if (i > 0) {\n      result += \"<br/>\";\n    }\n    var tokenizationResult = tokenizationSupport.tokenize2(line, currentState, 0);\n    LineTokens.convertToEndOffset(tokenizationResult.tokens, line.length);\n    var lineTokens = new LineTokens(tokenizationResult.tokens, line);\n    var viewLineTokens = lineTokens.inflate();\n    var startOffset = 0;\n    for (var j = 0, lenJ = viewLineTokens.getCount(); j < lenJ; j++) {\n      var type = viewLineTokens.getClassName(j);\n      var endIndex = viewLineTokens.getEndOffset(j);\n      result += \"<span class=\\\"\" + type + \"\\\">\" + strings.escape(line.substring(startOffset, endIndex)) + \"</span>\";\n      startOffset = endIndex;\n    }\n    currentState = tokenizationResult.endState;\n  }\n  result += \"</div>\";\n  return result;\n}","map":{"version":3,"names":["strings","LineTokens","NULL_STATE","nullTokenize2","fallback","getInitialState","tokenize2","buffer","state","deltaOffset","tokenizeToString","text","tokenizationSupport","_tokenizeToString","tokenizeLineToHTML","viewLineTokens","colorMap","startOffset","endOffset","tabSize","useNbsp","result","charIndex","tabsCharDelta","tokenIndex","tokenCount","getCount","tokenEndIndex","getEndOffset","partContent","charCode","charCodeAt","insertSpacesCount","String","fromCharCode","getInlineStyle","lines","split","currentState","i","len","length","line","tokenizationResult","convertToEndOffset","tokens","lineTokens","inflate","j","lenJ","type","getClassName","endIndex","escape","substring","endState"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/modes/textToHtmlTokenizer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LineTokens } from '../core/lineTokens.js';\r\nimport { NULL_STATE, nullTokenize2 } from './nullMode.js';\r\nvar fallback = {\r\n    getInitialState: function () { return NULL_STATE; },\r\n    tokenize2: function (buffer, state, deltaOffset) { return nullTokenize2(0 /* Null */, buffer, state, deltaOffset); }\r\n};\r\nexport function tokenizeToString(text, tokenizationSupport) {\r\n    if (tokenizationSupport === void 0) { tokenizationSupport = fallback; }\r\n    return _tokenizeToString(text, tokenizationSupport || fallback);\r\n}\r\nexport function tokenizeLineToHTML(text, viewLineTokens, colorMap, startOffset, endOffset, tabSize, useNbsp) {\r\n    var result = \"<div>\";\r\n    var charIndex = startOffset;\r\n    var tabsCharDelta = 0;\r\n    for (var tokenIndex = 0, tokenCount = viewLineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\r\n        var tokenEndIndex = viewLineTokens.getEndOffset(tokenIndex);\r\n        if (tokenEndIndex <= startOffset) {\r\n            continue;\r\n        }\r\n        var partContent = '';\r\n        for (; charIndex < tokenEndIndex && charIndex < endOffset; charIndex++) {\r\n            var charCode = text.charCodeAt(charIndex);\r\n            switch (charCode) {\r\n                case 9 /* Tab */:\r\n                    var insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\r\n                    tabsCharDelta += insertSpacesCount - 1;\r\n                    while (insertSpacesCount > 0) {\r\n                        partContent += useNbsp ? '&#160;' : ' ';\r\n                        insertSpacesCount--;\r\n                    }\r\n                    break;\r\n                case 60 /* LessThan */:\r\n                    partContent += '&lt;';\r\n                    break;\r\n                case 62 /* GreaterThan */:\r\n                    partContent += '&gt;';\r\n                    break;\r\n                case 38 /* Ampersand */:\r\n                    partContent += '&amp;';\r\n                    break;\r\n                case 0 /* Null */:\r\n                    partContent += '&#00;';\r\n                    break;\r\n                case 65279 /* UTF8_BOM */:\r\n                case 8232 /* LINE_SEPARATOR_2028 */:\r\n                    partContent += '\\ufffd';\r\n                    break;\r\n                case 13 /* CarriageReturn */:\r\n                    // zero width space, because carriage return would introduce a line break\r\n                    partContent += '&#8203';\r\n                    break;\r\n                case 32 /* Space */:\r\n                    partContent += useNbsp ? '&#160;' : ' ';\r\n                    break;\r\n                default:\r\n                    partContent += String.fromCharCode(charCode);\r\n            }\r\n        }\r\n        result += \"<span style=\\\"\" + viewLineTokens.getInlineStyle(tokenIndex, colorMap) + \"\\\">\" + partContent + \"</span>\";\r\n        if (tokenEndIndex > endOffset || charIndex >= endOffset) {\r\n            break;\r\n        }\r\n    }\r\n    result += \"</div>\";\r\n    return result;\r\n}\r\nfunction _tokenizeToString(text, tokenizationSupport) {\r\n    var result = \"<div class=\\\"monaco-tokenized-source\\\">\";\r\n    var lines = text.split(/\\r\\n|\\r|\\n/);\r\n    var currentState = tokenizationSupport.getInitialState();\r\n    for (var i = 0, len = lines.length; i < len; i++) {\r\n        var line = lines[i];\r\n        if (i > 0) {\r\n            result += \"<br/>\";\r\n        }\r\n        var tokenizationResult = tokenizationSupport.tokenize2(line, currentState, 0);\r\n        LineTokens.convertToEndOffset(tokenizationResult.tokens, line.length);\r\n        var lineTokens = new LineTokens(tokenizationResult.tokens, line);\r\n        var viewLineTokens = lineTokens.inflate();\r\n        var startOffset = 0;\r\n        for (var j = 0, lenJ = viewLineTokens.getCount(); j < lenJ; j++) {\r\n            var type = viewLineTokens.getClassName(j);\r\n            var endIndex = viewLineTokens.getEndOffset(j);\r\n            result += \"<span class=\\\"\" + type + \"\\\">\" + strings.escape(line.substring(startOffset, endIndex)) + \"</span>\";\r\n            startOffset = endIndex;\r\n        }\r\n        currentState = tokenizationResult.endState;\r\n    }\r\n    result += \"</div>\";\r\n    return result;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}