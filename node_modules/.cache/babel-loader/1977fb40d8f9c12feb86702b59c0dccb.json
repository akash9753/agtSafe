{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\TreeView\\\\StdSpecModalContent.js\";\nimport React, { Component } from 'react';\nimport { Tooltip, Col, Row, Button } from 'antd';\nimport Tabs, { TabPane } from '../../components/uielements/tabs';\nimport LayoutWrapper from '../../components/utility/layoutWrapper';\nimport Box from '../../components/utility/box';\nimport ReactTable from '../Utility/reactTable';\nimport NewListComponentWrapper from './newListComponent.style';\nimport DomainList from './domainList';\nimport { ContactCardWrapper } from './domainCard.style';\nimport { HotTable } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.full.css\";\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip.js';\nvar thisObj;\nvar StdSpecModalContent = /*#__PURE__*/function (_Component) {\n  _inherits(StdSpecModalContent, _Component);\n  var _super = _createSuper(StdSpecModalContent);\n  function StdSpecModalContent(props) {\n    var _this;\n    _classCallCheck(this, StdSpecModalContent);\n    _this = _super.call(this, props);\n    _this.resetTable = function () {\n      _this.setState({\n        settings: {\n          filters: false\n        },\n        dataSource: _this.state.mainData,\n        noOfRows: _this.state.mainData.length\n      });\n    };\n    _this.fnToViewDomain = function (selectedDomain) {\n      var _this$props = _this.props,\n        valueData = _this$props.valueData,\n        sourceData = _this$props.sourceData;\n      var selectedDomain = sourceData.filter(function (domain) {\n        return domain.domain === selectedDomain;\n      });\n      var currentDataSource = [];\n      currentDataSource = valueData.filter(function (variable) {\n        return variable.cdiscDataStdDomainMetadataID == selectedDomain[0].cdiscDataStdDomainMetadataID;\n      });\n      currentDataSource = currentDataSource.map(function (obj, index) {\n        return {\n          variableName: obj.variableName,\n          variableLabel: obj.variableLabel,\n          roleText: obj.roleText,\n          coreText: obj.coreText,\n          dataTypeText: obj.dataTypeText,\n          format: obj.format\n        };\n      });\n      _this.setState({\n        mainData: currentDataSource,\n        selectedDomain: selectedDomain[0],\n        noOfRows: currentDataSource.length,\n        settings: _objectSpread(_objectSpread({}, _this.state.settings), {}, {\n          filters: false\n        })\n      });\n    };\n    _this.afterFilter = function (values) {\n      var inst = _this.hotTableComponent.current;\n      var currData = inst.hotInstance.getData();\n      var newSize = currData.length;\n      _this.setState({\n        noOfRows: newSize\n      });\n      //console.log(values);\n    };\n    _this.state = {\n      mainData: [],\n      selectedDomain: null,\n      settings: {\n        data: [],\n        licenseKey: 'non-commercial-and-evaluation',\n        width: \"100%\",\n        height: props.className === \"studyConfig_StdSpec_Parent\" ? \"calc(100vh - 205px)\" : 400,\n        stretchH: 'all',\n        filters: true,\n        editor: false,\n        dropdownMenu: ['alignment', 'filter_by_condition', 'filter_by_value', 'filter_action_bar'],\n        readOnly: true,\n        afterFilter: _this.afterFilter\n      },\n      dataSource: []\n    };\n    thisObj = _assertThisInitialized(_this);\n    _this.fnToViewDomain = _this.fnToViewDomain.bind(_assertThisInitialized(_this));\n    _this.hotTableComponent = React.createRef();\n    return _this;\n  }\n  _createClass(StdSpecModalContent, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var filters = thisObj.state.settings.filters;\n      if (!filters) {\n        thisObj.setState({\n          settings: {\n            filters: true\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var colHeaders = ['Variable Name', 'Variable Label', 'Role Text', 'Core Text', 'DataType Text', 'Format'];\n      var columns = [{\n        title: 'Variable Name',\n        dataIndex: 'variableName',\n        key: 'variableName',\n        width: 100\n      }, {\n        title: 'Variable Label',\n        dataIndex: 'variableLabel',\n        key: 'variableLabel',\n        width: 100\n      }, {\n        title: 'Role',\n        dataIndex: 'roleText',\n        key: 'roleText',\n        width: 100\n      }, {\n        title: 'Core',\n        dataIndex: 'coreText',\n        key: 'coreText',\n        width: 100\n      }, {\n        title: 'Data Type',\n        dataIndex: 'dataTypeText',\n        key: 'dataTypeText',\n        width: 100\n      }, {\n        title: 'Format',\n        dataIndex: 'format',\n        key: 'format',\n        width: 100\n      }];\n      var _this$props2 = this.props,\n        sourceData = _this$props2.sourceData,\n        valueData = _this$props2.valueData,\n        className = _this$props2.className;\n      var _this$state = this.state,\n        selectedDomain = _this$state.selectedDomain,\n        noOfRows = _this$state.noOfRows,\n        mainData = _this$state.mainData;\n      return /*#__PURE__*/React.createElement(NewListComponentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: className,\n        gutter: 4,\n        style: {\n          width: '100%',\n          height: 'calc(100vh - 120px)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 6,\n        style: {\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoNoteListSidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DomainList, {\n        domains: sourceData,\n        variables: this.props.valueData,\n        fnToViewDomain: this.fnToViewDomain,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }))), selectedDomain !== null && /*#__PURE__*/React.createElement(Col, {\n        span: 18,\n        style: {\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        onChange: this.onTabChange,\n        type: \"card\",\n        style: {\n          paddingLeft: 20,\n          paddingBottom: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        className: this.state.mainData.length > 0 ? \"overlayTable\" : \"tables\",\n        tab: \"Variables Metadata\",\n        key: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        disabled: noOfRows === mainData.length,\n        size: \"large\",\n        style: {\n          marginLeft: 15\n        },\n        onClick: function onClick() {\n          return _this2.resetTable();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 37\n        }\n      }, \"Reset\"), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: \"right\",\n          marginRight: \"15px\",\n          marginTop: \"7px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, \"Showing list of records:\", this.state.noOfRows), /*#__PURE__*/React.createElement(HotTable, {\n        colHeaders: colHeaders,\n        ref: this.hotTableComponent,\n        settings: this.state.settings,\n        data: this.state.mainData,\n        style: {\n          marginTop: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(TabPane, {\n        tab: \"Domain Metadata\",\n        key: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(ContactCardWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactInfoWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactCardInfos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 49\n        }\n      }, \"Domain\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 49\n        }\n      }, selectedDomain.domain)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactCardInfos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 49\n        }\n      }, \"Full Name\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 49\n        }\n      }, selectedDomain.domainDescription)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactCardInfos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 49\n        }\n      }, \"Key Variables\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 49\n        }\n      }, selectedDomain.keyVariables)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactCardInfos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 49\n        }\n      }, \"Purpose\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 49\n        }\n      }, selectedDomain.purposeText)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactCardInfos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 49\n        }\n      }, \"Structure\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 49\n        }\n      }, selectedDomain.structure)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactCardInfos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 49\n        }\n      }, \"Repeating\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 49\n        }\n      }, selectedDomain.repeatingText)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactCardInfos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 49\n        }\n      }, \"Variables Count\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"isoInfoDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 49\n        }\n      }, selectedDomain.cdiscDataStdDomainMetadataID)))))))));\n    }\n  }]);\n  return StdSpecModalContent;\n}(Component);\nexport { StdSpecModalContent as default };","map":{"version":3,"names":["React","Component","Tooltip","Col","Row","Button","Tabs","TabPane","LayoutWrapper","Box","ReactTable","NewListComponentWrapper","DomainList","ContactCardWrapper","HotTable","ButtonWithToolTip","thisObj","StdSpecModalContent","props","resetTable","setState","settings","filters","dataSource","state","mainData","noOfRows","length","fnToViewDomain","selectedDomain","valueData","sourceData","filter","domain","currentDataSource","variable","cdiscDataStdDomainMetadataID","map","obj","index","variableName","variableLabel","roleText","coreText","dataTypeText","format","afterFilter","values","inst","hotTableComponent","current","currData","hotInstance","getData","newSize","data","licenseKey","width","height","className","stretchH","editor","dropdownMenu","readOnly","bind","createRef","colHeaders","columns","title","dataIndex","key","onTabChange","paddingLeft","paddingBottom","marginLeft","float","marginRight","marginTop","domainDescription","keyVariables","purposeText","structure","repeatingText"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/TreeView/StdSpecModalContent.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Tooltip, Col, Row,Button } from 'antd';\nimport Tabs, { TabPane } from '../../components/uielements/tabs';\nimport LayoutWrapper from '../../components/utility/layoutWrapper';\nimport Box from '../../components/utility/box';\nimport ReactTable from '../Utility/reactTable';\nimport NewListComponentWrapper from './newListComponent.style';\nimport DomainList from './domainList';\nimport { ContactCardWrapper } from './domainCard.style';\nimport { HotTable } from \"@handsontable/react\";\r\nimport \"handsontable/dist/handsontable.full.css\";\r\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip.js'\n\nvar thisObj;\n\nexport default class StdSpecModalContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mainData: [], \n            selectedDomain: null,\n            settings: {\r\n                data: [],\r\n                licenseKey: 'non-commercial-and-evaluation',\r\n                width: \"100%\",\r\n                height: props.className === \"studyConfig_StdSpec_Parent\" ? \"calc(100vh - 205px)\" : 400,\r\n                stretchH: 'all',\r\n                filters: true,\r\n                editor: false,\r\n                dropdownMenu: ['alignment', 'filter_by_condition', 'filter_by_value', 'filter_action_bar'],\r\n                readOnly: true,\n                afterFilter: this.afterFilter,\n\r\n            },\n            dataSource: [],\n        }\n        thisObj = this;\n\n        this.fnToViewDomain = this.fnToViewDomain.bind(this);\n        this.hotTableComponent = React.createRef();\r\n      \n    }\n    componentDidUpdate() {\r\n        let { filters } = thisObj.state.settings;\r\n        if (!filters) {\r\n            thisObj.setState({ settings: { filters: true } });\r\n        }\r\n    }\n    resetTable = () => {\n        this.setState({ settings: { filters: false }, dataSource: this.state.mainData, noOfRows: this.state.mainData.length  });\r\n    }\n\n    fnToViewDomain = (selectedDomain) => {\n\n        const { valueData, sourceData  } = this.props;\n        var selectedDomain = sourceData.filter(domain => domain.domain === selectedDomain);\n        var currentDataSource = [];\n        currentDataSource = valueData.filter(variable => variable.cdiscDataStdDomainMetadataID == selectedDomain[0].cdiscDataStdDomainMetadataID);\n        currentDataSource = currentDataSource.map((obj, index) => {\r\n\r\n            return ({ variableName: obj.variableName, variableLabel: obj.variableLabel, roleText: obj.roleText, coreText: obj.coreText, dataTypeText: obj.dataTypeText, format: obj.format })\r\n\r\n        });\n        this.setState({ mainData: currentDataSource, selectedDomain: selectedDomain[0], noOfRows: currentDataSource.length, settings: { ...this.state.settings, filters: false } });\n    }\n\n    afterFilter = (values) => {\r\n        const inst = this.hotTableComponent.current;\r\n\r\n        const currData = inst.hotInstance.getData();\r\n        const newSize = currData.length;\r\n        this.setState({ noOfRows: newSize });\r\n        //console.log(values);\r\n    }\n\n    render() {\n\n        const colHeaders = [\r\n            'Variable Name',\r\n            'Variable Label',\r\n            'Role Text',\r\n            'Core Text',\r\n            'DataType Text',\r\n            'Format'\r\n        ];\n       \n        const columns = [{\n            title: 'Variable Name',\n            dataIndex: 'variableName',\n            key: 'variableName',\n            width:100\n        }, {\n                title: 'Variable Label',\n            dataIndex: 'variableLabel',\n            key: 'variableLabel',\n            width: 100\n        },\n        {\n            title: 'Role',\n            dataIndex: 'roleText',\n            key: 'roleText',\n            width: 100\n        },\n        {\n            title: 'Core',\n            dataIndex: 'coreText',\n            key: 'coreText',\n            width: 100\n        },\n        {\n            title: 'Data Type',\n            dataIndex: 'dataTypeText',\n            key: 'dataTypeText',\n            width: 100\n        },\n        {\n            title: 'Format',\n            dataIndex: 'format',\n            key: 'format',\n            width: 100\n        }];\n\n        const { sourceData, valueData, className } = this.props;\n        const { selectedDomain, noOfRows, mainData } = this.state;\n        return (\n            <NewListComponentWrapper >\n                <Row className={className} gutter={4} style={{ width: '100%', height: 'calc(100vh - 120px)' }}>\n                    <Col span={6} style={{ height: '100%' }}>\n                        <div className=\"isoNoteListSidebar\">\n                            <DomainList\n                                domains={sourceData}\n                                variables={this.props.valueData}\n                                fnToViewDomain={this.fnToViewDomain} \n                            />\n                        </div>\n                    </Col>\n                    {\n                        selectedDomain !== null && \r\n\r\n                        <Col span={18} style={{ height: '100%' }} >\n                            <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange} type=\"card\" style={{ paddingLeft: 20, paddingBottom: 2 }}>\n                                <TabPane className={this.state.mainData.length > 0?\"overlayTable\":\"tables\" } tab=\"Variables Metadata\" key=\"1\">\n\n                                    <Button type=\"primary\" disabled={noOfRows === mainData.length} size=\"large\" style={{ marginLeft: 15 }} onClick={() => this.resetTable()}>\r\n                                        Reset\r\n                                        </Button>\n                                    <span style={{ float: \"right\", marginRight: \"15px\", marginTop: \"7px\" }}>Showing list of records:{this.state.noOfRows}</span>\n                                    <HotTable\r\n                                        colHeaders={colHeaders}\r\n                                        ref={this.hotTableComponent}\r\n                                        settings={this.state.settings}\r\n                                        data={this.state.mainData}\r\n                                        style={{ marginTop: 15 }}\r\n                                    />\r\n\n                                </TabPane>\n                                <TabPane tab=\"Domain Metadata\" key=\"2\">\n                                    \n                                    <ContactCardWrapper>\n                                        <div className=\"isoContactInfoWrapper\">\n                                            <div className=\"isoContactCardInfos\">\n                                                <p className=\"isoInfoLabel\">{\"Domain\"}</p>\n                                                <p className=\"isoInfoDetails\">\n                                                    {selectedDomain.domain}\n                                                </p>\n                                            </div>\n                                            <div className=\"isoContactCardInfos\">\n                                                <p className=\"isoInfoLabel\">{\"Full Name\"}</p>\n                                                <p className=\"isoInfoDetails\">\n                                                    {selectedDomain.domainDescription}\n                                                </p>\n                                            </div>\n                                            <div className=\"isoContactCardInfos\">\n                                                <p className=\"isoInfoLabel\">{\"Key Variables\"}</p>\n                                                <p className=\"isoInfoDetails\">\n                                                    {selectedDomain.keyVariables}\n                                                </p>\n                                            </div>\n                                            <div className=\"isoContactCardInfos\">\n                                                <p className=\"isoInfoLabel\">{\"Purpose\"}</p>\n                                                <p className=\"isoInfoDetails\">\n                                                    {selectedDomain.purposeText}\n                                                </p>\n                                            </div>\n                                            <div className=\"isoContactCardInfos\">\n                                                <p className=\"isoInfoLabel\">{\"Structure\"}</p>\n                                                <p className=\"isoInfoDetails\">\n                                                    {selectedDomain.structure}\n                                                </p>\n                                            </div>\n                                            <div className=\"isoContactCardInfos\">\n                                                <p className=\"isoInfoLabel\">{\"Repeating\"}</p>\n                                                <p className=\"isoInfoDetails\">\n                                                    {selectedDomain.repeatingText}\n                                                </p>\n                                            </div>\n                                            <div className=\"isoContactCardInfos\">\n                                                <p className=\"isoInfoLabel\">{\"Variables Count\"}</p>\n                                                <p className=\"isoInfoDetails\">\n                                                    {selectedDomain.cdiscDataStdDomainMetadataID}\n                                                </p>\n                                            </div>\n                                           \n                                        </div>\n                                    </ContactCardWrapper>\n                                </TabPane>\n                            </Tabs>\n                            </Col>\r\n                    }\n                    \n                </Row>\n            </NewListComponentWrapper>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}