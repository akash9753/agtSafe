{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as dom from '../../../base/browser/dom.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MouseHandler, createMouseMoveEventMerger } from './mouseHandler.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nfunction gestureChangeEventMerger(lastEvent, currentEvent) {\n  var r = {\n    translationY: currentEvent.translationY,\n    translationX: currentEvent.translationX\n  };\n  if (lastEvent) {\n    r.translationY += lastEvent.translationY;\n    r.translationX += lastEvent.translationX;\n  }\n  return r;\n}\n/**\r\n * Basically IE10 and IE11\r\n */\nvar MsPointerHandler = /** @class */function (_super) {\n  __extends(MsPointerHandler, _super);\n  function MsPointerHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n    _this.viewHelper.linesContentDomNode.style.msTouchAction = 'none';\n    _this.viewHelper.linesContentDomNode.style.msContentZooming = 'none';\n    // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\n    // This handler should be added when the dom node is in the dom tree\n    _this._installGestureHandlerTimeout = window.setTimeout(function () {\n      _this._installGestureHandlerTimeout = -1;\n      if (window.MSGesture) {\n        var touchGesture_1 = new MSGesture();\n        var penGesture_1 = new MSGesture();\n        touchGesture_1.target = _this.viewHelper.linesContentDomNode;\n        penGesture_1.target = _this.viewHelper.linesContentDomNode;\n        _this.viewHelper.linesContentDomNode.addEventListener('MSPointerDown', function (e) {\n          // Circumvent IE11 breaking change in e.pointerType & TypeScript's stale definitions\n          var pointerType = e.pointerType;\n          if (pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) {\n            _this._lastPointerType = 'mouse';\n            return;\n          } else if (pointerType === (e.MSPOINTER_TYPE_TOUCH || 'touch')) {\n            _this._lastPointerType = 'touch';\n            touchGesture_1.addPointer(e.pointerId);\n          } else {\n            _this._lastPointerType = 'pen';\n            penGesture_1.addPointer(e.pointerId);\n          }\n        });\n        _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) {\n          return _this._onGestureChange(e);\n        }, gestureChangeEventMerger));\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) {\n          return _this._onCaptureGestureTap(e);\n        }, true));\n      }\n    }, 100);\n    _this._lastPointerType = 'mouse';\n    return _this;\n  }\n  MsPointerHandler.prototype._onMouseDown = function (e) {\n    if (this._lastPointerType === 'mouse') {\n      _super.prototype._onMouseDown.call(this, e);\n    }\n  };\n  MsPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\n    var _this = this;\n    var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\n    var t = this._createMouseTarget(e, false);\n    if (t.position) {\n      this.viewController.moveTo(t.position);\n    }\n    // IE does not want to focus when coming in from the browser's address bar\n    if (e.browserEvent.fromElement) {\n      e.preventDefault();\n      this.viewHelper.focusTextArea();\n    } else {\n      // TODO@Alex -> cancel this is focus is lost\n      setTimeout(function () {\n        _this.viewHelper.focusTextArea();\n      });\n    }\n  };\n  MsPointerHandler.prototype._onGestureChange = function (e) {\n    this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n  };\n  MsPointerHandler.prototype.dispose = function () {\n    window.clearTimeout(this._installGestureHandlerTimeout);\n    _super.prototype.dispose.call(this);\n  };\n  return MsPointerHandler;\n}(MouseHandler);\n/**\r\n * Basically Edge but should be modified to handle any pointerEnabled, even without support of MSGesture\r\n */\nvar StandardPointerHandler = /** @class */function (_super) {\n  __extends(StandardPointerHandler, _super);\n  function StandardPointerHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n    _this.viewHelper.linesContentDomNode.style.touchAction = 'none';\n    // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\n    // This handler should be added when the dom node is in the dom tree\n    _this._installGestureHandlerTimeout = window.setTimeout(function () {\n      _this._installGestureHandlerTimeout = -1;\n      // TODO@Alex: replace the usage of MSGesture here with something that works across all browsers\n      if (window.MSGesture) {\n        var touchGesture_2 = new MSGesture();\n        var penGesture_2 = new MSGesture();\n        touchGesture_2.target = _this.viewHelper.linesContentDomNode;\n        penGesture_2.target = _this.viewHelper.linesContentDomNode;\n        _this.viewHelper.linesContentDomNode.addEventListener('pointerdown', function (e) {\n          var pointerType = e.pointerType;\n          if (pointerType === 'mouse') {\n            _this._lastPointerType = 'mouse';\n            return;\n          } else if (pointerType === 'touch') {\n            _this._lastPointerType = 'touch';\n            touchGesture_2.addPointer(e.pointerId);\n          } else {\n            _this._lastPointerType = 'pen';\n            penGesture_2.addPointer(e.pointerId);\n          }\n        });\n        _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) {\n          return _this._onGestureChange(e);\n        }, gestureChangeEventMerger));\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) {\n          return _this._onCaptureGestureTap(e);\n        }, true));\n      }\n    }, 100);\n    _this._lastPointerType = 'mouse';\n    return _this;\n  }\n  StandardPointerHandler.prototype._onMouseDown = function (e) {\n    if (this._lastPointerType === 'mouse') {\n      _super.prototype._onMouseDown.call(this, e);\n    }\n  };\n  StandardPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\n    var _this = this;\n    var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\n    var t = this._createMouseTarget(e, false);\n    if (t.position) {\n      this.viewController.moveTo(t.position);\n    }\n    // IE does not want to focus when coming in from the browser's address bar\n    if (e.browserEvent.fromElement) {\n      e.preventDefault();\n      this.viewHelper.focusTextArea();\n    } else {\n      // TODO@Alex -> cancel this is focus is lost\n      setTimeout(function () {\n        _this.viewHelper.focusTextArea();\n      });\n    }\n  };\n  StandardPointerHandler.prototype._onGestureChange = function (e) {\n    this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n  };\n  StandardPointerHandler.prototype.dispose = function () {\n    window.clearTimeout(this._installGestureHandlerTimeout);\n    _super.prototype.dispose.call(this);\n  };\n  return StandardPointerHandler;\n}(MouseHandler);\n/**\r\n * Currently only tested on iOS 13/ iPadOS.\r\n */\nvar PointerEventHandler = /** @class */function (_super) {\n  __extends(PointerEventHandler, _super);\n  function PointerEventHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n    _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) {\n      return _this.onTap(e);\n    }));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) {\n      return _this.onChange(e);\n    }));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) {\n      return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false);\n    }));\n    _this._lastPointerType = 'mouse';\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'pointerdown', function (e) {\n      var pointerType = e.pointerType;\n      if (pointerType === 'mouse') {\n        _this._lastPointerType = 'mouse';\n        return;\n      } else if (pointerType === 'touch') {\n        _this._lastPointerType = 'touch';\n      } else {\n        _this._lastPointerType = 'pen';\n      }\n    }));\n    // PonterEvents\n    var pointerEvents = new EditorPointerEventFactory(_this.viewHelper.viewDomNode);\n    _this._register(pointerEvents.onPointerMoveThrottled(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseMove(e);\n    }, createMouseMoveEventMerger(_this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\n    _this._register(pointerEvents.onPointerUp(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseUp(e);\n    }));\n    _this._register(pointerEvents.onPointerLeave(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseLeave(e);\n    }));\n    _this._register(pointerEvents.onPointerDown(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseDown(e);\n    }));\n    return _this;\n  }\n  PointerEventHandler.prototype.onTap = function (event) {\n    if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n      return;\n    }\n    event.preventDefault();\n    this.viewHelper.focusTextArea();\n    var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\n    if (target.position) {\n      // this.viewController.moveTo(target.position);\n      this.viewController.dispatchMouse({\n        position: target.position,\n        mouseColumn: target.position.column,\n        startedOnLineNumbers: false,\n        mouseDownCount: event.tapCount,\n        inSelectionMode: false,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        leftButton: false,\n        middleButton: false\n      });\n    }\n  };\n  PointerEventHandler.prototype.onChange = function (e) {\n    if (this._lastPointerType === 'touch') {\n      this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n  };\n  PointerEventHandler.prototype._onMouseDown = function (e) {\n    if (e.target && this.viewHelper.linesContentDomNode.contains(e.target) && this._lastPointerType === 'touch') {\n      return;\n    }\n    _super.prototype._onMouseDown.call(this, e);\n  };\n  return PointerEventHandler;\n}(MouseHandler);\nexport { PointerEventHandler };\nvar TouchHandler = /** @class */function (_super) {\n  __extends(TouchHandler, _super);\n  function TouchHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n    _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) {\n      return _this.onTap(e);\n    }));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) {\n      return _this.onChange(e);\n    }));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) {\n      return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false);\n    }));\n    return _this;\n  }\n  TouchHandler.prototype.onTap = function (event) {\n    event.preventDefault();\n    this.viewHelper.focusTextArea();\n    var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\n    if (target.position) {\n      this.viewController.moveTo(target.position);\n    }\n  };\n  TouchHandler.prototype.onChange = function (e) {\n    this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n  };\n  return TouchHandler;\n}(MouseHandler);\nvar PointerHandler = /** @class */function (_super) {\n  __extends(PointerHandler, _super);\n  function PointerHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this) || this;\n    if (window.navigator.msPointerEnabled) {\n      _this.handler = _this._register(new MsPointerHandler(context, viewController, viewHelper));\n    } else if (platform.isIOS && BrowserFeatures.pointerEvents) {\n      _this.handler = _this._register(new PointerEventHandler(context, viewController, viewHelper));\n    } else if (window.TouchEvent) {\n      _this.handler = _this._register(new TouchHandler(context, viewController, viewHelper));\n    } else if (window.navigator.pointerEnabled || window.PointerEvent) {\n      _this.handler = _this._register(new StandardPointerHandler(context, viewController, viewHelper));\n    } else {\n      _this.handler = _this._register(new MouseHandler(context, viewController, viewHelper));\n    }\n    return _this;\n  }\n  PointerHandler.prototype.getTargetAtClientPoint = function (clientX, clientY) {\n    return this.handler.getTargetAtClientPoint(clientX, clientY);\n  };\n  return PointerHandler;\n}(Disposable);\nexport { PointerHandler };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","dom","platform","EventType","Gesture","Disposable","MouseHandler","createMouseMoveEventMerger","EditorMouseEvent","EditorPointerEventFactory","BrowserFeatures","gestureChangeEventMerger","lastEvent","currentEvent","r","translationY","translationX","MsPointerHandler","_super","context","viewController","viewHelper","_this","call","linesContentDomNode","style","msTouchAction","msContentZooming","_installGestureHandlerTimeout","window","setTimeout","MSGesture","touchGesture_1","penGesture_1","target","addEventListener","e","pointerType","MSPOINTER_TYPE_MOUSE","_lastPointerType","MSPOINTER_TYPE_TOUCH","addPointer","pointerId","_register","addDisposableThrottledListener","_onGestureChange","addDisposableListener","_onCaptureGestureTap","_onMouseDown","rawEvent","viewDomNode","t","_createMouseTarget","position","moveTo","browserEvent","fromElement","preventDefault","focusTextArea","_context","viewLayout","deltaScrollNow","dispose","clearTimeout","StandardPointerHandler","touchAction","touchGesture_2","penGesture_2","PointerEventHandler","addTarget","Tap","onTap","Change","onChange","Contextmenu","_onContextMenu","pointerEvents","onPointerMoveThrottled","_onMouseMove","mouseTargetFactory","MOUSE_MOVE_MINIMUM_TIME","onPointerUp","_onMouseUp","onPointerLeave","_onMouseLeave","onPointerDown","event","initialTarget","contains","dispatchMouse","mouseColumn","column","startedOnLineNumbers","mouseDownCount","tapCount","inSelectionMode","altKey","ctrlKey","metaKey","shiftKey","leftButton","middleButton","TouchHandler","PointerHandler","navigator","msPointerEnabled","handler","isIOS","TouchEvent","pointerEnabled","PointerEvent","getTargetAtClientPoint","clientX","clientY"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { MouseHandler, createMouseMoveEventMerger } from './mouseHandler.js';\r\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\r\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\r\nfunction gestureChangeEventMerger(lastEvent, currentEvent) {\r\n    var r = {\r\n        translationY: currentEvent.translationY,\r\n        translationX: currentEvent.translationX\r\n    };\r\n    if (lastEvent) {\r\n        r.translationY += lastEvent.translationY;\r\n        r.translationX += lastEvent.translationX;\r\n    }\r\n    return r;\r\n}\r\n/**\r\n * Basically IE10 and IE11\r\n */\r\nvar MsPointerHandler = /** @class */ (function (_super) {\r\n    __extends(MsPointerHandler, _super);\r\n    function MsPointerHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this.viewHelper.linesContentDomNode.style.msTouchAction = 'none';\r\n        _this.viewHelper.linesContentDomNode.style.msContentZooming = 'none';\r\n        // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\r\n        // This handler should be added when the dom node is in the dom tree\r\n        _this._installGestureHandlerTimeout = window.setTimeout(function () {\r\n            _this._installGestureHandlerTimeout = -1;\r\n            if (window.MSGesture) {\r\n                var touchGesture_1 = new MSGesture();\r\n                var penGesture_1 = new MSGesture();\r\n                touchGesture_1.target = _this.viewHelper.linesContentDomNode;\r\n                penGesture_1.target = _this.viewHelper.linesContentDomNode;\r\n                _this.viewHelper.linesContentDomNode.addEventListener('MSPointerDown', function (e) {\r\n                    // Circumvent IE11 breaking change in e.pointerType & TypeScript's stale definitions\r\n                    var pointerType = e.pointerType;\r\n                    if (pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) {\r\n                        _this._lastPointerType = 'mouse';\r\n                        return;\r\n                    }\r\n                    else if (pointerType === (e.MSPOINTER_TYPE_TOUCH || 'touch')) {\r\n                        _this._lastPointerType = 'touch';\r\n                        touchGesture_1.addPointer(e.pointerId);\r\n                    }\r\n                    else {\r\n                        _this._lastPointerType = 'pen';\r\n                        penGesture_1.addPointer(e.pointerId);\r\n                    }\r\n                });\r\n                _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) { return _this._onGestureChange(e); }, gestureChangeEventMerger));\r\n                _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) { return _this._onCaptureGestureTap(e); }, true));\r\n            }\r\n        }, 100);\r\n        _this._lastPointerType = 'mouse';\r\n        return _this;\r\n    }\r\n    MsPointerHandler.prototype._onMouseDown = function (e) {\r\n        if (this._lastPointerType === 'mouse') {\r\n            _super.prototype._onMouseDown.call(this, e);\r\n        }\r\n    };\r\n    MsPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\r\n        var _this = this;\r\n        var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\r\n        var t = this._createMouseTarget(e, false);\r\n        if (t.position) {\r\n            this.viewController.moveTo(t.position);\r\n        }\r\n        // IE does not want to focus when coming in from the browser's address bar\r\n        if (e.browserEvent.fromElement) {\r\n            e.preventDefault();\r\n            this.viewHelper.focusTextArea();\r\n        }\r\n        else {\r\n            // TODO@Alex -> cancel this is focus is lost\r\n            setTimeout(function () {\r\n                _this.viewHelper.focusTextArea();\r\n            });\r\n        }\r\n    };\r\n    MsPointerHandler.prototype._onGestureChange = function (e) {\r\n        this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n    };\r\n    MsPointerHandler.prototype.dispose = function () {\r\n        window.clearTimeout(this._installGestureHandlerTimeout);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return MsPointerHandler;\r\n}(MouseHandler));\r\n/**\r\n * Basically Edge but should be modified to handle any pointerEnabled, even without support of MSGesture\r\n */\r\nvar StandardPointerHandler = /** @class */ (function (_super) {\r\n    __extends(StandardPointerHandler, _super);\r\n    function StandardPointerHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this.viewHelper.linesContentDomNode.style.touchAction = 'none';\r\n        // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\r\n        // This handler should be added when the dom node is in the dom tree\r\n        _this._installGestureHandlerTimeout = window.setTimeout(function () {\r\n            _this._installGestureHandlerTimeout = -1;\r\n            // TODO@Alex: replace the usage of MSGesture here with something that works across all browsers\r\n            if (window.MSGesture) {\r\n                var touchGesture_2 = new MSGesture();\r\n                var penGesture_2 = new MSGesture();\r\n                touchGesture_2.target = _this.viewHelper.linesContentDomNode;\r\n                penGesture_2.target = _this.viewHelper.linesContentDomNode;\r\n                _this.viewHelper.linesContentDomNode.addEventListener('pointerdown', function (e) {\r\n                    var pointerType = e.pointerType;\r\n                    if (pointerType === 'mouse') {\r\n                        _this._lastPointerType = 'mouse';\r\n                        return;\r\n                    }\r\n                    else if (pointerType === 'touch') {\r\n                        _this._lastPointerType = 'touch';\r\n                        touchGesture_2.addPointer(e.pointerId);\r\n                    }\r\n                    else {\r\n                        _this._lastPointerType = 'pen';\r\n                        penGesture_2.addPointer(e.pointerId);\r\n                    }\r\n                });\r\n                _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) { return _this._onGestureChange(e); }, gestureChangeEventMerger));\r\n                _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) { return _this._onCaptureGestureTap(e); }, true));\r\n            }\r\n        }, 100);\r\n        _this._lastPointerType = 'mouse';\r\n        return _this;\r\n    }\r\n    StandardPointerHandler.prototype._onMouseDown = function (e) {\r\n        if (this._lastPointerType === 'mouse') {\r\n            _super.prototype._onMouseDown.call(this, e);\r\n        }\r\n    };\r\n    StandardPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\r\n        var _this = this;\r\n        var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\r\n        var t = this._createMouseTarget(e, false);\r\n        if (t.position) {\r\n            this.viewController.moveTo(t.position);\r\n        }\r\n        // IE does not want to focus when coming in from the browser's address bar\r\n        if (e.browserEvent.fromElement) {\r\n            e.preventDefault();\r\n            this.viewHelper.focusTextArea();\r\n        }\r\n        else {\r\n            // TODO@Alex -> cancel this is focus is lost\r\n            setTimeout(function () {\r\n                _this.viewHelper.focusTextArea();\r\n            });\r\n        }\r\n    };\r\n    StandardPointerHandler.prototype._onGestureChange = function (e) {\r\n        this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n    };\r\n    StandardPointerHandler.prototype.dispose = function () {\r\n        window.clearTimeout(this._installGestureHandlerTimeout);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return StandardPointerHandler;\r\n}(MouseHandler));\r\n/**\r\n * Currently only tested on iOS 13/ iPadOS.\r\n */\r\nvar PointerEventHandler = /** @class */ (function (_super) {\r\n    __extends(PointerEventHandler, _super);\r\n    function PointerEventHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) { return _this.onTap(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) { return _this.onChange(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) { return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false); }));\r\n        _this._lastPointerType = 'mouse';\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'pointerdown', function (e) {\r\n            var pointerType = e.pointerType;\r\n            if (pointerType === 'mouse') {\r\n                _this._lastPointerType = 'mouse';\r\n                return;\r\n            }\r\n            else if (pointerType === 'touch') {\r\n                _this._lastPointerType = 'touch';\r\n            }\r\n            else {\r\n                _this._lastPointerType = 'pen';\r\n            }\r\n        }));\r\n        // PonterEvents\r\n        var pointerEvents = new EditorPointerEventFactory(_this.viewHelper.viewDomNode);\r\n        _this._register(pointerEvents.onPointerMoveThrottled(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseMove(e); }, createMouseMoveEventMerger(_this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\r\n        _this._register(pointerEvents.onPointerUp(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseUp(e); }));\r\n        _this._register(pointerEvents.onPointerLeave(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseLeave(e); }));\r\n        _this._register(pointerEvents.onPointerDown(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseDown(e); }));\r\n        return _this;\r\n    }\r\n    PointerEventHandler.prototype.onTap = function (event) {\r\n        if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        this.viewHelper.focusTextArea();\r\n        var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\r\n        if (target.position) {\r\n            // this.viewController.moveTo(target.position);\r\n            this.viewController.dispatchMouse({\r\n                position: target.position,\r\n                mouseColumn: target.position.column,\r\n                startedOnLineNumbers: false,\r\n                mouseDownCount: event.tapCount,\r\n                inSelectionMode: false,\r\n                altKey: false,\r\n                ctrlKey: false,\r\n                metaKey: false,\r\n                shiftKey: false,\r\n                leftButton: false,\r\n                middleButton: false,\r\n            });\r\n        }\r\n    };\r\n    PointerEventHandler.prototype.onChange = function (e) {\r\n        if (this._lastPointerType === 'touch') {\r\n            this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n        }\r\n    };\r\n    PointerEventHandler.prototype._onMouseDown = function (e) {\r\n        if (e.target && this.viewHelper.linesContentDomNode.contains(e.target) && this._lastPointerType === 'touch') {\r\n            return;\r\n        }\r\n        _super.prototype._onMouseDown.call(this, e);\r\n    };\r\n    return PointerEventHandler;\r\n}(MouseHandler));\r\nexport { PointerEventHandler };\r\nvar TouchHandler = /** @class */ (function (_super) {\r\n    __extends(TouchHandler, _super);\r\n    function TouchHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) { return _this.onTap(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) { return _this.onChange(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) { return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false); }));\r\n        return _this;\r\n    }\r\n    TouchHandler.prototype.onTap = function (event) {\r\n        event.preventDefault();\r\n        this.viewHelper.focusTextArea();\r\n        var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\r\n        if (target.position) {\r\n            this.viewController.moveTo(target.position);\r\n        }\r\n    };\r\n    TouchHandler.prototype.onChange = function (e) {\r\n        this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n    };\r\n    return TouchHandler;\r\n}(MouseHandler));\r\nvar PointerHandler = /** @class */ (function (_super) {\r\n    __extends(PointerHandler, _super);\r\n    function PointerHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this) || this;\r\n        if (window.navigator.msPointerEnabled) {\r\n            _this.handler = _this._register(new MsPointerHandler(context, viewController, viewHelper));\r\n        }\r\n        else if ((platform.isIOS && BrowserFeatures.pointerEvents)) {\r\n            _this.handler = _this._register(new PointerEventHandler(context, viewController, viewHelper));\r\n        }\r\n        else if (window.TouchEvent) {\r\n            _this.handler = _this._register(new TouchHandler(context, viewController, viewHelper));\r\n        }\r\n        else if (window.navigator.pointerEnabled || window.PointerEvent) {\r\n            _this.handler = _this._register(new StandardPointerHandler(context, viewController, viewHelper));\r\n        }\r\n        else {\r\n            _this.handler = _this._register(new MouseHandler(context, viewController, viewHelper));\r\n        }\r\n        return _this;\r\n    }\r\n    PointerHandler.prototype.getTargetAtClientPoint = function (clientX, clientY) {\r\n        return this.handler.getTargetAtClientPoint(clientX, clientY);\r\n    };\r\n    return PointerHandler;\r\n}(Disposable));\r\nexport { PointerHandler };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}