{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport * as types from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n  if (!isWeb) {\n    // running tests\n    return;\n  }\n  if (!webWorkerWarningLogged) {\n    webWorkerWarningLogged = true;\n    console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n  }\n  console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */function () {\n  function SimpleWorkerProtocol(handler) {\n    this._workerId = -1;\n    this._handler = handler;\n    this._lastSentReq = 0;\n    this._pendingReplies = Object.create(null);\n  }\n  SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n    this._workerId = workerId;\n  };\n  SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n    var _this = this;\n    var req = String(++this._lastSentReq);\n    return new Promise(function (resolve, reject) {\n      _this._pendingReplies[req] = {\n        resolve: resolve,\n        reject: reject\n      };\n      _this._send({\n        vsWorker: _this._workerId,\n        req: req,\n        method: method,\n        args: args\n      });\n    });\n  };\n  SimpleWorkerProtocol.prototype.handleMessage = function (message) {\n    if (!message || !message.vsWorker) {\n      return;\n    }\n    if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n      return;\n    }\n    this._handleMessage(message);\n  };\n  SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n    var _this = this;\n    if (msg.seq) {\n      var replyMessage = msg;\n      if (!this._pendingReplies[replyMessage.seq]) {\n        console.warn('Got reply to unknown seq');\n        return;\n      }\n      var reply = this._pendingReplies[replyMessage.seq];\n      delete this._pendingReplies[replyMessage.seq];\n      if (replyMessage.err) {\n        var err = replyMessage.err;\n        if (replyMessage.err.$isError) {\n          err = new Error();\n          err.name = replyMessage.err.name;\n          err.message = replyMessage.err.message;\n          err.stack = replyMessage.err.stack;\n        }\n        reply.reject(err);\n        return;\n      }\n      reply.resolve(replyMessage.res);\n      return;\n    }\n    var requestMessage = msg;\n    var req = requestMessage.req;\n    var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n    result.then(function (r) {\n      _this._send({\n        vsWorker: _this._workerId,\n        seq: req,\n        res: r,\n        err: undefined\n      });\n    }, function (e) {\n      if (e.detail instanceof Error) {\n        // Loading errors have a detail property that points to the actual error\n        e.detail = transformErrorForSerialization(e.detail);\n      }\n      _this._send({\n        vsWorker: _this._workerId,\n        seq: req,\n        res: undefined,\n        err: transformErrorForSerialization(e)\n      });\n    });\n  };\n  SimpleWorkerProtocol.prototype._send = function (msg) {\n    var transfer = [];\n    if (msg.req) {\n      var m = msg;\n      for (var i = 0; i < m.args.length; i++) {\n        if (m.args[i] instanceof ArrayBuffer) {\n          transfer.push(m.args[i]);\n        }\n      }\n    } else {\n      var m = msg;\n      if (m.res instanceof ArrayBuffer) {\n        transfer.push(m.res);\n      }\n    }\n    this._handler.sendMessage(msg, transfer);\n  };\n  return SimpleWorkerProtocol;\n}();\n/**\r\n * Main thread side\r\n */\nvar SimpleWorkerClient = /** @class */function (_super) {\n  __extends(SimpleWorkerClient, _super);\n  function SimpleWorkerClient(workerFactory, moduleId, host) {\n    var _this = _super.call(this) || this;\n    var lazyProxyReject = null;\n    _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n      _this._protocol.handleMessage(msg);\n    }, function (err) {\n      // in Firefox, web workers fail lazily :(\n      // we will reject the proxy\n      if (lazyProxyReject) {\n        lazyProxyReject(err);\n      }\n    }));\n    _this._protocol = new SimpleWorkerProtocol({\n      sendMessage: function sendMessage(msg, transfer) {\n        _this._worker.postMessage(msg, transfer);\n      },\n      handleMessage: function handleMessage(method, args) {\n        if (typeof host[method] !== 'function') {\n          return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n        }\n        try {\n          return Promise.resolve(host[method].apply(host, args));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n    });\n    _this._protocol.setWorkerId(_this._worker.getId());\n    // Gather loader configuration\n    var loaderConfiguration = null;\n    if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n      // Get the configuration from the Monaco AMD Loader\n      loaderConfiguration = self.require.getConfig();\n    } else if (typeof self.requirejs !== 'undefined') {\n      // Get the configuration from requirejs\n      loaderConfiguration = self.requirejs.s.contexts._.config;\n    }\n    var hostMethods = types.getAllMethodNames(host);\n    // Send initialize message\n    _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [_this._worker.getId(), JSON.parse(JSON.stringify(loaderConfiguration)), moduleId, hostMethods]);\n    // Create proxy to loaded code\n    var proxyMethodRequest = function proxyMethodRequest(method, args) {\n      return _this._request(method, args);\n    };\n    _this._lazyProxy = new Promise(function (resolve, reject) {\n      lazyProxyReject = reject;\n      _this._onModuleLoaded.then(function (availableMethods) {\n        resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\n      }, function (e) {\n        reject(e);\n        _this._onError('Worker failed to load ' + moduleId, e);\n      });\n    });\n    return _this;\n  }\n  SimpleWorkerClient.prototype.getProxyObject = function () {\n    return this._lazyProxy;\n  };\n  SimpleWorkerClient.prototype._request = function (method, args) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      _this._onModuleLoaded.then(function () {\n        _this._protocol.sendMessage(method, args).then(resolve, reject);\n      }, reject);\n    });\n  };\n  SimpleWorkerClient.prototype._onError = function (message, error) {\n    console.error(message);\n    console.info(error);\n  };\n  return SimpleWorkerClient;\n}(Disposable);\nexport { SimpleWorkerClient };\n/**\r\n * Worker side\r\n */\nvar SimpleWorkerServer = /** @class */function () {\n  function SimpleWorkerServer(postMessage, requestHandlerFactory) {\n    var _this = this;\n    this._requestHandlerFactory = requestHandlerFactory;\n    this._requestHandler = null;\n    this._protocol = new SimpleWorkerProtocol({\n      sendMessage: function sendMessage(msg, transfer) {\n        postMessage(msg, transfer);\n      },\n      handleMessage: function handleMessage(method, args) {\n        return _this._handleMessage(method, args);\n      }\n    });\n  }\n  SimpleWorkerServer.prototype.onmessage = function (msg) {\n    this._protocol.handleMessage(msg);\n  };\n  SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n    if (method === INITIALIZE) {\n      return this.initialize(args[0], args[1], args[2], args[3]);\n    }\n    if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n    try {\n      return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  SimpleWorkerServer.prototype.initialize = function (workerId, loaderConfig, moduleId, hostMethods) {\n    var _this = this;\n    this._protocol.setWorkerId(workerId);\n    var proxyMethodRequest = function proxyMethodRequest(method, args) {\n      return _this._protocol.sendMessage(method, args);\n    };\n    var hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\n    if (this._requestHandlerFactory) {\n      // static request handler\n      this._requestHandler = this._requestHandlerFactory(hostProxy);\n      return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n    }\n    if (loaderConfig) {\n      // Remove 'baseUrl', handling it is beyond scope for now\n      if (typeof loaderConfig.baseUrl !== 'undefined') {\n        delete loaderConfig['baseUrl'];\n      }\n      if (typeof loaderConfig.paths !== 'undefined') {\n        if (typeof loaderConfig.paths.vs !== 'undefined') {\n          delete loaderConfig.paths['vs'];\n        }\n      }\n      // Since this is in a web worker, enable catching errors\n      loaderConfig.catchError = true;\n      self.require.config(loaderConfig);\n    }\n    return new Promise(function (resolve, reject) {\n      // Use the global require to be sure to get the global config\n      self.require([moduleId], function (module) {\n        _this._requestHandler = module.create(hostProxy);\n        if (!_this._requestHandler) {\n          reject(new Error(\"No RequestHandler!\"));\n          return;\n        }\n        resolve(types.getAllMethodNames(_this._requestHandler));\n      }, reject);\n    });\n  };\n  return SimpleWorkerServer;\n}();\nexport { SimpleWorkerServer };\n/**\r\n * Called on the worker side\r\n */\nexport function create(postMessage) {\n  return new SimpleWorkerServer(postMessage, null);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","transformErrorForSerialization","Disposable","isWeb","types","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","err","console","warn","message","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","args","_this","req","String","Promise","resolve","reject","_send","vsWorker","handleMessage","_handleMessage","msg","seq","replyMessage","reply","$isError","Error","name","stack","res","requestMessage","result","then","r","undefined","e","detail","transfer","m","i","length","ArrayBuffer","push","SimpleWorkerClient","_super","workerFactory","moduleId","host","call","lazyProxyReject","_worker","_register","_protocol","postMessage","apply","getId","loaderConfiguration","self","require","getConfig","requirejs","s","contexts","_","config","hostMethods","getAllMethodNames","_onModuleLoaded","JSON","parse","stringify","proxyMethodRequest","_request","_lazyProxy","availableMethods","createProxyObject","_onError","getProxyObject","error","info","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","onmessage","initialize","loaderConfig","hostProxy","baseUrl","paths","vs","catchError","module"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { transformErrorForSerialization } from '../errors.js';\r\nimport { Disposable } from '../lifecycle.js';\r\nimport { isWeb } from '../platform.js';\r\nimport * as types from '../types.js';\r\nvar INITIALIZE = '$initialize';\r\nvar webWorkerWarningLogged = false;\r\nexport function logOnceWebWorkerWarning(err) {\r\n    if (!isWeb) {\r\n        // running tests\r\n        return;\r\n    }\r\n    if (!webWorkerWarningLogged) {\r\n        webWorkerWarningLogged = true;\r\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\r\n    }\r\n    console.warn(err.message);\r\n}\r\nvar SimpleWorkerProtocol = /** @class */ (function () {\r\n    function SimpleWorkerProtocol(handler) {\r\n        this._workerId = -1;\r\n        this._handler = handler;\r\n        this._lastSentReq = 0;\r\n        this._pendingReplies = Object.create(null);\r\n    }\r\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\r\n        this._workerId = workerId;\r\n    };\r\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\r\n        var _this = this;\r\n        var req = String(++this._lastSentReq);\r\n        return new Promise(function (resolve, reject) {\r\n            _this._pendingReplies[req] = {\r\n                resolve: resolve,\r\n                reject: reject\r\n            };\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                req: req,\r\n                method: method,\r\n                args: args\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype.handleMessage = function (message) {\r\n        if (!message || !message.vsWorker) {\r\n            return;\r\n        }\r\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\r\n            return;\r\n        }\r\n        this._handleMessage(message);\r\n    };\r\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\r\n        var _this = this;\r\n        if (msg.seq) {\r\n            var replyMessage = msg;\r\n            if (!this._pendingReplies[replyMessage.seq]) {\r\n                console.warn('Got reply to unknown seq');\r\n                return;\r\n            }\r\n            var reply = this._pendingReplies[replyMessage.seq];\r\n            delete this._pendingReplies[replyMessage.seq];\r\n            if (replyMessage.err) {\r\n                var err = replyMessage.err;\r\n                if (replyMessage.err.$isError) {\r\n                    err = new Error();\r\n                    err.name = replyMessage.err.name;\r\n                    err.message = replyMessage.err.message;\r\n                    err.stack = replyMessage.err.stack;\r\n                }\r\n                reply.reject(err);\r\n                return;\r\n            }\r\n            reply.resolve(replyMessage.res);\r\n            return;\r\n        }\r\n        var requestMessage = msg;\r\n        var req = requestMessage.req;\r\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\r\n        result.then(function (r) {\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: r,\r\n                err: undefined\r\n            });\r\n        }, function (e) {\r\n            if (e.detail instanceof Error) {\r\n                // Loading errors have a detail property that points to the actual error\r\n                e.detail = transformErrorForSerialization(e.detail);\r\n            }\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: undefined,\r\n                err: transformErrorForSerialization(e)\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype._send = function (msg) {\r\n        var transfer = [];\r\n        if (msg.req) {\r\n            var m = msg;\r\n            for (var i = 0; i < m.args.length; i++) {\r\n                if (m.args[i] instanceof ArrayBuffer) {\r\n                    transfer.push(m.args[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var m = msg;\r\n            if (m.res instanceof ArrayBuffer) {\r\n                transfer.push(m.res);\r\n            }\r\n        }\r\n        this._handler.sendMessage(msg, transfer);\r\n    };\r\n    return SimpleWorkerProtocol;\r\n}());\r\n/**\r\n * Main thread side\r\n */\r\nvar SimpleWorkerClient = /** @class */ (function (_super) {\r\n    __extends(SimpleWorkerClient, _super);\r\n    function SimpleWorkerClient(workerFactory, moduleId, host) {\r\n        var _this = _super.call(this) || this;\r\n        var lazyProxyReject = null;\r\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\r\n            _this._protocol.handleMessage(msg);\r\n        }, function (err) {\r\n            // in Firefox, web workers fail lazily :(\r\n            // we will reject the proxy\r\n            if (lazyProxyReject) {\r\n                lazyProxyReject(err);\r\n            }\r\n        }));\r\n        _this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg, transfer) {\r\n                _this._worker.postMessage(msg, transfer);\r\n            },\r\n            handleMessage: function (method, args) {\r\n                if (typeof host[method] !== 'function') {\r\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\r\n                }\r\n                try {\r\n                    return Promise.resolve(host[method].apply(host, args));\r\n                }\r\n                catch (e) {\r\n                    return Promise.reject(e);\r\n                }\r\n            }\r\n        });\r\n        _this._protocol.setWorkerId(_this._worker.getId());\r\n        // Gather loader configuration\r\n        var loaderConfiguration = null;\r\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\r\n            // Get the configuration from the Monaco AMD Loader\r\n            loaderConfiguration = self.require.getConfig();\r\n        }\r\n        else if (typeof self.requirejs !== 'undefined') {\r\n            // Get the configuration from requirejs\r\n            loaderConfiguration = self.requirejs.s.contexts._.config;\r\n        }\r\n        var hostMethods = types.getAllMethodNames(host);\r\n        // Send initialize message\r\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\r\n            _this._worker.getId(),\r\n            JSON.parse(JSON.stringify(loaderConfiguration)),\r\n            moduleId,\r\n            hostMethods,\r\n        ]);\r\n        // Create proxy to loaded code\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._request(method, args);\r\n        };\r\n        _this._lazyProxy = new Promise(function (resolve, reject) {\r\n            lazyProxyReject = reject;\r\n            _this._onModuleLoaded.then(function (availableMethods) {\r\n                resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\r\n            }, function (e) {\r\n                reject(e);\r\n                _this._onError('Worker failed to load ' + moduleId, e);\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    SimpleWorkerClient.prototype.getProxyObject = function () {\r\n        return this._lazyProxy;\r\n    };\r\n    SimpleWorkerClient.prototype._request = function (method, args) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._onModuleLoaded.then(function () {\r\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\r\n            }, reject);\r\n        });\r\n    };\r\n    SimpleWorkerClient.prototype._onError = function (message, error) {\r\n        console.error(message);\r\n        console.info(error);\r\n    };\r\n    return SimpleWorkerClient;\r\n}(Disposable));\r\nexport { SimpleWorkerClient };\r\n/**\r\n * Worker side\r\n */\r\nvar SimpleWorkerServer = /** @class */ (function () {\r\n    function SimpleWorkerServer(postMessage, requestHandlerFactory) {\r\n        var _this = this;\r\n        this._requestHandlerFactory = requestHandlerFactory;\r\n        this._requestHandler = null;\r\n        this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg, transfer) {\r\n                postMessage(msg, transfer);\r\n            },\r\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\r\n        });\r\n    }\r\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\r\n        this._protocol.handleMessage(msg);\r\n    };\r\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\r\n        if (method === INITIALIZE) {\r\n            return this.initialize(args[0], args[1], args[2], args[3]);\r\n        }\r\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    SimpleWorkerServer.prototype.initialize = function (workerId, loaderConfig, moduleId, hostMethods) {\r\n        var _this = this;\r\n        this._protocol.setWorkerId(workerId);\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._protocol.sendMessage(method, args);\r\n        };\r\n        var hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\r\n        if (this._requestHandlerFactory) {\r\n            // static request handler\r\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\r\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\r\n        }\r\n        if (loaderConfig) {\r\n            // Remove 'baseUrl', handling it is beyond scope for now\r\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\r\n                delete loaderConfig['baseUrl'];\r\n            }\r\n            if (typeof loaderConfig.paths !== 'undefined') {\r\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\r\n                    delete loaderConfig.paths['vs'];\r\n                }\r\n            }\r\n            // Since this is in a web worker, enable catching errors\r\n            loaderConfig.catchError = true;\r\n            self.require.config(loaderConfig);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            // Use the global require to be sure to get the global config\r\n            self.require([moduleId], function (module) {\r\n                _this._requestHandler = module.create(hostProxy);\r\n                if (!_this._requestHandler) {\r\n                    reject(new Error(\"No RequestHandler!\"));\r\n                    return;\r\n                }\r\n                resolve(types.getAllMethodNames(_this._requestHandler));\r\n            }, reject);\r\n        });\r\n    };\r\n    return SimpleWorkerServer;\r\n}());\r\nexport { SimpleWorkerServer };\r\n/**\r\n * Called on the worker side\r\n */\r\nexport function create(postMessage) {\r\n    return new SimpleWorkerServer(postMessage, null);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}