{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { conf as tsConf, language as tsLanguage } from '../typescript/typescript.js';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = typeof monaco === 'undefined' ? self.monaco : monaco;\nexport var conf = tsConf;\nexport var language = {\n  // Set defaultToken to invalid to see what you do not tokenize yet\n  defaultToken: 'invalid',\n  tokenPostfix: '.js',\n  keywords: ['break', 'case', 'catch', 'class', 'continue', 'const', 'constructor', 'debugger', 'default', 'delete', 'do', 'else', 'export', 'extends', 'false', 'finally', 'for', 'from', 'function', 'get', 'if', 'import', 'in', 'instanceof', 'let', 'new', 'null', 'return', 'set', 'super', 'switch', 'symbol', 'this', 'throw', 'true', 'try', 'typeof', 'undefined', 'var', 'void', 'while', 'with', 'yield', 'async', 'await', 'of'],\n  typeKeywords: [],\n  operators: tsLanguage.operators,\n  symbols: tsLanguage.symbols,\n  escapes: tsLanguage.escapes,\n  digits: tsLanguage.digits,\n  octaldigits: tsLanguage.octaldigits,\n  binarydigits: tsLanguage.binarydigits,\n  hexdigits: tsLanguage.hexdigits,\n  regexpctl: tsLanguage.regexpctl,\n  regexpesc: tsLanguage.regexpesc,\n  tokenizer: tsLanguage.tokenizer\n};","map":{"version":3,"names":["conf","tsConf","language","tsLanguage","_monaco","monaco","self","defaultToken","tokenPostfix","keywords","typeKeywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { conf as tsConf, language as tsLanguage } from '../typescript/typescript.js';\r\n// Allow for running under nodejs/requirejs in tests\r\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\r\nexport var conf = tsConf;\r\nexport var language = {\r\n    // Set defaultToken to invalid to see what you do not tokenize yet\r\n    defaultToken: 'invalid',\r\n    tokenPostfix: '.js',\r\n    keywords: [\r\n        'break', 'case', 'catch', 'class', 'continue', 'const',\r\n        'constructor', 'debugger', 'default', 'delete', 'do', 'else',\r\n        'export', 'extends', 'false', 'finally', 'for', 'from', 'function',\r\n        'get', 'if', 'import', 'in', 'instanceof', 'let', 'new', 'null',\r\n        'return', 'set', 'super', 'switch', 'symbol', 'this', 'throw', 'true',\r\n        'try', 'typeof', 'undefined', 'var', 'void', 'while', 'with', 'yield',\r\n        'async', 'await', 'of'\r\n    ],\r\n    typeKeywords: [],\r\n    operators: tsLanguage.operators,\r\n    symbols: tsLanguage.symbols,\r\n    escapes: tsLanguage.escapes,\r\n    digits: tsLanguage.digits,\r\n    octaldigits: tsLanguage.octaldigits,\r\n    binarydigits: tsLanguage.binarydigits,\r\n    hexdigits: tsLanguage.hexdigits,\r\n    regexpctl: tsLanguage.regexpctl,\r\n    regexpesc: tsLanguage.regexpesc,\r\n    tokenizer: tsLanguage.tokenizer,\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZ,SAASA,IAAI,IAAIC,MAAM,EAAEC,QAAQ,IAAIC,UAAU,QAAQ,6BAA6B;AACpF;AACA,IAAIC,OAAO,GAAI,OAAOC,MAAM,KAAK,WAAW,GAAGC,IAAI,CAACD,MAAM,GAAGA,MAAO;AACpE,OAAO,IAAIL,IAAI,GAAGC,MAAM;AACxB,OAAO,IAAIC,QAAQ,GAAG;EAClB;EACAK,YAAY,EAAE,SAAS;EACvBC,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE,CACN,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EACtD,aAAa,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAC5D,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAClE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAC/D,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EACrE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EACrE,OAAO,EAAE,OAAO,EAAE,IAAI,CACzB;EACDC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAER,UAAU,CAACQ,SAAS;EAC/BC,OAAO,EAAET,UAAU,CAACS,OAAO;EAC3BC,OAAO,EAAEV,UAAU,CAACU,OAAO;EAC3BC,MAAM,EAAEX,UAAU,CAACW,MAAM;EACzBC,WAAW,EAAEZ,UAAU,CAACY,WAAW;EACnCC,YAAY,EAAEb,UAAU,CAACa,YAAY;EACrCC,SAAS,EAAEd,UAAU,CAACc,SAAS;EAC/BC,SAAS,EAAEf,UAAU,CAACe,SAAS;EAC/BC,SAAS,EAAEhB,UAAU,CAACgB,SAAS;EAC/BC,SAAS,EAAEjB,UAAU,CAACiB;AAC1B,CAAC"},"metadata":{},"sourceType":"module"}