{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as browser from '../../../base/browser/browser.js';\nimport { PageCoordinates } from '../editorDom.js';\nimport { PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\nimport * as dom from '../../../base/browser/dom.js';\nvar PointerHandlerLastRenderData = /** @class */function () {\n  function PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition) {\n    this.lastViewCursorsRenderData = lastViewCursorsRenderData;\n    this.lastTextareaPosition = lastTextareaPosition;\n  }\n  return PointerHandlerLastRenderData;\n}();\nexport { PointerHandlerLastRenderData };\nvar MouseTarget = /** @class */function () {\n  function MouseTarget(element, type, mouseColumn, position, range, detail) {\n    if (mouseColumn === void 0) {\n      mouseColumn = 0;\n    }\n    if (position === void 0) {\n      position = null;\n    }\n    if (range === void 0) {\n      range = null;\n    }\n    if (detail === void 0) {\n      detail = null;\n    }\n    this.element = element;\n    this.type = type;\n    this.mouseColumn = mouseColumn;\n    this.position = position;\n    if (!range && position) {\n      range = new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n    }\n    this.range = range;\n    this.detail = detail;\n  }\n  MouseTarget._typeToString = function (type) {\n    if (type === 1 /* TEXTAREA */) {\n      return 'TEXTAREA';\n    }\n    if (type === 2 /* GUTTER_GLYPH_MARGIN */) {\n      return 'GUTTER_GLYPH_MARGIN';\n    }\n    if (type === 3 /* GUTTER_LINE_NUMBERS */) {\n      return 'GUTTER_LINE_NUMBERS';\n    }\n    if (type === 4 /* GUTTER_LINE_DECORATIONS */) {\n      return 'GUTTER_LINE_DECORATIONS';\n    }\n    if (type === 5 /* GUTTER_VIEW_ZONE */) {\n      return 'GUTTER_VIEW_ZONE';\n    }\n    if (type === 6 /* CONTENT_TEXT */) {\n      return 'CONTENT_TEXT';\n    }\n    if (type === 7 /* CONTENT_EMPTY */) {\n      return 'CONTENT_EMPTY';\n    }\n    if (type === 8 /* CONTENT_VIEW_ZONE */) {\n      return 'CONTENT_VIEW_ZONE';\n    }\n    if (type === 9 /* CONTENT_WIDGET */) {\n      return 'CONTENT_WIDGET';\n    }\n    if (type === 10 /* OVERVIEW_RULER */) {\n      return 'OVERVIEW_RULER';\n    }\n    if (type === 11 /* SCROLLBAR */) {\n      return 'SCROLLBAR';\n    }\n    if (type === 12 /* OVERLAY_WIDGET */) {\n      return 'OVERLAY_WIDGET';\n    }\n    return 'UNKNOWN';\n  };\n  MouseTarget.toString = function (target) {\n    return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + target.detail;\n  };\n  MouseTarget.prototype.toString = function () {\n    return MouseTarget.toString(this);\n  };\n  return MouseTarget;\n}();\nexport { MouseTarget };\nvar ElementPath = /** @class */function () {\n  function ElementPath() {}\n  ElementPath.isTextArea = function (path) {\n    return path.length === 2 && path[0] === 3 /* OverflowGuard */ && path[1] === 6 /* TextArea */;\n  };\n\n  ElementPath.isChildOfViewLines = function (path) {\n    return path.length >= 4 && path[0] === 3 /* OverflowGuard */ && path[3] === 7 /* ViewLines */;\n  };\n\n  ElementPath.isStrictChildOfViewLines = function (path) {\n    return path.length > 4 && path[0] === 3 /* OverflowGuard */ && path[3] === 7 /* ViewLines */;\n  };\n\n  ElementPath.isChildOfScrollableElement = function (path) {\n    return path.length >= 2 && path[0] === 3 /* OverflowGuard */ && path[1] === 5 /* ScrollableElement */;\n  };\n\n  ElementPath.isChildOfMinimap = function (path) {\n    return path.length >= 2 && path[0] === 3 /* OverflowGuard */ && path[1] === 8 /* Minimap */;\n  };\n\n  ElementPath.isChildOfContentWidgets = function (path) {\n    return path.length >= 4 && path[0] === 3 /* OverflowGuard */ && path[3] === 1 /* ContentWidgets */;\n  };\n\n  ElementPath.isChildOfOverflowingContentWidgets = function (path) {\n    return path.length >= 1 && path[0] === 2 /* OverflowingContentWidgets */;\n  };\n\n  ElementPath.isChildOfOverlayWidgets = function (path) {\n    return path.length >= 2 && path[0] === 3 /* OverflowGuard */ && path[1] === 4 /* OverlayWidgets */;\n  };\n\n  return ElementPath;\n}();\nvar HitTestContext = /** @class */function () {\n  function HitTestContext(context, viewHelper, lastRenderData) {\n    this.model = context.model;\n    var options = context.configuration.options;\n    this.layoutInfo = options.get(107 /* layoutInfo */);\n    this.viewDomNode = viewHelper.viewDomNode;\n    this.lineHeight = options.get(49 /* lineHeight */);\n    this.typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\n    this.lastRenderData = lastRenderData;\n    this._context = context;\n    this._viewHelper = viewHelper;\n  }\n  HitTestContext.prototype.getZoneAtCoord = function (mouseVerticalOffset) {\n    return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n  };\n  HitTestContext.getZoneAtCoord = function (context, mouseVerticalOffset) {\n    // The target is either a view zone or the empty space after the last view-line\n    var viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n    if (viewZoneWhitespace) {\n      var viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2,\n        lineCount = context.model.getLineCount(),\n        positionBefore = null,\n        position = void 0,\n        positionAfter = null;\n      if (viewZoneWhitespace.afterLineNumber !== lineCount) {\n        // There are more lines after this view zone\n        positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n      }\n      if (viewZoneWhitespace.afterLineNumber > 0) {\n        // There are more lines above this view zone\n        positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.model.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n      }\n      if (positionAfter === null) {\n        position = positionBefore;\n      } else if (positionBefore === null) {\n        position = positionAfter;\n      } else if (mouseVerticalOffset < viewZoneMiddle) {\n        position = positionBefore;\n      } else {\n        position = positionAfter;\n      }\n      return {\n        viewZoneId: viewZoneWhitespace.id,\n        afterLineNumber: viewZoneWhitespace.afterLineNumber,\n        positionBefore: positionBefore,\n        positionAfter: positionAfter,\n        position: position\n      };\n    }\n    return null;\n  };\n  HitTestContext.prototype.getFullLineRangeAtCoord = function (mouseVerticalOffset) {\n    if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n      // Below the last line\n      var lineNumber_1 = this._context.model.getLineCount();\n      var maxLineColumn_1 = this._context.model.getLineMaxColumn(lineNumber_1);\n      return {\n        range: new EditorRange(lineNumber_1, maxLineColumn_1, lineNumber_1, maxLineColumn_1),\n        isAfterLines: true\n      };\n    }\n    var lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n    var maxLineColumn = this._context.model.getLineMaxColumn(lineNumber);\n    return {\n      range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n      isAfterLines: false\n    };\n  };\n  HitTestContext.prototype.getLineNumberAtVerticalOffset = function (mouseVerticalOffset) {\n    return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n  };\n  HitTestContext.prototype.isAfterLines = function (mouseVerticalOffset) {\n    return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n  };\n  HitTestContext.prototype.getVerticalOffsetForLineNumber = function (lineNumber) {\n    return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n  };\n  HitTestContext.prototype.findAttribute = function (element, attr) {\n    return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n  };\n  HitTestContext._findAttribute = function (element, attr, stopAt) {\n    while (element && element !== document.body) {\n      if (element.hasAttribute && element.hasAttribute(attr)) {\n        return element.getAttribute(attr);\n      }\n      if (element === stopAt) {\n        return null;\n      }\n      element = element.parentNode;\n    }\n    return null;\n  };\n  HitTestContext.prototype.getLineWidth = function (lineNumber) {\n    return this._viewHelper.getLineWidth(lineNumber);\n  };\n  HitTestContext.prototype.visibleRangeForPosition = function (lineNumber, column) {\n    return this._viewHelper.visibleRangeForPosition(lineNumber, column);\n  };\n  HitTestContext.prototype.getPositionFromDOMInfo = function (spanNode, offset) {\n    return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n  };\n  HitTestContext.prototype.getCurrentScrollTop = function () {\n    return this._context.viewLayout.getCurrentScrollTop();\n  };\n  HitTestContext.prototype.getCurrentScrollLeft = function () {\n    return this._context.viewLayout.getCurrentScrollLeft();\n  };\n  return HitTestContext;\n}();\nexport { HitTestContext };\nvar BareHitTestRequest = /** @class */function () {\n  function BareHitTestRequest(ctx, editorPos, pos) {\n    this.editorPos = editorPos;\n    this.pos = pos;\n    this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + pos.y - editorPos.y);\n    this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + pos.x - editorPos.x - ctx.layoutInfo.contentLeft;\n    this.isInMarginArea = pos.x - editorPos.x < ctx.layoutInfo.contentLeft && pos.x - editorPos.x >= ctx.layoutInfo.glyphMarginLeft;\n    this.isInContentArea = !this.isInMarginArea;\n    this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n  }\n  return BareHitTestRequest;\n}();\nvar HitTestRequest = /** @class */function (_super) {\n  __extends(HitTestRequest, _super);\n  function HitTestRequest(ctx, editorPos, pos, target) {\n    var _this = _super.call(this, ctx, editorPos, pos) || this;\n    _this._ctx = ctx;\n    if (target) {\n      _this.target = target;\n      _this.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\n    } else {\n      _this.target = null;\n      _this.targetPath = new Uint8Array(0);\n    }\n    return _this;\n  }\n  HitTestRequest.prototype.toString = function () {\n    return \"pos(\" + this.pos.x + \",\" + this.pos.y + \"), editorPos(\" + this.editorPos.x + \",\" + this.editorPos.y + \"), mouseVerticalOffset: \" + this.mouseVerticalOffset + \", mouseContentHorizontalOffset: \" + this.mouseContentHorizontalOffset + \"\\n\\ttarget: \" + (this.target ? this.target.outerHTML : null);\n  };\n  HitTestRequest.prototype.fulfill = function (type, position, range, detail) {\n    if (position === void 0) {\n      position = null;\n    }\n    if (range === void 0) {\n      range = null;\n    }\n    if (detail === void 0) {\n      detail = null;\n    }\n    var mouseColumn = this.mouseColumn;\n    if (position && position.column < this._ctx.model.getLineMaxColumn(position.lineNumber)) {\n      // Most likely, the line contains foreign decorations...\n      mouseColumn = CursorColumns.visibleColumnFromColumn(this._ctx.model.getLineContent(position.lineNumber), position.column, this._ctx.model.getOptions().tabSize) + 1;\n    }\n    return new MouseTarget(this.target, type, mouseColumn, position, range, detail);\n  };\n  HitTestRequest.prototype.withTarget = function (target) {\n    return new HitTestRequest(this._ctx, this.editorPos, this.pos, target);\n  };\n  return HitTestRequest;\n}(BareHitTestRequest);\nvar EMPTY_CONTENT_AFTER_LINES = {\n  isAfterLines: true\n};\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\n  return {\n    isAfterLines: false,\n    horizontalDistanceToText: horizontalDistanceToText\n  };\n}\nvar MouseTargetFactory = /** @class */function () {\n  function MouseTargetFactory(context, viewHelper) {\n    this._context = context;\n    this._viewHelper = viewHelper;\n  }\n  MouseTargetFactory.prototype.mouseTargetIsWidget = function (e) {\n    var t = e.target;\n    var path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n    // Is it a content widget?\n    if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n      return true;\n    }\n    // Is it an overlay widget?\n    if (ElementPath.isChildOfOverlayWidgets(path)) {\n      return true;\n    }\n    return false;\n  };\n  MouseTargetFactory.prototype.createMouseTarget = function (lastRenderData, editorPos, pos, target) {\n    var ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n    var request = new HitTestRequest(ctx, editorPos, pos, target);\n    try {\n      var r = MouseTargetFactory._createMouseTarget(ctx, request, false);\n      // console.log(r.toString());\n      return r;\n    } catch (err) {\n      // console.log(err);\n      return request.fulfill(0 /* UNKNOWN */);\n    }\n  };\n\n  MouseTargetFactory._createMouseTarget = function (ctx, request, domHitTestExecuted) {\n    // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n    // First ensure the request has a target\n    if (request.target === null) {\n      if (domHitTestExecuted) {\n        // Still no target... and we have already executed hit test...\n        return request.fulfill(0 /* UNKNOWN */);\n      }\n\n      var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n      if (hitTestResult.position) {\n        return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\n      }\n      return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n    }\n    // we know for a fact that request.target is not null\n    var resolvedRequest = request;\n    var result = null;\n    result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\n    result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n    return result || request.fulfill(0 /* UNKNOWN */);\n  };\n\n  MouseTargetFactory._hitTestContentWidget = function (ctx, request) {\n    // Is it a content widget?\n    if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n      var widgetId = ctx.findAttribute(request.target, 'widgetId');\n      if (widgetId) {\n        return request.fulfill(9 /* CONTENT_WIDGET */, null, null, widgetId);\n      } else {\n        return request.fulfill(0 /* UNKNOWN */);\n      }\n    }\n\n    return null;\n  };\n  MouseTargetFactory._hitTestOverlayWidget = function (ctx, request) {\n    // Is it an overlay widget?\n    if (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\n      var widgetId = ctx.findAttribute(request.target, 'widgetId');\n      if (widgetId) {\n        return request.fulfill(12 /* OVERLAY_WIDGET */, null, null, widgetId);\n      } else {\n        return request.fulfill(0 /* UNKNOWN */);\n      }\n    }\n\n    return null;\n  };\n  MouseTargetFactory._hitTestViewCursor = function (ctx, request) {\n    if (request.target) {\n      // Check if we've hit a painted cursor\n      var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n      for (var _i = 0, lastViewCursorsRenderData_1 = lastViewCursorsRenderData; _i < lastViewCursorsRenderData_1.length; _i++) {\n        var d = lastViewCursorsRenderData_1[_i];\n        if (request.target === d.domNode) {\n          return request.fulfill(6 /* CONTENT_TEXT */, d.position);\n        }\n      }\n    }\n    if (request.isInContentArea) {\n      // Edge has a bug when hit-testing the exact position of a cursor,\n      // instead of returning the correct dom node, it returns the\n      // first or last rendered view line dom node, therefore help it out\n      // and first check if we are on top of a cursor\n      var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n      var mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n      var mouseVerticalOffset = request.mouseVerticalOffset;\n      for (var _a = 0, lastViewCursorsRenderData_2 = lastViewCursorsRenderData; _a < lastViewCursorsRenderData_2.length; _a++) {\n        var d = lastViewCursorsRenderData_2[_a];\n        if (mouseContentHorizontalOffset < d.contentLeft) {\n          // mouse position is to the left of the cursor\n          continue;\n        }\n        if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n          // mouse position is to the right of the cursor\n          continue;\n        }\n        var cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n        if (cursorVerticalOffset <= mouseVerticalOffset && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\n          return request.fulfill(6 /* CONTENT_TEXT */, d.position);\n        }\n      }\n    }\n    return null;\n  };\n  MouseTargetFactory._hitTestViewZone = function (ctx, request) {\n    var viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n    if (viewZoneData) {\n      var mouseTargetType = request.isInContentArea ? 8 /* CONTENT_VIEW_ZONE */ : 5 /* GUTTER_VIEW_ZONE */;\n      return request.fulfill(mouseTargetType, viewZoneData.position, null, viewZoneData);\n    }\n    return null;\n  };\n  MouseTargetFactory._hitTestTextArea = function (ctx, request) {\n    // Is it the textarea?\n    if (ElementPath.isTextArea(request.targetPath)) {\n      if (ctx.lastRenderData.lastTextareaPosition) {\n        return request.fulfill(6 /* CONTENT_TEXT */, ctx.lastRenderData.lastTextareaPosition);\n      }\n      return request.fulfill(1 /* TEXTAREA */, ctx.lastRenderData.lastTextareaPosition);\n    }\n    return null;\n  };\n  MouseTargetFactory._hitTestMargin = function (ctx, request) {\n    if (request.isInMarginArea) {\n      var res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n      var pos = res.range.getStartPosition();\n      var offset = Math.abs(request.pos.x - request.editorPos.x);\n      var detail = {\n        isAfterLines: res.isAfterLines,\n        glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n        glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n        lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n        offsetX: offset\n      };\n      offset -= ctx.layoutInfo.glyphMarginLeft;\n      if (offset <= ctx.layoutInfo.glyphMarginWidth) {\n        // On the glyph margin\n        return request.fulfill(2 /* GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\n      }\n      offset -= ctx.layoutInfo.glyphMarginWidth;\n      if (offset <= ctx.layoutInfo.lineNumbersWidth) {\n        // On the line numbers\n        return request.fulfill(3 /* GUTTER_LINE_NUMBERS */, pos, res.range, detail);\n      }\n      offset -= ctx.layoutInfo.lineNumbersWidth;\n      // On the line decorations\n      return request.fulfill(4 /* GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\n    }\n    return null;\n  };\n  MouseTargetFactory._hitTestViewLines = function (ctx, request, domHitTestExecuted) {\n    if (!ElementPath.isChildOfViewLines(request.targetPath)) {\n      return null;\n    }\n    // Check if it is below any lines and any view zones\n    if (ctx.isAfterLines(request.mouseVerticalOffset)) {\n      // This most likely indicates it happened after the last view-line\n      var lineCount = ctx.model.getLineCount();\n      var maxLineColumn = ctx.model.getLineMaxColumn(lineCount);\n      return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineCount, maxLineColumn), undefined, EMPTY_CONTENT_AFTER_LINES);\n    }\n    if (domHitTestExecuted) {\n      // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n      // See https://github.com/Microsoft/vscode/issues/46942\n      if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n        var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n        if (ctx.model.getLineLength(lineNumber) === 0) {\n          var lineWidth_1 = ctx.getLineWidth(lineNumber);\n          var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth_1);\n          return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineNumber, 1), undefined, detail);\n        }\n        var lineWidth = ctx.getLineWidth(lineNumber);\n        if (request.mouseContentHorizontalOffset >= lineWidth) {\n          var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n          var pos = new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber));\n          return request.fulfill(7 /* CONTENT_EMPTY */, pos, undefined, detail);\n        }\n      }\n      // We have already executed hit test...\n      return request.fulfill(0 /* UNKNOWN */);\n    }\n\n    var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n    if (hitTestResult.position) {\n      return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\n    }\n    return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n  };\n  MouseTargetFactory._hitTestMinimap = function (ctx, request) {\n    if (ElementPath.isChildOfMinimap(request.targetPath)) {\n      var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n      var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n      return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\n    }\n    return null;\n  };\n  MouseTargetFactory._hitTestScrollbarSlider = function (ctx, request) {\n    if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n      if (request.target && request.target.nodeType === 1) {\n        var className = request.target.className;\n        if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n          var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n          var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n          return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\n        }\n      }\n    }\n    return null;\n  };\n  MouseTargetFactory._hitTestScrollbar = function (ctx, request) {\n    // Is it the overview ruler?\n    // Is it a child of the scrollable element?\n    if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n      var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n      var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n      return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\n    }\n    return null;\n  };\n  MouseTargetFactory.prototype.getMouseColumn = function (editorPos, pos) {\n    var options = this._context.configuration.options;\n    var layoutInfo = options.get(107 /* layoutInfo */);\n    var mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + pos.x - editorPos.x - layoutInfo.contentLeft;\n    return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth);\n  };\n  MouseTargetFactory._getMouseColumn = function (mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\n    if (mouseContentHorizontalOffset < 0) {\n      return 1;\n    }\n    var chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n    return chars + 1;\n  };\n  MouseTargetFactory.createMouseTargetFromHitTestPosition = function (ctx, request, lineNumber, column) {\n    var pos = new Position(lineNumber, column);\n    var lineWidth = ctx.getLineWidth(lineNumber);\n    if (request.mouseContentHorizontalOffset > lineWidth) {\n      if (browser.isEdge && pos.column === 1) {\n        // See https://github.com/Microsoft/vscode/issues/10875\n        var detail_1 = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n        return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber)), undefined, detail_1);\n      }\n      var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n      return request.fulfill(7 /* CONTENT_EMPTY */, pos, undefined, detail);\n    }\n    var visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n    if (!visibleRange) {\n      return request.fulfill(0 /* UNKNOWN */, pos);\n    }\n    var columnHorizontalOffset = visibleRange.left;\n    if (request.mouseContentHorizontalOffset === columnHorizontalOffset) {\n      return request.fulfill(6 /* CONTENT_TEXT */, pos);\n    }\n    var points = [];\n    points.push({\n      offset: visibleRange.left,\n      column: column\n    });\n    if (column > 1) {\n      var visibleRange_1 = ctx.visibleRangeForPosition(lineNumber, column - 1);\n      if (visibleRange_1) {\n        points.push({\n          offset: visibleRange_1.left,\n          column: column - 1\n        });\n      }\n    }\n    var lineMaxColumn = ctx.model.getLineMaxColumn(lineNumber);\n    if (column < lineMaxColumn) {\n      var visibleRange_2 = ctx.visibleRangeForPosition(lineNumber, column + 1);\n      if (visibleRange_2) {\n        points.push({\n          offset: visibleRange_2.left,\n          column: column + 1\n        });\n      }\n    }\n    points.sort(function (a, b) {\n      return a.offset - b.offset;\n    });\n    for (var i = 1; i < points.length; i++) {\n      var prev = points[i - 1];\n      var curr = points[i];\n      if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n        var rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n        return request.fulfill(6 /* CONTENT_TEXT */, pos, rng);\n      }\n    }\n    return request.fulfill(6 /* CONTENT_TEXT */, pos);\n  };\n  /**\r\n   * Most probably WebKit browsers and Edge\r\n   */\n  MouseTargetFactory._doHitTestWithCaretRangeFromPoint = function (ctx, request) {\n    // In Chrome, especially on Linux it is possible to click between lines,\n    // so try to adjust the `hity` below so that it lands in the center of a line\n    var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n    var lineVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n    var lineCenteredVerticalOffset = lineVerticalOffset + Math.floor(ctx.lineHeight / 2);\n    var adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n    if (adjustedPageY <= request.editorPos.y) {\n      adjustedPageY = request.editorPos.y + 1;\n    }\n    if (adjustedPageY >= request.editorPos.y + ctx.layoutInfo.height) {\n      adjustedPageY = request.editorPos.y + ctx.layoutInfo.height - 1;\n    }\n    var adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n    var r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\n    if (r.position) {\n      return r;\n    }\n    // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n    return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\n  };\n  MouseTargetFactory._actualDoHitTestWithCaretRangeFromPoint = function (ctx, coords) {\n    var shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n    var range;\n    if (shadowRoot) {\n      if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n        range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n      } else {\n        range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n      }\n    } else {\n      range = document.caretRangeFromPoint(coords.clientX, coords.clientY);\n    }\n    if (!range || !range.startContainer) {\n      return {\n        position: null,\n        hitTarget: null\n      };\n    }\n    // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n    var startContainer = range.startContainer;\n    var hitTarget = null;\n    if (startContainer.nodeType === startContainer.TEXT_NODE) {\n      // startContainer is expected to be the token text\n      var parent1 = startContainer.parentNode; // expected to be the token span\n      var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n      var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n      var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n      if (parent3ClassName === ViewLine.CLASS_NAME) {\n        var p = ctx.getPositionFromDOMInfo(parent1, range.startOffset);\n        return {\n          position: p,\n          hitTarget: null\n        };\n      } else {\n        hitTarget = startContainer.parentNode;\n      }\n    } else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n      // startContainer is expected to be the token span\n      var parent1 = startContainer.parentNode; // expected to be the view line container span\n      var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n      var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n      if (parent2ClassName === ViewLine.CLASS_NAME) {\n        var p = ctx.getPositionFromDOMInfo(startContainer, startContainer.textContent.length);\n        return {\n          position: p,\n          hitTarget: null\n        };\n      } else {\n        hitTarget = startContainer;\n      }\n    }\n    return {\n      position: null,\n      hitTarget: hitTarget\n    };\n  };\n  /**\r\n   * Most probably Gecko\r\n   */\n  MouseTargetFactory._doHitTestWithCaretPositionFromPoint = function (ctx, coords) {\n    var hitResult = document.caretPositionFromPoint(coords.clientX, coords.clientY);\n    if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n      // offsetNode is expected to be the token text\n      var parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n      var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n      var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n      var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n      if (parent3ClassName === ViewLine.CLASS_NAME) {\n        var p = ctx.getPositionFromDOMInfo(hitResult.offsetNode.parentNode, hitResult.offset);\n        return {\n          position: p,\n          hitTarget: null\n        };\n      } else {\n        return {\n          position: null,\n          hitTarget: hitResult.offsetNode.parentNode\n        };\n      }\n    }\n    return {\n      position: null,\n      hitTarget: hitResult.offsetNode\n    };\n  };\n  /**\r\n   * Most probably IE\r\n   */\n  MouseTargetFactory._doHitTestWithMoveToPoint = function (ctx, coords) {\n    var resultPosition = null;\n    var resultHitTarget = null;\n    var textRange = document.body.createTextRange();\n    try {\n      textRange.moveToPoint(coords.clientX, coords.clientY);\n    } catch (err) {\n      return {\n        position: null,\n        hitTarget: null\n      };\n    }\n    textRange.collapse(true);\n    // Now, let's do our best to figure out what we hit :)\n    var parentElement = textRange ? textRange.parentElement() : null;\n    var parent1 = parentElement ? parentElement.parentNode : null;\n    var parent2 = parent1 ? parent1.parentNode : null;\n    var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : '';\n    if (parent2ClassName === ViewLine.CLASS_NAME) {\n      var rangeToContainEntireSpan = textRange.duplicate();\n      rangeToContainEntireSpan.moveToElementText(parentElement);\n      rangeToContainEntireSpan.setEndPoint('EndToStart', textRange);\n      resultPosition = ctx.getPositionFromDOMInfo(parentElement, rangeToContainEntireSpan.text.length);\n      // Move range out of the span node, IE doesn't like having many ranges in\n      // the same spot and will act badly for lines containing dashes ('-')\n      rangeToContainEntireSpan.moveToElementText(ctx.viewDomNode);\n    } else {\n      // Looks like we've hit the hover or something foreign\n      resultHitTarget = parentElement;\n    }\n    // Move range out of the span node, IE doesn't like having many ranges in\n    // the same spot and will act badly for lines containing dashes ('-')\n    textRange.moveToElementText(ctx.viewDomNode);\n    return {\n      position: resultPosition,\n      hitTarget: resultHitTarget\n    };\n  };\n  MouseTargetFactory._doHitTest = function (ctx, request) {\n    // State of the art (18.10.2012):\n    // The spec says browsers should support document.caretPositionFromPoint, but nobody implemented it (http://dev.w3.org/csswg/cssom-view/)\n    // Gecko:\n    //    - they tried to implement it once, but failed: https://bugzilla.mozilla.org/show_bug.cgi?id=654352\n    //    - however, they do give out rangeParent/rangeOffset properties on mouse events\n    // Webkit:\n    //    - they have implemented a previous version of the spec which was using document.caretRangeFromPoint\n    // IE:\n    //    - they have a proprietary method on ranges, moveToPoint: https://msdn.microsoft.com/en-us/library/ie/ms536632(v=vs.85).aspx\n    // 24.08.2016: Edge has added WebKit's document.caretRangeFromPoint, but it is quite buggy\n    //    - when hit testing the cursor it returns the first or the last line in the viewport\n    //    - it inconsistently hits text nodes or span nodes, while WebKit only hits text nodes\n    //    - when toggling render whitespace on, and hit testing in the empty content after a line, it always hits offset 0 of the first span of the line\n    // Thank you browsers for making this so 'easy' :)\n    if (typeof document.caretRangeFromPoint === 'function') {\n      return this._doHitTestWithCaretRangeFromPoint(ctx, request);\n    } else if (document.caretPositionFromPoint) {\n      return this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\n    } else if (document.body.createTextRange) {\n      return this._doHitTestWithMoveToPoint(ctx, request.pos.toClientCoordinates());\n    }\n    return {\n      position: null,\n      hitTarget: null\n    };\n  };\n  return MouseTargetFactory;\n}();\nexport { MouseTargetFactory };\nexport function shadowCaretRangeFromPoint(shadowRoot, x, y) {\n  var range = document.createRange();\n  // Get the element under the point\n  var el = shadowRoot.elementFromPoint(x, y);\n  if (el !== null) {\n    // Get the last child of the element until its firstChild is a text node\n    // This assumes that the pointer is on the right of the line, out of the tokens\n    // and that we want to get the offset of the last token of the line\n    while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE) {\n      el = el.lastChild;\n    }\n    // Grab its rect\n    var rect = el.getBoundingClientRect();\n    // And its font\n    var font = window.getComputedStyle(el, null).getPropertyValue('font');\n    // And also its txt content\n    var text = el.innerText;\n    // Position the pixel cursor at the left of the element\n    var pixelCursor = rect.left;\n    var offset = 0;\n    var step = void 0;\n    // If the point is on the right of the box put the cursor after the last character\n    if (x > rect.left + rect.width) {\n      offset = text.length;\n    } else {\n      var charWidthReader = CharWidthReader.getInstance();\n      // Goes through all the characters of the innerText, and checks if the x of the point\n      // belongs to the character.\n      for (var i = 0; i < text.length + 1; i++) {\n        // The step is half the width of the character\n        step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n        // Move to the center of the character\n        pixelCursor += step;\n        // If the x of the point is smaller that the position of the cursor, the point is over that character\n        if (x < pixelCursor) {\n          offset = i;\n          break;\n        }\n        // Move between the current character and the next\n        pixelCursor += step;\n      }\n    }\n    // Creates a range with the text node of the element and set the offset found\n    range.setStart(el.firstChild, offset);\n    range.setEnd(el.firstChild, offset);\n  }\n  return range;\n}\nvar CharWidthReader = /** @class */function () {\n  function CharWidthReader() {\n    this._cache = {};\n    this._canvas = document.createElement('canvas');\n  }\n  CharWidthReader.getInstance = function () {\n    if (!CharWidthReader._INSTANCE) {\n      CharWidthReader._INSTANCE = new CharWidthReader();\n    }\n    return CharWidthReader._INSTANCE;\n  };\n  CharWidthReader.prototype.getCharWidth = function (char, font) {\n    var cacheKey = char + font;\n    if (this._cache[cacheKey]) {\n      return this._cache[cacheKey];\n    }\n    var context = this._canvas.getContext('2d');\n    context.font = font;\n    var metrics = context.measureText(char);\n    var width = metrics.width;\n    this._cache[cacheKey] = width;\n    return width;\n  };\n  CharWidthReader._INSTANCE = null;\n  return CharWidthReader;\n}();","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","browser","PageCoordinates","PartFingerprints","ViewLine","Position","Range","EditorRange","CursorColumns","dom","PointerHandlerLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","MouseTarget","element","type","mouseColumn","position","range","detail","lineNumber","column","_typeToString","toString","target","ElementPath","isTextArea","path","length","isChildOfViewLines","isStrictChildOfViewLines","isChildOfScrollableElement","isChildOfMinimap","isChildOfContentWidgets","isChildOfOverflowingContentWidgets","isChildOfOverlayWidgets","HitTestContext","context","viewHelper","lastRenderData","model","options","configuration","layoutInfo","get","viewDomNode","lineHeight","typicalHalfwidthCharacterWidth","_context","_viewHelper","getZoneAtCoord","mouseVerticalOffset","viewZoneWhitespace","viewLayout","getWhitespaceAtVerticalOffset","viewZoneMiddle","verticalOffset","height","lineCount","getLineCount","positionBefore","positionAfter","afterLineNumber","getLineMaxColumn","viewZoneId","id","getFullLineRangeAtCoord","isAfterLines","lineNumber_1","maxLineColumn_1","getLineNumberAtVerticalOffset","maxLineColumn","getVerticalOffsetForLineNumber","findAttribute","attr","_findAttribute","stopAt","document","body","hasAttribute","getAttribute","parentNode","getLineWidth","visibleRangeForPosition","getPositionFromDOMInfo","spanNode","offset","getCurrentScrollTop","getCurrentScrollLeft","BareHitTestRequest","ctx","editorPos","pos","Math","max","y","mouseContentHorizontalOffset","x","contentLeft","isInMarginArea","glyphMarginLeft","isInContentArea","MouseTargetFactory","_getMouseColumn","HitTestRequest","_super","_this","call","_ctx","targetPath","collect","Uint8Array","outerHTML","fulfill","visibleColumnFromColumn","getLineContent","getOptions","tabSize","withTarget","EMPTY_CONTENT_AFTER_LINES","createEmptyContentDataInLines","horizontalDistanceToText","mouseTargetIsWidget","e","t","createMouseTarget","request","r","_createMouseTarget","err","domHitTestExecuted","hitTestResult","_doHitTest","createMouseTargetFromHitTestPosition","hitTarget","resolvedRequest","result","_hitTestContentWidget","_hitTestOverlayWidget","_hitTestMinimap","_hitTestScrollbarSlider","_hitTestViewZone","_hitTestMargin","_hitTestViewCursor","_hitTestTextArea","_hitTestViewLines","_hitTestScrollbar","widgetId","_i","lastViewCursorsRenderData_1","domNode","_a","lastViewCursorsRenderData_2","width","cursorVerticalOffset","viewZoneData","mouseTargetType","res","getStartPosition","abs","glyphMarginWidth","lineNumbersWidth","offsetX","undefined","getLineLength","lineWidth_1","lineWidth","possibleLineNumber","maxColumn","nodeType","className","test","getMouseColumn","chars","round","isEdge","detail_1","visibleRange","columnHorizontalOffset","left","points","push","visibleRange_1","lineMaxColumn","visibleRange_2","sort","a","i","prev","curr","rng","_doHitTestWithCaretRangeFromPoint","lineVerticalOffset","lineCenteredVerticalOffset","floor","adjustedPageY","adjustedPage","_actualDoHitTestWithCaretRangeFromPoint","toClientCoordinates","coords","shadowRoot","getShadowRoot","caretRangeFromPoint","shadowCaretRangeFromPoint","clientX","clientY","startContainer","TEXT_NODE","parent1","parent2","parent3","parent3ClassName","ELEMENT_NODE","CLASS_NAME","startOffset","parent2ClassName","textContent","_doHitTestWithCaretPositionFromPoint","hitResult","caretPositionFromPoint","offsetNode","_doHitTestWithMoveToPoint","resultPosition","resultHitTarget","textRange","createTextRange","moveToPoint","collapse","parentElement","rangeToContainEntireSpan","duplicate","moveToElementText","setEndPoint","text","createRange","el","elementFromPoint","firstChild","lastChild","rect","getBoundingClientRect","font","window","getComputedStyle","getPropertyValue","innerText","pixelCursor","step","charWidthReader","CharWidthReader","getInstance","getCharWidth","charAt","setStart","setEnd","_cache","_canvas","createElement","_INSTANCE","char","cacheKey","getContext","metrics","measureText"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport { PageCoordinates } from '../editorDom.js';\r\nimport { PartFingerprints } from '../view/viewPart.js';\r\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range as EditorRange } from '../../common/core/range.js';\r\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nvar PointerHandlerLastRenderData = /** @class */ (function () {\r\n    function PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition) {\r\n        this.lastViewCursorsRenderData = lastViewCursorsRenderData;\r\n        this.lastTextareaPosition = lastTextareaPosition;\r\n    }\r\n    return PointerHandlerLastRenderData;\r\n}());\r\nexport { PointerHandlerLastRenderData };\r\nvar MouseTarget = /** @class */ (function () {\r\n    function MouseTarget(element, type, mouseColumn, position, range, detail) {\r\n        if (mouseColumn === void 0) { mouseColumn = 0; }\r\n        if (position === void 0) { position = null; }\r\n        if (range === void 0) { range = null; }\r\n        if (detail === void 0) { detail = null; }\r\n        this.element = element;\r\n        this.type = type;\r\n        this.mouseColumn = mouseColumn;\r\n        this.position = position;\r\n        if (!range && position) {\r\n            range = new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        }\r\n        this.range = range;\r\n        this.detail = detail;\r\n    }\r\n    MouseTarget._typeToString = function (type) {\r\n        if (type === 1 /* TEXTAREA */) {\r\n            return 'TEXTAREA';\r\n        }\r\n        if (type === 2 /* GUTTER_GLYPH_MARGIN */) {\r\n            return 'GUTTER_GLYPH_MARGIN';\r\n        }\r\n        if (type === 3 /* GUTTER_LINE_NUMBERS */) {\r\n            return 'GUTTER_LINE_NUMBERS';\r\n        }\r\n        if (type === 4 /* GUTTER_LINE_DECORATIONS */) {\r\n            return 'GUTTER_LINE_DECORATIONS';\r\n        }\r\n        if (type === 5 /* GUTTER_VIEW_ZONE */) {\r\n            return 'GUTTER_VIEW_ZONE';\r\n        }\r\n        if (type === 6 /* CONTENT_TEXT */) {\r\n            return 'CONTENT_TEXT';\r\n        }\r\n        if (type === 7 /* CONTENT_EMPTY */) {\r\n            return 'CONTENT_EMPTY';\r\n        }\r\n        if (type === 8 /* CONTENT_VIEW_ZONE */) {\r\n            return 'CONTENT_VIEW_ZONE';\r\n        }\r\n        if (type === 9 /* CONTENT_WIDGET */) {\r\n            return 'CONTENT_WIDGET';\r\n        }\r\n        if (type === 10 /* OVERVIEW_RULER */) {\r\n            return 'OVERVIEW_RULER';\r\n        }\r\n        if (type === 11 /* SCROLLBAR */) {\r\n            return 'SCROLLBAR';\r\n        }\r\n        if (type === 12 /* OVERLAY_WIDGET */) {\r\n            return 'OVERLAY_WIDGET';\r\n        }\r\n        return 'UNKNOWN';\r\n    };\r\n    MouseTarget.toString = function (target) {\r\n        return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + target.detail;\r\n    };\r\n    MouseTarget.prototype.toString = function () {\r\n        return MouseTarget.toString(this);\r\n    };\r\n    return MouseTarget;\r\n}());\r\nexport { MouseTarget };\r\nvar ElementPath = /** @class */ (function () {\r\n    function ElementPath() {\r\n    }\r\n    ElementPath.isTextArea = function (path) {\r\n        return (path.length === 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 6 /* TextArea */);\r\n    };\r\n    ElementPath.isChildOfViewLines = function (path) {\r\n        return (path.length >= 4\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[3] === 7 /* ViewLines */);\r\n    };\r\n    ElementPath.isStrictChildOfViewLines = function (path) {\r\n        return (path.length > 4\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[3] === 7 /* ViewLines */);\r\n    };\r\n    ElementPath.isChildOfScrollableElement = function (path) {\r\n        return (path.length >= 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 5 /* ScrollableElement */);\r\n    };\r\n    ElementPath.isChildOfMinimap = function (path) {\r\n        return (path.length >= 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 8 /* Minimap */);\r\n    };\r\n    ElementPath.isChildOfContentWidgets = function (path) {\r\n        return (path.length >= 4\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[3] === 1 /* ContentWidgets */);\r\n    };\r\n    ElementPath.isChildOfOverflowingContentWidgets = function (path) {\r\n        return (path.length >= 1\r\n            && path[0] === 2 /* OverflowingContentWidgets */);\r\n    };\r\n    ElementPath.isChildOfOverlayWidgets = function (path) {\r\n        return (path.length >= 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 4 /* OverlayWidgets */);\r\n    };\r\n    return ElementPath;\r\n}());\r\nvar HitTestContext = /** @class */ (function () {\r\n    function HitTestContext(context, viewHelper, lastRenderData) {\r\n        this.model = context.model;\r\n        var options = context.configuration.options;\r\n        this.layoutInfo = options.get(107 /* layoutInfo */);\r\n        this.viewDomNode = viewHelper.viewDomNode;\r\n        this.lineHeight = options.get(49 /* lineHeight */);\r\n        this.typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        this.lastRenderData = lastRenderData;\r\n        this._context = context;\r\n        this._viewHelper = viewHelper;\r\n    }\r\n    HitTestContext.prototype.getZoneAtCoord = function (mouseVerticalOffset) {\r\n        return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\r\n    };\r\n    HitTestContext.getZoneAtCoord = function (context, mouseVerticalOffset) {\r\n        // The target is either a view zone or the empty space after the last view-line\r\n        var viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\r\n        if (viewZoneWhitespace) {\r\n            var viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2, lineCount = context.model.getLineCount(), positionBefore = null, position = void 0, positionAfter = null;\r\n            if (viewZoneWhitespace.afterLineNumber !== lineCount) {\r\n                // There are more lines after this view zone\r\n                positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\r\n            }\r\n            if (viewZoneWhitespace.afterLineNumber > 0) {\r\n                // There are more lines above this view zone\r\n                positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.model.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\r\n            }\r\n            if (positionAfter === null) {\r\n                position = positionBefore;\r\n            }\r\n            else if (positionBefore === null) {\r\n                position = positionAfter;\r\n            }\r\n            else if (mouseVerticalOffset < viewZoneMiddle) {\r\n                position = positionBefore;\r\n            }\r\n            else {\r\n                position = positionAfter;\r\n            }\r\n            return {\r\n                viewZoneId: viewZoneWhitespace.id,\r\n                afterLineNumber: viewZoneWhitespace.afterLineNumber,\r\n                positionBefore: positionBefore,\r\n                positionAfter: positionAfter,\r\n                position: position\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    HitTestContext.prototype.getFullLineRangeAtCoord = function (mouseVerticalOffset) {\r\n        if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\r\n            // Below the last line\r\n            var lineNumber_1 = this._context.model.getLineCount();\r\n            var maxLineColumn_1 = this._context.model.getLineMaxColumn(lineNumber_1);\r\n            return {\r\n                range: new EditorRange(lineNumber_1, maxLineColumn_1, lineNumber_1, maxLineColumn_1),\r\n                isAfterLines: true\r\n            };\r\n        }\r\n        var lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\r\n        var maxLineColumn = this._context.model.getLineMaxColumn(lineNumber);\r\n        return {\r\n            range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\r\n            isAfterLines: false\r\n        };\r\n    };\r\n    HitTestContext.prototype.getLineNumberAtVerticalOffset = function (mouseVerticalOffset) {\r\n        return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\r\n    };\r\n    HitTestContext.prototype.isAfterLines = function (mouseVerticalOffset) {\r\n        return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\r\n    };\r\n    HitTestContext.prototype.getVerticalOffsetForLineNumber = function (lineNumber) {\r\n        return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\r\n    };\r\n    HitTestContext.prototype.findAttribute = function (element, attr) {\r\n        return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\r\n    };\r\n    HitTestContext._findAttribute = function (element, attr, stopAt) {\r\n        while (element && element !== document.body) {\r\n            if (element.hasAttribute && element.hasAttribute(attr)) {\r\n                return element.getAttribute(attr);\r\n            }\r\n            if (element === stopAt) {\r\n                return null;\r\n            }\r\n            element = element.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n    HitTestContext.prototype.getLineWidth = function (lineNumber) {\r\n        return this._viewHelper.getLineWidth(lineNumber);\r\n    };\r\n    HitTestContext.prototype.visibleRangeForPosition = function (lineNumber, column) {\r\n        return this._viewHelper.visibleRangeForPosition(lineNumber, column);\r\n    };\r\n    HitTestContext.prototype.getPositionFromDOMInfo = function (spanNode, offset) {\r\n        return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\r\n    };\r\n    HitTestContext.prototype.getCurrentScrollTop = function () {\r\n        return this._context.viewLayout.getCurrentScrollTop();\r\n    };\r\n    HitTestContext.prototype.getCurrentScrollLeft = function () {\r\n        return this._context.viewLayout.getCurrentScrollLeft();\r\n    };\r\n    return HitTestContext;\r\n}());\r\nexport { HitTestContext };\r\nvar BareHitTestRequest = /** @class */ (function () {\r\n    function BareHitTestRequest(ctx, editorPos, pos) {\r\n        this.editorPos = editorPos;\r\n        this.pos = pos;\r\n        this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + pos.y - editorPos.y);\r\n        this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + pos.x - editorPos.x - ctx.layoutInfo.contentLeft;\r\n        this.isInMarginArea = (pos.x - editorPos.x < ctx.layoutInfo.contentLeft && pos.x - editorPos.x >= ctx.layoutInfo.glyphMarginLeft);\r\n        this.isInContentArea = !this.isInMarginArea;\r\n        this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\r\n    }\r\n    return BareHitTestRequest;\r\n}());\r\nvar HitTestRequest = /** @class */ (function (_super) {\r\n    __extends(HitTestRequest, _super);\r\n    function HitTestRequest(ctx, editorPos, pos, target) {\r\n        var _this = _super.call(this, ctx, editorPos, pos) || this;\r\n        _this._ctx = ctx;\r\n        if (target) {\r\n            _this.target = target;\r\n            _this.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\r\n        }\r\n        else {\r\n            _this.target = null;\r\n            _this.targetPath = new Uint8Array(0);\r\n        }\r\n        return _this;\r\n    }\r\n    HitTestRequest.prototype.toString = function () {\r\n        return \"pos(\" + this.pos.x + \",\" + this.pos.y + \"), editorPos(\" + this.editorPos.x + \",\" + this.editorPos.y + \"), mouseVerticalOffset: \" + this.mouseVerticalOffset + \", mouseContentHorizontalOffset: \" + this.mouseContentHorizontalOffset + \"\\n\\ttarget: \" + (this.target ? this.target.outerHTML : null);\r\n    };\r\n    HitTestRequest.prototype.fulfill = function (type, position, range, detail) {\r\n        if (position === void 0) { position = null; }\r\n        if (range === void 0) { range = null; }\r\n        if (detail === void 0) { detail = null; }\r\n        var mouseColumn = this.mouseColumn;\r\n        if (position && position.column < this._ctx.model.getLineMaxColumn(position.lineNumber)) {\r\n            // Most likely, the line contains foreign decorations...\r\n            mouseColumn = CursorColumns.visibleColumnFromColumn(this._ctx.model.getLineContent(position.lineNumber), position.column, this._ctx.model.getOptions().tabSize) + 1;\r\n        }\r\n        return new MouseTarget(this.target, type, mouseColumn, position, range, detail);\r\n    };\r\n    HitTestRequest.prototype.withTarget = function (target) {\r\n        return new HitTestRequest(this._ctx, this.editorPos, this.pos, target);\r\n    };\r\n    return HitTestRequest;\r\n}(BareHitTestRequest));\r\nvar EMPTY_CONTENT_AFTER_LINES = { isAfterLines: true };\r\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\r\n    return {\r\n        isAfterLines: false,\r\n        horizontalDistanceToText: horizontalDistanceToText\r\n    };\r\n}\r\nvar MouseTargetFactory = /** @class */ (function () {\r\n    function MouseTargetFactory(context, viewHelper) {\r\n        this._context = context;\r\n        this._viewHelper = viewHelper;\r\n    }\r\n    MouseTargetFactory.prototype.mouseTargetIsWidget = function (e) {\r\n        var t = e.target;\r\n        var path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\r\n        // Is it a content widget?\r\n        if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\r\n            return true;\r\n        }\r\n        // Is it an overlay widget?\r\n        if (ElementPath.isChildOfOverlayWidgets(path)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    MouseTargetFactory.prototype.createMouseTarget = function (lastRenderData, editorPos, pos, target) {\r\n        var ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\r\n        var request = new HitTestRequest(ctx, editorPos, pos, target);\r\n        try {\r\n            var r = MouseTargetFactory._createMouseTarget(ctx, request, false);\r\n            // console.log(r.toString());\r\n            return r;\r\n        }\r\n        catch (err) {\r\n            // console.log(err);\r\n            return request.fulfill(0 /* UNKNOWN */);\r\n        }\r\n    };\r\n    MouseTargetFactory._createMouseTarget = function (ctx, request, domHitTestExecuted) {\r\n        // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\r\n        // First ensure the request has a target\r\n        if (request.target === null) {\r\n            if (domHitTestExecuted) {\r\n                // Still no target... and we have already executed hit test...\r\n                return request.fulfill(0 /* UNKNOWN */);\r\n            }\r\n            var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\r\n            if (hitTestResult.position) {\r\n                return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\r\n            }\r\n            return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\r\n        }\r\n        // we know for a fact that request.target is not null\r\n        var resolvedRequest = request;\r\n        var result = null;\r\n        result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\r\n        result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\r\n        return (result || request.fulfill(0 /* UNKNOWN */));\r\n    };\r\n    MouseTargetFactory._hitTestContentWidget = function (ctx, request) {\r\n        // Is it a content widget?\r\n        if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\r\n            var widgetId = ctx.findAttribute(request.target, 'widgetId');\r\n            if (widgetId) {\r\n                return request.fulfill(9 /* CONTENT_WIDGET */, null, null, widgetId);\r\n            }\r\n            else {\r\n                return request.fulfill(0 /* UNKNOWN */);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestOverlayWidget = function (ctx, request) {\r\n        // Is it an overlay widget?\r\n        if (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\r\n            var widgetId = ctx.findAttribute(request.target, 'widgetId');\r\n            if (widgetId) {\r\n                return request.fulfill(12 /* OVERLAY_WIDGET */, null, null, widgetId);\r\n            }\r\n            else {\r\n                return request.fulfill(0 /* UNKNOWN */);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestViewCursor = function (ctx, request) {\r\n        if (request.target) {\r\n            // Check if we've hit a painted cursor\r\n            var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\r\n            for (var _i = 0, lastViewCursorsRenderData_1 = lastViewCursorsRenderData; _i < lastViewCursorsRenderData_1.length; _i++) {\r\n                var d = lastViewCursorsRenderData_1[_i];\r\n                if (request.target === d.domNode) {\r\n                    return request.fulfill(6 /* CONTENT_TEXT */, d.position);\r\n                }\r\n            }\r\n        }\r\n        if (request.isInContentArea) {\r\n            // Edge has a bug when hit-testing the exact position of a cursor,\r\n            // instead of returning the correct dom node, it returns the\r\n            // first or last rendered view line dom node, therefore help it out\r\n            // and first check if we are on top of a cursor\r\n            var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\r\n            var mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\r\n            var mouseVerticalOffset = request.mouseVerticalOffset;\r\n            for (var _a = 0, lastViewCursorsRenderData_2 = lastViewCursorsRenderData; _a < lastViewCursorsRenderData_2.length; _a++) {\r\n                var d = lastViewCursorsRenderData_2[_a];\r\n                if (mouseContentHorizontalOffset < d.contentLeft) {\r\n                    // mouse position is to the left of the cursor\r\n                    continue;\r\n                }\r\n                if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\r\n                    // mouse position is to the right of the cursor\r\n                    continue;\r\n                }\r\n                var cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\r\n                if (cursorVerticalOffset <= mouseVerticalOffset\r\n                    && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\r\n                    return request.fulfill(6 /* CONTENT_TEXT */, d.position);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestViewZone = function (ctx, request) {\r\n        var viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\r\n        if (viewZoneData) {\r\n            var mouseTargetType = (request.isInContentArea ? 8 /* CONTENT_VIEW_ZONE */ : 5 /* GUTTER_VIEW_ZONE */);\r\n            return request.fulfill(mouseTargetType, viewZoneData.position, null, viewZoneData);\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestTextArea = function (ctx, request) {\r\n        // Is it the textarea?\r\n        if (ElementPath.isTextArea(request.targetPath)) {\r\n            if (ctx.lastRenderData.lastTextareaPosition) {\r\n                return request.fulfill(6 /* CONTENT_TEXT */, ctx.lastRenderData.lastTextareaPosition);\r\n            }\r\n            return request.fulfill(1 /* TEXTAREA */, ctx.lastRenderData.lastTextareaPosition);\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestMargin = function (ctx, request) {\r\n        if (request.isInMarginArea) {\r\n            var res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\r\n            var pos = res.range.getStartPosition();\r\n            var offset = Math.abs(request.pos.x - request.editorPos.x);\r\n            var detail = {\r\n                isAfterLines: res.isAfterLines,\r\n                glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\r\n                glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\r\n                lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\r\n                offsetX: offset\r\n            };\r\n            offset -= ctx.layoutInfo.glyphMarginLeft;\r\n            if (offset <= ctx.layoutInfo.glyphMarginWidth) {\r\n                // On the glyph margin\r\n                return request.fulfill(2 /* GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\r\n            }\r\n            offset -= ctx.layoutInfo.glyphMarginWidth;\r\n            if (offset <= ctx.layoutInfo.lineNumbersWidth) {\r\n                // On the line numbers\r\n                return request.fulfill(3 /* GUTTER_LINE_NUMBERS */, pos, res.range, detail);\r\n            }\r\n            offset -= ctx.layoutInfo.lineNumbersWidth;\r\n            // On the line decorations\r\n            return request.fulfill(4 /* GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestViewLines = function (ctx, request, domHitTestExecuted) {\r\n        if (!ElementPath.isChildOfViewLines(request.targetPath)) {\r\n            return null;\r\n        }\r\n        // Check if it is below any lines and any view zones\r\n        if (ctx.isAfterLines(request.mouseVerticalOffset)) {\r\n            // This most likely indicates it happened after the last view-line\r\n            var lineCount = ctx.model.getLineCount();\r\n            var maxLineColumn = ctx.model.getLineMaxColumn(lineCount);\r\n            return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineCount, maxLineColumn), undefined, EMPTY_CONTENT_AFTER_LINES);\r\n        }\r\n        if (domHitTestExecuted) {\r\n            // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\r\n            // See https://github.com/Microsoft/vscode/issues/46942\r\n            if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\r\n                var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n                if (ctx.model.getLineLength(lineNumber) === 0) {\r\n                    var lineWidth_1 = ctx.getLineWidth(lineNumber);\r\n                    var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth_1);\r\n                    return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineNumber, 1), undefined, detail);\r\n                }\r\n                var lineWidth = ctx.getLineWidth(lineNumber);\r\n                if (request.mouseContentHorizontalOffset >= lineWidth) {\r\n                    var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\r\n                    var pos = new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber));\r\n                    return request.fulfill(7 /* CONTENT_EMPTY */, pos, undefined, detail);\r\n                }\r\n            }\r\n            // We have already executed hit test...\r\n            return request.fulfill(0 /* UNKNOWN */);\r\n        }\r\n        var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\r\n        if (hitTestResult.position) {\r\n            return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\r\n        }\r\n        return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\r\n    };\r\n    MouseTargetFactory._hitTestMinimap = function (ctx, request) {\r\n        if (ElementPath.isChildOfMinimap(request.targetPath)) {\r\n            var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n            var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\r\n            return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestScrollbarSlider = function (ctx, request) {\r\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\r\n            if (request.target && request.target.nodeType === 1) {\r\n                var className = request.target.className;\r\n                if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\r\n                    var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n                    var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\r\n                    return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestScrollbar = function (ctx, request) {\r\n        // Is it the overview ruler?\r\n        // Is it a child of the scrollable element?\r\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\r\n            var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n            var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\r\n            return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory.prototype.getMouseColumn = function (editorPos, pos) {\r\n        var options = this._context.configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        var mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + pos.x - editorPos.x - layoutInfo.contentLeft;\r\n        return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth);\r\n    };\r\n    MouseTargetFactory._getMouseColumn = function (mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\r\n        if (mouseContentHorizontalOffset < 0) {\r\n            return 1;\r\n        }\r\n        var chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\r\n        return (chars + 1);\r\n    };\r\n    MouseTargetFactory.createMouseTargetFromHitTestPosition = function (ctx, request, lineNumber, column) {\r\n        var pos = new Position(lineNumber, column);\r\n        var lineWidth = ctx.getLineWidth(lineNumber);\r\n        if (request.mouseContentHorizontalOffset > lineWidth) {\r\n            if (browser.isEdge && pos.column === 1) {\r\n                // See https://github.com/Microsoft/vscode/issues/10875\r\n                var detail_1 = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\r\n                return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber)), undefined, detail_1);\r\n            }\r\n            var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\r\n            return request.fulfill(7 /* CONTENT_EMPTY */, pos, undefined, detail);\r\n        }\r\n        var visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\r\n        if (!visibleRange) {\r\n            return request.fulfill(0 /* UNKNOWN */, pos);\r\n        }\r\n        var columnHorizontalOffset = visibleRange.left;\r\n        if (request.mouseContentHorizontalOffset === columnHorizontalOffset) {\r\n            return request.fulfill(6 /* CONTENT_TEXT */, pos);\r\n        }\r\n        var points = [];\r\n        points.push({ offset: visibleRange.left, column: column });\r\n        if (column > 1) {\r\n            var visibleRange_1 = ctx.visibleRangeForPosition(lineNumber, column - 1);\r\n            if (visibleRange_1) {\r\n                points.push({ offset: visibleRange_1.left, column: column - 1 });\r\n            }\r\n        }\r\n        var lineMaxColumn = ctx.model.getLineMaxColumn(lineNumber);\r\n        if (column < lineMaxColumn) {\r\n            var visibleRange_2 = ctx.visibleRangeForPosition(lineNumber, column + 1);\r\n            if (visibleRange_2) {\r\n                points.push({ offset: visibleRange_2.left, column: column + 1 });\r\n            }\r\n        }\r\n        points.sort(function (a, b) { return a.offset - b.offset; });\r\n        for (var i = 1; i < points.length; i++) {\r\n            var prev = points[i - 1];\r\n            var curr = points[i];\r\n            if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\r\n                var rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\r\n                return request.fulfill(6 /* CONTENT_TEXT */, pos, rng);\r\n            }\r\n        }\r\n        return request.fulfill(6 /* CONTENT_TEXT */, pos);\r\n    };\r\n    /**\r\n     * Most probably WebKit browsers and Edge\r\n     */\r\n    MouseTargetFactory._doHitTestWithCaretRangeFromPoint = function (ctx, request) {\r\n        // In Chrome, especially on Linux it is possible to click between lines,\r\n        // so try to adjust the `hity` below so that it lands in the center of a line\r\n        var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n        var lineVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\r\n        var lineCenteredVerticalOffset = lineVerticalOffset + Math.floor(ctx.lineHeight / 2);\r\n        var adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\r\n        if (adjustedPageY <= request.editorPos.y) {\r\n            adjustedPageY = request.editorPos.y + 1;\r\n        }\r\n        if (adjustedPageY >= request.editorPos.y + ctx.layoutInfo.height) {\r\n            adjustedPageY = request.editorPos.y + ctx.layoutInfo.height - 1;\r\n        }\r\n        var adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\r\n        var r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\r\n        if (r.position) {\r\n            return r;\r\n        }\r\n        // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\r\n        return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\r\n    };\r\n    MouseTargetFactory._actualDoHitTestWithCaretRangeFromPoint = function (ctx, coords) {\r\n        var shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\r\n        var range;\r\n        if (shadowRoot) {\r\n            if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\r\n                range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\r\n            }\r\n            else {\r\n                range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\r\n            }\r\n        }\r\n        else {\r\n            range = document.caretRangeFromPoint(coords.clientX, coords.clientY);\r\n        }\r\n        if (!range || !range.startContainer) {\r\n            return {\r\n                position: null,\r\n                hitTarget: null\r\n            };\r\n        }\r\n        // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\r\n        var startContainer = range.startContainer;\r\n        var hitTarget = null;\r\n        if (startContainer.nodeType === startContainer.TEXT_NODE) {\r\n            // startContainer is expected to be the token text\r\n            var parent1 = startContainer.parentNode; // expected to be the token span\r\n            var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\r\n            var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\r\n            var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\r\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\r\n                var p = ctx.getPositionFromDOMInfo(parent1, range.startOffset);\r\n                return {\r\n                    position: p,\r\n                    hitTarget: null\r\n                };\r\n            }\r\n            else {\r\n                hitTarget = startContainer.parentNode;\r\n            }\r\n        }\r\n        else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\r\n            // startContainer is expected to be the token span\r\n            var parent1 = startContainer.parentNode; // expected to be the view line container span\r\n            var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\r\n            var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\r\n            if (parent2ClassName === ViewLine.CLASS_NAME) {\r\n                var p = ctx.getPositionFromDOMInfo(startContainer, startContainer.textContent.length);\r\n                return {\r\n                    position: p,\r\n                    hitTarget: null\r\n                };\r\n            }\r\n            else {\r\n                hitTarget = startContainer;\r\n            }\r\n        }\r\n        return {\r\n            position: null,\r\n            hitTarget: hitTarget\r\n        };\r\n    };\r\n    /**\r\n     * Most probably Gecko\r\n     */\r\n    MouseTargetFactory._doHitTestWithCaretPositionFromPoint = function (ctx, coords) {\r\n        var hitResult = document.caretPositionFromPoint(coords.clientX, coords.clientY);\r\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\r\n            // offsetNode is expected to be the token text\r\n            var parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\r\n            var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\r\n            var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\r\n            var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\r\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\r\n                var p = ctx.getPositionFromDOMInfo(hitResult.offsetNode.parentNode, hitResult.offset);\r\n                return {\r\n                    position: p,\r\n                    hitTarget: null\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    position: null,\r\n                    hitTarget: hitResult.offsetNode.parentNode\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            position: null,\r\n            hitTarget: hitResult.offsetNode\r\n        };\r\n    };\r\n    /**\r\n     * Most probably IE\r\n     */\r\n    MouseTargetFactory._doHitTestWithMoveToPoint = function (ctx, coords) {\r\n        var resultPosition = null;\r\n        var resultHitTarget = null;\r\n        var textRange = document.body.createTextRange();\r\n        try {\r\n            textRange.moveToPoint(coords.clientX, coords.clientY);\r\n        }\r\n        catch (err) {\r\n            return {\r\n                position: null,\r\n                hitTarget: null\r\n            };\r\n        }\r\n        textRange.collapse(true);\r\n        // Now, let's do our best to figure out what we hit :)\r\n        var parentElement = textRange ? textRange.parentElement() : null;\r\n        var parent1 = parentElement ? parentElement.parentNode : null;\r\n        var parent2 = parent1 ? parent1.parentNode : null;\r\n        var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : '';\r\n        if (parent2ClassName === ViewLine.CLASS_NAME) {\r\n            var rangeToContainEntireSpan = textRange.duplicate();\r\n            rangeToContainEntireSpan.moveToElementText(parentElement);\r\n            rangeToContainEntireSpan.setEndPoint('EndToStart', textRange);\r\n            resultPosition = ctx.getPositionFromDOMInfo(parentElement, rangeToContainEntireSpan.text.length);\r\n            // Move range out of the span node, IE doesn't like having many ranges in\r\n            // the same spot and will act badly for lines containing dashes ('-')\r\n            rangeToContainEntireSpan.moveToElementText(ctx.viewDomNode);\r\n        }\r\n        else {\r\n            // Looks like we've hit the hover or something foreign\r\n            resultHitTarget = parentElement;\r\n        }\r\n        // Move range out of the span node, IE doesn't like having many ranges in\r\n        // the same spot and will act badly for lines containing dashes ('-')\r\n        textRange.moveToElementText(ctx.viewDomNode);\r\n        return {\r\n            position: resultPosition,\r\n            hitTarget: resultHitTarget\r\n        };\r\n    };\r\n    MouseTargetFactory._doHitTest = function (ctx, request) {\r\n        // State of the art (18.10.2012):\r\n        // The spec says browsers should support document.caretPositionFromPoint, but nobody implemented it (http://dev.w3.org/csswg/cssom-view/)\r\n        // Gecko:\r\n        //    - they tried to implement it once, but failed: https://bugzilla.mozilla.org/show_bug.cgi?id=654352\r\n        //    - however, they do give out rangeParent/rangeOffset properties on mouse events\r\n        // Webkit:\r\n        //    - they have implemented a previous version of the spec which was using document.caretRangeFromPoint\r\n        // IE:\r\n        //    - they have a proprietary method on ranges, moveToPoint: https://msdn.microsoft.com/en-us/library/ie/ms536632(v=vs.85).aspx\r\n        // 24.08.2016: Edge has added WebKit's document.caretRangeFromPoint, but it is quite buggy\r\n        //    - when hit testing the cursor it returns the first or the last line in the viewport\r\n        //    - it inconsistently hits text nodes or span nodes, while WebKit only hits text nodes\r\n        //    - when toggling render whitespace on, and hit testing in the empty content after a line, it always hits offset 0 of the first span of the line\r\n        // Thank you browsers for making this so 'easy' :)\r\n        if (typeof document.caretRangeFromPoint === 'function') {\r\n            return this._doHitTestWithCaretRangeFromPoint(ctx, request);\r\n        }\r\n        else if (document.caretPositionFromPoint) {\r\n            return this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\r\n        }\r\n        else if (document.body.createTextRange) {\r\n            return this._doHitTestWithMoveToPoint(ctx, request.pos.toClientCoordinates());\r\n        }\r\n        return {\r\n            position: null,\r\n            hitTarget: null\r\n        };\r\n    };\r\n    return MouseTargetFactory;\r\n}());\r\nexport { MouseTargetFactory };\r\nexport function shadowCaretRangeFromPoint(shadowRoot, x, y) {\r\n    var range = document.createRange();\r\n    // Get the element under the point\r\n    var el = shadowRoot.elementFromPoint(x, y);\r\n    if (el !== null) {\r\n        // Get the last child of the element until its firstChild is a text node\r\n        // This assumes that the pointer is on the right of the line, out of the tokens\r\n        // and that we want to get the offset of the last token of the line\r\n        while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE) {\r\n            el = el.lastChild;\r\n        }\r\n        // Grab its rect\r\n        var rect = el.getBoundingClientRect();\r\n        // And its font\r\n        var font = window.getComputedStyle(el, null).getPropertyValue('font');\r\n        // And also its txt content\r\n        var text = el.innerText;\r\n        // Position the pixel cursor at the left of the element\r\n        var pixelCursor = rect.left;\r\n        var offset = 0;\r\n        var step = void 0;\r\n        // If the point is on the right of the box put the cursor after the last character\r\n        if (x > rect.left + rect.width) {\r\n            offset = text.length;\r\n        }\r\n        else {\r\n            var charWidthReader = CharWidthReader.getInstance();\r\n            // Goes through all the characters of the innerText, and checks if the x of the point\r\n            // belongs to the character.\r\n            for (var i = 0; i < text.length + 1; i++) {\r\n                // The step is half the width of the character\r\n                step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\r\n                // Move to the center of the character\r\n                pixelCursor += step;\r\n                // If the x of the point is smaller that the position of the cursor, the point is over that character\r\n                if (x < pixelCursor) {\r\n                    offset = i;\r\n                    break;\r\n                }\r\n                // Move between the current character and the next\r\n                pixelCursor += step;\r\n            }\r\n        }\r\n        // Creates a range with the text node of the element and set the offset found\r\n        range.setStart(el.firstChild, offset);\r\n        range.setEnd(el.firstChild, offset);\r\n    }\r\n    return range;\r\n}\r\nvar CharWidthReader = /** @class */ (function () {\r\n    function CharWidthReader() {\r\n        this._cache = {};\r\n        this._canvas = document.createElement('canvas');\r\n    }\r\n    CharWidthReader.getInstance = function () {\r\n        if (!CharWidthReader._INSTANCE) {\r\n            CharWidthReader._INSTANCE = new CharWidthReader();\r\n        }\r\n        return CharWidthReader._INSTANCE;\r\n    };\r\n    CharWidthReader.prototype.getCharWidth = function (char, font) {\r\n        var cacheKey = char + font;\r\n        if (this._cache[cacheKey]) {\r\n            return this._cache[cacheKey];\r\n        }\r\n        var context = this._canvas.getContext('2d');\r\n        context.font = font;\r\n        var metrics = context.measureText(char);\r\n        var width = metrics.width;\r\n        this._cache[cacheKey] = width;\r\n        return width;\r\n    };\r\n    CharWidthReader._INSTANCE = null;\r\n    return CharWidthReader;\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}