{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\r\n * Returns an array which contains all values that reside\r\n * in the given set.\r\n */\nexport function values(from) {\n  var result = [];\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      result.push(from[key]);\n    }\n  }\n  return result;\n}\nexport function first(from) {\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      return from[key];\n    }\n  }\n  return undefined;\n}\n/**\r\n * Iterates over each entry in the provided set. The iterator allows\r\n * to remove elements and will stop when the callback returns {{false}}.\r\n */\nexport function forEach(from, callback) {\n  var _loop_1 = function _loop_1(key) {\n    if (hasOwnProperty.call(from, key)) {\n      var result = callback({\n        key: key,\n        value: from[key]\n      }, function () {\n        delete from[key];\n      });\n      if (result === false) {\n        return {\n          value: void 0\n        };\n      }\n    }\n  };\n  for (var key in from) {\n    var state_1 = _loop_1(key);\n    if (typeof state_1 === \"object\") return state_1.value;\n  }\n}\nvar SetMap = /** @class */function () {\n  function SetMap() {\n    this.map = new Map();\n  }\n  SetMap.prototype.add = function (key, value) {\n    var values = this.map.get(key);\n    if (!values) {\n      values = new Set();\n      this.map.set(key, values);\n    }\n    values.add(value);\n  };\n  SetMap.prototype.delete = function (key, value) {\n    var values = this.map.get(key);\n    if (!values) {\n      return;\n    }\n    values.delete(value);\n    if (values.size === 0) {\n      this.map.delete(key);\n    }\n  };\n  SetMap.prototype.forEach = function (key, fn) {\n    var values = this.map.get(key);\n    if (!values) {\n      return;\n    }\n    values.forEach(fn);\n  };\n  return SetMap;\n}();\nexport { SetMap };","map":{"version":3,"names":["hasOwnProperty","Object","prototype","values","from","result","key","call","push","first","undefined","forEach","callback","_loop_1","value","state_1","SetMap","map","Map","add","get","Set","set","delete","size","fn"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/collections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/**\r\n * Returns an array which contains all values that reside\r\n * in the given set.\r\n */\r\nexport function values(from) {\r\n    var result = [];\r\n    for (var key in from) {\r\n        if (hasOwnProperty.call(from, key)) {\r\n            result.push(from[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function first(from) {\r\n    for (var key in from) {\r\n        if (hasOwnProperty.call(from, key)) {\r\n            return from[key];\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * Iterates over each entry in the provided set. The iterator allows\r\n * to remove elements and will stop when the callback returns {{false}}.\r\n */\r\nexport function forEach(from, callback) {\r\n    var _loop_1 = function (key) {\r\n        if (hasOwnProperty.call(from, key)) {\r\n            var result = callback({ key: key, value: from[key] }, function () {\r\n                delete from[key];\r\n            });\r\n            if (result === false) {\r\n                return { value: void 0 };\r\n            }\r\n        }\r\n    };\r\n    for (var key in from) {\r\n        var state_1 = _loop_1(key);\r\n        if (typeof state_1 === \"object\")\r\n            return state_1.value;\r\n    }\r\n}\r\nvar SetMap = /** @class */ (function () {\r\n    function SetMap() {\r\n        this.map = new Map();\r\n    }\r\n    SetMap.prototype.add = function (key, value) {\r\n        var values = this.map.get(key);\r\n        if (!values) {\r\n            values = new Set();\r\n            this.map.set(key, values);\r\n        }\r\n        values.add(value);\r\n    };\r\n    SetMap.prototype.delete = function (key, value) {\r\n        var values = this.map.get(key);\r\n        if (!values) {\r\n            return;\r\n        }\r\n        values.delete(value);\r\n        if (values.size === 0) {\r\n            this.map.delete(key);\r\n        }\r\n    };\r\n    SetMap.prototype.forEach = function (key, fn) {\r\n        var values = this.map.get(key);\r\n        if (!values) {\r\n            return;\r\n        }\r\n        values.forEach(fn);\r\n    };\r\n    return SetMap;\r\n}());\r\nexport { SetMap };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}