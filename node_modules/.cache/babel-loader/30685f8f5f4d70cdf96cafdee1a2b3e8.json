{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Program\\\\TargetVarCreation\\\\TargetVarCreationUpdation.js\";\nimport React, { createRef } from 'react';\nimport { Modal, Button, Row, Col, Select, Empty, Divider, message } from 'antd';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport { MappingDatas } from '../../TreeView/getMappingDatas';\nimport { errorModal, successModal, showProgress, hideProgress, CallServerPost, successModalCallback, isNullishObject } from '../../Utility/sharedUtility';\nvar Option = Select.Option;\nvar thisObj = {};\nvar TargetVarCreationUpdation = /*#__PURE__*/function (_React$Component) {\n  _inherits(TargetVarCreationUpdation, _React$Component);\n  var _super = _createSuper(TargetVarCreationUpdation);\n  function TargetVarCreationUpdation(props) {\n    var _this;\n    _classCallCheck(this, TargetVarCreationUpdation);\n    _this = _super.call(this, props);\n    _this.getData = function () {\n      showProgress();\n      var values = {\n        Domain: _this.props.tar_Domain,\n        StudyID: JSON.parse(sessionStorage.getItem(\"studyDetails\")).studyID\n      };\n      CallServerPost('MappingOperations/GetDirectTarget', values).then(function (response) {\n        hideProgress();\n        if (response.status == 1) {\n          thisObj.setState({\n            data: _toConsumableArray(response.value),\n            datasetData: JSON.stringify(response.value),\n            tar_Domain: thisObj.props.tar_Domain\n          });\n        } else {\n          errorModal(response.message);\n        }\n      });\n    };\n    _this.tableClear = function () {\n      try {\n        //Initialize value \n        //Whenever selcted Domain has changed , table needs to be refreshed\n        if (thisObj.TableRef.current) {\n          var T_Insatnce = thisObj.TableRef.current.hotInstance;\n          var record = T_Insatnce.getSourceData();\n          record.length > 0 && T_Insatnce.alter('remove_row', 0, record.length);\n          T_Insatnce.getPlugin('Filters').clearConditions();\n          T_Insatnce.getPlugin('Filters').filter();\n          T_Insatnce.scrollViewportTo(0, 0);\n        }\n        //END of table update\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    _this.tableFilterClear = function () {\n      try {\n        var T_Insatnce = thisObj.TableRef.current.hotInstance;\n        T_Insatnce.getPlugin('Filters').clearConditions();\n        T_Insatnce.getPlugin('Filters').filter();\n        T_Insatnce.render();\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    _this.prev = function () {\n      //Go to previous step\n      _this.props.prev();\n    };\n    _this.addRow = function () {\n      try {\n        _this.tableFilterClear();\n        var _assertThisInitialize = _assertThisInitialized(_this),\n          TableRef = _assertThisInitialize.TableRef;\n        var data = _this.state.data;\n        var t_instance = TableRef.current.hotInstance;\n        t_instance.alter('insert_row', data.length);\n        t_instance.render();\n        _this.setState({\n          data: t_instance.getSourceData()\n        });\n      } catch (e) {\n        //console.log(e)\n      }\n    };\n    _this.form_Column = function () {\n      var tar_Variables = _this.props.tar_Variables;\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n        TableRef = _assertThisInitialize2.TableRef;\n      var t_instance = TableRef.current && TableRef.current.hotInstance;\n      var col = [];\n      (tar_Variables || []).filter(function (va) {\n        col.push({\n          title: va.variableName,\n          data: va.variableName,\n          type: _this.findDatatype(va),\n          classname: \"htCenter htMiddle\"\n        });\n      });\n      t_instance && t_instance.render();\n      return col;\n    };\n    _this.form_edit_column = function () {\n      var data = _this.state.data;\n      var readOnly = _this.props.readOnly;\n      if (data.length == 0) return [];\n      var Frst_Columns = [];\n      Object.keys(data[0]).map(function (colname) {\n        if (colname.toUpperCase() !== \"ROW_NUM\") {\n          Frst_Columns.push({\n            title: colname ? colname.toUpperCase() : \"Col\",\n            data: colname,\n            readOnly: readOnly,\n            classname: \"htCenter htMiddle\"\n          });\n        }\n      });\n      return Frst_Columns;\n    };\n    _this.findDatatype = function (variable) {\n      var type = variable[\"dataTypeText\"];\n      switch (type) {\n        case \"Char\":\n        case \"char\":\n          return \"text\";\n        case \"Num\":\n        case \"num\":\n          return \"numeric\";\n        default:\n          return \"text\";\n      }\n    };\n    _this.cancel = function () {\n      _this.props.cancel();\n    };\n    _this.create = function () {\n      var _this$state = _this.state,\n        datasetData = _this$state.datasetData,\n        tar_Domain = _this$state.tar_Domain,\n        sel_cdiscDataStdDomainMetadataID = _this$state.sel_cdiscDataStdDomainMetadataID;\n      var T_Insatnce = thisObj.TableRef.current.hotInstance;\n      var record = T_Insatnce.getSourceData();\n\n      //filter only variable which is not empty/null\n      var variables = [];\n      record && typeof record === \"object\" && record.map(function (va_obj) {\n        var vari = Object.keys(va_obj);\n        //filter variable's which have valid values and not null/undefined/\"\"\n        var v_obj = {};\n        (vari || []).map(function (va_name) {\n          if (va_obj[va_name] && va_obj[va_name] != \"\") {\n            v_obj[va_name] = va_obj[va_name];\n          }\n        });\n        //Push the obj if the object have valid values\n        Object.keys(v_obj).length > 0 && variables.push(v_obj);\n      });\n      if (variables.length > 0) {\n        if (JSON.stringify(variables) == datasetData) {\n          message.destroy();\n          message.error(\"No changes to update!\");\n          return;\n        }\n        var values = {\n          Domain: tar_Domain,\n          cdiscDataStdDomainMetadataID: sel_cdiscDataStdDomainMetadataID,\n          data: variables,\n          StudyID: JSON.parse(sessionStorage.getItem(\"studyDetails\")).studyID,\n          UpdatedBy: JSON.parse(sessionStorage.userProfile).userID\n        };\n        showProgress();\n        CallServerPost('MappingOperations/CreateTarget', values).then(function (response) {\n          if (response.status == 1) {\n            hideProgress();\n            if (thisObj.state.isEdit) {\n              successModalCallback(\"Dataset Updated Successfully.\", thisObj.getData);\n            } else {\n              successModalCallback(\"Dataset Created Successfully.\", function () {\n                thisObj.props.cancel(true);\n              });\n            }\n          } else {\n            hideProgress();\n            errorModal(response.message);\n          }\n        });\n      } else {\n        hideProgress();\n        errorModal(\"No data available!\");\n      }\n    };\n    _this.resetData = function () {\n      try {\n        var datasetData = _this.state.datasetData;\n        _this.setState({\n          data: JSON.parse(datasetData)\n        });\n      } catch (e) {\n        //console.log(e)\n      }\n    };\n    _this.state = {\n      data: [],\n      tar_Domain: \"\",\n      tar_Variables: [],\n      sel_cdiscDataStdDomainMetadataID: -1,\n      datasetData: [],\n      canceling: false,\n      isEdit: false\n    };\n    _this.TableRef = createRef();\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(TargetVarCreationUpdation, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      var readOnly = this.props.readOnly;\n      //Table 2 Column \n      var Sec_Column = this.state.isEdit ? this.form_edit_column() : this.form_Column();\n      var hght = this.state.isEdit ? \"calc(100vh - 220px)\" : \"calc(100vh - 175px)\";\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(HotTable, {\n        id: \"AlterStdVariable_Table\",\n        className: \"AlterVariable_Table_TD\",\n        height: Sec_Column.length > 0 ? hght : \"0px\",\n        licenseKey: \"non-commercial-and-evaluation\",\n        viewportRowRenderingOffsetnumber: 10,\n        ref: this.TableRef,\n        settings: {\n          filters: true,\n          stretchH: 'all',\n          wordWrap: true,\n          editable: false,\n          readOnly: false,\n          rowHeaders: true,\n          columns: Sec_Column,\n          autoColumnSize: true,\n          contextMenu: true,\n          allowRemoveRow: true,\n          copyPaste: true,\n          data: data,\n          dropdownMenu: ['filter_by_condition', 'filter_by_value', 'filter_action_bar']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Empty, {\n        style: {\n          display: Sec_Column.length > 0 ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        style: {\n          margin: \"5px 0px 10px 0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, !this.state.isEdit && /*#__PURE__*/React.createElement(Button, {\n        key: \"back\",\n        name: \"PopupCancel\",\n        style: {\n          float: 'left'\n        },\n        onClick: this.cancel,\n        className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      }, \"Cancel\"), !readOnly && /*#__PURE__*/React.createElement(Button, {\n        key: \"submit\",\n        name: \"PopupSave\",\n        style: {\n          float: 'right',\n          marginLeft: 5\n        },\n        onClick: this.create,\n        className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-primary saveBtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }, this.state.isEdit ? \"Update\" : \"Create\"), this.state.isEdit && !readOnly && /*#__PURE__*/React.createElement(Button, {\n        key: \"reset\",\n        name: \"reset\",\n        style: {\n          float: 'right',\n          marginLeft: 5\n        },\n        className: \"ant-btn ant-btn-primary\",\n        onClick: this.resetData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }\n      }, \"Reset\"), !this.state.isEdit && /*#__PURE__*/React.createElement(Button, {\n        key: \"Prev\",\n        name: \"Prev\",\n        style: {\n          float: 'right',\n          marginLeft: 5\n        },\n        className: \"ant-btn ant-btn-primary\",\n        onClick: this.prev,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }\n      }, \"Previous\"), !readOnly && /*#__PURE__*/React.createElement(Button, {\n        key: \"addrow\",\n        name: \"addrow\",\n        style: {\n          float: 'right'\n        },\n        className: \"ant-btn ant-btn-primary tar_var_create\",\n        onClick: this.addRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }\n      }, \"Add Row\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(new_props, curr_state) {\n      if (new_props.stepNo == 1) {\n        if (new_props.tar_Domain != curr_state.tar_Domain) {\n          //Initialize Table \n          //Whenever selcted Domain has changed , table needs to be refreshed\n          thisObj.tableClear();\n          //END\n          if (new_props.isEdit) {\n            thisObj.getData(new_props.tar_Domain);\n            return {\n              data: [],\n              tar_Domain: \"\",\n              canceling: false,\n              tar_Variables: [],\n              sel_cdiscDataStdDomainMetadataID: -1,\n              isEdit: new_props.isEdit\n            };\n          }\n          thisObj.setState({\n            data: [],\n            tar_Domain: new_props.tar_Domain,\n            tar_Variables: new_props.tar_Variables,\n            sel_cdiscDataStdDomainMetadataID: new_props.cdiscDataStdDomainMetadataID,\n            isEdit: new_props.isEdit\n          }, function () {\n            thisObj.addRow();\n            //Update scroll to the initial position\n            var T_Insatnce = thisObj.TableRef.current.hotInstance;\n            T_Insatnce.scrollViewportTo(0, 0);\n          });\n        } else if (new_props.tar_Variables.length != curr_state.tar_Variables.length) {\n          //Whenever any variable is unchecked , the filter needs to be updated since the table could be filtered by an unchecked column\n          thisObj.tableFilterClear();\n        }\n      } else if (new_props.canceling && !curr_state.canceling) {\n        //Initialize Table \n        //Whenever click cancel,table needs to be refreshed\n        thisObj.tableClear();\n        //END\n\n        return {\n          data: [],\n          tar_Domain: \"\",\n          canceling: true,\n          tar_Variables: [],\n          sel_cdiscDataStdDomainMetadataID: -1,\n          isEdit: new_props.isEdit\n        };\n      }\n    }\n  }]);\n  return TargetVarCreationUpdation;\n}(React.Component);\nexport { TargetVarCreationUpdation as default };","map":{"version":3,"names":["React","createRef","Modal","Button","Row","Col","Select","Empty","Divider","message","HotTable","MappingDatas","errorModal","successModal","showProgress","hideProgress","CallServerPost","successModalCallback","isNullishObject","Option","thisObj","TargetVarCreationUpdation","props","getData","values","Domain","tar_Domain","StudyID","JSON","parse","sessionStorage","getItem","studyID","then","response","status","setState","data","value","datasetData","stringify","tableClear","TableRef","current","T_Insatnce","hotInstance","record","getSourceData","length","alter","getPlugin","clearConditions","filter","scrollViewportTo","e","console","log","tableFilterClear","render","prev","addRow","state","t_instance","form_Column","tar_Variables","col","va","push","title","variableName","type","findDatatype","classname","form_edit_column","readOnly","Frst_Columns","Object","keys","map","colname","toUpperCase","variable","cancel","create","sel_cdiscDataStdDomainMetadataID","variables","va_obj","vari","v_obj","va_name","destroy","error","cdiscDataStdDomainMetadataID","UpdatedBy","userProfile","userID","isEdit","resetData","canceling","Sec_Column","hght","filters","stretchH","wordWrap","editable","rowHeaders","columns","autoColumnSize","contextMenu","allowRemoveRow","copyPaste","dropdownMenu","display","margin","float","marginLeft","new_props","curr_state","stepNo","Component"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Program/TargetVarCreation/TargetVarCreationUpdation.js"],"sourcesContent":["import React, { createRef } from 'react';\nimport { Modal, Button, Row, Col, Select, Empty, Divider, message } from 'antd';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport { MappingDatas } from '../../TreeView/getMappingDatas';\nimport { errorModal, successModal, showProgress, hideProgress, CallServerPost, successModalCallback, isNullishObject } from '../../Utility/sharedUtility';\n\nlet Option = Select.Option;\nlet thisObj = {};\nexport default class TargetVarCreationUpdation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state =\n        {\n            data: [],\n            tar_Domain: \"\",\n            tar_Variables: [],\n            sel_cdiscDataStdDomainMetadataID: -1,\n            datasetData: [],\n            canceling: false,\n            isEdit: false\n        }\n\n\n        this.TableRef = createRef();\n        thisObj = this;\n    }\n\n\n    static getDerivedStateFromProps(new_props, curr_state) {\n        if (new_props.stepNo == 1) {\n            if (new_props.tar_Domain != curr_state.tar_Domain) {\n                //Initialize Table \n                //Whenever selcted Domain has changed , table needs to be refreshed\n                thisObj.tableClear();\n                //END\n                if (new_props.isEdit) {\n                    thisObj.getData(new_props.tar_Domain);\n                    return {\n                        data: [],\n                        tar_Domain: \"\",\n                        canceling: false,\n                        tar_Variables: [],\n                        sel_cdiscDataStdDomainMetadataID: -1,\n                        isEdit: new_props.isEdit\n                    };\r\n                }\n                thisObj.setState({\n                    data: [],\n                    tar_Domain: new_props.tar_Domain,\n                    tar_Variables: new_props.tar_Variables,\n                    sel_cdiscDataStdDomainMetadataID: new_props.cdiscDataStdDomainMetadataID,\n                    isEdit: new_props.isEdit\n                }, () => {\n                    thisObj.addRow();\n                    //Update scroll to the initial position\n                    let T_Insatnce = thisObj.TableRef.current.hotInstance;\n                    T_Insatnce.scrollViewportTo(0, 0);\n                });\n            }\n            else if (new_props.tar_Variables.length != curr_state.tar_Variables.length) {\n                //Whenever any variable is unchecked , the filter needs to be updated since the table could be filtered by an unchecked column\n                thisObj.tableFilterClear();\n            }\n        } else if (new_props.canceling && !curr_state.canceling) {\n            //Initialize Table \n            //Whenever click cancel,table needs to be refreshed\n            thisObj.tableClear();\n            //END\n\n            return {\n                data: [],\n                tar_Domain: \"\",\n                canceling: true,\n                tar_Variables: [],\n                sel_cdiscDataStdDomainMetadataID: -1,\n                isEdit: new_props.isEdit\n            }\n        }\n    }\n\n    getData = () => {\n\n        showProgress();\n        var values = {\n            Domain: this.props.tar_Domain,\n            StudyID: JSON.parse(sessionStorage.getItem(\"studyDetails\")).studyID\n        };\n        CallServerPost('MappingOperations/GetDirectTarget', values)\n            .then(\n                function (response) {\n                    hideProgress();\n                    if (response.status == 1) {\n                       \n                        thisObj.setState({\r\n                            data: [...response.value],\n                            datasetData: JSON.stringify(response.value),\n                            tar_Domain: thisObj.props.tar_Domain\n                        });\n                    } else {\n                        errorModal(response.message);\n                    }\n                });\n    }\n\n    //Table clear and update to initiale stage\n    tableClear = () => {\n        try {\n            //Initialize value \n            //Whenever selcted Domain has changed , table needs to be refreshed\n            if (thisObj.TableRef.current) {\n                let T_Insatnce = thisObj.TableRef.current.hotInstance;\n                let record = T_Insatnce.getSourceData();\n                record.length > 0 && T_Insatnce.alter('remove_row', 0, record.length);\n                T_Insatnce.getPlugin('Filters').clearConditions();\n                T_Insatnce.getPlugin('Filters').filter();\n                T_Insatnce.scrollViewportTo(0, 0);\n            }\n            //END of table update\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    //Table clear and update to initiale stage\n    tableFilterClear = () => {\n        try {\n            let T_Insatnce = thisObj.TableRef.current.hotInstance;\n            T_Insatnce.getPlugin('Filters').clearConditions();\n            T_Insatnce.getPlugin('Filters').filter();\n            T_Insatnce.render();\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    //When Click Prev button\n    prev = () => {\n        //Go to previous step\n        this.props.prev();\n    };\n\n\n    //Add Row \n    addRow = () => {\n        try {\n            this.tableFilterClear();\n            let { TableRef } = this;\n            let { data } = this.state;\n            let t_instance = TableRef.current.hotInstance;\n            t_instance.alter('insert_row', data.length);\n\n            t_instance.render();\n            this.setState({ data: t_instance.getSourceData() })\n        }\n        catch (e) {\n            //console.log(e)\n        }\n    }\n\n    //Form column by selected variable record\n    form_Column = () => {\n        let { tar_Variables } = this.props;\n        let { TableRef } = this;\n        let t_instance = TableRef.current && TableRef.current.hotInstance;\n\n        let col = [];\n        (tar_Variables || []).filter(va => {\n            col.push({\n                title: va.variableName,\n                data: va.variableName,\n                type: this.findDatatype(va),\n                classname: \"htCenter htMiddle\"\n            })\n        });\n        t_instance && t_instance.render();\n        return col;\n    }\n\n    form_edit_column = () => {\n        let { data } = this.state;\n        let { readOnly } = this.props;\n        if (data.length == 0) return [];\n        let Frst_Columns = [];\n\n\n        Object.keys(data[0]).map(colname => {\n            if (colname.toUpperCase() !== \"ROW_NUM\") {\n                Frst_Columns.push({\n                    title: colname ? colname.toUpperCase() : \"Col\",\n                    data: colname,\n                    readOnly: readOnly,\n                    classname: \"htCenter htMiddle\"\n                })\r\n            }\r\n        });\n        return Frst_Columns;\r\n    }\n\n    //Find data type of the column.\n    findDatatype = (variable) => {\n        let type = variable[\"dataTypeText\"];\n        switch (type) {\n            case \"Char\":\n            case \"char\":\n                return \"text\";\n            case \"Num\":\n            case \"num\":\n                return \"numeric\";\n            default:\n                return \"text\";\n        }\n    }\n\n\n    //Modal Cancel\n    //Go back to program page\n    cancel = () => {\n        this.props.cancel();\n    }\n\n    //Create\n    create = () => {\n        let { datasetData, tar_Domain, sel_cdiscDataStdDomainMetadataID } = this.state;\n\n        let T_Insatnce = thisObj.TableRef.current.hotInstance;\n        let record = T_Insatnce.getSourceData();\n\n        //filter only variable which is not empty/null\n        let variables = [];\n        (record && typeof record === \"object\") &&\n            record.map(va_obj => {\n\n                let vari = Object.keys(va_obj);\n                //filter variable's which have valid values and not null/undefined/\"\"\n                let v_obj = {};\n                (vari || []).map((va_name) => {\n\n                    if (va_obj[va_name] && va_obj[va_name] != \"\") {\n                        v_obj[va_name] = va_obj[va_name];\n                    }\n                });\n                //Push the obj if the object have valid values\n                Object.keys(v_obj).length > 0 && variables.push(v_obj);\n            });\n        if (variables.length > 0) {\n\n            if (JSON.stringify(variables) == datasetData) {\n                message.destroy();\n                message.error(\"No changes to update!\");\r\n                return;\r\n            }\n            var values = {\n                Domain: tar_Domain,\n                cdiscDataStdDomainMetadataID: sel_cdiscDataStdDomainMetadataID,\n                data: variables,\n                StudyID: JSON.parse(sessionStorage.getItem(\"studyDetails\")).studyID,\n                UpdatedBy: JSON.parse(sessionStorage.userProfile).userID\n            };\n\n            showProgress();\n            CallServerPost('MappingOperations/CreateTarget', values)\n                .then(\n                    function (response) {\n                        if (response.status == 1) {\n                            hideProgress();\n                            if (thisObj.state.isEdit) {\n                                successModalCallback(\"Dataset Updated Successfully.\",thisObj.getData);\r\n                                \r\n                            } else {\n                                successModalCallback(\"Dataset Created Successfully.\", () => { thisObj.props.cancel(true) });\r\n                            }\n                        } else {\n                            hideProgress();\n                            errorModal(response.message);\n                        }\n                    });\n        }\n        else {\n            hideProgress();\n            errorModal(\"No data available!\");\n        }\n    }\n\n    resetData = () => {\n        try {\n            let { datasetData } = this.state;\n           \n            this.setState({\r\n                data: JSON.parse(datasetData)\r\n            });\n        }\n        catch (e) {\n            //console.log(e)\n        }\n        \r\n\r\n    }\n\n    render() {\n        let {\n            data\n        } = this.state;\n        const { readOnly } = this.props;\n        //Table 2 Column \n        let Sec_Column = this.state.isEdit ? this.form_edit_column() : this.form_Column();\n        const hght = this.state.isEdit ? \"calc(100vh - 220px)\" : \"calc(100vh - 175px)\";\n        return <>\n            <Row >\n                <HotTable\n                    id=\"AlterStdVariable_Table\"\n                    className={\"AlterVariable_Table_TD\"}\n                    height={Sec_Column.length > 0 ? hght : \"0px\"}\n                    licenseKey=\"non-commercial-and-evaluation\"\n                    viewportRowRenderingOffsetnumber={10}\n                    ref={this.TableRef}\n                    settings=\n                    {\n                        {\n                            filters: true,\n                            stretchH: 'all',\n                            wordWrap: true,\n                            editable: false,\n                            readOnly: false,\n                            rowHeaders: true,\n                            columns: Sec_Column,\n                            autoColumnSize: true,\n                            contextMenu: true,\n                            allowRemoveRow: true,\n                            copyPaste: true,\n                            data: data,\n                            dropdownMenu: ['filter_by_condition', 'filter_by_value', 'filter_action_bar'],\n                        }\n                    }\n                />\n                <Empty style={{ display: Sec_Column.length > 0 ? \"none\" : \"block\" }} />\n            </Row>\n            <Divider style={{ margin: \"5px 0px 10px 0px\" }} />\n            <Row >\n                {\n                    !this.state.isEdit &&\n                    <Button\n                        key=\"back\"\n                        name=\"PopupCancel\"\n                        style={{ float: 'left' }}\n                        onClick={this.cancel}\n                        className='ant-btn sc-ifAKCX fcfmNQ ant-btn-danger'\n                    >\n                        Cancel\n                    </Button>\n                }\n                {!readOnly &&\n                    <Button\n                        key=\"submit\"\n                        name=\"PopupSave\"\n                        style={{ float: 'right', marginLeft: 5 }}\n                        onClick={this.create}\n                        className='ant-btn sc-ifAKCX fcfmNQ ant-btn-primary saveBtn'\n                    >\n                        {this.state.isEdit ? \"Update\" : \"Create\"}\n                    </Button>\n                }\n                {\n                    this.state.isEdit && !readOnly &&\n                    <Button key=\"reset\"\n                        name=\"reset\"\n                        style={{ float: 'right', marginLeft: 5 }}\n                        className='ant-btn ant-btn-primary'\n                        onClick={this.resetData}\n                    >\n                        Reset\n                    </Button>\n                }\n                {\n                    !this.state.isEdit &&\n                    <Button key=\"Prev\"\n                        name=\"Prev\"\n                        style={{ float: 'right', marginLeft: 5 }}\n                        className='ant-btn ant-btn-primary'\n                        onClick={this.prev}\n                    >\n                        Previous\n                    </Button>\n                }\n                {\n                    !readOnly &&\n                    <Button\n                        key=\"addrow\"\n                        name=\"addrow\"\n                        style={{ float: 'right' }}\n                        className='ant-btn ant-btn-primary tar_var_create'\n                        onClick={this.addRow}>\n                        Add Row\n                    </Button>\n                }\n            </Row>\n        </>\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}