{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as Types from '../../../base/common/types.js';\nimport * as Assert from '../../../base/common/assert.js';\nvar RegistryImpl = /** @class */function () {\n  function RegistryImpl() {\n    this.data = new Map();\n  }\n  RegistryImpl.prototype.add = function (id, data) {\n    Assert.ok(Types.isString(id));\n    Assert.ok(Types.isObject(data));\n    Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n    this.data.set(id, data);\n  };\n  RegistryImpl.prototype.as = function (id) {\n    return this.data.get(id) || null;\n  };\n  return RegistryImpl;\n}();\nexport var Registry = new RegistryImpl();","map":{"version":3,"names":["Types","Assert","RegistryImpl","data","Map","prototype","add","id","ok","isString","isObject","has","set","as","get","Registry"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as Types from '../../../base/common/types.js';\r\nimport * as Assert from '../../../base/common/assert.js';\r\nvar RegistryImpl = /** @class */ (function () {\r\n    function RegistryImpl() {\r\n        this.data = new Map();\r\n    }\r\n    RegistryImpl.prototype.add = function (id, data) {\r\n        Assert.ok(Types.isString(id));\r\n        Assert.ok(Types.isObject(data));\r\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\r\n        this.data.set(id, data);\r\n    };\r\n    RegistryImpl.prototype.as = function (id) {\r\n        return this.data.get(id) || null;\r\n    };\r\n    return RegistryImpl;\r\n}());\r\nexport var Registry = new RegistryImpl();\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,+BAA+B;AACtD,OAAO,KAAKC,MAAM,MAAM,gCAAgC;AACxD,IAAIC,YAAY,GAAG,aAAe,YAAY;EAC1C,SAASA,YAAY,GAAG;IACpB,IAAI,CAACC,IAAI,GAAG,IAAIC,GAAG,EAAE;EACzB;EACAF,YAAY,CAACG,SAAS,CAACC,GAAG,GAAG,UAAUC,EAAE,EAAEJ,IAAI,EAAE;IAC7CF,MAAM,CAACO,EAAE,CAACR,KAAK,CAACS,QAAQ,CAACF,EAAE,CAAC,CAAC;IAC7BN,MAAM,CAACO,EAAE,CAACR,KAAK,CAACU,QAAQ,CAACP,IAAI,CAAC,CAAC;IAC/BF,MAAM,CAACO,EAAE,CAAC,CAAC,IAAI,CAACL,IAAI,CAACQ,GAAG,CAACJ,EAAE,CAAC,EAAE,4CAA4C,CAAC;IAC3E,IAAI,CAACJ,IAAI,CAACS,GAAG,CAACL,EAAE,EAAEJ,IAAI,CAAC;EAC3B,CAAC;EACDD,YAAY,CAACG,SAAS,CAACQ,EAAE,GAAG,UAAUN,EAAE,EAAE;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACW,GAAG,CAACP,EAAE,CAAC,IAAI,IAAI;EACpC,CAAC;EACD,OAAOL,YAAY;AACvB,CAAC,EAAG;AACJ,OAAO,IAAIa,QAAQ,GAAG,IAAIb,YAAY,EAAE"},"metadata":{},"sourceType":"module"}