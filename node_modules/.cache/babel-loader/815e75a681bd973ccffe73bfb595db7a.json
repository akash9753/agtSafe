{"ast":null,"code":"\"use strict\";\n\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* jslint esnext: true */\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar diff_1 = require(\"./diff\");\nvar es5_1 = require(\"./es5\");\nexports.default = RelativeFormat;\n// -----------------------------------------------------------------------------\nvar FIELDS = ['second', 'second-short', 'minute', 'minute-short', 'hour', 'hour-short', 'day', 'day-short', 'month', 'month-short', 'year', 'year-short'];\nvar STYLES = ['best fit', 'numeric'];\n// -- RelativeFormat -----------------------------------------------------------\nfunction RelativeFormat(locales, options) {\n  options = options || {};\n  // Make a copy of `locales` if it's an array, so that it doesn't change\n  // since it's used lazily.\n  if (es5_1.isArray(locales)) {\n    locales = locales.concat();\n  }\n  es5_1.defineProperty(this, '_locale', {\n    value: this._resolveLocale(locales)\n  });\n  es5_1.defineProperty(this, '_options', {\n    value: {\n      style: this._resolveStyle(options.style),\n      units: this._isValidUnits(options.units) && options.units\n    }\n  });\n  es5_1.defineProperty(this, '_locales', {\n    value: locales\n  });\n  es5_1.defineProperty(this, '_fields', {\n    value: this._findFields(this._locale)\n  });\n  es5_1.defineProperty(this, '_messages', {\n    value: es5_1.objCreate(null)\n  });\n  // \"Bind\" `format()` method to `this` so it can be passed by reference like\n  // the other `Intl` APIs.\n  var relativeFormat = this;\n  this.format = function format(date, options) {\n    return relativeFormat._format(date, options);\n  };\n}\n// Define internal private properties for dealing with locale data.\nes5_1.defineProperty(RelativeFormat, '__localeData__', {\n  value: es5_1.objCreate(null)\n});\nes5_1.defineProperty(RelativeFormat, '__addLocaleData', {\n  value: function value() {\n    for (var i = 0; i < arguments.length; i++) {\n      var datum = arguments[i];\n      if (!(datum && datum.locale)) {\n        throw new Error('Locale data provided to IntlRelativeFormat is missing a ' + '`locale` property value');\n      }\n      RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum;\n      // Add data to IntlMessageFormat.\n      intl_messageformat_1.default.__addLocaleData(datum);\n    }\n  }\n});\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\nes5_1.defineProperty(RelativeFormat, 'defaultLocale', {\n  enumerable: true,\n  writable: true,\n  value: undefined\n});\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\nes5_1.defineProperty(RelativeFormat, 'thresholds', {\n  enumerable: true,\n  value: {\n    second: 45,\n    'second-short': 45,\n    minute: 45,\n    'minute-short': 45,\n    hour: 22,\n    'hour-short': 22,\n    day: 26,\n    'day-short': 26,\n    month: 11,\n    'month-short': 11 // months to year\n  }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n  return {\n    locale: this._locale,\n    style: this._options.style,\n    units: this._options.units\n  };\n};\nRelativeFormat.prototype._compileMessage = function (units) {\n  // `this._locales` is the original set of locales the user specified to the\n  // constructor, while `this._locale` is the resolved root locale.\n  var locales = this._locales;\n  var resolvedLocale = this._locale;\n  var field = this._fields[units];\n  var relativeTime = field.relativeTime;\n  var future = '';\n  var past = '';\n  var i;\n  for (i in relativeTime.future) {\n    if (relativeTime.future.hasOwnProperty(i)) {\n      future += ' ' + i + ' {' + relativeTime.future[i].replace('{0}', '#') + '}';\n    }\n  }\n  for (i in relativeTime.past) {\n    if (relativeTime.past.hasOwnProperty(i)) {\n      past += ' ' + i + ' {' + relativeTime.past[i].replace('{0}', '#') + '}';\n    }\n  }\n  var message = '{when, select, future {{0, plural, ' + future + '}}' + 'past {{0, plural, ' + past + '}}}';\n  // Create the synthetic IntlMessageFormat instance using the original\n  // locales value specified by the user when constructing the the parent\n  // IntlRelativeFormat instance.\n  return new intl_messageformat_1.default(message, locales);\n};\nRelativeFormat.prototype._getMessage = function (units) {\n  var messages = this._messages;\n  // Create a new synthetic message based on the locale data from CLDR.\n  if (!messages[units]) {\n    messages[units] = this._compileMessage(units);\n  }\n  return messages[units];\n};\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n  var field = this._fields[units];\n  if (field.relative) {\n    return field.relative[diff];\n  }\n};\nRelativeFormat.prototype._findFields = function (locale) {\n  var localeData = RelativeFormat.__localeData__;\n  var data = localeData[locale.toLowerCase()];\n  // The locale data is de-duplicated, so we have to traverse the locale's\n  // hierarchy until we find `fields` to return.\n  while (data) {\n    if (data.fields) {\n      return data.fields;\n    }\n    data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n  }\n  throw new Error('Locale data added to IntlRelativeFormat is missing `fields` for :' + locale);\n};\nRelativeFormat.prototype._format = function (date, options) {\n  var now = options && options.now !== undefined ? options.now : es5_1.dateNow();\n  if (date === undefined) {\n    date = now;\n  }\n  // Determine if the `date` and optional `now` values are valid, and throw a\n  // similar error to what `Intl.DateTimeFormat#format()` would throw.\n  if (!isFinite(now)) {\n    throw new RangeError('The `now` option provided to IntlRelativeFormat#format() is not ' + 'in valid range.');\n  }\n  if (!isFinite(date)) {\n    throw new RangeError('The date value provided to IntlRelativeFormat#format() is not ' + 'in valid range.');\n  }\n  var diffReport = diff_1.default(now, date);\n  var units = this._options.units || this._selectUnits(diffReport);\n  var diffInUnits = diffReport[units];\n  if (this._options.style !== 'numeric') {\n    var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n    if (relativeUnits) {\n      return relativeUnits;\n    }\n  }\n  return this._getMessage(units).format({\n    '0': Math.abs(diffInUnits),\n    when: diffInUnits < 0 ? 'past' : 'future'\n  });\n};\nRelativeFormat.prototype._isValidUnits = function (units) {\n  if (!units || es5_1.arrIndexOf.call(FIELDS, units) >= 0) {\n    return true;\n  }\n  if (typeof units === 'string') {\n    var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n    if (suggestion && es5_1.arrIndexOf.call(FIELDS, suggestion) >= 0) {\n      throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` ' + 'value, did you mean: ' + suggestion);\n    }\n  }\n  throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' + 'must be one of: \"' + FIELDS.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._resolveLocale = function (locales) {\n  if (typeof locales === 'string') {\n    locales = [locales];\n  }\n  // Create a copy of the array so we can push on the default locale.\n  locales = (locales || []).concat(RelativeFormat.defaultLocale);\n  var localeData = RelativeFormat.__localeData__;\n  var i, len, localeParts, data;\n  // Using the set of locales + the default locale, we look for the first one\n  // which that has been registered. When data does not exist for a locale, we\n  // traverse its ancestors to find something that's been registered within\n  // its hierarchy of locales. Since we lack the proper `parentLocale` data\n  // here, we must take a naive approach to traversal.\n  for (i = 0, len = locales.length; i < len; i += 1) {\n    localeParts = locales[i].toLowerCase().split('-');\n    while (localeParts.length) {\n      data = localeData[localeParts.join('-')];\n      if (data) {\n        // Return the normalized locale string; e.g., we return \"en-US\",\n        // instead of \"en-us\".\n        return data.locale;\n      }\n      localeParts.pop();\n    }\n  }\n  var defaultLocale = locales.pop();\n  throw new Error('No locale data has been added to IntlRelativeFormat for: ' + locales.join(', ') + ', or the default locale: ' + defaultLocale);\n};\nRelativeFormat.prototype._resolveStyle = function (style) {\n  // Default to \"best fit\" style.\n  if (!style) {\n    return STYLES[0];\n  }\n  if (es5_1.arrIndexOf.call(STYLES, style) >= 0) {\n    return style;\n  }\n  throw new Error('\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' + 'must be one of: \"' + STYLES.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n  var i, l, units;\n  var fields = FIELDS.filter(function (field) {\n    return field.indexOf('-short') < 1;\n  });\n  for (i = 0, l = fields.length; i < l; i += 1) {\n    units = fields[i];\n    if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n      break;\n    }\n  }\n  return units;\n};","map":{"version":3,"sources":["../src/core.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* jslint esnext: true */\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar diff_1 = require(\"./diff\");\nvar es5_1 = require(\"./es5\");\nexports.default = RelativeFormat;\n// -----------------------------------------------------------------------------\nvar FIELDS = [\n    'second', 'second-short',\n    'minute', 'minute-short',\n    'hour', 'hour-short',\n    'day', 'day-short',\n    'month', 'month-short',\n    'year', 'year-short'\n];\nvar STYLES = ['best fit', 'numeric'];\n// -- RelativeFormat -----------------------------------------------------------\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (es5_1.isArray(locales)) {\n        locales = locales.concat();\n    }\n    es5_1.defineProperty(this, '_locale', { value: this._resolveLocale(locales) });\n    es5_1.defineProperty(this, '_options', { value: {\n            style: this._resolveStyle(options.style),\n            units: this._isValidUnits(options.units) && options.units\n        } });\n    es5_1.defineProperty(this, '_locales', { value: locales });\n    es5_1.defineProperty(this, '_fields', { value: this._findFields(this._locale) });\n    es5_1.defineProperty(this, '_messages', { value: es5_1.objCreate(null) });\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date, options) {\n        return relativeFormat._format(date, options);\n    };\n}\n// Define internal private properties for dealing with locale data.\nes5_1.defineProperty(RelativeFormat, '__localeData__', { value: es5_1.objCreate(null) });\nes5_1.defineProperty(RelativeFormat, '__addLocaleData', { value: function () {\n        for (var i = 0; i < arguments.length; i++) {\n            var datum = arguments[i];\n            if (!(datum && datum.locale)) {\n                throw new Error('Locale data provided to IntlRelativeFormat is missing a ' +\n                    '`locale` property value');\n            }\n            RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum;\n            // Add data to IntlMessageFormat.\n            intl_messageformat_1.default.__addLocaleData(datum);\n        }\n    } });\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\nes5_1.defineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable: true,\n    value: undefined\n});\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\nes5_1.defineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n    value: {\n        second: 45, 'second-short': 45,\n        minute: 45, 'minute-short': 45,\n        hour: 22, 'hour-short': 22,\n        day: 26, 'day-short': 26,\n        month: 11, 'month-short': 11 // months to year\n    }\n});\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style: this._options.style,\n        units: this._options.units\n    };\n};\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specified to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales = this._locales;\n    var resolvedLocale = this._locale;\n    var field = this._fields[units];\n    var relativeTime = field.relativeTime;\n    var future = '';\n    var past = '';\n    var i;\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n        'past {{0, plural, ' + past + '}}}';\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new intl_messageformat_1.default(message, locales);\n};\nRelativeFormat.prototype._getMessage = function (units) {\n    var messages = this._messages;\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n    return messages[units];\n};\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n    var field = this._fields[units];\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\nRelativeFormat.prototype._findFields = function (locale) {\n    var localeData = RelativeFormat.__localeData__;\n    var data = localeData[locale.toLowerCase()];\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find `fields` to return.\n    while (data) {\n        if (data.fields) {\n            return data.fields;\n        }\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n    throw new Error('Locale data added to IntlRelativeFormat is missing `fields` for :' +\n        locale);\n};\nRelativeFormat.prototype._format = function (date, options) {\n    var now = options && options.now !== undefined ? options.now : es5_1.dateNow();\n    if (date === undefined) {\n        date = now;\n    }\n    // Determine if the `date` and optional `now` values are valid, and throw a\n    // similar error to what `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(now)) {\n        throw new RangeError('The `now` option provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.');\n    }\n    if (!isFinite(date)) {\n        throw new RangeError('The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.');\n    }\n    var diffReport = diff_1.default(now, date);\n    var units = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n    return this._getMessage(units).format({\n        '0': Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || es5_1.arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && es5_1.arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion);\n        }\n    }\n    throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(RelativeFormat.defaultLocale);\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, localeParts, data;\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n            localeParts.pop();\n        }\n    }\n    var defaultLocale = locales.pop();\n    throw new Error('No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale);\n};\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n    if (es5_1.arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n    throw new Error('\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n    var fields = FIELDS.filter(function (field) {\n        return field.indexOf('-short') < 1;\n    });\n    for (i = 0, l = fields.length; i < l; i += 1) {\n        units = fields[i];\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n    return units;\n};\n//# sourceMappingURL=core.js.map"]},"metadata":{},"sourceType":"script"}