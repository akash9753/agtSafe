{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CursorState, SingleCursorState } from './cursorCommon.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nvar OneCursor = /** @class */function () {\n  function OneCursor(context) {\n    this._selTrackedRange = null;\n    this._trackSelection = true;\n    this._setState(context, new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0), new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0));\n  }\n  OneCursor.prototype.dispose = function (context) {\n    this._removeTrackedRange(context);\n  };\n  OneCursor.prototype.startTrackingSelection = function (context) {\n    this._trackSelection = true;\n    this._updateTrackedRange(context);\n  };\n  OneCursor.prototype.stopTrackingSelection = function (context) {\n    this._trackSelection = false;\n    this._removeTrackedRange(context);\n  };\n  OneCursor.prototype._updateTrackedRange = function (context) {\n    if (!this._trackSelection) {\n      // don't track the selection\n      return;\n    }\n    this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, this.modelState.selection, 0 /* AlwaysGrowsWhenTypingAtEdges */);\n  };\n\n  OneCursor.prototype._removeTrackedRange = function (context) {\n    this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, null, 0 /* AlwaysGrowsWhenTypingAtEdges */);\n  };\n\n  OneCursor.prototype.asCursorState = function () {\n    return new CursorState(this.modelState, this.viewState);\n  };\n  OneCursor.prototype.readSelectionFromMarkers = function (context) {\n    var range = context.model._getTrackedRange(this._selTrackedRange);\n    if (this.modelState.selection.getDirection() === 0 /* LTR */) {\n      return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n  };\n  OneCursor.prototype.ensureValidState = function (context) {\n    this._setState(context, this.modelState, this.viewState);\n  };\n  OneCursor.prototype.setState = function (context, modelState, viewState) {\n    this._setState(context, modelState, viewState);\n  };\n  OneCursor.prototype._setState = function (context, modelState, viewState) {\n    if (!modelState) {\n      if (!viewState) {\n        return;\n      }\n      // We only have the view state => compute the model state\n      var selectionStart = context.model.validateRange(context.convertViewRangeToModelRange(viewState.selectionStart));\n      var position = context.model.validatePosition(context.convertViewPositionToModelPosition(viewState.position.lineNumber, viewState.position.column));\n      modelState = new SingleCursorState(selectionStart, viewState.selectionStartLeftoverVisibleColumns, position, viewState.leftoverVisibleColumns);\n    } else {\n      // Validate new model state\n      var selectionStart = context.model.validateRange(modelState.selectionStart);\n      var selectionStartLeftoverVisibleColumns = modelState.selectionStart.equalsRange(selectionStart) ? modelState.selectionStartLeftoverVisibleColumns : 0;\n      var position = context.model.validatePosition(modelState.position);\n      var leftoverVisibleColumns = modelState.position.equals(position) ? modelState.leftoverVisibleColumns : 0;\n      modelState = new SingleCursorState(selectionStart, selectionStartLeftoverVisibleColumns, position, leftoverVisibleColumns);\n    }\n    if (!viewState) {\n      // We only have the model state => compute the view state\n      var viewSelectionStart1 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.startLineNumber, modelState.selectionStart.startColumn));\n      var viewSelectionStart2 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.endLineNumber, modelState.selectionStart.endColumn));\n      var viewSelectionStart = new Range(viewSelectionStart1.lineNumber, viewSelectionStart1.column, viewSelectionStart2.lineNumber, viewSelectionStart2.column);\n      var viewPosition = context.convertModelPositionToViewPosition(modelState.position);\n      viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\n    } else {\n      // Validate new view state\n      var viewSelectionStart = context.validateViewRange(viewState.selectionStart, modelState.selectionStart);\n      var viewPosition = context.validateViewPosition(viewState.position, modelState.position);\n      viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\n    }\n    this.modelState = modelState;\n    this.viewState = viewState;\n    this._updateTrackedRange(context);\n  };\n  return OneCursor;\n}();\nexport { OneCursor };","map":{"version":3,"names":["CursorState","SingleCursorState","Position","Range","Selection","OneCursor","context","_selTrackedRange","_trackSelection","_setState","prototype","dispose","_removeTrackedRange","startTrackingSelection","_updateTrackedRange","stopTrackingSelection","model","_setTrackedRange","modelState","selection","asCursorState","viewState","readSelectionFromMarkers","range","_getTrackedRange","getDirection","startLineNumber","startColumn","endLineNumber","endColumn","ensureValidState","setState","selectionStart","validateRange","convertViewRangeToModelRange","position","validatePosition","convertViewPositionToModelPosition","lineNumber","column","selectionStartLeftoverVisibleColumns","leftoverVisibleColumns","equalsRange","equals","viewSelectionStart1","convertModelPositionToViewPosition","viewSelectionStart2","viewSelectionStart","viewPosition","validateViewRange","validateViewPosition"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/controller/oneCursor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CursorState, SingleCursorState } from './cursorCommon.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection } from '../core/selection.js';\r\nvar OneCursor = /** @class */ (function () {\r\n    function OneCursor(context) {\r\n        this._selTrackedRange = null;\r\n        this._trackSelection = true;\r\n        this._setState(context, new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0), new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0));\r\n    }\r\n    OneCursor.prototype.dispose = function (context) {\r\n        this._removeTrackedRange(context);\r\n    };\r\n    OneCursor.prototype.startTrackingSelection = function (context) {\r\n        this._trackSelection = true;\r\n        this._updateTrackedRange(context);\r\n    };\r\n    OneCursor.prototype.stopTrackingSelection = function (context) {\r\n        this._trackSelection = false;\r\n        this._removeTrackedRange(context);\r\n    };\r\n    OneCursor.prototype._updateTrackedRange = function (context) {\r\n        if (!this._trackSelection) {\r\n            // don't track the selection\r\n            return;\r\n        }\r\n        this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, this.modelState.selection, 0 /* AlwaysGrowsWhenTypingAtEdges */);\r\n    };\r\n    OneCursor.prototype._removeTrackedRange = function (context) {\r\n        this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, null, 0 /* AlwaysGrowsWhenTypingAtEdges */);\r\n    };\r\n    OneCursor.prototype.asCursorState = function () {\r\n        return new CursorState(this.modelState, this.viewState);\r\n    };\r\n    OneCursor.prototype.readSelectionFromMarkers = function (context) {\r\n        var range = context.model._getTrackedRange(this._selTrackedRange);\r\n        if (this.modelState.selection.getDirection() === 0 /* LTR */) {\r\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n        }\r\n        return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\r\n    };\r\n    OneCursor.prototype.ensureValidState = function (context) {\r\n        this._setState(context, this.modelState, this.viewState);\r\n    };\r\n    OneCursor.prototype.setState = function (context, modelState, viewState) {\r\n        this._setState(context, modelState, viewState);\r\n    };\r\n    OneCursor.prototype._setState = function (context, modelState, viewState) {\r\n        if (!modelState) {\r\n            if (!viewState) {\r\n                return;\r\n            }\r\n            // We only have the view state => compute the model state\r\n            var selectionStart = context.model.validateRange(context.convertViewRangeToModelRange(viewState.selectionStart));\r\n            var position = context.model.validatePosition(context.convertViewPositionToModelPosition(viewState.position.lineNumber, viewState.position.column));\r\n            modelState = new SingleCursorState(selectionStart, viewState.selectionStartLeftoverVisibleColumns, position, viewState.leftoverVisibleColumns);\r\n        }\r\n        else {\r\n            // Validate new model state\r\n            var selectionStart = context.model.validateRange(modelState.selectionStart);\r\n            var selectionStartLeftoverVisibleColumns = modelState.selectionStart.equalsRange(selectionStart) ? modelState.selectionStartLeftoverVisibleColumns : 0;\r\n            var position = context.model.validatePosition(modelState.position);\r\n            var leftoverVisibleColumns = modelState.position.equals(position) ? modelState.leftoverVisibleColumns : 0;\r\n            modelState = new SingleCursorState(selectionStart, selectionStartLeftoverVisibleColumns, position, leftoverVisibleColumns);\r\n        }\r\n        if (!viewState) {\r\n            // We only have the model state => compute the view state\r\n            var viewSelectionStart1 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.startLineNumber, modelState.selectionStart.startColumn));\r\n            var viewSelectionStart2 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.endLineNumber, modelState.selectionStart.endColumn));\r\n            var viewSelectionStart = new Range(viewSelectionStart1.lineNumber, viewSelectionStart1.column, viewSelectionStart2.lineNumber, viewSelectionStart2.column);\r\n            var viewPosition = context.convertModelPositionToViewPosition(modelState.position);\r\n            viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\r\n        }\r\n        else {\r\n            // Validate new view state\r\n            var viewSelectionStart = context.validateViewRange(viewState.selectionStart, modelState.selectionStart);\r\n            var viewPosition = context.validateViewPosition(viewState.position, modelState.position);\r\n            viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\r\n        }\r\n        this.modelState = modelState;\r\n        this.viewState = viewState;\r\n        this._updateTrackedRange(context);\r\n    };\r\n    return OneCursor;\r\n}());\r\nexport { OneCursor };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}