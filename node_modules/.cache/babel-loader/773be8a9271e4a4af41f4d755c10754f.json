{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\helpers\\\\asyncComponent.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { Component } from 'react';\nimport ReactPlaceholder from 'react-placeholder';\nimport 'react-placeholder/lib/reactPlaceholder.css';\nvar AsyncComponent = /*#__PURE__*/function (_Component) {\n  _inherits(AsyncComponent, _Component);\n  var _super = _createSuper(AsyncComponent);\n  function AsyncComponent() {\n    var _this;\n    _classCallCheck(this, AsyncComponent);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      Component: undefined\n    };\n    return _this;\n  }\n  _createClass(AsyncComponent, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var componentArguement, Component, _yield$this$props$loa, googleChart, _yield$this$props$loa2, newComponent;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.mounted = true;\n                componentArguement = this.props.componentArguement;\n                _context.t0 = componentArguement;\n                _context.next = _context.t0 === 'googleChart' ? 5 : 11;\n                break;\n              case 5:\n                _context.next = 7;\n                return this.props.load;\n              case 7:\n                _yield$this$props$loa = _context.sent;\n                googleChart = _yield$this$props$loa.Chart;\n                Component = googleChart;\n                return _context.abrupt(\"break\", 16);\n              case 11:\n                _context.next = 13;\n                return this.props.load;\n              case 13:\n                _yield$this$props$loa2 = _context.sent;\n                newComponent = _yield$this$props$loa2.default;\n                Component = newComponent;\n              case 16:\n                if (this.mounted) {\n                  this.setState({\n                    Component: /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props.componentProps, {\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 25,\n                        columnNumber: 20\n                      }\n                    }))\n                  });\n                }\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Component = this.state.Component || /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 47\n        }\n      });\n      try {\n        if (this.mounted) {\n          return /*#__PURE__*/React.createElement(ReactPlaceholder, {\n            type: \"text\",\n            rows: 7,\n            ready: Component !== undefined,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 11\n            }\n          }, Component);\n        }\n      } catch (e) {}\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n  return AsyncComponent;\n}(Component);\nexport default AsyncComponent;","map":{"version":3,"names":["React","Component","ReactPlaceholder","AsyncComponent","state","undefined","mounted","componentArguement","props","load","googleChart","Chart","newComponent","default","setState","componentProps","e"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/helpers/asyncComponent.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ReactPlaceholder from 'react-placeholder';\r\nimport 'react-placeholder/lib/reactPlaceholder.css';\r\n\r\nclass AsyncComponent extends Component {\r\n  state = { Component: undefined };\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    const componentArguement = this.props.componentArguement;\r\n    let Component;\r\n    switch (componentArguement) {\r\n      case 'googleChart':\r\n        const { Chart: googleChart } = await this.props.load;\r\n        Component = googleChart;\r\n        break;\r\n      default:\r\n        const { default: newComponent } = await this.props.load;\r\n        Component = newComponent;\r\n    }\r\n    if (this.mounted) {\r\n      this.setState({\r\n        Component: <Component {...this.props.componentProps} />\r\n      });\r\n    }\r\n  }\r\n  debugger;\r\n  render() {\r\n    const Component = this.state.Component || <div />;\r\n    try {\r\n      if (this.mounted) {\r\n        return (\r\n          <ReactPlaceholder\r\n            type=\"text\"\r\n            rows={7}\r\n            ready={Component !== undefined}\r\n          >\r\n            {Component}\r\n          </ReactPlaceholder>\r\n        );\r\n      }\r\n    } catch (e) {}\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default AsyncComponent;\r\n"],"mappings":";;;;;;+CACA;AADA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD,OAAO,4CAA4C;AAAC,IAE9CC,cAAc;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAClBC,KAAK,GAAG;MAAEH,SAAS,EAAEI;IAAU,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAChC,gCAAuB;MACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACtB;EAAC;IAAA;IAAA;MAAA,oFACD;QAAA;QAAA;UAAA;YAAA;cAAA;gBACE,IAAI,CAACA,OAAO,GAAG,IAAI;gBACbC,kBAAkB,GAAG,IAAI,CAACC,KAAK,CAACD,kBAAkB;gBAAA,cAEhDA,kBAAkB;gBAAA,gCACnB,aAAa;gBAAA;cAAA;gBAAA;gBAAA,OACqB,IAAI,CAACC,KAAK,CAACC,IAAI;cAAA;gBAAA;gBAArCC,WAAW,yBAAlBC,KAAK;gBACbV,SAAS,GAAGS,WAAW;gBAAC;cAAA;gBAAA;gBAAA,OAGgB,IAAI,CAACF,KAAK,CAACC,IAAI;cAAA;gBAAA;gBAAtCG,YAAY,0BAArBC,OAAO;gBACfZ,SAAS,GAAGW,YAAY;cAAC;gBAE7B,IAAI,IAAI,CAACN,OAAO,EAAE;kBAChB,IAAI,CAACQ,QAAQ,CAAC;oBACZb,SAAS,eAAE,oBAAC,SAAS,oBAAK,IAAI,CAACO,KAAK,CAACO,cAAc;sBAAA;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA;oBAAA;kBACrD,CAAC,CAAC;gBACJ;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACF;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OAED,kBAAS;MACP,IAAMd,SAAS,GAAG,IAAI,CAACG,KAAK,CAACH,SAAS,iBAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAO;MACjD,IAAI;QACF,IAAI,IAAI,CAACK,OAAO,EAAE;UAChB,oBACE,oBAAC,gBAAgB;YACf,IAAI,EAAC,MAAM;YACX,IAAI,EAAE,CAAE;YACR,KAAK,EAAEL,SAAS,KAAKI,SAAU;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAE9BJ,SAAS,CACO;QAEvB;MACF,CAAC,CAAC,OAAOe,CAAC,EAAE,CAAC;MACb,oBAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAO;IAChB;EAAC;EAAA;AAAA,EAzC0Bf,SAAS;AA4CtC,eAAeE,cAAc"},"metadata":{},"sourceType":"module"}