{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n  return r;\n};\nimport { Iterator, getSequenceIterator } from '../../../common/iterator.js';\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { TreeError } from './tree.js';\nimport { mergeSort } from '../../../common/arrays.js';\nvar ObjectTreeModel = /** @class */function () {\n  function ObjectTreeModel(user, list, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.user = user;\n    this.nodes = new Map();\n    this.nodesByIdentity = new Map();\n    this.model = new IndexTreeModel(user, list, null, options);\n    this.onDidSplice = this.model.onDidSplice;\n    this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n    this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n    if (options.sorter) {\n      this.sorter = {\n        compare: function compare(a, b) {\n          return options.sorter.compare(a.element, b.element);\n        }\n      };\n    }\n    this.identityProvider = options.identityProvider;\n  }\n  ObjectTreeModel.prototype.setChildren = function (element, children, onDidCreateNode, onDidDeleteNode) {\n    var location = this.getElementLocation(element);\n    this._setChildren(location, this.preserveCollapseState(children), onDidCreateNode, onDidDeleteNode);\n  };\n  ObjectTreeModel.prototype._setChildren = function (location, children, onDidCreateNode, onDidDeleteNode) {\n    var _this = this;\n    var insertedElements = new Set();\n    var insertedElementIds = new Set();\n    var _onDidCreateNode = function _onDidCreateNode(node) {\n      insertedElements.add(node.element);\n      _this.nodes.set(node.element, node);\n      if (_this.identityProvider) {\n        var id = _this.identityProvider.getId(node.element).toString();\n        insertedElementIds.add(id);\n        _this.nodesByIdentity.set(id, node);\n      }\n      if (onDidCreateNode) {\n        onDidCreateNode(node);\n      }\n    };\n    var _onDidDeleteNode = function _onDidDeleteNode(node) {\n      if (!insertedElements.has(node.element)) {\n        _this.nodes.delete(node.element);\n      }\n      if (_this.identityProvider) {\n        var id = _this.identityProvider.getId(node.element).toString();\n        if (!insertedElementIds.has(id)) {\n          _this.nodesByIdentity.delete(id);\n        }\n      }\n      if (onDidDeleteNode) {\n        onDidDeleteNode(node);\n      }\n    };\n    this.model.splice(__spreadArrays(location, [0]), Number.MAX_VALUE, children, _onDidCreateNode, _onDidDeleteNode);\n  };\n  ObjectTreeModel.prototype.preserveCollapseState = function (elements) {\n    var _this = this;\n    var iterator = elements ? getSequenceIterator(elements) : Iterator.empty();\n    if (this.sorter) {\n      iterator = Iterator.fromArray(mergeSort(Iterator.collect(iterator), this.sorter.compare.bind(this.sorter)));\n    }\n    return Iterator.map(iterator, function (treeElement) {\n      var node = _this.nodes.get(treeElement.element);\n      if (!node && _this.identityProvider) {\n        var id = _this.identityProvider.getId(treeElement.element).toString();\n        node = _this.nodesByIdentity.get(id);\n      }\n      if (!node) {\n        return __assign(__assign({}, treeElement), {\n          children: _this.preserveCollapseState(treeElement.children)\n        });\n      }\n      var collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n      var collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\n      return __assign(__assign({}, treeElement), {\n        collapsible: collapsible,\n        collapsed: collapsed,\n        children: _this.preserveCollapseState(treeElement.children)\n      });\n    });\n  };\n  ObjectTreeModel.prototype.rerender = function (element) {\n    var location = this.getElementLocation(element);\n    this.model.rerender(location);\n  };\n  ObjectTreeModel.prototype.has = function (element) {\n    return this.nodes.has(element);\n  };\n  ObjectTreeModel.prototype.getListIndex = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.getListIndex(location);\n  };\n  ObjectTreeModel.prototype.getListRenderCount = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.getListRenderCount(location);\n  };\n  ObjectTreeModel.prototype.isCollapsible = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.isCollapsible(location);\n  };\n  ObjectTreeModel.prototype.setCollapsible = function (element, collapsible) {\n    var location = this.getElementLocation(element);\n    return this.model.setCollapsible(location, collapsible);\n  };\n  ObjectTreeModel.prototype.isCollapsed = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.isCollapsed(location);\n  };\n  ObjectTreeModel.prototype.setCollapsed = function (element, collapsed, recursive) {\n    var location = this.getElementLocation(element);\n    return this.model.setCollapsed(location, collapsed, recursive);\n  };\n  ObjectTreeModel.prototype.expandTo = function (element) {\n    var location = this.getElementLocation(element);\n    this.model.expandTo(location);\n  };\n  ObjectTreeModel.prototype.refilter = function () {\n    this.model.refilter();\n  };\n  ObjectTreeModel.prototype.getNode = function (element) {\n    if (element === void 0) {\n      element = null;\n    }\n    if (element === null) {\n      return this.model.getNode(this.model.rootRef);\n    }\n    var node = this.nodes.get(element);\n    if (!node) {\n      throw new TreeError(this.user, \"Tree element not found: \" + element);\n    }\n    return node;\n  };\n  ObjectTreeModel.prototype.getNodeLocation = function (node) {\n    return node.element;\n  };\n  ObjectTreeModel.prototype.getParentNodeLocation = function (element) {\n    if (element === null) {\n      throw new TreeError(this.user, \"Invalid getParentNodeLocation call\");\n    }\n    var node = this.nodes.get(element);\n    if (!node) {\n      throw new TreeError(this.user, \"Tree element not found: \" + element);\n    }\n    var location = this.model.getNodeLocation(node);\n    var parentLocation = this.model.getParentNodeLocation(location);\n    var parent = this.model.getNode(parentLocation);\n    return parent.element;\n  };\n  ObjectTreeModel.prototype.getElementLocation = function (element) {\n    if (element === null) {\n      return [];\n    }\n    var node = this.nodes.get(element);\n    if (!node) {\n      throw new TreeError(this.user, \"Tree element not found: \" + element);\n    }\n    return this.model.getNodeLocation(node);\n  };\n  return ObjectTreeModel;\n}();\nexport { ObjectTreeModel };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","Iterator","getSequenceIterator","IndexTreeModel","TreeError","mergeSort","ObjectTreeModel","user","list","options","nodes","Map","nodesByIdentity","model","onDidSplice","onDidChangeCollapseState","onDidChangeRenderNodeCount","sorter","compare","b","element","identityProvider","setChildren","children","onDidCreateNode","onDidDeleteNode","location","getElementLocation","_setChildren","preserveCollapseState","_this","insertedElements","Set","insertedElementIds","_onDidCreateNode","node","add","set","id","getId","toString","_onDidDeleteNode","has","delete","splice","Number","MAX_VALUE","elements","iterator","empty","fromArray","collect","bind","map","treeElement","get","collapsible","collapsed","rerender","getListIndex","getListRenderCount","isCollapsible","setCollapsible","isCollapsed","setCollapsed","recursive","expandTo","refilter","getNode","rootRef","getNodeLocation","getParentNodeLocation","parentLocation","parent"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport { Iterator, getSequenceIterator } from '../../../common/iterator.js';\r\nimport { IndexTreeModel } from './indexTreeModel.js';\r\nimport { TreeError } from './tree.js';\r\nimport { mergeSort } from '../../../common/arrays.js';\r\nvar ObjectTreeModel = /** @class */ (function () {\r\n    function ObjectTreeModel(user, list, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.user = user;\r\n        this.nodes = new Map();\r\n        this.nodesByIdentity = new Map();\r\n        this.model = new IndexTreeModel(user, list, null, options);\r\n        this.onDidSplice = this.model.onDidSplice;\r\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\r\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\r\n        if (options.sorter) {\r\n            this.sorter = {\r\n                compare: function (a, b) {\r\n                    return options.sorter.compare(a.element, b.element);\r\n                }\r\n            };\r\n        }\r\n        this.identityProvider = options.identityProvider;\r\n    }\r\n    ObjectTreeModel.prototype.setChildren = function (element, children, onDidCreateNode, onDidDeleteNode) {\r\n        var location = this.getElementLocation(element);\r\n        this._setChildren(location, this.preserveCollapseState(children), onDidCreateNode, onDidDeleteNode);\r\n    };\r\n    ObjectTreeModel.prototype._setChildren = function (location, children, onDidCreateNode, onDidDeleteNode) {\r\n        var _this = this;\r\n        var insertedElements = new Set();\r\n        var insertedElementIds = new Set();\r\n        var _onDidCreateNode = function (node) {\r\n            insertedElements.add(node.element);\r\n            _this.nodes.set(node.element, node);\r\n            if (_this.identityProvider) {\r\n                var id = _this.identityProvider.getId(node.element).toString();\r\n                insertedElementIds.add(id);\r\n                _this.nodesByIdentity.set(id, node);\r\n            }\r\n            if (onDidCreateNode) {\r\n                onDidCreateNode(node);\r\n            }\r\n        };\r\n        var _onDidDeleteNode = function (node) {\r\n            if (!insertedElements.has(node.element)) {\r\n                _this.nodes.delete(node.element);\r\n            }\r\n            if (_this.identityProvider) {\r\n                var id = _this.identityProvider.getId(node.element).toString();\r\n                if (!insertedElementIds.has(id)) {\r\n                    _this.nodesByIdentity.delete(id);\r\n                }\r\n            }\r\n            if (onDidDeleteNode) {\r\n                onDidDeleteNode(node);\r\n            }\r\n        };\r\n        this.model.splice(__spreadArrays(location, [0]), Number.MAX_VALUE, children, _onDidCreateNode, _onDidDeleteNode);\r\n    };\r\n    ObjectTreeModel.prototype.preserveCollapseState = function (elements) {\r\n        var _this = this;\r\n        var iterator = elements ? getSequenceIterator(elements) : Iterator.empty();\r\n        if (this.sorter) {\r\n            iterator = Iterator.fromArray(mergeSort(Iterator.collect(iterator), this.sorter.compare.bind(this.sorter)));\r\n        }\r\n        return Iterator.map(iterator, function (treeElement) {\r\n            var node = _this.nodes.get(treeElement.element);\r\n            if (!node && _this.identityProvider) {\r\n                var id = _this.identityProvider.getId(treeElement.element).toString();\r\n                node = _this.nodesByIdentity.get(id);\r\n            }\r\n            if (!node) {\r\n                return __assign(__assign({}, treeElement), { children: _this.preserveCollapseState(treeElement.children) });\r\n            }\r\n            var collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\r\n            var collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\r\n            return __assign(__assign({}, treeElement), { collapsible: collapsible,\r\n                collapsed: collapsed, children: _this.preserveCollapseState(treeElement.children) });\r\n        });\r\n    };\r\n    ObjectTreeModel.prototype.rerender = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        this.model.rerender(location);\r\n    };\r\n    ObjectTreeModel.prototype.has = function (element) {\r\n        return this.nodes.has(element);\r\n    };\r\n    ObjectTreeModel.prototype.getListIndex = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.getListIndex(location);\r\n    };\r\n    ObjectTreeModel.prototype.getListRenderCount = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.getListRenderCount(location);\r\n    };\r\n    ObjectTreeModel.prototype.isCollapsible = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.isCollapsible(location);\r\n    };\r\n    ObjectTreeModel.prototype.setCollapsible = function (element, collapsible) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.setCollapsible(location, collapsible);\r\n    };\r\n    ObjectTreeModel.prototype.isCollapsed = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.isCollapsed(location);\r\n    };\r\n    ObjectTreeModel.prototype.setCollapsed = function (element, collapsed, recursive) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.setCollapsed(location, collapsed, recursive);\r\n    };\r\n    ObjectTreeModel.prototype.expandTo = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        this.model.expandTo(location);\r\n    };\r\n    ObjectTreeModel.prototype.refilter = function () {\r\n        this.model.refilter();\r\n    };\r\n    ObjectTreeModel.prototype.getNode = function (element) {\r\n        if (element === void 0) { element = null; }\r\n        if (element === null) {\r\n            return this.model.getNode(this.model.rootRef);\r\n        }\r\n        var node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, \"Tree element not found: \" + element);\r\n        }\r\n        return node;\r\n    };\r\n    ObjectTreeModel.prototype.getNodeLocation = function (node) {\r\n        return node.element;\r\n    };\r\n    ObjectTreeModel.prototype.getParentNodeLocation = function (element) {\r\n        if (element === null) {\r\n            throw new TreeError(this.user, \"Invalid getParentNodeLocation call\");\r\n        }\r\n        var node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, \"Tree element not found: \" + element);\r\n        }\r\n        var location = this.model.getNodeLocation(node);\r\n        var parentLocation = this.model.getParentNodeLocation(location);\r\n        var parent = this.model.getNode(parentLocation);\r\n        return parent.element;\r\n    };\r\n    ObjectTreeModel.prototype.getElementLocation = function (element) {\r\n        if (element === null) {\r\n            return [];\r\n        }\r\n        var node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, \"Tree element not found: \" + element);\r\n        }\r\n        return this.model.getNodeLocation(node);\r\n    };\r\n    return ObjectTreeModel;\r\n}());\r\nexport { ObjectTreeModel };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC;QAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;MAAC;IACpB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,cAAc,GAAI,IAAI,IAAI,IAAI,CAACA,cAAc,IAAK,YAAY;EAC9D,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEU,EAAE,GAAGR,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGU,EAAE,EAAEV,CAAC,EAAE;IAAED,CAAC,IAAIG,SAAS,CAACF,CAAC,CAAC,CAACG,MAAM;EAAC;EACpF,KAAK,IAAIQ,CAAC,GAAGC,KAAK,CAACb,CAAC,CAAC,EAAEc,CAAC,GAAG,CAAC,EAAEb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,EAAE,EAAEV,CAAC,EAAE;IAC5C,KAAK,IAAIc,CAAC,GAAGZ,SAAS,CAACF,CAAC,CAAC,EAAEe,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,CAAC,CAACX,MAAM,EAAEY,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAEF,CAAC,EAAE;MAC7DF,CAAC,CAACE,CAAC,CAAC,GAAGC,CAAC,CAACC,CAAC,CAAC;IAAC;EAAA;EACpB,OAAOJ,CAAC;AACZ,CAAC;AACD,SAASM,QAAQ,EAAEC,mBAAmB,QAAQ,6BAA6B;AAC3E,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,SAAS,QAAQ,2BAA2B;AACrD,IAAIC,eAAe,GAAG,aAAe,YAAY;EAC7C,SAASA,eAAe,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;IAC1C,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MAAEA,OAAO,GAAG,CAAC,CAAC;IAAE;IACxC,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACG,KAAK,GAAG,IAAIC,GAAG,EAAE;IACtB,IAAI,CAACC,eAAe,GAAG,IAAID,GAAG,EAAE;IAChC,IAAI,CAACE,KAAK,GAAG,IAAIV,cAAc,CAACI,IAAI,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;IAC1D,IAAI,CAACK,WAAW,GAAG,IAAI,CAACD,KAAK,CAACC,WAAW;IACzC,IAAI,CAACC,wBAAwB,GAAG,IAAI,CAACF,KAAK,CAACE,wBAAwB;IACnE,IAAI,CAACC,0BAA0B,GAAG,IAAI,CAACH,KAAK,CAACG,0BAA0B;IACvE,IAAIP,OAAO,CAACQ,MAAM,EAAE;MAChB,IAAI,CAACA,MAAM,GAAG;QACVC,OAAO,EAAE,iBAAUpB,CAAC,EAAEqB,CAAC,EAAE;UACrB,OAAOV,OAAO,CAACQ,MAAM,CAACC,OAAO,CAACpB,CAAC,CAACsB,OAAO,EAAED,CAAC,CAACC,OAAO,CAAC;QACvD;MACJ,CAAC;IACL;IACA,IAAI,CAACC,gBAAgB,GAAGZ,OAAO,CAACY,gBAAgB;EACpD;EACAf,eAAe,CAACjB,SAAS,CAACiC,WAAW,GAAG,UAAUF,OAAO,EAAEG,QAAQ,EAAEC,eAAe,EAAEC,eAAe,EAAE;IACnG,IAAIC,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,IAAI,CAACQ,YAAY,CAACF,QAAQ,EAAE,IAAI,CAACG,qBAAqB,CAACN,QAAQ,CAAC,EAAEC,eAAe,EAAEC,eAAe,CAAC;EACvG,CAAC;EACDnB,eAAe,CAACjB,SAAS,CAACuC,YAAY,GAAG,UAAUF,QAAQ,EAAEH,QAAQ,EAAEC,eAAe,EAAEC,eAAe,EAAE;IACrG,IAAIK,KAAK,GAAG,IAAI;IAChB,IAAIC,gBAAgB,GAAG,IAAIC,GAAG,EAAE;IAChC,IAAIC,kBAAkB,GAAG,IAAID,GAAG,EAAE;IAClC,IAAIE,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAaC,IAAI,EAAE;MACnCJ,gBAAgB,CAACK,GAAG,CAACD,IAAI,CAACf,OAAO,CAAC;MAClCU,KAAK,CAACpB,KAAK,CAAC2B,GAAG,CAACF,IAAI,CAACf,OAAO,EAAEe,IAAI,CAAC;MACnC,IAAIL,KAAK,CAACT,gBAAgB,EAAE;QACxB,IAAIiB,EAAE,GAAGR,KAAK,CAACT,gBAAgB,CAACkB,KAAK,CAACJ,IAAI,CAACf,OAAO,CAAC,CAACoB,QAAQ,EAAE;QAC9DP,kBAAkB,CAACG,GAAG,CAACE,EAAE,CAAC;QAC1BR,KAAK,CAAClB,eAAe,CAACyB,GAAG,CAACC,EAAE,EAAEH,IAAI,CAAC;MACvC;MACA,IAAIX,eAAe,EAAE;QACjBA,eAAe,CAACW,IAAI,CAAC;MACzB;IACJ,CAAC;IACD,IAAIM,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAaN,IAAI,EAAE;MACnC,IAAI,CAACJ,gBAAgB,CAACW,GAAG,CAACP,IAAI,CAACf,OAAO,CAAC,EAAE;QACrCU,KAAK,CAACpB,KAAK,CAACiC,MAAM,CAACR,IAAI,CAACf,OAAO,CAAC;MACpC;MACA,IAAIU,KAAK,CAACT,gBAAgB,EAAE;QACxB,IAAIiB,EAAE,GAAGR,KAAK,CAACT,gBAAgB,CAACkB,KAAK,CAACJ,IAAI,CAACf,OAAO,CAAC,CAACoB,QAAQ,EAAE;QAC9D,IAAI,CAACP,kBAAkB,CAACS,GAAG,CAACJ,EAAE,CAAC,EAAE;UAC7BR,KAAK,CAAClB,eAAe,CAAC+B,MAAM,CAACL,EAAE,CAAC;QACpC;MACJ;MACA,IAAIb,eAAe,EAAE;QACjBA,eAAe,CAACU,IAAI,CAAC;MACzB;IACJ,CAAC;IACD,IAAI,CAACtB,KAAK,CAAC+B,MAAM,CAACnD,cAAc,CAACiC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEmB,MAAM,CAACC,SAAS,EAAEvB,QAAQ,EAAEW,gBAAgB,EAAEO,gBAAgB,CAAC;EACpH,CAAC;EACDnC,eAAe,CAACjB,SAAS,CAACwC,qBAAqB,GAAG,UAAUkB,QAAQ,EAAE;IAClE,IAAIjB,KAAK,GAAG,IAAI;IAChB,IAAIkB,QAAQ,GAAGD,QAAQ,GAAG7C,mBAAmB,CAAC6C,QAAQ,CAAC,GAAG9C,QAAQ,CAACgD,KAAK,EAAE;IAC1E,IAAI,IAAI,CAAChC,MAAM,EAAE;MACb+B,QAAQ,GAAG/C,QAAQ,CAACiD,SAAS,CAAC7C,SAAS,CAACJ,QAAQ,CAACkD,OAAO,CAACH,QAAQ,CAAC,EAAE,IAAI,CAAC/B,MAAM,CAACC,OAAO,CAACkC,IAAI,CAAC,IAAI,CAACnC,MAAM,CAAC,CAAC,CAAC;IAC/G;IACA,OAAOhB,QAAQ,CAACoD,GAAG,CAACL,QAAQ,EAAE,UAAUM,WAAW,EAAE;MACjD,IAAInB,IAAI,GAAGL,KAAK,CAACpB,KAAK,CAAC6C,GAAG,CAACD,WAAW,CAAClC,OAAO,CAAC;MAC/C,IAAI,CAACe,IAAI,IAAIL,KAAK,CAACT,gBAAgB,EAAE;QACjC,IAAIiB,EAAE,GAAGR,KAAK,CAACT,gBAAgB,CAACkB,KAAK,CAACe,WAAW,CAAClC,OAAO,CAAC,CAACoB,QAAQ,EAAE;QACrEL,IAAI,GAAGL,KAAK,CAAClB,eAAe,CAAC2C,GAAG,CAACjB,EAAE,CAAC;MACxC;MACA,IAAI,CAACH,IAAI,EAAE;QACP,OAAOxD,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2E,WAAW,CAAC,EAAE;UAAE/B,QAAQ,EAAEO,KAAK,CAACD,qBAAqB,CAACyB,WAAW,CAAC/B,QAAQ;QAAE,CAAC,CAAC;MAC/G;MACA,IAAIiC,WAAW,GAAG,OAAOF,WAAW,CAACE,WAAW,KAAK,SAAS,GAAGF,WAAW,CAACE,WAAW,GAAGrB,IAAI,CAACqB,WAAW;MAC3G,IAAIC,SAAS,GAAG,OAAOH,WAAW,CAACG,SAAS,KAAK,WAAW,GAAGH,WAAW,CAACG,SAAS,GAAGtB,IAAI,CAACsB,SAAS;MACrG,OAAO9E,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2E,WAAW,CAAC,EAAE;QAAEE,WAAW,EAAEA,WAAW;QACjEC,SAAS,EAAEA,SAAS;QAAElC,QAAQ,EAAEO,KAAK,CAACD,qBAAqB,CAACyB,WAAW,CAAC/B,QAAQ;MAAE,CAAC,CAAC;IAC5F,CAAC,CAAC;EACN,CAAC;EACDjB,eAAe,CAACjB,SAAS,CAACqE,QAAQ,GAAG,UAAUtC,OAAO,EAAE;IACpD,IAAIM,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,IAAI,CAACP,KAAK,CAAC6C,QAAQ,CAAChC,QAAQ,CAAC;EACjC,CAAC;EACDpB,eAAe,CAACjB,SAAS,CAACqD,GAAG,GAAG,UAAUtB,OAAO,EAAE;IAC/C,OAAO,IAAI,CAACV,KAAK,CAACgC,GAAG,CAACtB,OAAO,CAAC;EAClC,CAAC;EACDd,eAAe,CAACjB,SAAS,CAACsE,YAAY,GAAG,UAAUvC,OAAO,EAAE;IACxD,IAAIM,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,OAAO,IAAI,CAACP,KAAK,CAAC8C,YAAY,CAACjC,QAAQ,CAAC;EAC5C,CAAC;EACDpB,eAAe,CAACjB,SAAS,CAACuE,kBAAkB,GAAG,UAAUxC,OAAO,EAAE;IAC9D,IAAIM,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,OAAO,IAAI,CAACP,KAAK,CAAC+C,kBAAkB,CAAClC,QAAQ,CAAC;EAClD,CAAC;EACDpB,eAAe,CAACjB,SAAS,CAACwE,aAAa,GAAG,UAAUzC,OAAO,EAAE;IACzD,IAAIM,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,OAAO,IAAI,CAACP,KAAK,CAACgD,aAAa,CAACnC,QAAQ,CAAC;EAC7C,CAAC;EACDpB,eAAe,CAACjB,SAAS,CAACyE,cAAc,GAAG,UAAU1C,OAAO,EAAEoC,WAAW,EAAE;IACvE,IAAI9B,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,OAAO,IAAI,CAACP,KAAK,CAACiD,cAAc,CAACpC,QAAQ,EAAE8B,WAAW,CAAC;EAC3D,CAAC;EACDlD,eAAe,CAACjB,SAAS,CAAC0E,WAAW,GAAG,UAAU3C,OAAO,EAAE;IACvD,IAAIM,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,OAAO,IAAI,CAACP,KAAK,CAACkD,WAAW,CAACrC,QAAQ,CAAC;EAC3C,CAAC;EACDpB,eAAe,CAACjB,SAAS,CAAC2E,YAAY,GAAG,UAAU5C,OAAO,EAAEqC,SAAS,EAAEQ,SAAS,EAAE;IAC9E,IAAIvC,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,OAAO,IAAI,CAACP,KAAK,CAACmD,YAAY,CAACtC,QAAQ,EAAE+B,SAAS,EAAEQ,SAAS,CAAC;EAClE,CAAC;EACD3D,eAAe,CAACjB,SAAS,CAAC6E,QAAQ,GAAG,UAAU9C,OAAO,EAAE;IACpD,IAAIM,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAAC;IAC/C,IAAI,CAACP,KAAK,CAACqD,QAAQ,CAACxC,QAAQ,CAAC;EACjC,CAAC;EACDpB,eAAe,CAACjB,SAAS,CAAC8E,QAAQ,GAAG,YAAY;IAC7C,IAAI,CAACtD,KAAK,CAACsD,QAAQ,EAAE;EACzB,CAAC;EACD7D,eAAe,CAACjB,SAAS,CAAC+E,OAAO,GAAG,UAAUhD,OAAO,EAAE;IACnD,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MAAEA,OAAO,GAAG,IAAI;IAAE;IAC1C,IAAIA,OAAO,KAAK,IAAI,EAAE;MAClB,OAAO,IAAI,CAACP,KAAK,CAACuD,OAAO,CAAC,IAAI,CAACvD,KAAK,CAACwD,OAAO,CAAC;IACjD;IACA,IAAIlC,IAAI,GAAG,IAAI,CAACzB,KAAK,CAAC6C,GAAG,CAACnC,OAAO,CAAC;IAClC,IAAI,CAACe,IAAI,EAAE;MACP,MAAM,IAAI/B,SAAS,CAAC,IAAI,CAACG,IAAI,EAAE,0BAA0B,GAAGa,OAAO,CAAC;IACxE;IACA,OAAOe,IAAI;EACf,CAAC;EACD7B,eAAe,CAACjB,SAAS,CAACiF,eAAe,GAAG,UAAUnC,IAAI,EAAE;IACxD,OAAOA,IAAI,CAACf,OAAO;EACvB,CAAC;EACDd,eAAe,CAACjB,SAAS,CAACkF,qBAAqB,GAAG,UAAUnD,OAAO,EAAE;IACjE,IAAIA,OAAO,KAAK,IAAI,EAAE;MAClB,MAAM,IAAIhB,SAAS,CAAC,IAAI,CAACG,IAAI,EAAE,oCAAoC,CAAC;IACxE;IACA,IAAI4B,IAAI,GAAG,IAAI,CAACzB,KAAK,CAAC6C,GAAG,CAACnC,OAAO,CAAC;IAClC,IAAI,CAACe,IAAI,EAAE;MACP,MAAM,IAAI/B,SAAS,CAAC,IAAI,CAACG,IAAI,EAAE,0BAA0B,GAAGa,OAAO,CAAC;IACxE;IACA,IAAIM,QAAQ,GAAG,IAAI,CAACb,KAAK,CAACyD,eAAe,CAACnC,IAAI,CAAC;IAC/C,IAAIqC,cAAc,GAAG,IAAI,CAAC3D,KAAK,CAAC0D,qBAAqB,CAAC7C,QAAQ,CAAC;IAC/D,IAAI+C,MAAM,GAAG,IAAI,CAAC5D,KAAK,CAACuD,OAAO,CAACI,cAAc,CAAC;IAC/C,OAAOC,MAAM,CAACrD,OAAO;EACzB,CAAC;EACDd,eAAe,CAACjB,SAAS,CAACsC,kBAAkB,GAAG,UAAUP,OAAO,EAAE;IAC9D,IAAIA,OAAO,KAAK,IAAI,EAAE;MAClB,OAAO,EAAE;IACb;IACA,IAAIe,IAAI,GAAG,IAAI,CAACzB,KAAK,CAAC6C,GAAG,CAACnC,OAAO,CAAC;IAClC,IAAI,CAACe,IAAI,EAAE;MACP,MAAM,IAAI/B,SAAS,CAAC,IAAI,CAACG,IAAI,EAAE,0BAA0B,GAAGa,OAAO,CAAC;IACxE;IACA,OAAO,IAAI,CAACP,KAAK,CAACyD,eAAe,CAACnC,IAAI,CAAC;EAC3C,CAAC;EACD,OAAO7B,eAAe;AAC1B,CAAC,EAAG;AACJ,SAASA,eAAe"},"metadata":{},"sourceType":"module"}