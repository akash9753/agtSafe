{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n  return r;\n};\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport * as types from '../../../base/common/types.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { OVERRIDE_PROPERTY_PATTERN } from './configurationRegistry.js';\nimport { overrideIdentifierFromKey, addToValueTree, toValuesTree, getConfigurationValue, getDefaultValues, getConfigurationKeys, removeFromValueTree } from './configuration.js';\nvar ConfigurationModel = /** @class */function () {\n  function ConfigurationModel(_contents, _keys, _overrides) {\n    if (_contents === void 0) {\n      _contents = {};\n    }\n    if (_keys === void 0) {\n      _keys = [];\n    }\n    if (_overrides === void 0) {\n      _overrides = [];\n    }\n    this._contents = _contents;\n    this._keys = _keys;\n    this._overrides = _overrides;\n    this.isFrozen = false;\n  }\n  Object.defineProperty(ConfigurationModel.prototype, \"contents\", {\n    get: function get() {\n      return this.checkAndFreeze(this._contents);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ConfigurationModel.prototype, \"overrides\", {\n    get: function get() {\n      return this.checkAndFreeze(this._overrides);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ConfigurationModel.prototype, \"keys\", {\n    get: function get() {\n      return this.checkAndFreeze(this._keys);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ConfigurationModel.prototype.isEmpty = function () {\n    return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n  };\n  ConfigurationModel.prototype.getValue = function (section) {\n    return section ? getConfigurationValue(this.contents, section) : this.contents;\n  };\n  ConfigurationModel.prototype.getOverrideValue = function (section, overrideIdentifier) {\n    var overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n    return overrideContents ? section ? getConfigurationValue(overrideContents, section) : overrideContents : undefined;\n  };\n  ConfigurationModel.prototype.override = function (identifier) {\n    var overrideContents = this.getContentsForOverrideIdentifer(identifier);\n    if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n      // If there are no valid overrides, return self\n      return this;\n    }\n    var contents = {};\n    for (var _i = 0, _a = arrays.distinct(__spreadArrays(Object.keys(this.contents), Object.keys(overrideContents))); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var contentsForKey = this.contents[key];\n      var overrideContentsForKey = overrideContents[key];\n      // If there are override contents for the key, clone and merge otherwise use base contents\n      if (overrideContentsForKey) {\n        // Clone and merge only if base contents and override contents are of type object otherwise just override\n        if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n          contentsForKey = objects.deepClone(contentsForKey);\n          this.mergeContents(contentsForKey, overrideContentsForKey);\n        } else {\n          contentsForKey = overrideContentsForKey;\n        }\n      }\n      contents[key] = contentsForKey;\n    }\n    return new ConfigurationModel(contents, this.keys, this.overrides);\n  };\n  ConfigurationModel.prototype.merge = function () {\n    var others = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      others[_i] = arguments[_i];\n    }\n    var contents = objects.deepClone(this.contents);\n    var overrides = objects.deepClone(this.overrides);\n    var keys = __spreadArrays(this.keys);\n    for (var _a = 0, others_1 = others; _a < others_1.length; _a++) {\n      var other = others_1[_a];\n      this.mergeContents(contents, other.contents);\n      var _loop_1 = function _loop_1(otherOverride) {\n        var override = overrides.filter(function (o) {\n          return arrays.equals(o.identifiers, otherOverride.identifiers);\n        })[0];\n        if (override) {\n          this_1.mergeContents(override.contents, otherOverride.contents);\n        } else {\n          overrides.push(objects.deepClone(otherOverride));\n        }\n      };\n      var this_1 = this;\n      for (var _b = 0, _c = other.overrides; _b < _c.length; _b++) {\n        var otherOverride = _c[_b];\n        _loop_1(otherOverride);\n      }\n      for (var _d = 0, _e = other.keys; _d < _e.length; _d++) {\n        var key = _e[_d];\n        if (keys.indexOf(key) === -1) {\n          keys.push(key);\n        }\n      }\n    }\n    return new ConfigurationModel(contents, keys, overrides);\n  };\n  ConfigurationModel.prototype.freeze = function () {\n    this.isFrozen = true;\n    return this;\n  };\n  ConfigurationModel.prototype.mergeContents = function (source, target) {\n    for (var _i = 0, _a = Object.keys(target); _i < _a.length; _i++) {\n      var key = _a[_i];\n      if (key in source) {\n        if (types.isObject(source[key]) && types.isObject(target[key])) {\n          this.mergeContents(source[key], target[key]);\n          continue;\n        }\n      }\n      source[key] = objects.deepClone(target[key]);\n    }\n  };\n  ConfigurationModel.prototype.checkAndFreeze = function (data) {\n    if (this.isFrozen && !Object.isFrozen(data)) {\n      return objects.deepFreeze(data);\n    }\n    return data;\n  };\n  ConfigurationModel.prototype.getContentsForOverrideIdentifer = function (identifier) {\n    for (var _i = 0, _a = this.overrides; _i < _a.length; _i++) {\n      var override = _a[_i];\n      if (override.identifiers.indexOf(identifier) !== -1) {\n        return override.contents;\n      }\n    }\n    return null;\n  };\n  ConfigurationModel.prototype.toJSON = function () {\n    return {\n      contents: this.contents,\n      overrides: this.overrides,\n      keys: this.keys\n    };\n  };\n  // Update methods\n  ConfigurationModel.prototype.setValue = function (key, value) {\n    this.addKey(key);\n    addToValueTree(this.contents, key, value, function (e) {\n      throw new Error(e);\n    });\n  };\n  ConfigurationModel.prototype.removeValue = function (key) {\n    if (this.removeKey(key)) {\n      removeFromValueTree(this.contents, key);\n    }\n  };\n  ConfigurationModel.prototype.addKey = function (key) {\n    var index = this.keys.length;\n    for (var i = 0; i < index; i++) {\n      if (key.indexOf(this.keys[i]) === 0) {\n        index = i;\n      }\n    }\n    this.keys.splice(index, 1, key);\n  };\n  ConfigurationModel.prototype.removeKey = function (key) {\n    var index = this.keys.indexOf(key);\n    if (index !== -1) {\n      this.keys.splice(index, 1);\n      return true;\n    }\n    return false;\n  };\n  return ConfigurationModel;\n}();\nexport { ConfigurationModel };\nvar DefaultConfigurationModel = /** @class */function (_super) {\n  __extends(DefaultConfigurationModel, _super);\n  function DefaultConfigurationModel() {\n    var _this = this;\n    var contents = getDefaultValues();\n    var keys = getConfigurationKeys();\n    var overrides = [];\n    for (var _i = 0, _a = Object.keys(contents); _i < _a.length; _i++) {\n      var key = _a[_i];\n      if (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n        overrides.push({\n          identifiers: [overrideIdentifierFromKey(key).trim()],\n          keys: Object.keys(contents[key]),\n          contents: toValuesTree(contents[key], function (message) {\n            return console.error(\"Conflict in default settings file: \" + message);\n          })\n        });\n      }\n    }\n    _this = _super.call(this, contents, keys, overrides) || this;\n    return _this;\n  }\n  return DefaultConfigurationModel;\n}(ConfigurationModel);\nexport { DefaultConfigurationModel };\nvar Configuration = /** @class */function () {\n  function Configuration(_defaultConfiguration, _localUserConfiguration, _remoteUserConfiguration, _workspaceConfiguration, _folderConfigurations, _memoryConfiguration, _memoryConfigurationByResource, _freeze) {\n    if (_remoteUserConfiguration === void 0) {\n      _remoteUserConfiguration = new ConfigurationModel();\n    }\n    if (_workspaceConfiguration === void 0) {\n      _workspaceConfiguration = new ConfigurationModel();\n    }\n    if (_folderConfigurations === void 0) {\n      _folderConfigurations = new ResourceMap();\n    }\n    if (_memoryConfiguration === void 0) {\n      _memoryConfiguration = new ConfigurationModel();\n    }\n    if (_memoryConfigurationByResource === void 0) {\n      _memoryConfigurationByResource = new ResourceMap();\n    }\n    if (_freeze === void 0) {\n      _freeze = true;\n    }\n    this._defaultConfiguration = _defaultConfiguration;\n    this._localUserConfiguration = _localUserConfiguration;\n    this._remoteUserConfiguration = _remoteUserConfiguration;\n    this._workspaceConfiguration = _workspaceConfiguration;\n    this._folderConfigurations = _folderConfigurations;\n    this._memoryConfiguration = _memoryConfiguration;\n    this._memoryConfigurationByResource = _memoryConfigurationByResource;\n    this._freeze = _freeze;\n    this._workspaceConsolidatedConfiguration = null;\n    this._foldersConsolidatedConfigurations = new ResourceMap();\n    this._userConfiguration = null;\n  }\n  Configuration.prototype.getValue = function (section, overrides, workspace) {\n    var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n    return consolidateConfigurationModel.getValue(section);\n  };\n  Configuration.prototype.updateValue = function (key, value, overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n    var memoryConfiguration;\n    if (overrides.resource) {\n      memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n      if (!memoryConfiguration) {\n        memoryConfiguration = new ConfigurationModel();\n        this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n      }\n    } else {\n      memoryConfiguration = this._memoryConfiguration;\n    }\n    if (value === undefined) {\n      memoryConfiguration.removeValue(key);\n    } else {\n      memoryConfiguration.setValue(key, value);\n    }\n    if (!overrides.resource) {\n      this._workspaceConsolidatedConfiguration = null;\n    }\n  };\n  Configuration.prototype.inspect = function (key, overrides, workspace) {\n    var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n    var folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n    var memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n    var defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key);\n    var userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.userConfiguration.freeze().getValue(key);\n    var userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.localUserConfiguration.freeze().getValue(key);\n    var userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.remoteUserConfiguration.freeze().getValue(key);\n    var workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n    var workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined;\n    var memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key);\n    var value = consolidateConfigurationModel.getValue(key);\n    var overrideIdentifiers = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(function (override) {\n      return override.identifiers;\n    }))).filter(function (overrideIdentifier) {\n      return consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined;\n    });\n    return {\n      defaultValue: defaultValue,\n      userValue: userValue,\n      userLocalValue: userLocalValue,\n      userRemoteValue: userRemoteValue,\n      workspaceValue: workspaceValue,\n      workspaceFolderValue: workspaceFolderValue,\n      memoryValue: memoryValue,\n      value: value,\n      default: defaultValue !== undefined ? {\n        value: this._defaultConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      user: userValue !== undefined ? {\n        value: this.userConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      userLocal: userLocalValue !== undefined ? {\n        value: this.localUserConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      userRemote: userRemoteValue !== undefined ? {\n        value: this.remoteUserConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      workspace: workspaceValue !== undefined ? {\n        value: this._workspaceConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      workspaceFolder: workspaceFolderValue !== undefined ? {\n        value: folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      memory: memoryValue !== undefined ? {\n        value: memoryConfigurationModel.getValue(key),\n        override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      overrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n    };\n  };\n  Object.defineProperty(Configuration.prototype, \"userConfiguration\", {\n    get: function get() {\n      if (!this._userConfiguration) {\n        this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n        if (this._freeze) {\n          this._userConfiguration.freeze();\n        }\n      }\n      return this._userConfiguration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Configuration.prototype, \"localUserConfiguration\", {\n    get: function get() {\n      return this._localUserConfiguration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Configuration.prototype, \"remoteUserConfiguration\", {\n    get: function get() {\n      return this._remoteUserConfiguration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Configuration.prototype.getConsolidateConfigurationModel = function (overrides, workspace) {\n    var configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n    return overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n  };\n  Configuration.prototype.getConsolidatedConfigurationModelForResource = function (_a, workspace) {\n    var resource = _a.resource;\n    var consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n    if (workspace && resource) {\n      var root = workspace.getFolder(resource);\n      if (root) {\n        consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n      }\n      var memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n      if (memoryConfigurationForResource) {\n        consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n      }\n    }\n    return consolidateConfiguration;\n  };\n  Configuration.prototype.getWorkspaceConsolidatedConfiguration = function () {\n    if (!this._workspaceConsolidatedConfiguration) {\n      this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n      if (this._freeze) {\n        this._workspaceConfiguration = this._workspaceConfiguration.freeze();\n      }\n    }\n    return this._workspaceConsolidatedConfiguration;\n  };\n  Configuration.prototype.getFolderConsolidatedConfiguration = function (folder) {\n    var folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n    if (!folderConsolidatedConfiguration) {\n      var workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n      var folderConfiguration = this._folderConfigurations.get(folder);\n      if (folderConfiguration) {\n        folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n        if (this._freeze) {\n          folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n        }\n        this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n      } else {\n        folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n      }\n    }\n    return folderConsolidatedConfiguration;\n  };\n  Configuration.prototype.getFolderConfigurationModelForResource = function (resource, workspace) {\n    if (workspace && resource) {\n      var root = workspace.getFolder(resource);\n      if (root) {\n        return this._folderConfigurations.get(root.uri);\n      }\n    }\n    return undefined;\n  };\n  return Configuration;\n}();\nexport { Configuration };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","ResourceMap","arrays","types","objects","OVERRIDE_PROPERTY_PATTERN","overrideIdentifierFromKey","addToValueTree","toValuesTree","getConfigurationValue","getDefaultValues","getConfigurationKeys","removeFromValueTree","ConfigurationModel","_contents","_keys","_overrides","isFrozen","defineProperty","get","checkAndFreeze","enumerable","configurable","isEmpty","keys","getValue","section","contents","getOverrideValue","overrideIdentifier","overrideContents","getContentsForOverrideIdentifer","undefined","override","identifier","_i","_a","distinct","key","contentsForKey","overrideContentsForKey","deepClone","mergeContents","overrides","merge","others","others_1","other","_loop_1","otherOverride","filter","o","equals","identifiers","this_1","push","_b","_c","_d","_e","indexOf","freeze","source","target","isObject","data","deepFreeze","toJSON","setValue","value","addKey","e","Error","removeValue","removeKey","index","splice","DefaultConfigurationModel","_super","_this","test","trim","message","console","error","call","Configuration","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","consolidateConfigurationModel","getConsolidateConfigurationModel","updateValue","memoryConfiguration","resource","set","inspect","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","defaultValue","userValue","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","workspaceValue","workspaceFolderValue","memoryValue","overrideIdentifiers","flatten","map","default","user","userLocal","userRemote","workspaceFolder","memory","configurationModel","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","root","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { OVERRIDE_PROPERTY_PATTERN } from './configurationRegistry.js';\r\nimport { overrideIdentifierFromKey, addToValueTree, toValuesTree, getConfigurationValue, getDefaultValues, getConfigurationKeys, removeFromValueTree } from './configuration.js';\r\nvar ConfigurationModel = /** @class */ (function () {\r\n    function ConfigurationModel(_contents, _keys, _overrides) {\r\n        if (_contents === void 0) { _contents = {}; }\r\n        if (_keys === void 0) { _keys = []; }\r\n        if (_overrides === void 0) { _overrides = []; }\r\n        this._contents = _contents;\r\n        this._keys = _keys;\r\n        this._overrides = _overrides;\r\n        this.isFrozen = false;\r\n    }\r\n    Object.defineProperty(ConfigurationModel.prototype, \"contents\", {\r\n        get: function () {\r\n            return this.checkAndFreeze(this._contents);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationModel.prototype, \"overrides\", {\r\n        get: function () {\r\n            return this.checkAndFreeze(this._overrides);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationModel.prototype, \"keys\", {\r\n        get: function () {\r\n            return this.checkAndFreeze(this._keys);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConfigurationModel.prototype.isEmpty = function () {\r\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\r\n    };\r\n    ConfigurationModel.prototype.getValue = function (section) {\r\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\r\n    };\r\n    ConfigurationModel.prototype.getOverrideValue = function (section, overrideIdentifier) {\r\n        var overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\r\n        return overrideContents\r\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\r\n            : undefined;\r\n    };\r\n    ConfigurationModel.prototype.override = function (identifier) {\r\n        var overrideContents = this.getContentsForOverrideIdentifer(identifier);\r\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\r\n            // If there are no valid overrides, return self\r\n            return this;\r\n        }\r\n        var contents = {};\r\n        for (var _i = 0, _a = arrays.distinct(__spreadArrays(Object.keys(this.contents), Object.keys(overrideContents))); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            var contentsForKey = this.contents[key];\r\n            var overrideContentsForKey = overrideContents[key];\r\n            // If there are override contents for the key, clone and merge otherwise use base contents\r\n            if (overrideContentsForKey) {\r\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\r\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\r\n                    contentsForKey = objects.deepClone(contentsForKey);\r\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\r\n                }\r\n                else {\r\n                    contentsForKey = overrideContentsForKey;\r\n                }\r\n            }\r\n            contents[key] = contentsForKey;\r\n        }\r\n        return new ConfigurationModel(contents, this.keys, this.overrides);\r\n    };\r\n    ConfigurationModel.prototype.merge = function () {\r\n        var others = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            others[_i] = arguments[_i];\r\n        }\r\n        var contents = objects.deepClone(this.contents);\r\n        var overrides = objects.deepClone(this.overrides);\r\n        var keys = __spreadArrays(this.keys);\r\n        for (var _a = 0, others_1 = others; _a < others_1.length; _a++) {\r\n            var other = others_1[_a];\r\n            this.mergeContents(contents, other.contents);\r\n            var _loop_1 = function (otherOverride) {\r\n                var override = overrides.filter(function (o) { return arrays.equals(o.identifiers, otherOverride.identifiers); })[0];\r\n                if (override) {\r\n                    this_1.mergeContents(override.contents, otherOverride.contents);\r\n                }\r\n                else {\r\n                    overrides.push(objects.deepClone(otherOverride));\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = other.overrides; _b < _c.length; _b++) {\r\n                var otherOverride = _c[_b];\r\n                _loop_1(otherOverride);\r\n            }\r\n            for (var _d = 0, _e = other.keys; _d < _e.length; _d++) {\r\n                var key = _e[_d];\r\n                if (keys.indexOf(key) === -1) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n        }\r\n        return new ConfigurationModel(contents, keys, overrides);\r\n    };\r\n    ConfigurationModel.prototype.freeze = function () {\r\n        this.isFrozen = true;\r\n        return this;\r\n    };\r\n    ConfigurationModel.prototype.mergeContents = function (source, target) {\r\n        for (var _i = 0, _a = Object.keys(target); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            if (key in source) {\r\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\r\n                    this.mergeContents(source[key], target[key]);\r\n                    continue;\r\n                }\r\n            }\r\n            source[key] = objects.deepClone(target[key]);\r\n        }\r\n    };\r\n    ConfigurationModel.prototype.checkAndFreeze = function (data) {\r\n        if (this.isFrozen && !Object.isFrozen(data)) {\r\n            return objects.deepFreeze(data);\r\n        }\r\n        return data;\r\n    };\r\n    ConfigurationModel.prototype.getContentsForOverrideIdentifer = function (identifier) {\r\n        for (var _i = 0, _a = this.overrides; _i < _a.length; _i++) {\r\n            var override = _a[_i];\r\n            if (override.identifiers.indexOf(identifier) !== -1) {\r\n                return override.contents;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    ConfigurationModel.prototype.toJSON = function () {\r\n        return {\r\n            contents: this.contents,\r\n            overrides: this.overrides,\r\n            keys: this.keys\r\n        };\r\n    };\r\n    // Update methods\r\n    ConfigurationModel.prototype.setValue = function (key, value) {\r\n        this.addKey(key);\r\n        addToValueTree(this.contents, key, value, function (e) { throw new Error(e); });\r\n    };\r\n    ConfigurationModel.prototype.removeValue = function (key) {\r\n        if (this.removeKey(key)) {\r\n            removeFromValueTree(this.contents, key);\r\n        }\r\n    };\r\n    ConfigurationModel.prototype.addKey = function (key) {\r\n        var index = this.keys.length;\r\n        for (var i = 0; i < index; i++) {\r\n            if (key.indexOf(this.keys[i]) === 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        this.keys.splice(index, 1, key);\r\n    };\r\n    ConfigurationModel.prototype.removeKey = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index !== -1) {\r\n            this.keys.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConfigurationModel;\r\n}());\r\nexport { ConfigurationModel };\r\nvar DefaultConfigurationModel = /** @class */ (function (_super) {\r\n    __extends(DefaultConfigurationModel, _super);\r\n    function DefaultConfigurationModel() {\r\n        var _this = this;\r\n        var contents = getDefaultValues();\r\n        var keys = getConfigurationKeys();\r\n        var overrides = [];\r\n        for (var _i = 0, _a = Object.keys(contents); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            if (OVERRIDE_PROPERTY_PATTERN.test(key)) {\r\n                overrides.push({\r\n                    identifiers: [overrideIdentifierFromKey(key).trim()],\r\n                    keys: Object.keys(contents[key]),\r\n                    contents: toValuesTree(contents[key], function (message) { return console.error(\"Conflict in default settings file: \" + message); }),\r\n                });\r\n            }\r\n        }\r\n        _this = _super.call(this, contents, keys, overrides) || this;\r\n        return _this;\r\n    }\r\n    return DefaultConfigurationModel;\r\n}(ConfigurationModel));\r\nexport { DefaultConfigurationModel };\r\nvar Configuration = /** @class */ (function () {\r\n    function Configuration(_defaultConfiguration, _localUserConfiguration, _remoteUserConfiguration, _workspaceConfiguration, _folderConfigurations, _memoryConfiguration, _memoryConfigurationByResource, _freeze) {\r\n        if (_remoteUserConfiguration === void 0) { _remoteUserConfiguration = new ConfigurationModel(); }\r\n        if (_workspaceConfiguration === void 0) { _workspaceConfiguration = new ConfigurationModel(); }\r\n        if (_folderConfigurations === void 0) { _folderConfigurations = new ResourceMap(); }\r\n        if (_memoryConfiguration === void 0) { _memoryConfiguration = new ConfigurationModel(); }\r\n        if (_memoryConfigurationByResource === void 0) { _memoryConfigurationByResource = new ResourceMap(); }\r\n        if (_freeze === void 0) { _freeze = true; }\r\n        this._defaultConfiguration = _defaultConfiguration;\r\n        this._localUserConfiguration = _localUserConfiguration;\r\n        this._remoteUserConfiguration = _remoteUserConfiguration;\r\n        this._workspaceConfiguration = _workspaceConfiguration;\r\n        this._folderConfigurations = _folderConfigurations;\r\n        this._memoryConfiguration = _memoryConfiguration;\r\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\r\n        this._freeze = _freeze;\r\n        this._workspaceConsolidatedConfiguration = null;\r\n        this._foldersConsolidatedConfigurations = new ResourceMap();\r\n        this._userConfiguration = null;\r\n    }\r\n    Configuration.prototype.getValue = function (section, overrides, workspace) {\r\n        var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\r\n        return consolidateConfigurationModel.getValue(section);\r\n    };\r\n    Configuration.prototype.updateValue = function (key, value, overrides) {\r\n        if (overrides === void 0) { overrides = {}; }\r\n        var memoryConfiguration;\r\n        if (overrides.resource) {\r\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\r\n            if (!memoryConfiguration) {\r\n                memoryConfiguration = new ConfigurationModel();\r\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\r\n            }\r\n        }\r\n        else {\r\n            memoryConfiguration = this._memoryConfiguration;\r\n        }\r\n        if (value === undefined) {\r\n            memoryConfiguration.removeValue(key);\r\n        }\r\n        else {\r\n            memoryConfiguration.setValue(key, value);\r\n        }\r\n        if (!overrides.resource) {\r\n            this._workspaceConsolidatedConfiguration = null;\r\n        }\r\n    };\r\n    Configuration.prototype.inspect = function (key, overrides, workspace) {\r\n        var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\r\n        var folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\r\n        var memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\r\n        var defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key);\r\n        var userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.userConfiguration.freeze().getValue(key);\r\n        var userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.localUserConfiguration.freeze().getValue(key);\r\n        var userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.remoteUserConfiguration.freeze().getValue(key);\r\n        var workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\r\n        var workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined;\r\n        var memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key);\r\n        var value = consolidateConfigurationModel.getValue(key);\r\n        var overrideIdentifiers = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(function (override) { return override.identifiers; }))).filter(function (overrideIdentifier) { return consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined; });\r\n        return {\r\n            defaultValue: defaultValue,\r\n            userValue: userValue,\r\n            userLocalValue: userLocalValue,\r\n            userRemoteValue: userRemoteValue,\r\n            workspaceValue: workspaceValue,\r\n            workspaceFolderValue: workspaceFolderValue,\r\n            memoryValue: memoryValue,\r\n            value: value,\r\n            default: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            user: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            userLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            userRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            workspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            workspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            memory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            overrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\r\n        };\r\n    };\r\n    Object.defineProperty(Configuration.prototype, \"userConfiguration\", {\r\n        get: function () {\r\n            if (!this._userConfiguration) {\r\n                this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\r\n                if (this._freeze) {\r\n                    this._userConfiguration.freeze();\r\n                }\r\n            }\r\n            return this._userConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Configuration.prototype, \"localUserConfiguration\", {\r\n        get: function () {\r\n            return this._localUserConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Configuration.prototype, \"remoteUserConfiguration\", {\r\n        get: function () {\r\n            return this._remoteUserConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Configuration.prototype.getConsolidateConfigurationModel = function (overrides, workspace) {\r\n        var configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\r\n        return overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\r\n    };\r\n    Configuration.prototype.getConsolidatedConfigurationModelForResource = function (_a, workspace) {\r\n        var resource = _a.resource;\r\n        var consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\r\n        if (workspace && resource) {\r\n            var root = workspace.getFolder(resource);\r\n            if (root) {\r\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\r\n            }\r\n            var memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\r\n            if (memoryConfigurationForResource) {\r\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\r\n            }\r\n        }\r\n        return consolidateConfiguration;\r\n    };\r\n    Configuration.prototype.getWorkspaceConsolidatedConfiguration = function () {\r\n        if (!this._workspaceConsolidatedConfiguration) {\r\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\r\n            if (this._freeze) {\r\n                this._workspaceConfiguration = this._workspaceConfiguration.freeze();\r\n            }\r\n        }\r\n        return this._workspaceConsolidatedConfiguration;\r\n    };\r\n    Configuration.prototype.getFolderConsolidatedConfiguration = function (folder) {\r\n        var folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\r\n        if (!folderConsolidatedConfiguration) {\r\n            var workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\r\n            var folderConfiguration = this._folderConfigurations.get(folder);\r\n            if (folderConfiguration) {\r\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\r\n                if (this._freeze) {\r\n                    folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\r\n                }\r\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\r\n            }\r\n            else {\r\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\r\n            }\r\n        }\r\n        return folderConsolidatedConfiguration;\r\n    };\r\n    Configuration.prototype.getFolderConfigurationModelForResource = function (resource, workspace) {\r\n        if (workspace && resource) {\r\n            var root = workspace.getFolder(resource);\r\n            if (root) {\r\n                return this._folderConfigurations.get(root.uri);\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return Configuration;\r\n}());\r\nexport { Configuration };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}