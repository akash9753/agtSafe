{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../common/core/range.js';\nvar ReplaceAllCommand = /** @class */function () {\n  function ReplaceAllCommand(editorSelection, ranges, replaceStrings) {\n    this._editorSelection = editorSelection;\n    this._ranges = ranges;\n    this._replaceStrings = replaceStrings;\n    this._trackedEditorSelectionId = null;\n  }\n  ReplaceAllCommand.prototype.getEditOperations = function (model, builder) {\n    if (this._ranges.length > 0) {\n      // Collect all edit operations\n      var ops = [];\n      for (var i = 0; i < this._ranges.length; i++) {\n        ops.push({\n          range: this._ranges[i],\n          text: this._replaceStrings[i]\n        });\n      }\n      // Sort them in ascending order by range starts\n      ops.sort(function (o1, o2) {\n        return Range.compareRangesUsingStarts(o1.range, o2.range);\n      });\n      // Merge operations that touch each other\n      var resultOps = [];\n      var previousOp = ops[0];\n      for (var i = 1; i < ops.length; i++) {\n        if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n          // These operations are one after another and can be merged\n          previousOp.range = previousOp.range.plusRange(ops[i].range);\n          previousOp.text = previousOp.text + ops[i].text;\n        } else {\n          resultOps.push(previousOp);\n          previousOp = ops[i];\n        }\n      }\n      resultOps.push(previousOp);\n      for (var _i = 0, resultOps_1 = resultOps; _i < resultOps_1.length; _i++) {\n        var op = resultOps_1[_i];\n        builder.addEditOperation(op.range, op.text);\n      }\n    }\n    this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n  };\n  ReplaceAllCommand.prototype.computeCursorState = function (model, helper) {\n    return helper.getTrackedSelection(this._trackedEditorSelectionId);\n  };\n  return ReplaceAllCommand;\n}();\nexport { ReplaceAllCommand };","map":{"version":3,"names":["Range","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","prototype","getEditOperations","model","builder","length","ops","i","push","range","text","sort","o1","o2","compareRangesUsingStarts","resultOps","previousOp","endLineNumber","startLineNumber","endColumn","startColumn","plusRange","_i","resultOps_1","op","addEditOperation","trackSelection","computeCursorState","helper","getTrackedSelection"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/find/replaceAllCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nvar ReplaceAllCommand = /** @class */ (function () {\r\n    function ReplaceAllCommand(editorSelection, ranges, replaceStrings) {\r\n        this._editorSelection = editorSelection;\r\n        this._ranges = ranges;\r\n        this._replaceStrings = replaceStrings;\r\n        this._trackedEditorSelectionId = null;\r\n    }\r\n    ReplaceAllCommand.prototype.getEditOperations = function (model, builder) {\r\n        if (this._ranges.length > 0) {\r\n            // Collect all edit operations\r\n            var ops = [];\r\n            for (var i = 0; i < this._ranges.length; i++) {\r\n                ops.push({\r\n                    range: this._ranges[i],\r\n                    text: this._replaceStrings[i]\r\n                });\r\n            }\r\n            // Sort them in ascending order by range starts\r\n            ops.sort(function (o1, o2) {\r\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\r\n            });\r\n            // Merge operations that touch each other\r\n            var resultOps = [];\r\n            var previousOp = ops[0];\r\n            for (var i = 1; i < ops.length; i++) {\r\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\r\n                    // These operations are one after another and can be merged\r\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\r\n                    previousOp.text = previousOp.text + ops[i].text;\r\n                }\r\n                else {\r\n                    resultOps.push(previousOp);\r\n                    previousOp = ops[i];\r\n                }\r\n            }\r\n            resultOps.push(previousOp);\r\n            for (var _i = 0, resultOps_1 = resultOps; _i < resultOps_1.length; _i++) {\r\n                var op = resultOps_1[_i];\r\n                builder.addEditOperation(op.range, op.text);\r\n            }\r\n        }\r\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\r\n    };\r\n    ReplaceAllCommand.prototype.computeCursorState = function (model, helper) {\r\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\r\n    };\r\n    return ReplaceAllCommand;\r\n}());\r\nexport { ReplaceAllCommand };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,4BAA4B;AAClD,IAAIC,iBAAiB,GAAG,aAAe,YAAY;EAC/C,SAASA,iBAAiB,CAACC,eAAe,EAAEC,MAAM,EAAEC,cAAc,EAAE;IAChE,IAAI,CAACC,gBAAgB,GAAGH,eAAe;IACvC,IAAI,CAACI,OAAO,GAAGH,MAAM;IACrB,IAAI,CAACI,eAAe,GAAGH,cAAc;IACrC,IAAI,CAACI,yBAAyB,GAAG,IAAI;EACzC;EACAP,iBAAiB,CAACQ,SAAS,CAACC,iBAAiB,GAAG,UAAUC,KAAK,EAAEC,OAAO,EAAE;IACtE,IAAI,IAAI,CAACN,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;MACzB;MACA,IAAIC,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,OAAO,CAACO,MAAM,EAAEE,CAAC,EAAE,EAAE;QAC1CD,GAAG,CAACE,IAAI,CAAC;UACLC,KAAK,EAAE,IAAI,CAACX,OAAO,CAACS,CAAC,CAAC;UACtBG,IAAI,EAAE,IAAI,CAACX,eAAe,CAACQ,CAAC;QAChC,CAAC,CAAC;MACN;MACA;MACAD,GAAG,CAACK,IAAI,CAAC,UAAUC,EAAE,EAAEC,EAAE,EAAE;QACvB,OAAOrB,KAAK,CAACsB,wBAAwB,CAACF,EAAE,CAACH,KAAK,EAAEI,EAAE,CAACJ,KAAK,CAAC;MAC7D,CAAC,CAAC;MACF;MACA,IAAIM,SAAS,GAAG,EAAE;MAClB,IAAIC,UAAU,GAAGV,GAAG,CAAC,CAAC,CAAC;MACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACD,MAAM,EAAEE,CAAC,EAAE,EAAE;QACjC,IAAIS,UAAU,CAACP,KAAK,CAACQ,aAAa,KAAKX,GAAG,CAACC,CAAC,CAAC,CAACE,KAAK,CAACS,eAAe,IAAIF,UAAU,CAACP,KAAK,CAACU,SAAS,KAAKb,GAAG,CAACC,CAAC,CAAC,CAACE,KAAK,CAACW,WAAW,EAAE;UAC5H;UACAJ,UAAU,CAACP,KAAK,GAAGO,UAAU,CAACP,KAAK,CAACY,SAAS,CAACf,GAAG,CAACC,CAAC,CAAC,CAACE,KAAK,CAAC;UAC3DO,UAAU,CAACN,IAAI,GAAGM,UAAU,CAACN,IAAI,GAAGJ,GAAG,CAACC,CAAC,CAAC,CAACG,IAAI;QACnD,CAAC,MACI;UACDK,SAAS,CAACP,IAAI,CAACQ,UAAU,CAAC;UAC1BA,UAAU,GAAGV,GAAG,CAACC,CAAC,CAAC;QACvB;MACJ;MACAQ,SAAS,CAACP,IAAI,CAACQ,UAAU,CAAC;MAC1B,KAAK,IAAIM,EAAE,GAAG,CAAC,EAAEC,WAAW,GAAGR,SAAS,EAAEO,EAAE,GAAGC,WAAW,CAAClB,MAAM,EAAEiB,EAAE,EAAE,EAAE;QACrE,IAAIE,EAAE,GAAGD,WAAW,CAACD,EAAE,CAAC;QACxBlB,OAAO,CAACqB,gBAAgB,CAACD,EAAE,CAACf,KAAK,EAAEe,EAAE,CAACd,IAAI,CAAC;MAC/C;IACJ;IACA,IAAI,CAACV,yBAAyB,GAAGI,OAAO,CAACsB,cAAc,CAAC,IAAI,CAAC7B,gBAAgB,CAAC;EAClF,CAAC;EACDJ,iBAAiB,CAACQ,SAAS,CAAC0B,kBAAkB,GAAG,UAAUxB,KAAK,EAAEyB,MAAM,EAAE;IACtE,OAAOA,MAAM,CAACC,mBAAmB,CAAC,IAAI,CAAC7B,yBAAyB,CAAC;EACrE,CAAC;EACD,OAAOP,iBAAiB;AAC5B,CAAC,EAAG;AACJ,SAASA,iBAAiB"},"metadata":{},"sourceType":"module"}