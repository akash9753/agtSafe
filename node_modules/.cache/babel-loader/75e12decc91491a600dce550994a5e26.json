{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as arrays from '../../../base/common/arrays.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { LineTokens } from '../core/lineTokens.js';\nimport { Position } from '../core/position.js';\nimport { TokenizationRegistry } from '../modes.js';\nimport { nullTokenize2 } from '../modes/nullMode.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { MultilineTokensBuilder, countEOL } from './tokensStore.js';\nimport * as platform from '../../../base/common/platform.js';\nvar TokenizationStateStore = /** @class */function () {\n  function TokenizationStateStore() {\n    this._beginState = [];\n    this._valid = [];\n    this._len = 0;\n    this._invalidLineStartIndex = 0;\n  }\n  TokenizationStateStore.prototype._reset = function (initialState) {\n    this._beginState = [];\n    this._valid = [];\n    this._len = 0;\n    this._invalidLineStartIndex = 0;\n    if (initialState) {\n      this._setBeginState(0, initialState);\n    }\n  };\n  TokenizationStateStore.prototype.flush = function (initialState) {\n    this._reset(initialState);\n  };\n  Object.defineProperty(TokenizationStateStore.prototype, \"invalidLineStartIndex\", {\n    get: function get() {\n      return this._invalidLineStartIndex;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TokenizationStateStore.prototype._invalidateLine = function (lineIndex) {\n    if (lineIndex < this._len) {\n      this._valid[lineIndex] = false;\n    }\n    if (lineIndex < this._invalidLineStartIndex) {\n      this._invalidLineStartIndex = lineIndex;\n    }\n  };\n  TokenizationStateStore.prototype._isValid = function (lineIndex) {\n    if (lineIndex < this._len) {\n      return this._valid[lineIndex];\n    }\n    return false;\n  };\n  TokenizationStateStore.prototype.getBeginState = function (lineIndex) {\n    if (lineIndex < this._len) {\n      return this._beginState[lineIndex];\n    }\n    return null;\n  };\n  TokenizationStateStore.prototype._ensureLine = function (lineIndex) {\n    while (lineIndex >= this._len) {\n      this._beginState[this._len] = null;\n      this._valid[this._len] = false;\n      this._len++;\n    }\n  };\n  TokenizationStateStore.prototype._deleteLines = function (start, deleteCount) {\n    if (deleteCount === 0) {\n      return;\n    }\n    if (start + deleteCount > this._len) {\n      deleteCount = this._len - start;\n    }\n    this._beginState.splice(start, deleteCount);\n    this._valid.splice(start, deleteCount);\n    this._len -= deleteCount;\n  };\n  TokenizationStateStore.prototype._insertLines = function (insertIndex, insertCount) {\n    if (insertCount === 0) {\n      return;\n    }\n    var beginState = [];\n    var valid = [];\n    for (var i = 0; i < insertCount; i++) {\n      beginState[i] = null;\n      valid[i] = false;\n    }\n    this._beginState = arrays.arrayInsert(this._beginState, insertIndex, beginState);\n    this._valid = arrays.arrayInsert(this._valid, insertIndex, valid);\n    this._len += insertCount;\n  };\n  TokenizationStateStore.prototype._setValid = function (lineIndex, valid) {\n    this._ensureLine(lineIndex);\n    this._valid[lineIndex] = valid;\n  };\n  TokenizationStateStore.prototype._setBeginState = function (lineIndex, beginState) {\n    this._ensureLine(lineIndex);\n    this._beginState[lineIndex] = beginState;\n  };\n  TokenizationStateStore.prototype.setEndState = function (linesLength, lineIndex, endState) {\n    this._setValid(lineIndex, true);\n    this._invalidLineStartIndex = lineIndex + 1;\n    // Check if this was the last line\n    if (lineIndex === linesLength - 1) {\n      return;\n    }\n    // Check if the end state has changed\n    var previousEndState = this.getBeginState(lineIndex + 1);\n    if (previousEndState === null || !endState.equals(previousEndState)) {\n      this._setBeginState(lineIndex + 1, endState);\n      this._invalidateLine(lineIndex + 1);\n      return;\n    }\n    // Perhaps we can skip tokenizing some lines...\n    var i = lineIndex + 1;\n    while (i < linesLength) {\n      if (!this._isValid(i)) {\n        break;\n      }\n      i++;\n    }\n    this._invalidLineStartIndex = i;\n  };\n  TokenizationStateStore.prototype.setFakeTokens = function (lineIndex) {\n    this._setValid(lineIndex, false);\n  };\n  //#region Editing\n  TokenizationStateStore.prototype.applyEdits = function (range, eolCount) {\n    var deletingLinesCnt = range.endLineNumber - range.startLineNumber;\n    var insertingLinesCnt = eolCount;\n    var editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n    for (var j = editingLinesCnt; j >= 0; j--) {\n      this._invalidateLine(range.startLineNumber + j - 1);\n    }\n    this._acceptDeleteRange(range);\n    this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount);\n  };\n  TokenizationStateStore.prototype._acceptDeleteRange = function (range) {\n    var firstLineIndex = range.startLineNumber - 1;\n    if (firstLineIndex >= this._len) {\n      return;\n    }\n    this._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n  };\n  TokenizationStateStore.prototype._acceptInsertText = function (position, eolCount) {\n    var lineIndex = position.lineNumber - 1;\n    if (lineIndex >= this._len) {\n      return;\n    }\n    this._insertLines(position.lineNumber, eolCount);\n  };\n  return TokenizationStateStore;\n}();\nexport { TokenizationStateStore };\nvar TextModelTokenization = /** @class */function (_super) {\n  __extends(TextModelTokenization, _super);\n  function TextModelTokenization(textModel) {\n    var _this = _super.call(this) || this;\n    _this._isDisposed = false;\n    _this._textModel = textModel;\n    _this._tokenizationStateStore = new TokenizationStateStore();\n    _this._tokenizationSupport = null;\n    _this._register(TokenizationRegistry.onDidChange(function (e) {\n      var languageIdentifier = _this._textModel.getLanguageIdentifier();\n      if (e.changedLanguages.indexOf(languageIdentifier.language) === -1) {\n        return;\n      }\n      _this._resetTokenizationState();\n      _this._textModel.clearTokens();\n    }));\n    _this._register(_this._textModel.onDidChangeRawContentFast(function (e) {\n      if (e.containsEvent(1 /* Flush */)) {\n        _this._resetTokenizationState();\n        return;\n      }\n    }));\n    _this._register(_this._textModel.onDidChangeContentFast(function (e) {\n      for (var i = 0, len = e.changes.length; i < len; i++) {\n        var change = e.changes[i];\n        var eolCount = countEOL(change.text)[0];\n        _this._tokenizationStateStore.applyEdits(change.range, eolCount);\n      }\n      _this._beginBackgroundTokenization();\n    }));\n    _this._register(_this._textModel.onDidChangeAttached(function () {\n      _this._beginBackgroundTokenization();\n    }));\n    _this._register(_this._textModel.onDidChangeLanguage(function () {\n      _this._resetTokenizationState();\n      _this._textModel.clearTokens();\n    }));\n    _this._resetTokenizationState();\n    return _this;\n  }\n  TextModelTokenization.prototype.dispose = function () {\n    this._isDisposed = true;\n    _super.prototype.dispose.call(this);\n  };\n  TextModelTokenization.prototype._resetTokenizationState = function () {\n    var _a = initializeTokenization(this._textModel),\n      tokenizationSupport = _a[0],\n      initialState = _a[1];\n    this._tokenizationSupport = tokenizationSupport;\n    this._tokenizationStateStore.flush(initialState);\n    this._beginBackgroundTokenization();\n  };\n  TextModelTokenization.prototype._beginBackgroundTokenization = function () {\n    var _this = this;\n    if (this._textModel.isAttachedToEditor() && this._hasLinesToTokenize()) {\n      platform.setImmediate(function () {\n        if (_this._isDisposed) {\n          // disposed in the meantime\n          return;\n        }\n        _this._revalidateTokensNow();\n      });\n    }\n  };\n  TextModelTokenization.prototype._revalidateTokensNow = function (toLineNumber) {\n    if (toLineNumber === void 0) {\n      toLineNumber = this._textModel.getLineCount();\n    }\n    var MAX_ALLOWED_TIME = 1;\n    var builder = new MultilineTokensBuilder();\n    var sw = StopWatch.create(false);\n    while (this._hasLinesToTokenize()) {\n      if (sw.elapsed() > MAX_ALLOWED_TIME) {\n        // Stop if MAX_ALLOWED_TIME is reached\n        break;\n      }\n      var tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n      if (tokenizedLineNumber >= toLineNumber) {\n        break;\n      }\n    }\n    this._beginBackgroundTokenization();\n    this._textModel.setTokens(builder.tokens);\n  };\n  TextModelTokenization.prototype.tokenizeViewport = function (startLineNumber, endLineNumber) {\n    var builder = new MultilineTokensBuilder();\n    this._tokenizeViewport(builder, startLineNumber, endLineNumber);\n    this._textModel.setTokens(builder.tokens);\n  };\n  TextModelTokenization.prototype.reset = function () {\n    this._resetTokenizationState();\n    this._textModel.clearTokens();\n  };\n  TextModelTokenization.prototype.forceTokenization = function (lineNumber) {\n    var builder = new MultilineTokensBuilder();\n    this._updateTokensUntilLine(builder, lineNumber);\n    this._textModel.setTokens(builder.tokens);\n  };\n  TextModelTokenization.prototype.isCheapToTokenize = function (lineNumber) {\n    if (!this._tokenizationSupport) {\n      return true;\n    }\n    var firstInvalidLineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n    if (lineNumber > firstInvalidLineNumber) {\n      return false;\n    }\n    if (lineNumber < firstInvalidLineNumber) {\n      return true;\n    }\n    if (this._textModel.getLineLength(lineNumber) < 2048 /* CHEAP_TOKENIZATION_LENGTH_LIMIT */) {\n      return true;\n    }\n    return false;\n  };\n  TextModelTokenization.prototype._hasLinesToTokenize = function () {\n    if (!this._tokenizationSupport) {\n      return false;\n    }\n    return this._tokenizationStateStore.invalidLineStartIndex < this._textModel.getLineCount();\n  };\n  TextModelTokenization.prototype._tokenizeOneInvalidLine = function (builder) {\n    if (!this._hasLinesToTokenize()) {\n      return this._textModel.getLineCount() + 1;\n    }\n    var lineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n    this._updateTokensUntilLine(builder, lineNumber);\n    return lineNumber;\n  };\n  TextModelTokenization.prototype._updateTokensUntilLine = function (builder, lineNumber) {\n    if (!this._tokenizationSupport) {\n      return;\n    }\n    var languageIdentifier = this._textModel.getLanguageIdentifier();\n    var linesLength = this._textModel.getLineCount();\n    var endLineIndex = lineNumber - 1;\n    // Validate all states up to and including endLineIndex\n    for (var lineIndex = this._tokenizationStateStore.invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\n      var text = this._textModel.getLineContent(lineIndex + 1);\n      var lineStartState = this._tokenizationStateStore.getBeginState(lineIndex);\n      var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, lineStartState);\n      builder.add(lineIndex + 1, r.tokens);\n      this._tokenizationStateStore.setEndState(linesLength, lineIndex, r.endState);\n      lineIndex = this._tokenizationStateStore.invalidLineStartIndex - 1; // -1 because the outer loop increments it\n    }\n  };\n\n  TextModelTokenization.prototype._tokenizeViewport = function (builder, startLineNumber, endLineNumber) {\n    if (!this._tokenizationSupport) {\n      // nothing to do\n      return;\n    }\n    if (endLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n      // nothing to do\n      return;\n    }\n    if (startLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n      // tokenization has reached the viewport start...\n      this._updateTokensUntilLine(builder, endLineNumber);\n      return;\n    }\n    var nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n    var fakeLines = [];\n    var initialState = null;\n    for (var i = startLineNumber - 1; nonWhitespaceColumn > 0 && i >= 1; i--) {\n      var newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\n      if (newNonWhitespaceIndex === 0) {\n        continue;\n      }\n      if (newNonWhitespaceIndex < nonWhitespaceColumn) {\n        initialState = this._tokenizationStateStore.getBeginState(i - 1);\n        if (initialState) {\n          break;\n        }\n        fakeLines.push(this._textModel.getLineContent(i));\n        nonWhitespaceColumn = newNonWhitespaceIndex;\n      }\n    }\n    if (!initialState) {\n      initialState = this._tokenizationSupport.getInitialState();\n    }\n    var languageIdentifier = this._textModel.getLanguageIdentifier();\n    var state = initialState;\n    for (var i = fakeLines.length - 1; i >= 0; i--) {\n      var r = safeTokenize(languageIdentifier, this._tokenizationSupport, fakeLines[i], state);\n      state = r.endState;\n    }\n    for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n      var text = this._textModel.getLineContent(lineNumber);\n      var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, state);\n      builder.add(lineNumber, r.tokens);\n      this._tokenizationStateStore.setFakeTokens(lineNumber - 1);\n      state = r.endState;\n    }\n  };\n  return TextModelTokenization;\n}(Disposable);\nexport { TextModelTokenization };\nfunction initializeTokenization(textModel) {\n  var languageIdentifier = textModel.getLanguageIdentifier();\n  var tokenizationSupport = textModel.isTooLargeForTokenization() ? null : TokenizationRegistry.get(languageIdentifier.language);\n  var initialState = null;\n  if (tokenizationSupport) {\n    try {\n      initialState = tokenizationSupport.getInitialState();\n    } catch (e) {\n      onUnexpectedError(e);\n      tokenizationSupport = null;\n    }\n  }\n  return [tokenizationSupport, initialState];\n}\nfunction safeTokenize(languageIdentifier, tokenizationSupport, text, state) {\n  var r = null;\n  if (tokenizationSupport) {\n    try {\n      r = tokenizationSupport.tokenize2(text, state.clone(), 0);\n    } catch (e) {\n      onUnexpectedError(e);\n    }\n  }\n  if (!r) {\n    r = nullTokenize2(languageIdentifier.id, text, state, 0);\n  }\n  LineTokens.convertToEndOffset(r.tokens, text.length);\n  return r;\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","arrays","onUnexpectedError","LineTokens","Position","TokenizationRegistry","nullTokenize2","Disposable","StopWatch","MultilineTokensBuilder","countEOL","platform","TokenizationStateStore","_beginState","_valid","_len","_invalidLineStartIndex","_reset","initialState","_setBeginState","flush","defineProperty","get","enumerable","configurable","_invalidateLine","lineIndex","_isValid","getBeginState","_ensureLine","_deleteLines","start","deleteCount","splice","_insertLines","insertIndex","insertCount","beginState","valid","i","arrayInsert","_setValid","setEndState","linesLength","endState","previousEndState","equals","setFakeTokens","applyEdits","range","eolCount","deletingLinesCnt","endLineNumber","startLineNumber","insertingLinesCnt","editingLinesCnt","Math","min","j","_acceptDeleteRange","_acceptInsertText","startColumn","firstLineIndex","position","lineNumber","TextModelTokenization","_super","textModel","_this","call","_isDisposed","_textModel","_tokenizationStateStore","_tokenizationSupport","_register","onDidChange","e","languageIdentifier","getLanguageIdentifier","changedLanguages","indexOf","language","_resetTokenizationState","clearTokens","onDidChangeRawContentFast","containsEvent","onDidChangeContentFast","len","changes","length","change","text","_beginBackgroundTokenization","onDidChangeAttached","onDidChangeLanguage","dispose","_a","initializeTokenization","tokenizationSupport","isAttachedToEditor","_hasLinesToTokenize","setImmediate","_revalidateTokensNow","toLineNumber","getLineCount","MAX_ALLOWED_TIME","builder","sw","elapsed","tokenizedLineNumber","_tokenizeOneInvalidLine","setTokens","tokens","tokenizeViewport","_tokenizeViewport","reset","forceTokenization","_updateTokensUntilLine","isCheapToTokenize","firstInvalidLineNumber","invalidLineStartIndex","getLineLength","endLineIndex","getLineContent","lineStartState","r","safeTokenize","add","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","fakeLines","newNonWhitespaceIndex","push","getInitialState","state","isTooLargeForTokenization","tokenize2","clone","id","convertToEndOffset"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/model/textModelTokens.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { LineTokens } from '../core/lineTokens.js';\r\nimport { Position } from '../core/position.js';\r\nimport { TokenizationRegistry } from '../modes.js';\r\nimport { nullTokenize2 } from '../modes/nullMode.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { MultilineTokensBuilder, countEOL } from './tokensStore.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nvar TokenizationStateStore = /** @class */ (function () {\r\n    function TokenizationStateStore() {\r\n        this._beginState = [];\r\n        this._valid = [];\r\n        this._len = 0;\r\n        this._invalidLineStartIndex = 0;\r\n    }\r\n    TokenizationStateStore.prototype._reset = function (initialState) {\r\n        this._beginState = [];\r\n        this._valid = [];\r\n        this._len = 0;\r\n        this._invalidLineStartIndex = 0;\r\n        if (initialState) {\r\n            this._setBeginState(0, initialState);\r\n        }\r\n    };\r\n    TokenizationStateStore.prototype.flush = function (initialState) {\r\n        this._reset(initialState);\r\n    };\r\n    Object.defineProperty(TokenizationStateStore.prototype, \"invalidLineStartIndex\", {\r\n        get: function () {\r\n            return this._invalidLineStartIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TokenizationStateStore.prototype._invalidateLine = function (lineIndex) {\r\n        if (lineIndex < this._len) {\r\n            this._valid[lineIndex] = false;\r\n        }\r\n        if (lineIndex < this._invalidLineStartIndex) {\r\n            this._invalidLineStartIndex = lineIndex;\r\n        }\r\n    };\r\n    TokenizationStateStore.prototype._isValid = function (lineIndex) {\r\n        if (lineIndex < this._len) {\r\n            return this._valid[lineIndex];\r\n        }\r\n        return false;\r\n    };\r\n    TokenizationStateStore.prototype.getBeginState = function (lineIndex) {\r\n        if (lineIndex < this._len) {\r\n            return this._beginState[lineIndex];\r\n        }\r\n        return null;\r\n    };\r\n    TokenizationStateStore.prototype._ensureLine = function (lineIndex) {\r\n        while (lineIndex >= this._len) {\r\n            this._beginState[this._len] = null;\r\n            this._valid[this._len] = false;\r\n            this._len++;\r\n        }\r\n    };\r\n    TokenizationStateStore.prototype._deleteLines = function (start, deleteCount) {\r\n        if (deleteCount === 0) {\r\n            return;\r\n        }\r\n        if (start + deleteCount > this._len) {\r\n            deleteCount = this._len - start;\r\n        }\r\n        this._beginState.splice(start, deleteCount);\r\n        this._valid.splice(start, deleteCount);\r\n        this._len -= deleteCount;\r\n    };\r\n    TokenizationStateStore.prototype._insertLines = function (insertIndex, insertCount) {\r\n        if (insertCount === 0) {\r\n            return;\r\n        }\r\n        var beginState = [];\r\n        var valid = [];\r\n        for (var i = 0; i < insertCount; i++) {\r\n            beginState[i] = null;\r\n            valid[i] = false;\r\n        }\r\n        this._beginState = arrays.arrayInsert(this._beginState, insertIndex, beginState);\r\n        this._valid = arrays.arrayInsert(this._valid, insertIndex, valid);\r\n        this._len += insertCount;\r\n    };\r\n    TokenizationStateStore.prototype._setValid = function (lineIndex, valid) {\r\n        this._ensureLine(lineIndex);\r\n        this._valid[lineIndex] = valid;\r\n    };\r\n    TokenizationStateStore.prototype._setBeginState = function (lineIndex, beginState) {\r\n        this._ensureLine(lineIndex);\r\n        this._beginState[lineIndex] = beginState;\r\n    };\r\n    TokenizationStateStore.prototype.setEndState = function (linesLength, lineIndex, endState) {\r\n        this._setValid(lineIndex, true);\r\n        this._invalidLineStartIndex = lineIndex + 1;\r\n        // Check if this was the last line\r\n        if (lineIndex === linesLength - 1) {\r\n            return;\r\n        }\r\n        // Check if the end state has changed\r\n        var previousEndState = this.getBeginState(lineIndex + 1);\r\n        if (previousEndState === null || !endState.equals(previousEndState)) {\r\n            this._setBeginState(lineIndex + 1, endState);\r\n            this._invalidateLine(lineIndex + 1);\r\n            return;\r\n        }\r\n        // Perhaps we can skip tokenizing some lines...\r\n        var i = lineIndex + 1;\r\n        while (i < linesLength) {\r\n            if (!this._isValid(i)) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        this._invalidLineStartIndex = i;\r\n    };\r\n    TokenizationStateStore.prototype.setFakeTokens = function (lineIndex) {\r\n        this._setValid(lineIndex, false);\r\n    };\r\n    //#region Editing\r\n    TokenizationStateStore.prototype.applyEdits = function (range, eolCount) {\r\n        var deletingLinesCnt = range.endLineNumber - range.startLineNumber;\r\n        var insertingLinesCnt = eolCount;\r\n        var editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\r\n        for (var j = editingLinesCnt; j >= 0; j--) {\r\n            this._invalidateLine(range.startLineNumber + j - 1);\r\n        }\r\n        this._acceptDeleteRange(range);\r\n        this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount);\r\n    };\r\n    TokenizationStateStore.prototype._acceptDeleteRange = function (range) {\r\n        var firstLineIndex = range.startLineNumber - 1;\r\n        if (firstLineIndex >= this._len) {\r\n            return;\r\n        }\r\n        this._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n    };\r\n    TokenizationStateStore.prototype._acceptInsertText = function (position, eolCount) {\r\n        var lineIndex = position.lineNumber - 1;\r\n        if (lineIndex >= this._len) {\r\n            return;\r\n        }\r\n        this._insertLines(position.lineNumber, eolCount);\r\n    };\r\n    return TokenizationStateStore;\r\n}());\r\nexport { TokenizationStateStore };\r\nvar TextModelTokenization = /** @class */ (function (_super) {\r\n    __extends(TextModelTokenization, _super);\r\n    function TextModelTokenization(textModel) {\r\n        var _this = _super.call(this) || this;\r\n        _this._isDisposed = false;\r\n        _this._textModel = textModel;\r\n        _this._tokenizationStateStore = new TokenizationStateStore();\r\n        _this._tokenizationSupport = null;\r\n        _this._register(TokenizationRegistry.onDidChange(function (e) {\r\n            var languageIdentifier = _this._textModel.getLanguageIdentifier();\r\n            if (e.changedLanguages.indexOf(languageIdentifier.language) === -1) {\r\n                return;\r\n            }\r\n            _this._resetTokenizationState();\r\n            _this._textModel.clearTokens();\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeRawContentFast(function (e) {\r\n            if (e.containsEvent(1 /* Flush */)) {\r\n                _this._resetTokenizationState();\r\n                return;\r\n            }\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeContentFast(function (e) {\r\n            for (var i = 0, len = e.changes.length; i < len; i++) {\r\n                var change = e.changes[i];\r\n                var eolCount = countEOL(change.text)[0];\r\n                _this._tokenizationStateStore.applyEdits(change.range, eolCount);\r\n            }\r\n            _this._beginBackgroundTokenization();\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeAttached(function () {\r\n            _this._beginBackgroundTokenization();\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeLanguage(function () {\r\n            _this._resetTokenizationState();\r\n            _this._textModel.clearTokens();\r\n        }));\r\n        _this._resetTokenizationState();\r\n        return _this;\r\n    }\r\n    TextModelTokenization.prototype.dispose = function () {\r\n        this._isDisposed = true;\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    TextModelTokenization.prototype._resetTokenizationState = function () {\r\n        var _a = initializeTokenization(this._textModel), tokenizationSupport = _a[0], initialState = _a[1];\r\n        this._tokenizationSupport = tokenizationSupport;\r\n        this._tokenizationStateStore.flush(initialState);\r\n        this._beginBackgroundTokenization();\r\n    };\r\n    TextModelTokenization.prototype._beginBackgroundTokenization = function () {\r\n        var _this = this;\r\n        if (this._textModel.isAttachedToEditor() && this._hasLinesToTokenize()) {\r\n            platform.setImmediate(function () {\r\n                if (_this._isDisposed) {\r\n                    // disposed in the meantime\r\n                    return;\r\n                }\r\n                _this._revalidateTokensNow();\r\n            });\r\n        }\r\n    };\r\n    TextModelTokenization.prototype._revalidateTokensNow = function (toLineNumber) {\r\n        if (toLineNumber === void 0) { toLineNumber = this._textModel.getLineCount(); }\r\n        var MAX_ALLOWED_TIME = 1;\r\n        var builder = new MultilineTokensBuilder();\r\n        var sw = StopWatch.create(false);\r\n        while (this._hasLinesToTokenize()) {\r\n            if (sw.elapsed() > MAX_ALLOWED_TIME) {\r\n                // Stop if MAX_ALLOWED_TIME is reached\r\n                break;\r\n            }\r\n            var tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\r\n            if (tokenizedLineNumber >= toLineNumber) {\r\n                break;\r\n            }\r\n        }\r\n        this._beginBackgroundTokenization();\r\n        this._textModel.setTokens(builder.tokens);\r\n    };\r\n    TextModelTokenization.prototype.tokenizeViewport = function (startLineNumber, endLineNumber) {\r\n        var builder = new MultilineTokensBuilder();\r\n        this._tokenizeViewport(builder, startLineNumber, endLineNumber);\r\n        this._textModel.setTokens(builder.tokens);\r\n    };\r\n    TextModelTokenization.prototype.reset = function () {\r\n        this._resetTokenizationState();\r\n        this._textModel.clearTokens();\r\n    };\r\n    TextModelTokenization.prototype.forceTokenization = function (lineNumber) {\r\n        var builder = new MultilineTokensBuilder();\r\n        this._updateTokensUntilLine(builder, lineNumber);\r\n        this._textModel.setTokens(builder.tokens);\r\n    };\r\n    TextModelTokenization.prototype.isCheapToTokenize = function (lineNumber) {\r\n        if (!this._tokenizationSupport) {\r\n            return true;\r\n        }\r\n        var firstInvalidLineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\r\n        if (lineNumber > firstInvalidLineNumber) {\r\n            return false;\r\n        }\r\n        if (lineNumber < firstInvalidLineNumber) {\r\n            return true;\r\n        }\r\n        if (this._textModel.getLineLength(lineNumber) < 2048 /* CHEAP_TOKENIZATION_LENGTH_LIMIT */) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TextModelTokenization.prototype._hasLinesToTokenize = function () {\r\n        if (!this._tokenizationSupport) {\r\n            return false;\r\n        }\r\n        return (this._tokenizationStateStore.invalidLineStartIndex < this._textModel.getLineCount());\r\n    };\r\n    TextModelTokenization.prototype._tokenizeOneInvalidLine = function (builder) {\r\n        if (!this._hasLinesToTokenize()) {\r\n            return this._textModel.getLineCount() + 1;\r\n        }\r\n        var lineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\r\n        this._updateTokensUntilLine(builder, lineNumber);\r\n        return lineNumber;\r\n    };\r\n    TextModelTokenization.prototype._updateTokensUntilLine = function (builder, lineNumber) {\r\n        if (!this._tokenizationSupport) {\r\n            return;\r\n        }\r\n        var languageIdentifier = this._textModel.getLanguageIdentifier();\r\n        var linesLength = this._textModel.getLineCount();\r\n        var endLineIndex = lineNumber - 1;\r\n        // Validate all states up to and including endLineIndex\r\n        for (var lineIndex = this._tokenizationStateStore.invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\r\n            var text = this._textModel.getLineContent(lineIndex + 1);\r\n            var lineStartState = this._tokenizationStateStore.getBeginState(lineIndex);\r\n            var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, lineStartState);\r\n            builder.add(lineIndex + 1, r.tokens);\r\n            this._tokenizationStateStore.setEndState(linesLength, lineIndex, r.endState);\r\n            lineIndex = this._tokenizationStateStore.invalidLineStartIndex - 1; // -1 because the outer loop increments it\r\n        }\r\n    };\r\n    TextModelTokenization.prototype._tokenizeViewport = function (builder, startLineNumber, endLineNumber) {\r\n        if (!this._tokenizationSupport) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n        if (endLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n        if (startLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\r\n            // tokenization has reached the viewport start...\r\n            this._updateTokensUntilLine(builder, endLineNumber);\r\n            return;\r\n        }\r\n        var nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        var fakeLines = [];\r\n        var initialState = null;\r\n        for (var i = startLineNumber - 1; nonWhitespaceColumn > 0 && i >= 1; i--) {\r\n            var newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\r\n            if (newNonWhitespaceIndex === 0) {\r\n                continue;\r\n            }\r\n            if (newNonWhitespaceIndex < nonWhitespaceColumn) {\r\n                initialState = this._tokenizationStateStore.getBeginState(i - 1);\r\n                if (initialState) {\r\n                    break;\r\n                }\r\n                fakeLines.push(this._textModel.getLineContent(i));\r\n                nonWhitespaceColumn = newNonWhitespaceIndex;\r\n            }\r\n        }\r\n        if (!initialState) {\r\n            initialState = this._tokenizationSupport.getInitialState();\r\n        }\r\n        var languageIdentifier = this._textModel.getLanguageIdentifier();\r\n        var state = initialState;\r\n        for (var i = fakeLines.length - 1; i >= 0; i--) {\r\n            var r = safeTokenize(languageIdentifier, this._tokenizationSupport, fakeLines[i], state);\r\n            state = r.endState;\r\n        }\r\n        for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n            var text = this._textModel.getLineContent(lineNumber);\r\n            var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, state);\r\n            builder.add(lineNumber, r.tokens);\r\n            this._tokenizationStateStore.setFakeTokens(lineNumber - 1);\r\n            state = r.endState;\r\n        }\r\n    };\r\n    return TextModelTokenization;\r\n}(Disposable));\r\nexport { TextModelTokenization };\r\nfunction initializeTokenization(textModel) {\r\n    var languageIdentifier = textModel.getLanguageIdentifier();\r\n    var tokenizationSupport = (textModel.isTooLargeForTokenization()\r\n        ? null\r\n        : TokenizationRegistry.get(languageIdentifier.language));\r\n    var initialState = null;\r\n    if (tokenizationSupport) {\r\n        try {\r\n            initialState = tokenizationSupport.getInitialState();\r\n        }\r\n        catch (e) {\r\n            onUnexpectedError(e);\r\n            tokenizationSupport = null;\r\n        }\r\n    }\r\n    return [tokenizationSupport, initialState];\r\n}\r\nfunction safeTokenize(languageIdentifier, tokenizationSupport, text, state) {\r\n    var r = null;\r\n    if (tokenizationSupport) {\r\n        try {\r\n            r = tokenizationSupport.tokenize2(text, state.clone(), 0);\r\n        }\r\n        catch (e) {\r\n            onUnexpectedError(e);\r\n        }\r\n    }\r\n    if (!r) {\r\n        r = nullTokenize2(languageIdentifier.id, text, state, 0);\r\n    }\r\n    LineTokens.convertToEndOffset(r.tokens, text.length);\r\n    return r;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}