{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from '../common/platform.js';\nimport { logOnceWebWorkerWarning } from '../common/worker/simpleWorker.js';\nfunction getWorker(workerId, label) {\n  // Option for hosts to overwrite the worker script (used in the standalone editor)\n  if (globals.MonacoEnvironment) {\n    if (typeof globals.MonacoEnvironment.getWorker === 'function') {\n      return globals.MonacoEnvironment.getWorker(workerId, label);\n    }\n    if (typeof globals.MonacoEnvironment.getWorkerUrl === 'function') {\n      return new Worker(globals.MonacoEnvironment.getWorkerUrl(workerId, label));\n    }\n  }\n  // ESM-comment-begin\n  // \tif (typeof require === 'function') {\n  // \t\t// check if the JS lives on a different origin\n  // \t\tconst workerMain = require.toUrl('./' + workerId);\n  // \t\tconst workerUrl = getWorkerBootstrapUrl(workerMain, label);\n  // \t\treturn new Worker(workerUrl, { name: label });\n  // \t}\n  // ESM-comment-end\n  throw new Error(\"You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker\");\n}\n// ESM-comment-begin\n// export function getWorkerBootstrapUrl(scriptPath: string, label: string): string {\n// \tif (/^(http:)|(https:)|(file:)/.test(scriptPath)) {\n// \t\tconst currentUrl = String(window.location);\n// \t\tconst currentOrigin = currentUrl.substr(0, currentUrl.length - window.location.hash.length - window.location.search.length - window.location.pathname.length);\n// \t\tif (scriptPath.substring(0, currentOrigin.length) !== currentOrigin) {\n// \t\t\t// this is the cross-origin case\n// \t\t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\n// \t\t\tconst myPath = 'vs/base/worker/defaultWorkerFactory.js';\n// \t\t\tconst workerBaseUrl = require.toUrl(myPath).slice(0, -myPath.length);\n// \t\t\tconst js = `/*${label}*/self.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};importScripts('${scriptPath}');/*${label}*/`;\n// \t\t\tconst url = `data:text/javascript;charset=utf-8,${encodeURIComponent(js)}`;\n// \t\t\treturn url;\n// \t\t}\n// \t}\n// \treturn scriptPath + '#' + label;\n// }\n// ESM-comment-end\nfunction isPromiseLike(obj) {\n  if (typeof obj.then === 'function') {\n    return true;\n  }\n  return false;\n}\n/**\r\n * A worker that uses HTML5 web workers so that is has\r\n * its own global scope and its own thread.\r\n */\nvar WebWorker = /** @class */function () {\n  function WebWorker(moduleId, id, label, onMessageCallback, onErrorCallback) {\n    this.id = id;\n    var workerOrPromise = getWorker('workerMain.js', label);\n    if (isPromiseLike(workerOrPromise)) {\n      this.worker = workerOrPromise;\n    } else {\n      this.worker = Promise.resolve(workerOrPromise);\n    }\n    this.postMessage(moduleId, []);\n    this.worker.then(function (w) {\n      w.onmessage = function (ev) {\n        onMessageCallback(ev.data);\n      };\n      w.onmessageerror = onErrorCallback;\n      if (typeof w.addEventListener === 'function') {\n        w.addEventListener('error', onErrorCallback);\n      }\n    });\n  }\n  WebWorker.prototype.getId = function () {\n    return this.id;\n  };\n  WebWorker.prototype.postMessage = function (message, transfer) {\n    if (this.worker) {\n      this.worker.then(function (w) {\n        return w.postMessage(message, transfer);\n      });\n    }\n  };\n  WebWorker.prototype.dispose = function () {\n    if (this.worker) {\n      this.worker.then(function (w) {\n        return w.terminate();\n      });\n    }\n    this.worker = null;\n  };\n  return WebWorker;\n}();\nvar DefaultWorkerFactory = /** @class */function () {\n  function DefaultWorkerFactory(label) {\n    this._label = label;\n    this._webWorkerFailedBeforeError = false;\n  }\n  DefaultWorkerFactory.prototype.create = function (moduleId, onMessageCallback, onErrorCallback) {\n    var _this = this;\n    var workerId = ++DefaultWorkerFactory.LAST_WORKER_ID;\n    if (this._webWorkerFailedBeforeError) {\n      throw this._webWorkerFailedBeforeError;\n    }\n    return new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, function (err) {\n      logOnceWebWorkerWarning(err);\n      _this._webWorkerFailedBeforeError = err;\n      onErrorCallback(err);\n    });\n  };\n  DefaultWorkerFactory.LAST_WORKER_ID = 0;\n  return DefaultWorkerFactory;\n}();\nexport { DefaultWorkerFactory };","map":{"version":3,"names":["globals","logOnceWebWorkerWarning","getWorker","workerId","label","MonacoEnvironment","getWorkerUrl","Worker","Error","isPromiseLike","obj","then","WebWorker","moduleId","id","onMessageCallback","onErrorCallback","workerOrPromise","worker","Promise","resolve","postMessage","w","onmessage","ev","data","onmessageerror","addEventListener","prototype","getId","message","transfer","dispose","terminate","DefaultWorkerFactory","_label","_webWorkerFailedBeforeError","create","_this","LAST_WORKER_ID","err"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/worker/defaultWorkerFactory.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { globals } from '../common/platform.js';\r\nimport { logOnceWebWorkerWarning } from '../common/worker/simpleWorker.js';\r\nfunction getWorker(workerId, label) {\r\n    // Option for hosts to overwrite the worker script (used in the standalone editor)\r\n    if (globals.MonacoEnvironment) {\r\n        if (typeof globals.MonacoEnvironment.getWorker === 'function') {\r\n            return globals.MonacoEnvironment.getWorker(workerId, label);\r\n        }\r\n        if (typeof globals.MonacoEnvironment.getWorkerUrl === 'function') {\r\n            return new Worker(globals.MonacoEnvironment.getWorkerUrl(workerId, label));\r\n        }\r\n    }\r\n    // ESM-comment-begin\r\n    // \tif (typeof require === 'function') {\r\n    // \t\t// check if the JS lives on a different origin\r\n    // \t\tconst workerMain = require.toUrl('./' + workerId);\r\n    // \t\tconst workerUrl = getWorkerBootstrapUrl(workerMain, label);\r\n    // \t\treturn new Worker(workerUrl, { name: label });\r\n    // \t}\r\n    // ESM-comment-end\r\n    throw new Error(\"You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker\");\r\n}\r\n// ESM-comment-begin\r\n// export function getWorkerBootstrapUrl(scriptPath: string, label: string): string {\r\n// \tif (/^(http:)|(https:)|(file:)/.test(scriptPath)) {\r\n// \t\tconst currentUrl = String(window.location);\r\n// \t\tconst currentOrigin = currentUrl.substr(0, currentUrl.length - window.location.hash.length - window.location.search.length - window.location.pathname.length);\r\n// \t\tif (scriptPath.substring(0, currentOrigin.length) !== currentOrigin) {\r\n// \t\t\t// this is the cross-origin case\r\n// \t\t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\r\n// \t\t\tconst myPath = 'vs/base/worker/defaultWorkerFactory.js';\r\n// \t\t\tconst workerBaseUrl = require.toUrl(myPath).slice(0, -myPath.length);\r\n// \t\t\tconst js = `/*${label}*/self.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};importScripts('${scriptPath}');/*${label}*/`;\r\n// \t\t\tconst url = `data:text/javascript;charset=utf-8,${encodeURIComponent(js)}`;\r\n// \t\t\treturn url;\r\n// \t\t}\r\n// \t}\r\n// \treturn scriptPath + '#' + label;\r\n// }\r\n// ESM-comment-end\r\nfunction isPromiseLike(obj) {\r\n    if (typeof obj.then === 'function') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * A worker that uses HTML5 web workers so that is has\r\n * its own global scope and its own thread.\r\n */\r\nvar WebWorker = /** @class */ (function () {\r\n    function WebWorker(moduleId, id, label, onMessageCallback, onErrorCallback) {\r\n        this.id = id;\r\n        var workerOrPromise = getWorker('workerMain.js', label);\r\n        if (isPromiseLike(workerOrPromise)) {\r\n            this.worker = workerOrPromise;\r\n        }\r\n        else {\r\n            this.worker = Promise.resolve(workerOrPromise);\r\n        }\r\n        this.postMessage(moduleId, []);\r\n        this.worker.then(function (w) {\r\n            w.onmessage = function (ev) {\r\n                onMessageCallback(ev.data);\r\n            };\r\n            w.onmessageerror = onErrorCallback;\r\n            if (typeof w.addEventListener === 'function') {\r\n                w.addEventListener('error', onErrorCallback);\r\n            }\r\n        });\r\n    }\r\n    WebWorker.prototype.getId = function () {\r\n        return this.id;\r\n    };\r\n    WebWorker.prototype.postMessage = function (message, transfer) {\r\n        if (this.worker) {\r\n            this.worker.then(function (w) { return w.postMessage(message, transfer); });\r\n        }\r\n    };\r\n    WebWorker.prototype.dispose = function () {\r\n        if (this.worker) {\r\n            this.worker.then(function (w) { return w.terminate(); });\r\n        }\r\n        this.worker = null;\r\n    };\r\n    return WebWorker;\r\n}());\r\nvar DefaultWorkerFactory = /** @class */ (function () {\r\n    function DefaultWorkerFactory(label) {\r\n        this._label = label;\r\n        this._webWorkerFailedBeforeError = false;\r\n    }\r\n    DefaultWorkerFactory.prototype.create = function (moduleId, onMessageCallback, onErrorCallback) {\r\n        var _this = this;\r\n        var workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\r\n        if (this._webWorkerFailedBeforeError) {\r\n            throw this._webWorkerFailedBeforeError;\r\n        }\r\n        return new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, function (err) {\r\n            logOnceWebWorkerWarning(err);\r\n            _this._webWorkerFailedBeforeError = err;\r\n            onErrorCallback(err);\r\n        });\r\n    };\r\n    DefaultWorkerFactory.LAST_WORKER_ID = 0;\r\n    return DefaultWorkerFactory;\r\n}());\r\nexport { DefaultWorkerFactory };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}