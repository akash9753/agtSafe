{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Dashboard\\\\dashMain.js\";\nimport React, { Component } from 'react';\nimport { getProjectRole, validJSON, checkPermission, fnLogout } from '../Utility/sharedUtility';\nimport DashBoardBeta from './index';\nimport AdminDashBoard from './adminDashBoard';\nimport axios from 'axios';\nvar urlBase = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + \"/api/\";\nvar userProfile = JSON.parse(sessionStorage.getItem(\"userProfile\"));\nvar DashMain = /*#__PURE__*/function (_Component) {\n  _inherits(DashMain, _Component);\n  var _super = _createSuper(DashMain);\n  function DashMain(props) {\n    var _this;\n    _classCallCheck(this, DashMain);\n    _this = _super.call(this, props);\n    _this.isAdminOrManager = function () {\n      var allPermissions = sessionStorage.getItem(\"permissions\");\n      var parsePermission = validJSON(allPermissions);\n      //Check if admin dashboard permissions are available\n      return checkPermission(parsePermission, ['AdminDashboard']) >= 4 || checkPermission(parsePermission, ['ManagerDashboard']) >= 4;\n    };\n    _this.state = {};\n    return _this;\n  }\n  _createClass(DashMain, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (sessionStorage.getItem(\"sessionID\") === null) {\n        var url = urlBase + 'Login/LoginCreate';\n        return axios.post(url, userProfile).then(function (response) {\n          if (response.data.status === 1) {\n            sessionStorage.setItem(\"sessionID\", response.data.value);\n          } else {\n            fnLogout();\n          }\n        }).catch(function (error) {\n          return error;\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var projectRole = getProjectRole();\n      if (this.isAdminOrManager()) {\n        return /*#__PURE__*/React.createElement(AdminDashBoard, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(DashBoardBeta, {\n          permissions: this.props.permissions,\n          history: this.props.history,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 20\n          }\n        });\n      }\n    }\n  }]);\n  return DashMain;\n}(Component);\nexport { DashMain as default };","map":{"version":3,"names":["React","Component","getProjectRole","validJSON","checkPermission","fnLogout","DashBoardBeta","AdminDashBoard","axios","urlBase","window","location","protocol","hostname","port","userProfile","JSON","parse","sessionStorage","getItem","DashMain","props","isAdminOrManager","allPermissions","parsePermission","state","url","post","then","response","data","status","setItem","value","catch","error","projectRole","permissions","history"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Dashboard/dashMain.js"],"sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { getProjectRole, validJSON, checkPermission, fnLogout } from '../Utility/sharedUtility';\r\nimport DashBoardBeta from './index';\r\nimport AdminDashBoard from './adminDashBoard';\r\nimport axios from 'axios';\r\nconst urlBase = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + \"/api/\";\r\nvar userProfile = JSON.parse(sessionStorage.getItem(\"userProfile\"));\r\n\r\nexport default class DashMain extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"sessionID\") === null) {\r\n            const url = urlBase + 'Login/LoginCreate';\r\n            return axios.post(url, userProfile)\r\n                .then(function (response) {\r\n                    if (response.data.status === 1) {\r\n                        sessionStorage.setItem(\"sessionID\", response.data.value);\r\n                    } else {\r\n                        fnLogout();\r\n                    }\r\n                })\r\n                .catch(error => error);\r\n        }\r\n    }\r\n\r\n    isAdminOrManager = () =>\r\n    {\r\n\r\n        let allPermissions = sessionStorage.getItem(\"permissions\");\r\n        let parsePermission = validJSON(allPermissions);\r\n        //Check if admin dashboard permissions are available\r\n        return checkPermission(parsePermission, ['AdminDashboard']) >= 4 || checkPermission(parsePermission, ['ManagerDashboard']) >= 4;\r\n    }\r\n\r\n    render() {\r\n        const projectRole = getProjectRole();\r\n\r\n\r\n        if (this.isAdminOrManager()) {\r\n            return <AdminDashBoard  />;\r\n        } else {\r\n            return <DashBoardBeta permissions={this.props.permissions} history={this.props.history} />;\r\n        }\r\n\r\n    }\r\n\r\n}"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,0BAA0B;AAC/F,OAAOC,aAAa,MAAM,SAAS;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,IAAMC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,QAAQ,IAAIH,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAG,GAAG,GAAGJ,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAG,EAAE,CAAC,GAAG,OAAO;AAC/I,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AAAC,IAE/CC,QAAQ;EAAA;EAAA;EAEzB,kBAAYC,KAAK,EAAE;IAAA;IAAA;IACf,0BAAMA,KAAK;IAAE,MAqBjBC,gBAAgB,GAAG,YACnB;MAEI,IAAIC,cAAc,GAAGL,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;MAC1D,IAAIK,eAAe,GAAGrB,SAAS,CAACoB,cAAc,CAAC;MAC/C;MACA,OAAOnB,eAAe,CAACoB,eAAe,EAAE,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAIpB,eAAe,CAACoB,eAAe,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC;IACnI,CAAC;IA3BG,MAAKC,KAAK,GAAG,CAEb,CAAC;IAAA;EACL;EAAC;IAAA;IAAA,OAED,6BAAoB;MAChB,IAAIP,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;QAC9C,IAAMO,GAAG,GAAGjB,OAAO,GAAG,mBAAmB;QACzC,OAAOD,KAAK,CAACmB,IAAI,CAACD,GAAG,EAAEX,WAAW,CAAC,CAC9Ba,IAAI,CAAC,UAAUC,QAAQ,EAAE;UACtB,IAAIA,QAAQ,CAACC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;YAC5Bb,cAAc,CAACc,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC;UAC5D,CAAC,MAAM;YACH5B,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC,CACD6B,KAAK,CAAC,UAAAC,KAAK;UAAA,OAAIA,KAAK;QAAA,EAAC;MAC9B;IACJ;EAAC;IAAA;IAAA,OAWD,kBAAS;MACL,IAAMC,WAAW,GAAGlC,cAAc,EAAE;MAGpC,IAAI,IAAI,CAACoB,gBAAgB,EAAE,EAAE;QACzB,oBAAO,oBAAC,cAAc;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAI;MAC9B,CAAC,MAAM;QACH,oBAAO,oBAAC,aAAa;UAAC,WAAW,EAAE,IAAI,CAACD,KAAK,CAACgB,WAAY;UAAC,OAAO,EAAE,IAAI,CAAChB,KAAK,CAACiB,OAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG;MAC9F;IAEJ;EAAC;EAAA;AAAA,EA3CiCrC,SAAS;AAAA,SAA1BmB,QAAQ"},"metadata":{},"sourceType":"module"}