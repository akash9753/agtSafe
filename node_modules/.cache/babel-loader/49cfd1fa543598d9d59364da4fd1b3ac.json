{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Standards\\\\StandardCodelistList.js\";\nimport React, { Component } from 'react';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport AddStandardCodeList from './addStandardCodeList.js';\nimport ConfirmModal from '../Utility/ConfirmModal';\nimport ReactTable from '../Utility/reactTable';\nimport { Icon, Spin, Form, Breadcrumb } from 'antd';\nimport Button from '../../components/uielements/button';\nimport { CallServerPost, PostCallWithZone, successModal, successModalCallback, errorModal, checkPermission } from '../Utility/sharedUtility';\nimport { stringSorter } from '../Utility/htmlUtility';\n//Importing ButtonWithToolTip for Edit and Delete Icon\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\nvar dataSource = [];\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }\n});\nvar thisObj;\nvar StandardCodelistList = /*#__PURE__*/function (_Component) {\n  _inherits(StandardCodelistList, _Component);\n  var _super = _createSuper(StandardCodelistList);\n  function StandardCodelistList(props) {\n    var _this;\n    _classCallCheck(this, StandardCodelistList);\n    _this = _super.call(this, props);\n    _this.getList = function (data) {\n      CallServerPost('StandardCodeList/GetAllStandardCodeList', {\n        CDISCDataStdVersionID: data.cDISCDataStdVersionID\n      }).then(function (response) {\n        if (response.value != null) {\n          thisObj.setState({\n            loading: false\n          });\n          thisObj.standardCodeListList(response);\n        } else {\n          thisObj.setState({\n            dataSource: [],\n            loading: false\n          });\n        }\n      });\n    };\n    _this.addStandardCodeList = function () {\n      _this.setState({\n        title: \"Add Standard Codelist\",\n        showAddCDISCDataStdRoleModal: false,\n        showAddStandardCodeListModal: true,\n        action: 'Create',\n        standardCodeListID: 0\n      });\n    };\n    _this.editStandardCodeList = function (standardCodeListID) {\n      _this.setState({\n        title: \"Edit Standard Codelist\",\n        showAddCDISCDataStdRoleModal: false,\n        showAddStandardCodeListModal: true,\n        action: 'Update',\n        standardCodeListID: standardCodeListID\n      });\n    };\n    _this.handleAddStandardCodeListCancel = function () {\n      thisObj.getList(thisObj.props);\n      _this.setState({\n        action: \"\",\n        showAddStandardCodeListModal: false\n      });\n    };\n    _this.handleCancelDeleteConfirmationModal = function () {\n      _this.setState({\n        showDeleteConfirmationModal: false\n      });\n      _this.props.form.resetFields([\"Change Reason\"]);\n    };\n    _this.deleteStandardCodeList = function (standardCodeListID) {\n      _this.setState({\n        showDeleteConfirmationModal: true,\n        action: 'Delete',\n        standardCodeListID: standardCodeListID\n      });\n    };\n    _this.refreshStandardCodeList = function () {\n      thisObj.setState({\n        action: \"\",\n        showAddStandardCodeListModal: false\n      });\n      thisObj.handleCancelDeleteConfirmationModal();\n      thisObj.setState({\n        modalLoading: false\n      });\n      thisObj.setState({\n        action: \"\"\n      });\n      thisObj.getList(thisObj.props);\n    };\n    _this.handleDelete = function (ChangeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      var values = {};\n      thisObj.setState({\n        modalLoad: true\n      });\n      values[\"StandardCodeListID\"] = thisObj.state.standardCodeListID;\n      values[\"ChangeReason\"] = ChangeReason;\n      PostCallWithZone('StandardCodeList/Delete', values).then(function (response) {\n        thisObj.setState({\n          modalLoad: false\n        });\n        if (response.status == 1) {\n          thisObj.setState({\n            showDeleteConfirmationModal: false\n          });\n          successModalCallback(response.message, thisObj.refreshStandardCodeList);\n        } else {\n          thisObj.setState({\n            showDeleteConfirmationModal: false\n          });\n          errorModal(response.message);\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.thisObj = _assertThisInitialized(_this);\n    _this.standardCodeListList = function (response) {\n      //console.log(thisObj)\n      var datas = [];\n      var standardCodeListList = response.value;\n      var permissions = thisObj.props.permissions;\n      var perLevel = checkPermission(permissions, [\"self\"]);\n\n      // Loop to create table datasource\n      var _loop = function _loop() {\n        var standardCodeListID = standardCodeListList[i].standardCodeListID;\n        var editCell = /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 30\n          }\n        }, perLevel >= 2 ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n          name: standardCodeListList[i].codeListName + \"_Edit\",\n          style: {\n            marginRight: 5\n          },\n          tooltip: perLevel >= 2 ? \"Edit\" : \"View\",\n          shape: \"circle\",\n          classname: \"fas fa-pen\",\n          size: \"small\",\n          onClick: function onClick() {\n            return thisObj.editStandardCodeList(standardCodeListID);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 34\n          }\n        }) : \"\", perLevel >= 4 ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n          name: standardCodeListList[i].codeListName + \"_Delete\",\n          style: {\n            marginRight: 5\n          },\n          tooltip: \"Delete\",\n          shape: \"circle\",\n          classname: \"fas fa-trash-alt\",\n          size: \"small\",\n          onClick: function onClick() {\n            return thisObj.deleteStandardCodeList(standardCodeListID);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 34\n          }\n        }) : \"\");\n        datas.push({\n          key: standardCodeListList[i].standardCodeListID,\n          variableName: standardCodeListList[i].variableName,\n          codeListName: standardCodeListList[i].codeListName,\n          cdiscDataStandardID: standardCodeListList[i].cdiscDataStandardID,\n          cdiscDataStandardText: standardCodeListList[i].cdiscDataStandardText,\n          cdiscDataStdVersionID: standardCodeListList[i].cdiscDataStdVersionID,\n          cdiscDataStdVersionText: standardCodeListList[i].cdiscDataStdVersionText,\n          actions: editCell\n        });\n      };\n      for (var i = 0; i < standardCodeListList.length; i++) {\n        _loop();\n      }\n\n      //Setting values to state for re-rendering\n      thisObj.setState({\n        dataSource: datas,\n        loading: false\n      });\n    };\n    _this.addStandardCodeList = _this.addStandardCodeList.bind(_assertThisInitialized(_this));\n    _this.state = {\n      loading: true,\n      title: null,\n      showDeleteConfirmationModal: false,\n      action: \"\",\n      modalLoading: false,\n      showCDISCDataStdRoleList: false,\n      showAddCDISCDataStdRoleModal: false,\n      standardCodeListID: 0,\n      showStandardCodeList: false,\n      showAddStandardCodeListModal: false,\n      modalLoad: false\n    };\n    thisObj = _assertThisInitialized(_this);\n    thisObj.getList(thisObj.props);\n    return _this;\n  }\n  _createClass(StandardCodelistList, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      //console.log(nextProps);\n      thisObj.setState({\n        loading: true\n      });\n      thisObj.getList(nextProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var permissions = this.props.permissions;\n      var columns = [{\n        title: 'Standard',\n        dataIndex: 'cdiscDataStandardText',\n        key: 'cdiscDataStandardText',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'cdiscDataStandardText');\n        },\n        width: 100\n      }, {\n        title: 'Standard Version',\n        dataIndex: 'cdiscDataStdVersionText',\n        key: 'cdiscDataStdVersionText',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'cdiscDataStdVersionText');\n        },\n        width: 100\n      }, {\n        title: 'Variable Name',\n        dataIndex: 'variableName',\n        key: 'variableName',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'variableName');\n        },\n        width: 100\n      }, {\n        title: 'CodeList Name',\n        dataIndex: 'codeListName',\n        key: 'codeListName',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'codeListName');\n        },\n        width: 100\n      }, {\n        title: 'Actions',\n        dataIndex: 'actions',\n        key: 'actions',\n        width: 100\n      }];\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n        showAddStandardCodeListModal = _this$state.showAddStandardCodeListModal,\n        action = _this$state.action,\n        cDISCDataStandardID = _this$state.cDISCDataStandardID,\n        cDISCDataStdVersionID = _this$state.cDISCDataStdVersionID,\n        title = _this$state.title,\n        showCDISCDataStdRoleList = _this$state.showCDISCDataStdRoleList,\n        showStandardCodeList = _this$state.showStandardCodeList,\n        standardCodeListID = _this$state.standardCodeListID;\n      return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-list-ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, \" Standard Codelist\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, \"List\")), /*#__PURE__*/React.createElement(LayoutContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: antIcon,\n        spinning: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactTable, {\n        columns: columns,\n        dataSource: this.state.dataSource,\n        addAction: checkPermission(permissions, [\"self\"]) >= 3 ? this.addStandardCodeList : null,\n        scroll: {\n          y: \"calc(100vh - 314px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      })), (action == \"Update\" || action == \"Create\") && /*#__PURE__*/React.createElement(AddStandardCodeList, {\n        readOnly: checkPermission(permissions, [\"self\"]) <= 1,\n        visible: showAddStandardCodeListModal,\n        title: this.state.title,\n        standardIDForCreateAndUpdate: thisObj.props.cDISCDataStandardID,\n        stdVersionIDForCreateAndUpdate: thisObj.props.cDISCDataStdVersionID,\n        handleCancel: this.handleAddStandardCodeListCancel,\n        history: this.refreshStandardCodeList,\n        standardCodeListID: standardCodeListID,\n        action: action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 68\n        }\n      }), action == \"Delete\" && /*#__PURE__*/React.createElement(ConfirmModal, {\n        title: \"Delete Standard Codelist\",\n        history: this.props.history,\n        SubmitButtonName: \"Delete\",\n        onSubmit: this.handleDelete,\n        visible: this.state.showDeleteConfirmationModal,\n        handleCancel: this.handleCancelDeleteConfirmationModal,\n        getFieldDecorator: getFieldDecorator,\n        loading: this.state.modalLoad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 46\n        }\n      })));\n    }\n  }]);\n  return StandardCodelistList;\n}(Component);\nvar WrappedApp = Form.create()(StandardCodelistList);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","LayoutContentWrapper","LayoutContent","AddStandardCodeList","ConfirmModal","ReactTable","Icon","Spin","Form","Breadcrumb","Button","CallServerPost","PostCallWithZone","successModal","successModalCallback","errorModal","checkPermission","stringSorter","ButtonWithToolTip","dataSource","antIcon","fontSize","color","thisObj","StandardCodelistList","props","getList","data","CDISCDataStdVersionID","cDISCDataStdVersionID","then","response","value","setState","loading","standardCodeListList","addStandardCodeList","title","showAddCDISCDataStdRoleModal","showAddStandardCodeListModal","action","standardCodeListID","editStandardCodeList","handleAddStandardCodeListCancel","handleCancelDeleteConfirmationModal","showDeleteConfirmationModal","form","resetFields","deleteStandardCodeList","refreshStandardCodeList","modalLoading","handleDelete","ChangeReason","values","modalLoad","state","status","message","catch","error","datas","permissions","perLevel","i","editCell","codeListName","marginRight","push","key","variableName","cdiscDataStandardID","cdiscDataStandardText","cdiscDataStdVersionID","cdiscDataStdVersionText","actions","length","bind","showCDISCDataStdRoleList","showStandardCodeList","nextProps","columns","dataIndex","sorter","a","b","width","getFieldDecorator","cDISCDataStandardID","y","history","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Standards/StandardCodelistList.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport AddStandardCodeList from './addStandardCodeList.js';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\nimport ReactTable from '../Utility/reactTable';\r\nimport { Icon, Spin, Form, Breadcrumb } from 'antd';\r\nimport Button from '../../components/uielements/button';\r\nimport { CallServerPost, PostCallWithZone, successModal, successModalCallback, errorModal, checkPermission } from '../Utility/sharedUtility';\r\nimport { stringSorter } from '../Utility/htmlUtility';\r\n//Importing ButtonWithToolTip for Edit and Delete Icon\r\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\r\n\r\nconst dataSource = [];\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\r\n\r\nvar thisObj;\r\n\r\nclass StandardCodelistList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addStandardCodeList = this.addStandardCodeList.bind(this);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            title: null,\r\n\n            showDeleteConfirmationModal: false,\n            action: \"\",\n            modalLoading: false,            \n            showCDISCDataStdRoleList: false,\n            showAddCDISCDataStdRoleModal: false,\n            standardCodeListID: 0,\n            showStandardCodeList: false,\n            showAddStandardCodeListModal: false,\n            modalLoad:false,\n        };\n\n\n        thisObj = this;\n        thisObj.getList(thisObj.props);\n\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //console.log(nextProps);\r\n        thisObj.setState({ loading: true });\r\n        thisObj.getList(nextProps);\r\n\r\n    }\r\n\r\n    getList = (data) => {\r\n        CallServerPost('StandardCodeList/GetAllStandardCodeList', { CDISCDataStdVersionID: data.cDISCDataStdVersionID })\r\n            .then(\r\n            function (response) {\r\n                if (response.value != null) {\r\n                    thisObj.setState({ loading: false });\r\n                    thisObj.standardCodeListList(response);\r\n                }\r\n                else {\r\n                    thisObj.setState({ dataSource: [], loading: false });\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    addStandardCodeList = () => {\r\n        this.setState({ title: \"Add Standard Codelist\", showAddCDISCDataStdRoleModal: false, showAddStandardCodeListModal: true, action: 'Create', standardCodeListID: 0 })\r\n\r\n    }\r\n\r\n    editStandardCodeList = (standardCodeListID) => {\r\n        this.setState({ title: \"Edit Standard Codelist\", showAddCDISCDataStdRoleModal: false, showAddStandardCodeListModal: true, action: 'Update', standardCodeListID: standardCodeListID })\r\n\r\n    }\r\n\r\n    handleAddStandardCodeListCancel = () => {\r\n        thisObj.getList(thisObj.props);\n        this.setState({ action: \"\", showAddStandardCodeListModal: false });\r\n    }\r\n\r\n    handleCancelDeleteConfirmationModal = () => {\r\n        this.setState({ showDeleteConfirmationModal: false });\r\n        this.props.form.resetFields([\"Change Reason\"]);\r\n\r\n    }\r\n\r\n    deleteStandardCodeList = (standardCodeListID) => {\r\n\r\n        this.setState({ showDeleteConfirmationModal: true, action: 'Delete', standardCodeListID: standardCodeListID });\r\n    }\r\n\r\n    refreshStandardCodeList = () => {\r\n        thisObj.setState({ action: \"\", showAddStandardCodeListModal: false });\r\n        thisObj.handleCancelDeleteConfirmationModal();\r\n        thisObj.setState({ modalLoading: false });\r\n        thisObj.setState({ action: \"\" });\r\n        thisObj.getList(thisObj.props);\r\n\r\n    }\r\n\r\n\r\n    handleDelete = (ChangeReason) => {\r\n\r\n        const thisObj = this;\r\n        let values = {};\r\n\r\n                thisObj.setState({ modalLoad: true });\r\n                values[\"StandardCodeListID\"] = thisObj.state.standardCodeListID;\r\n                values[\"ChangeReason\"] = ChangeReason;\r\n\r\n                PostCallWithZone('StandardCodeList/Delete', values)\r\n                    .then(\r\n                    function (response) {\r\n                        thisObj.setState({ modalLoad: false });\r\n                        if (response.status == 1) {\r\n                            thisObj.setState({ showDeleteConfirmationModal: false });\r\n                            successModalCallback(response.message, thisObj.refreshStandardCodeList);\r\n                        } else {\r\n                            thisObj.setState({ showDeleteConfirmationModal: false });\r\n                            errorModal(response.message);\r\n                        }\r\n                    }).catch(error => error);\r\n           \r\n    }\r\n\r\n    thisObj = this;\r\n    standardCodeListList = (response) => {\r\n        //console.log(thisObj)\r\n        var datas = [];\r\n        const standardCodeListList = response.value\r\n        const permissions = thisObj.props.permissions;\r\n        const perLevel = checkPermission(permissions, [\"self\"]);\r\n\r\n        // Loop to create table datasource\r\n        for (var i = 0; i < standardCodeListList.length; i++) {\r\n\r\n            const standardCodeListID = standardCodeListList[i].standardCodeListID;\r\n            \r\n            const editCell = <div>\n\n                {perLevel >= 2 ? <ButtonWithToolTip\n                    name={standardCodeListList[i].codeListName + \"_Edit\"}\n                    style={{ marginRight: 5 }}\n                    tooltip={perLevel >= 2 ? \"Edit\" : \"View\"}\n                    shape=\"circle\"\n                    classname=\"fas fa-pen\"\n                    size=\"small\"\n                    onClick={() => thisObj.editStandardCodeList(standardCodeListID)}\n                /> : \"\"}\r\n        \r\n                {perLevel >= 4 ? <ButtonWithToolTip\n                        name={standardCodeListList[i].codeListName + \"_Delete\"}\n                        style={{ marginRight: 5 }}\n                        tooltip='Delete'\n                        shape=\"circle\"\n                        classname=\"fas fa-trash-alt\"\n                        size=\"small\"\n                        onClick={() => thisObj.deleteStandardCodeList(standardCodeListID)}\r\n                /> : \"\"}\r\n\r\n            </div>;\r\n\r\n            datas.push({\r\n                key: standardCodeListList[i].standardCodeListID,\r\n                variableName: standardCodeListList[i].variableName,\r\n                codeListName: standardCodeListList[i].codeListName,\r\n                cdiscDataStandardID: standardCodeListList[i].cdiscDataStandardID,\r\n                cdiscDataStandardText: standardCodeListList[i].cdiscDataStandardText,\r\n                cdiscDataStdVersionID: standardCodeListList[i].cdiscDataStdVersionID,\r\n                cdiscDataStdVersionText: standardCodeListList[i].cdiscDataStdVersionText,\r\n                actions: editCell\r\n            });\r\n        }\r\n\r\n        //Setting values to state for re-rendering\r\n        thisObj.setState({ dataSource: datas, loading: false });\r\n    }\r\n    render() {\r\n\r\n        const permissions = this.props.permissions;\r\n\r\n        const columns = [\r\n            {\r\n                title: 'Standard',\r\n                dataIndex: 'cdiscDataStandardText',\r\n                key: 'cdiscDataStandardText',\r\n                sorter: (a, b) => stringSorter(a, b, 'cdiscDataStandardText'),\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Standard Version',\r\n                dataIndex: 'cdiscDataStdVersionText',\r\n                key: 'cdiscDataStdVersionText',\r\n                sorter: (a, b) => stringSorter(a, b, 'cdiscDataStdVersionText'),\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Variable Name',\r\n                dataIndex: 'variableName',\r\n                key: 'variableName',\r\n                sorter: (a, b) => stringSorter(a, b, 'variableName'),\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'CodeList Name',\r\n                dataIndex: 'codeListName',\r\n                key: 'codeListName',\r\n                sorter: (a, b) => stringSorter(a, b, 'codeListName'),\r\n                width: 100\r\n            },\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'actions',\r\n                key: 'actions',\r\n                width: 100\r\n            }\r\n        ];\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { showAddStandardCodeListModal, action, cDISCDataStandardID, cDISCDataStdVersionID, title, showCDISCDataStdRoleList, showStandardCodeList, standardCodeListID } = this.state;\n\r\n        return (\r\n            <LayoutContentWrapper>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <i className=\"fas fa-list-ul\" />\r\n                        <span> Standard Codelist</span>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        List\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <LayoutContent>\r\n\r\n                    <Spin indicator={antIcon} spinning={this.state.loading}>\r\n\r\n                        <ReactTable\r\n                            columns={columns}\r\n                            dataSource={this.state.dataSource}\r\n                            addAction={checkPermission(permissions, [\"self\"]) >= 3 ? this.addStandardCodeList : null}\r\n                            scroll={{ y: \"calc(100vh - 314px)\" }}\r\n                        />\r\n                    </Spin>\r\n                    {(action == \"Update\" || action == \"Create\") && <AddStandardCodeList readOnly={checkPermission(permissions, [\"self\"]) <= 1} visible={showAddStandardCodeListModal} title={this.state.title} standardIDForCreateAndUpdate={thisObj.props.cDISCDataStandardID} stdVersionIDForCreateAndUpdate={thisObj.props.cDISCDataStdVersionID} handleCancel={this.handleAddStandardCodeListCancel} history={this.refreshStandardCodeList} standardCodeListID={standardCodeListID} action={action} />}\n                    {(action == \"Delete\") && <ConfirmModal title=\"Delete Standard Codelist\" history={this.props.history} SubmitButtonName=\"Delete\" onSubmit={this.handleDelete} visible={this.state.showDeleteConfirmationModal} handleCancel={this.handleCancelDeleteConfirmationModal} getFieldDecorator={getFieldDecorator} loading={this.state.modalLoad} />}\r\n                </LayoutContent>\r\n\r\n            </LayoutContentWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedApp = Form.create()(StandardCodelistList);\r\nexport default WrappedApp;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}