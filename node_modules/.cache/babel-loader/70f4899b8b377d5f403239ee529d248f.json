{"ast":null,"code":"import qs from 'qs';\nexport function getInitData() {\n  var initData = qs.parse(window.location.search.slice(1));\n  if (initData.toggle) initData.toggle.free_shipping = initData.toggle.free_shipping === 'true' ? true : undefined;\n  return initData;\n}\nexport function setUrl(searchState) {\n  var search = searchState ? \"\".concat(window.location.pathname, \"?\").concat(qs.stringify(searchState)) : '';\n  window.history.pushState(searchState, null, search);\n}\nexport function getDefaultPath() {\n  var getParent = function getParent(lastRoute) {\n    var parent = [];\n    if (!lastRoute) return parent;\n    return parent;\n  };\n  if (window && window.location.pathname) {\n    var routes = window.location.pathname.split('/');\n    if (routes.length > 1) {\n      var lastRoute = routes[routes.length - 1];\n      return getParent(lastRoute);\n    }\n  }\n  return [];\n}","map":{"version":3,"names":["qs","getInitData","initData","parse","window","location","search","slice","toggle","free_shipping","undefined","setUrl","searchState","pathname","stringify","history","pushState","getDefaultPath","getParent","lastRoute","parent","routes","split","length"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/helpers/urlSync.js"],"sourcesContent":["import qs from 'qs';\r\n\r\nexport function getInitData() {\r\n  const initData = qs.parse(window.location.search.slice(1));\r\n  if (initData.toggle)\r\n    initData.toggle.free_shipping =\r\n      initData.toggle.free_shipping === 'true' ? true : undefined;\r\n  return initData;\r\n}\r\nexport function setUrl(searchState) {\r\n  const search = searchState\r\n    ? `${window.location.pathname}?${qs.stringify(searchState)}`\r\n    : '';\r\n  window.history.pushState(searchState, null, search);\r\n}\r\n\r\nexport function getDefaultPath() {\r\n  const getParent = lastRoute => {\r\n    const parent = [];\r\n    if (!lastRoute) return parent;\r\n   \r\n    return parent;\r\n  };\r\n  if (window && window.location.pathname) {\r\n    const routes = window.location.pathname.split('/');\r\n    if (routes.length > 1) {\r\n      const lastRoute = routes[routes.length - 1];\r\n      return getParent(lastRoute);\r\n    }\r\n  }\r\n  return [];\r\n}\r\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,IAAI;AAEnB,OAAO,SAASC,WAAW,GAAG;EAC5B,IAAMC,QAAQ,GAAGF,EAAE,CAACG,KAAK,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1D,IAAIL,QAAQ,CAACM,MAAM,EACjBN,QAAQ,CAACM,MAAM,CAACC,aAAa,GAC3BP,QAAQ,CAACM,MAAM,CAACC,aAAa,KAAK,MAAM,GAAG,IAAI,GAAGC,SAAS;EAC/D,OAAOR,QAAQ;AACjB;AACA,OAAO,SAASS,MAAM,CAACC,WAAW,EAAE;EAClC,IAAMN,MAAM,GAAGM,WAAW,aACnBR,MAAM,CAACC,QAAQ,CAACQ,QAAQ,cAAIb,EAAE,CAACc,SAAS,CAACF,WAAW,CAAC,IACxD,EAAE;EACNR,MAAM,CAACW,OAAO,CAACC,SAAS,CAACJ,WAAW,EAAE,IAAI,EAAEN,MAAM,CAAC;AACrD;AAEA,OAAO,SAASW,cAAc,GAAG;EAC/B,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAGC,SAAS,EAAI;IAC7B,IAAMC,MAAM,GAAG,EAAE;IACjB,IAAI,CAACD,SAAS,EAAE,OAAOC,MAAM;IAE7B,OAAOA,MAAM;EACf,CAAC;EACD,IAAIhB,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAACQ,QAAQ,EAAE;IACtC,IAAMQ,MAAM,GAAGjB,MAAM,CAACC,QAAQ,CAACQ,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC;IAClD,IAAID,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;MACrB,IAAMJ,SAAS,GAAGE,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;MAC3C,OAAOL,SAAS,CAACC,SAAS,CAAC;IAC7B;EACF;EACA,OAAO,EAAE;AACX"},"metadata":{},"sourceType":"module"}