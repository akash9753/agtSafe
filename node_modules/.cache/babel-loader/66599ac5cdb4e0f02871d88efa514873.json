{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { illegalArgument } from '../../base/common/errors.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/modelService.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuRegistry } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\nvar Command = /** @class */function () {\n  function Command(opts) {\n    this.id = opts.id;\n    this.precondition = opts.precondition;\n    this._kbOpts = opts.kbOpts;\n    this._menuOpts = opts.menuOpts;\n    this._description = opts.description;\n  }\n  Command.prototype.register = function () {\n    var _this = this;\n    if (Array.isArray(this._menuOpts)) {\n      this._menuOpts.forEach(this._registerMenuItem, this);\n    } else if (this._menuOpts) {\n      this._registerMenuItem(this._menuOpts);\n    }\n    if (this._kbOpts) {\n      var kbWhen = this._kbOpts.kbExpr;\n      if (this.precondition) {\n        if (kbWhen) {\n          kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n        } else {\n          kbWhen = this.precondition;\n        }\n      }\n      KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: this.id,\n        handler: function handler(accessor, args) {\n          return _this.runCommand(accessor, args);\n        },\n        weight: this._kbOpts.weight,\n        when: kbWhen,\n        primary: this._kbOpts.primary,\n        secondary: this._kbOpts.secondary,\n        win: this._kbOpts.win,\n        linux: this._kbOpts.linux,\n        mac: this._kbOpts.mac,\n        description: this._description\n      });\n    } else {\n      CommandsRegistry.registerCommand({\n        id: this.id,\n        handler: function handler(accessor, args) {\n          return _this.runCommand(accessor, args);\n        },\n        description: this._description\n      });\n    }\n  };\n  Command.prototype._registerMenuItem = function (item) {\n    MenuRegistry.appendMenuItem(item.menuId, {\n      group: item.group,\n      command: {\n        id: this.id,\n        title: item.title\n      },\n      when: item.when,\n      order: item.order\n    });\n  };\n  return Command;\n}();\nexport { Command };\nvar EditorCommand = /** @class */function (_super) {\n  __extends(EditorCommand, _super);\n  function EditorCommand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Create a command class that is bound to a certain editor contribution.\r\n   */\n  EditorCommand.bindToContribution = function (controllerGetter) {\n    return (/** @class */function (_super) {\n        __extends(EditorControllerCommandImpl, _super);\n        function EditorControllerCommandImpl(opts) {\n          var _this = _super.call(this, opts) || this;\n          _this._callback = opts.handler;\n          return _this;\n        }\n        EditorControllerCommandImpl.prototype.runEditorCommand = function (accessor, editor, args) {\n          var controller = controllerGetter(editor);\n          if (controller) {\n            this._callback(controllerGetter(editor), args);\n          }\n        };\n        return EditorControllerCommandImpl;\n      }(EditorCommand)\n    );\n  };\n  EditorCommand.prototype.runCommand = function (accessor, args) {\n    var _this = this;\n    var codeEditorService = accessor.get(ICodeEditorService);\n    // Find the editor with text focus or active\n    var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n    if (!editor) {\n      // well, at least we tried...\n      return;\n    }\n    return editor.invokeWithinContext(function (editorAccessor) {\n      var kbService = editorAccessor.get(IContextKeyService);\n      if (!kbService.contextMatchesRules(withNullAsUndefined(_this.precondition))) {\n        // precondition does not hold\n        return;\n      }\n      return _this.runEditorCommand(editorAccessor, editor, args);\n    });\n  };\n  return EditorCommand;\n}(Command);\nexport { EditorCommand };\nvar EditorAction = /** @class */function (_super) {\n  __extends(EditorAction, _super);\n  function EditorAction(opts) {\n    var _this = _super.call(this, EditorAction.convertOptions(opts)) || this;\n    _this.label = opts.label;\n    _this.alias = opts.alias;\n    return _this;\n  }\n  EditorAction.convertOptions = function (opts) {\n    var menuOpts;\n    if (Array.isArray(opts.menuOpts)) {\n      menuOpts = opts.menuOpts;\n    } else if (opts.menuOpts) {\n      menuOpts = [opts.menuOpts];\n    } else {\n      menuOpts = [];\n    }\n    function withDefaults(item) {\n      if (!item.menuId) {\n        item.menuId = 7 /* EditorContext */;\n      }\n\n      if (!item.title) {\n        item.title = opts.label;\n      }\n      item.when = ContextKeyExpr.and(opts.precondition, item.when);\n      return item;\n    }\n    if (Array.isArray(opts.contextMenuOpts)) {\n      menuOpts.push.apply(menuOpts, opts.contextMenuOpts.map(withDefaults));\n    } else if (opts.contextMenuOpts) {\n      menuOpts.push(withDefaults(opts.contextMenuOpts));\n    }\n    opts.menuOpts = menuOpts;\n    return opts;\n  };\n  EditorAction.prototype.runEditorCommand = function (accessor, editor, args) {\n    this.reportTelemetry(accessor, editor);\n    return this.run(accessor, editor, args || {});\n  };\n  EditorAction.prototype.reportTelemetry = function (accessor, editor) {\n    accessor.get(ITelemetryService).publicLog2('editorActionInvoked', {\n      name: this.label,\n      id: this.id\n    });\n  };\n  return EditorAction;\n}(EditorCommand);\nexport { EditorAction };\n//#endregion EditorAction\n// --- Registration of commands and actions\nexport function registerLanguageCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor, args) {\n    return handler(accessor, args || {});\n  });\n}\nexport function registerDefaultLanguageCommand(id, handler) {\n  registerLanguageCommand(id, function (accessor, args) {\n    var resource = args.resource,\n      position = args.position;\n    if (!(resource instanceof URI)) {\n      throw illegalArgument('resource');\n    }\n    if (!Position.isIPosition(position)) {\n      throw illegalArgument('position');\n    }\n    var model = accessor.get(IModelService).getModel(resource);\n    if (model) {\n      var editorPosition = Position.lift(position);\n      return handler(model, editorPosition, args);\n    }\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, Position.lift(position), args);\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      }).finally(function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerModelAndPositionCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var resource = args[0],\n      position = args[1];\n    assertType(URI.isUri(resource));\n    assertType(Position.isIPosition(position));\n    var model = accessor.get(IModelService).getModel(resource);\n    if (model) {\n      var editorPosition = Position.lift(position);\n      return handler(model, editorPosition, args.slice(2));\n    }\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, Position.lift(position), args.slice(2));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      }).finally(function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerModelCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var resource = args[0];\n    assertType(URI.isUri(resource));\n    var model = accessor.get(IModelService).getModel(resource);\n    if (model) {\n      return handler(model, args.slice(1));\n    }\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, args.slice(1));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      }).finally(function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerEditorCommand(editorCommand) {\n  EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n  return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(new ctor());\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\nexport function registerEditorContribution(id, ctor) {\n  EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n  function getEditorCommand(commandId) {\n    return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n  }\n  EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n  function getEditorActions() {\n    return EditorContributionRegistry.INSTANCE.getEditorActions();\n  }\n  EditorExtensionsRegistry.getEditorActions = getEditorActions;\n  function getEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions();\n  }\n  EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n  function getSomeEditorContributions(ids) {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(function (c) {\n      return ids.indexOf(c.id) >= 0;\n    });\n  }\n  EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n  function getDiffEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n  }\n  EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nvar Extensions = {\n  EditorCommonContributions: 'editor.contributions'\n};\nvar EditorContributionRegistry = /** @class */function () {\n  function EditorContributionRegistry() {\n    this.editorContributions = [];\n    this.diffEditorContributions = [];\n    this.editorActions = [];\n    this.editorCommands = Object.create(null);\n  }\n  EditorContributionRegistry.prototype.registerEditorContribution = function (id, ctor) {\n    this.editorContributions.push({\n      id: id,\n      ctor: ctor\n    });\n  };\n  EditorContributionRegistry.prototype.getEditorContributions = function () {\n    return this.editorContributions.slice(0);\n  };\n  EditorContributionRegistry.prototype.getDiffEditorContributions = function () {\n    return this.diffEditorContributions.slice(0);\n  };\n  EditorContributionRegistry.prototype.registerEditorAction = function (action) {\n    action.register();\n    this.editorActions.push(action);\n  };\n  EditorContributionRegistry.prototype.getEditorActions = function () {\n    return this.editorActions.slice(0);\n  };\n  EditorContributionRegistry.prototype.registerEditorCommand = function (editorCommand) {\n    editorCommand.register();\n    this.editorCommands[editorCommand.id] = editorCommand;\n  };\n  EditorContributionRegistry.prototype.getEditorCommand = function (commandId) {\n    return this.editorCommands[commandId] || null;\n  };\n  EditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\n  return EditorContributionRegistry;\n}();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","illegalArgument","URI","ICodeEditorService","Position","IModelService","ITextModelService","MenuRegistry","CommandsRegistry","ContextKeyExpr","IContextKeyService","KeybindingsRegistry","Registry","ITelemetryService","withNullAsUndefined","assertType","Command","opts","id","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","_description","description","register","_this","isArray","forEach","_registerMenuItem","kbWhen","kbExpr","and","registerCommandAndKeybindingRule","handler","accessor","args","runCommand","weight","when","primary","secondary","win","linux","mac","registerCommand","item","appendMenuItem","menuId","group","command","title","order","EditorCommand","_super","apply","arguments","bindToContribution","controllerGetter","EditorControllerCommandImpl","call","_callback","runEditorCommand","editor","controller","codeEditorService","get","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","kbService","contextMatchesRules","EditorAction","convertOptions","label","alias","withDefaults","contextMenuOpts","push","map","reportTelemetry","run","publicLog2","name","registerLanguageCommand","registerDefaultLanguageCommand","resource","position","isIPosition","model","getModel","editorPosition","lift","createModelReference","then","reference","Promise","resolve","reject","result","object","textEditorModel","err","finally","dispose","registerModelAndPositionCommand","_i","length","isUri","slice","registerModelCommand","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","registerInstantiatedEditorAction","editorAction","registerEditorContribution","EditorExtensionsRegistry","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","Extensions","EditorCommonContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","action","add"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { illegalArgument } from '../../base/common/errors.js';\r\nimport { URI } from '../../base/common/uri.js';\r\nimport { ICodeEditorService } from './services/codeEditorService.js';\r\nimport { Position } from '../common/core/position.js';\r\nimport { IModelService } from '../common/services/modelService.js';\r\nimport { ITextModelService } from '../common/services/resolverService.js';\r\nimport { MenuRegistry } from '../../platform/actions/common/actions.js';\r\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\r\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Registry } from '../../platform/registry/common/platform.js';\r\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\r\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\r\nvar Command = /** @class */ (function () {\r\n    function Command(opts) {\r\n        this.id = opts.id;\r\n        this.precondition = opts.precondition;\r\n        this._kbOpts = opts.kbOpts;\r\n        this._menuOpts = opts.menuOpts;\r\n        this._description = opts.description;\r\n    }\r\n    Command.prototype.register = function () {\r\n        var _this = this;\r\n        if (Array.isArray(this._menuOpts)) {\r\n            this._menuOpts.forEach(this._registerMenuItem, this);\r\n        }\r\n        else if (this._menuOpts) {\r\n            this._registerMenuItem(this._menuOpts);\r\n        }\r\n        if (this._kbOpts) {\r\n            var kbWhen = this._kbOpts.kbExpr;\r\n            if (this.precondition) {\r\n                if (kbWhen) {\r\n                    kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\r\n                }\r\n                else {\r\n                    kbWhen = this.precondition;\r\n                }\r\n            }\r\n            KeybindingsRegistry.registerCommandAndKeybindingRule({\r\n                id: this.id,\r\n                handler: function (accessor, args) { return _this.runCommand(accessor, args); },\r\n                weight: this._kbOpts.weight,\r\n                when: kbWhen,\r\n                primary: this._kbOpts.primary,\r\n                secondary: this._kbOpts.secondary,\r\n                win: this._kbOpts.win,\r\n                linux: this._kbOpts.linux,\r\n                mac: this._kbOpts.mac,\r\n                description: this._description\r\n            });\r\n        }\r\n        else {\r\n            CommandsRegistry.registerCommand({\r\n                id: this.id,\r\n                handler: function (accessor, args) { return _this.runCommand(accessor, args); },\r\n                description: this._description\r\n            });\r\n        }\r\n    };\r\n    Command.prototype._registerMenuItem = function (item) {\r\n        MenuRegistry.appendMenuItem(item.menuId, {\r\n            group: item.group,\r\n            command: {\r\n                id: this.id,\r\n                title: item.title,\r\n            },\r\n            when: item.when,\r\n            order: item.order\r\n        });\r\n    };\r\n    return Command;\r\n}());\r\nexport { Command };\r\nvar EditorCommand = /** @class */ (function (_super) {\r\n    __extends(EditorCommand, _super);\r\n    function EditorCommand() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create a command class that is bound to a certain editor contribution.\r\n     */\r\n    EditorCommand.bindToContribution = function (controllerGetter) {\r\n        return /** @class */ (function (_super) {\r\n            __extends(EditorControllerCommandImpl, _super);\r\n            function EditorControllerCommandImpl(opts) {\r\n                var _this = _super.call(this, opts) || this;\r\n                _this._callback = opts.handler;\r\n                return _this;\r\n            }\r\n            EditorControllerCommandImpl.prototype.runEditorCommand = function (accessor, editor, args) {\r\n                var controller = controllerGetter(editor);\r\n                if (controller) {\r\n                    this._callback(controllerGetter(editor), args);\r\n                }\r\n            };\r\n            return EditorControllerCommandImpl;\r\n        }(EditorCommand));\r\n    };\r\n    EditorCommand.prototype.runCommand = function (accessor, args) {\r\n        var _this = this;\r\n        var codeEditorService = accessor.get(ICodeEditorService);\r\n        // Find the editor with text focus or active\r\n        var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\r\n        if (!editor) {\r\n            // well, at least we tried...\r\n            return;\r\n        }\r\n        return editor.invokeWithinContext(function (editorAccessor) {\r\n            var kbService = editorAccessor.get(IContextKeyService);\r\n            if (!kbService.contextMatchesRules(withNullAsUndefined(_this.precondition))) {\r\n                // precondition does not hold\r\n                return;\r\n            }\r\n            return _this.runEditorCommand(editorAccessor, editor, args);\r\n        });\r\n    };\r\n    return EditorCommand;\r\n}(Command));\r\nexport { EditorCommand };\r\nvar EditorAction = /** @class */ (function (_super) {\r\n    __extends(EditorAction, _super);\r\n    function EditorAction(opts) {\r\n        var _this = _super.call(this, EditorAction.convertOptions(opts)) || this;\r\n        _this.label = opts.label;\r\n        _this.alias = opts.alias;\r\n        return _this;\r\n    }\r\n    EditorAction.convertOptions = function (opts) {\r\n        var menuOpts;\r\n        if (Array.isArray(opts.menuOpts)) {\r\n            menuOpts = opts.menuOpts;\r\n        }\r\n        else if (opts.menuOpts) {\r\n            menuOpts = [opts.menuOpts];\r\n        }\r\n        else {\r\n            menuOpts = [];\r\n        }\r\n        function withDefaults(item) {\r\n            if (!item.menuId) {\r\n                item.menuId = 7 /* EditorContext */;\r\n            }\r\n            if (!item.title) {\r\n                item.title = opts.label;\r\n            }\r\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\r\n            return item;\r\n        }\r\n        if (Array.isArray(opts.contextMenuOpts)) {\r\n            menuOpts.push.apply(menuOpts, opts.contextMenuOpts.map(withDefaults));\r\n        }\r\n        else if (opts.contextMenuOpts) {\r\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\r\n        }\r\n        opts.menuOpts = menuOpts;\r\n        return opts;\r\n    };\r\n    EditorAction.prototype.runEditorCommand = function (accessor, editor, args) {\r\n        this.reportTelemetry(accessor, editor);\r\n        return this.run(accessor, editor, args || {});\r\n    };\r\n    EditorAction.prototype.reportTelemetry = function (accessor, editor) {\r\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\r\n    };\r\n    return EditorAction;\r\n}(EditorCommand));\r\nexport { EditorAction };\r\n//#endregion EditorAction\r\n// --- Registration of commands and actions\r\nexport function registerLanguageCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor, args) { return handler(accessor, args || {}); });\r\n}\r\nexport function registerDefaultLanguageCommand(id, handler) {\r\n    registerLanguageCommand(id, function (accessor, args) {\r\n        var resource = args.resource, position = args.position;\r\n        if (!(resource instanceof URI)) {\r\n            throw illegalArgument('resource');\r\n        }\r\n        if (!Position.isIPosition(position)) {\r\n            throw illegalArgument('position');\r\n        }\r\n        var model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            var editorPosition = Position.lift(position);\r\n            return handler(model, editorPosition, args);\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    var result = handler(reference.object.textEditorModel, Position.lift(position), args);\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(function () {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerModelAndPositionCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var resource = args[0], position = args[1];\r\n        assertType(URI.isUri(resource));\r\n        assertType(Position.isIPosition(position));\r\n        var model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            var editorPosition = Position.lift(position);\r\n            return handler(model, editorPosition, args.slice(2));\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    var result = handler(reference.object.textEditorModel, Position.lift(position), args.slice(2));\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(function () {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerModelCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var resource = args[0];\r\n        assertType(URI.isUri(resource));\r\n        var model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            return handler(model, args.slice(1));\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    var result = handler(reference.object.textEditorModel, args.slice(1));\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(function () {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerEditorCommand(editorCommand) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\r\n    return editorCommand;\r\n}\r\nexport function registerEditorAction(ctor) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorAction(new ctor());\r\n}\r\nexport function registerInstantiatedEditorAction(editorAction) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\r\n}\r\nexport function registerEditorContribution(id, ctor) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\r\n}\r\nexport var EditorExtensionsRegistry;\r\n(function (EditorExtensionsRegistry) {\r\n    function getEditorCommand(commandId) {\r\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\r\n    }\r\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\r\n    function getEditorActions() {\r\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\r\n    }\r\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\r\n    function getEditorContributions() {\r\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\r\n    }\r\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\r\n    function getSomeEditorContributions(ids) {\r\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(function (c) { return ids.indexOf(c.id) >= 0; });\r\n    }\r\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\r\n    function getDiffEditorContributions() {\r\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\r\n    }\r\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\r\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\r\n// Editor extension points\r\nvar Extensions = {\r\n    EditorCommonContributions: 'editor.contributions'\r\n};\r\nvar EditorContributionRegistry = /** @class */ (function () {\r\n    function EditorContributionRegistry() {\r\n        this.editorContributions = [];\r\n        this.diffEditorContributions = [];\r\n        this.editorActions = [];\r\n        this.editorCommands = Object.create(null);\r\n    }\r\n    EditorContributionRegistry.prototype.registerEditorContribution = function (id, ctor) {\r\n        this.editorContributions.push({ id: id, ctor: ctor });\r\n    };\r\n    EditorContributionRegistry.prototype.getEditorContributions = function () {\r\n        return this.editorContributions.slice(0);\r\n    };\r\n    EditorContributionRegistry.prototype.getDiffEditorContributions = function () {\r\n        return this.diffEditorContributions.slice(0);\r\n    };\r\n    EditorContributionRegistry.prototype.registerEditorAction = function (action) {\r\n        action.register();\r\n        this.editorActions.push(action);\r\n    };\r\n    EditorContributionRegistry.prototype.getEditorActions = function () {\r\n        return this.editorActions.slice(0);\r\n    };\r\n    EditorContributionRegistry.prototype.registerEditorCommand = function (editorCommand) {\r\n        editorCommand.register();\r\n        this.editorCommands[editorCommand.id] = editorCommand;\r\n    };\r\n    EditorContributionRegistry.prototype.getEditorCommand = function (commandId) {\r\n        return (this.editorCommands[commandId] || null);\r\n    };\r\n    EditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\r\n    return EditorContributionRegistry;\r\n}());\r\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}