{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Standards\\\\importCDISCDataStdVariableMetadata.js\";\nimport React, { Component } from 'react';\nimport { Breadcrumb, Button, Col, Row, Select, Form, Steps, message, Modal, Icon, Spin } from 'antd';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport { CallServerPost, PostCallWithZone, errorModal, successModal, successModalCallback, getProjectRole, DownloadFileWithPostData } from '../Utility/sharedUtility';\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\nimport ConfirmModal from '../Utility/ConfirmModal';\nimport SingleForm from '../Utility/SingleForm';\nimport ErrorList from './modalTable';\nimport Input from '../../components/uielements/input';\nimport { fnUploadFiles, fnUploadCancel } from '../Topbar/Upload';\nimport Progress from '../Utility/ProgressBar';\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 17\n  }\n});\nvar thisObj;\nvar projectRole = getProjectRole();\nvar errorListCol = [{\n  title: 'RuleCode',\n  dataIndex: 'ruleCode',\n  key: 'ruleCode',\n  width: 100\n}, {\n  title: 'Rule Description',\n  dataIndex: 'ruleDescription',\n  key: 'ruleDescription',\n  width: 200\n}, {\n  title: 'Severity',\n  dataIndex: 'severity',\n  key: 'severity',\n  width: 200\n}, {\n  title: 'RowID',\n  dataIndex: 'rowID',\n  key: 'rowID',\n  width: 200\n}, {\n  title: 'Error Message',\n  dataIndex: 'errorMessage',\n  key: 'errorMessage'\n}];\nvar ImportCDISCDataStdVariableMetadata = /*#__PURE__*/function (_Component) {\n  _inherits(ImportCDISCDataStdVariableMetadata, _Component);\n  var _super = _createSuper(ImportCDISCDataStdVariableMetadata);\n  function ImportCDISCDataStdVariableMetadata(props) {\n    var _this;\n    _classCallCheck(this, ImportCDISCDataStdVariableMetadata);\n    _this = _super.call(this, props);\n    _this.getFormData = function (data) {\n      if (data.action != \"\" && data.action != \"Delete\") {\n        CallServerPost('CDISCDataStdVariableMetadata/GetCDISCDataStdVariableMetadataFormData', {\n          FormName: \"CDISCDataStdVariableMetadata\",\n          ActionName: data.action,\n          ID: 0\n        }).then(function (response) {\n          thisObj.setState({\n            loading: false\n          });\n          var responseData = response.value;\n          if (responseData.status == 0) {\n            errorModal(responseData.message);\n          } else {\n            thisObj.setState({\n              responseData: responseData,\n              loading: false\n            });\n          }\n        }).catch(function (error) {\n          return error;\n        });\n      }\n    };\n    _this.handleCDISCDataStdVariableMetadataCancel = function () {\n      thisObj.setState({\n        showErrorList: false\n      });\n      thisObj.props.history();\n    };\n    _this.showListPage = function () {\n      thisObj.handleCDISCDataStdVariableMetadataCancel();\n    };\n    _this.handleClear = function () {\n      thisObj.setState({\n        showErrorList: false\n      });\n    };\n    _this.ErrorModalCancel = function () {\n      thisObj.props.form.resetFields();\n      thisObj.setState({\n        showErrorList: false\n      });\n    };\n    _this.ErrorModalSubmit = function () {\n      thisObj.props.form.resetFields();\n      thisObj.setState({\n        showErrorList: false\n      });\n    };\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var thisObj = _assertThisInitialized(_this);\n      thisObj.props.form.validateFields([\"ExcelFilePath\"], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          thisObj.setState({\n            loading: true\n          });\n          values[\"CDISCDataStdVersionID\"] = thisObj.props.cDISCDataStdVersionID;\n          values[\"UpdatedBy\"] = projectRole.userProfile.userID;\n          fnUploadFiles(values, thisObj.handleCreateUpdate, thisObj.onCancelIfErrorOccur);\n        }\n      });\n    };\n    _this.handleCreateUpdate = function (values) {\n      var thisObj = _assertThisInitialized(_this);\n      if (thisObj.props.form.getFieldValue([\"ExcelFilePath\"]).celFilePath !== null) {\n        thisObj.socket_open();\n        PostCallWithZone('CDISCDataStdVariableMetadata/Import', values).then(function (response) {\n          thisObj.setState({\n            loading: false,\n            modalLoad: false\n          });\n          if (response.status == 1) {\n            //alert('Success');\n            thisObj.setState({\n              progress: \"exception\"\n            });\n            successModalCallback(response.message, thisObj.showListPage);\n          } else {\n            if (response.message !== null) {\n              thisObj.props.form.resetFields();\n              thisObj.setState({\n                progress: \"success\"\n              });\n              errorModal(response.message);\n            } else {\n              thisObj.setState({\n                progress: \"exception\"\n              });\n            }\n            thisObj.formErrorList(response.value);\n          }\n        }).catch(function (error) {\n          thisObj.setState({\n            progress: \"exception\"\n          });\n        });\n      } else {\n        errorModal(\"Please choose standard variable meta data File\");\n      }\n    };\n    _this.socket_open = function () {\n      thisObj.setState({\n        progress: \"active\"\n      });\n    };\n    _this.onCancelIfErrorOccur = function () {\n      _this.setState({\n        modalLoad: false,\n        loading: false\n      });\n    };\n    _this.formErrorList = function (data) {\n      var row = [];\n      data.forEach(function (key, index) {\n        row.push({\n          ruleCode: key.ruleCode,\n          ruleDescription: key.ruleDescription,\n          severity: key.severity,\n          rowID: key.rowID,\n          errorMessage: key.errorMessage\n        });\n      });\n      thisObj.setState({\n        showErrorList: true,\n        row: row\n      });\n\n      //console.log(row)\n    };\n    _this.handleUpdate = function (e) {\n      alert('Update button Clicked');\n    };\n    _this.handleExcelDownloadValidation = function () {\n      var title = _this.props.title;\n      var studyName = title.substring(0, title.lastIndexOf('_'));\n      DownloadFileWithPostData('Study/ExportValidationResults', \"Import_CDISCDataStdVariableMetadata_\" + _this.state.date + \".xlsx\", {\n        StudyName: \"Import_CDISCDataStdVariableMetadata\",\n        DirectoryName: \"Import_CDISCDataStdVariableMetadata\",\n        SchemaValidationFileName: \"Import_CDISCDataStdVariableMetadata.xlsx\"\n      }, \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n    };\n    _this.handleExcelTemplateDownload = function () {\n      DownloadFileWithPostData('CDISCDataStandard/DownloadTemplate', \"Import_Template.xlsx\", {}, \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n    };\n    var today = new Date(),\n      date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + '_' + today.getHours() + ':' + today.getMinutes();\n    _this.state = {\n      pageName: \"ImportCDISCDataStdVariableMetaData\",\n      loading: true,\n      date: date,\n      showEditConfirmationModal: false,\n      ExcelFilePath: null,\n      responseData: {\n        formData: {}\n      },\n      row: [],\n      col: errorListCol,\n      showErrorList: false,\n      allValues: {},\n      modalLoad: false,\n      progress: false\n    };\n    thisObj = _assertThisInitialized(_this);\n    thisObj.getFormData(thisObj.props);\n    return _this;\n  }\n  _createClass(ImportCDISCDataStdVariableMetadata, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n        getFieldDecorator = _this$props$form.getFieldDecorator,\n        getFieldValue = _this$props$form.getFieldValue;\n      var _this$state = this.state,\n        responseData = _this$state.responseData,\n        loading = _this$state.loading,\n        showErrorList = _this$state.showErrorList,\n        row = _this$state.row,\n        col = _this$state.col,\n        progress = _this$state.progress;\n      var action = this.props.action;\n      return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-list-ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, \" Standard Variable\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, \"Import\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"reacTable-addbtn\",\n        style: {\n          float: \"right\",\n          marginRight: 20\n        },\n        onClick: this.handleExcelTemplateDownload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, \"Download Template\")), /*#__PURE__*/React.createElement(LayoutContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: antIcon,\n        spinning: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, action != \"\" ? Object.keys(responseData.formData).length > 0 && /*#__PURE__*/React.createElement(SingleForm, {\n        isCreate: true,\n        property: this,\n        props: this,\n        responseData: responseData,\n        getFieldDecorator: getFieldDecorator,\n        handleCancel: thisObj.handleCDISCDataStdVariableMetadataCancel,\n        handleSubmit: thisObj.handleSubmit,\n        handleClear: thisObj.handleClear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 300\n        }\n      })), /*#__PURE__*/React.createElement(Progress, {\n        progress: progress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(ConfirmModal, {\n        title: \"Update Standard Variable Import\",\n        SubmitButtonName: \"Update\",\n        onSubmit: this.handleUpdate,\n        visible: this.state.showEditConfirmationModal,\n        handleCancel: this.handleCancelEditConfirmationModal,\n        getFieldDecorator: getFieldDecorator,\n        loading: this.state.modalLoad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(ErrorList, {\n        exportAction: this.handleExcelDownloadValidation,\n        handleCancel: this.ErrorModalCancel,\n        handleSubmit: this.ErrorModalSubmit,\n        visible: showErrorList,\n        row: row,\n        column: col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return ImportCDISCDataStdVariableMetadata;\n}(Component);\nvar WrappedApp = Form.create()(ImportCDISCDataStdVariableMetadata);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Breadcrumb","Button","Col","Row","Select","Form","Steps","message","Modal","Icon","Spin","LayoutContentWrapper","LayoutContent","CallServerPost","PostCallWithZone","errorModal","successModal","successModalCallback","getProjectRole","DownloadFileWithPostData","rowStyle","ConfirmModal","SingleForm","ErrorList","Input","fnUploadFiles","fnUploadCancel","Progress","antIcon","fontSize","color","thisObj","projectRole","errorListCol","title","dataIndex","key","width","ImportCDISCDataStdVariableMetadata","props","getFormData","data","action","FormName","ActionName","ID","then","response","setState","loading","responseData","value","status","catch","error","handleCDISCDataStdVariableMetadataCancel","showErrorList","history","showListPage","handleClear","ErrorModalCancel","form","resetFields","ErrorModalSubmit","handleSubmit","e","preventDefault","validateFields","force","err","values","cDISCDataStdVersionID","userProfile","userID","handleCreateUpdate","onCancelIfErrorOccur","getFieldValue","celFilePath","socket_open","modalLoad","progress","formErrorList","row","forEach","index","push","ruleCode","ruleDescription","severity","rowID","errorMessage","handleUpdate","alert","handleExcelDownloadValidation","studyName","substring","lastIndexOf","state","date","StudyName","DirectoryName","SchemaValidationFileName","handleExcelTemplateDownload","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","pageName","showEditConfirmationModal","ExcelFilePath","formData","col","allValues","getFieldDecorator","float","marginRight","Object","keys","length","handleCancelEditConfirmationModal","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Standards/importCDISCDataStdVariableMetadata.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Breadcrumb, Button, Col, Row, Select, Form, Steps, message, Modal, Icon, Spin } from 'antd';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport { CallServerPost, PostCallWithZone, errorModal, successModal, successModalCallback, getProjectRole, DownloadFileWithPostData } from '../Utility/sharedUtility';\r\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\nimport SingleForm from '../Utility/SingleForm';\r\nimport ErrorList from './modalTable';\r\nimport Input from '../../components/uielements/input';\nimport { fnUploadFiles, fnUploadCancel } from '../Topbar/Upload';\nimport Progress from '../Utility/ProgressBar';\r\n\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\r\nvar thisObj;\r\nconst projectRole = getProjectRole();\r\n\r\nconst errorListCol = [\r\n    {\r\n        title: 'RuleCode',\r\n        dataIndex: 'ruleCode',\r\n        key: 'ruleCode',\r\n        width: 100\r\n    },\r\n    {\r\n        title: 'Rule Description',\r\n        dataIndex: 'ruleDescription',\r\n        key: 'ruleDescription',\r\n        width: 200\r\n    },\r\n    {\r\n        title: 'Severity',\r\n        dataIndex: 'severity',\r\n        key: 'severity',\r\n        width: 200\r\n\r\n    },\r\n    {\r\n        title: 'RowID',\r\n        dataIndex: 'rowID',\r\n        key: 'rowID',\r\n        width: 200\r\n\r\n    },\r\n    {\r\n        title: 'Error Message',\r\n        dataIndex: 'errorMessage',\r\n        key: 'errorMessage'\r\n\r\n    },\r\n];\r\n\r\nclass ImportCDISCDataStdVariableMetadata extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);       \r\n\r\n        var today = new Date(),\r\n            date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + '_' + today.getHours() + ':' + today.getMinutes();\r\n        this.state = {\r\n            pageName:\"ImportCDISCDataStdVariableMetaData\",\r\n            loading: true,\r\n            date: date,\r\n            showEditConfirmationModal: false,\r\n            ExcelFilePath: null,\r\n            responseData: {\r\n                formData: {},\r\n            },            \r\n            row: [],            \r\n            col: errorListCol,\r\n            showErrorList: false,\r\n            allValues: {},\r\n            modalLoad: false,\r\n            progress: false\r\n\r\n        }\r\n\r\n        thisObj = this;\r\n        thisObj.getFormData(thisObj.props)\r\n    }\r\n\r\n    getFormData = (data) => {\r\n        if (data.action != \"\" && data.action != \"Delete\") {\r\n            CallServerPost('CDISCDataStdVariableMetadata/GetCDISCDataStdVariableMetadataFormData', { FormName: \"CDISCDataStdVariableMetadata\", ActionName: data.action, ID: 0 }).then(\r\n                function (response) {\r\n                    thisObj.setState({ loading: false });\r\n                    const responseData = response.value;\r\n                    if (responseData.status == 0) {\r\n                        errorModal(responseData.message);\r\n                    } else {\r\n                        thisObj.setState({ responseData: responseData, loading: false });\r\n                    }\r\n                }).catch(error => error);\r\n        }\r\n    }\r\n          \r\n\r\n    handleCDISCDataStdVariableMetadataCancel = () => {\r\n        thisObj.setState({ showErrorList: false });\r\n        thisObj.props.history();        \r\n    }\r\n\r\n\r\n    showListPage = () => {\r\n        thisObj.handleCDISCDataStdVariableMetadataCancel();\r\n    }\r\n\r\n    handleClear = () => {\r\n        thisObj.setState({ showErrorList: false });\r\n    }\r\n\r\n    ErrorModalCancel = () => {\r\n        thisObj.props.form.resetFields();\r\n        thisObj.setState({ showErrorList: false });\r\n    }\r\n\r\n    ErrorModalSubmit = () => {\r\n        thisObj.props.form.resetFields();\r\n        thisObj.setState({ showErrorList: false });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const thisObj = this;       \r\n        \r\n        thisObj.props.form.validateFields([\"ExcelFilePath\"], { force: true }, (err, values) => {\r\n            if (!err) {\r\n                thisObj.setState({ loading: true });                 \r\n                    values[\"CDISCDataStdVersionID\"] = thisObj.props.cDISCDataStdVersionID;\r\n                    values[\"UpdatedBy\"] = projectRole.userProfile.userID;\r\n                    \r\n                fnUploadFiles(values, thisObj.handleCreateUpdate, thisObj.onCancelIfErrorOccur);                    \r\n                }\r\n            });\r\n        \r\n    }\r\n\r\n    handleCreateUpdate = (values) => {\r\n\r\n        const thisObj = this;   \r\n        if (thisObj.props.form.getFieldValue([\"ExcelFilePath\"]).celFilePath !== null) {\r\n            thisObj.socket_open();\r\n            PostCallWithZone('CDISCDataStdVariableMetadata/Import', values)\r\n                .then(\r\n                function (response) {\r\n                    thisObj.setState({ loading: false, modalLoad: false });\r\n                    if (response.status == 1) {\r\n                        //alert('Success');\r\n                        thisObj.setState({ progress: \"exception\" });\r\n                        successModalCallback(response.message, thisObj.showListPage);\r\n                    }\r\n                    else {\r\n                        if (response.message !== null) {\r\n                            thisObj.props.form.resetFields();\r\n                            thisObj.setState({ progress: \"success\" });\r\n                            errorModal(response.message);\r\n                        } else {\r\n                            thisObj.setState({ progress: \"exception\" });\r\n                        }\r\n                        thisObj.formErrorList(response.value);\r\n                    }\r\n                    }).catch(error => {\r\n                        thisObj.setState({ progress: \"exception\" });\r\n                    });\r\n        } else {\r\n            errorModal(\"Please choose standard variable meta data File\");\r\n        }\r\n        \r\n    }\r\n\r\n    socket_open = () => {\r\n        thisObj.setState({ progress: \"active\" })\r\n    }\r\n\r\n    onCancelIfErrorOccur = () => {\r\n        this.setState({ modalLoad: false, loading: false });\r\n    }\r\n\r\n    formErrorList = (data) => {\r\n\r\n\r\n        let row = []\n        data.forEach(function(key, index) {\n            row.push({ ruleCode: key.ruleCode, ruleDescription: key.ruleDescription, severity: key.severity, rowID: key.rowID, errorMessage: key.errorMessage })\n        })\n        thisObj.setState({ showErrorList: true, row: row, });\r\n\n        //console.log(row)\r\n    }\r\n    handleUpdate = (e) => {\r\n\r\n        alert('Update button Clicked');\r\n                \r\n    }\r\n\r\n    handleExcelDownloadValidation = () => {\r\n        var title = this.props.title;\r\n\r\n        var studyName = title.substring(0, title.lastIndexOf('_'));\r\n        DownloadFileWithPostData('Study/ExportValidationResults', \"Import_CDISCDataStdVariableMetadata_\" + this.state.date + \".xlsx\", { StudyName: \"Import_CDISCDataStdVariableMetadata\", DirectoryName: \"Import_CDISCDataStdVariableMetadata\", SchemaValidationFileName: \"Import_CDISCDataStdVariableMetadata.xlsx\" }, \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n    }\r\n\r\n\r\n    handleExcelTemplateDownload = () => {\r\n\r\n        DownloadFileWithPostData('CDISCDataStandard/DownloadTemplate', \"Import_Template.xlsx\", { }, \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n    }\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator, getFieldValue } = this.props.form;\r\n        const { responseData, loading, showErrorList, row, col, progress } = this.state;\r\n        const { action } = this.props;\r\n\r\n\r\n        return (\r\n            \r\n            <LayoutContentWrapper>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <i className=\"fas fa-list-ul\" />\r\n                        <span> Standard Variable</span>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        Import\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <div style={{ width: \"100%\" }}>\r\n                    <Button className =\"reacTable-addbtn\" style={{ float: \"right\", marginRight:20 }} onClick={this.handleExcelTemplateDownload}>\r\n                        Download Template\r\n                    </Button>\r\n                    </div>\r\n                \r\n\r\n                <LayoutContent>\r\n\r\n                    <Spin indicator={antIcon} spinning={loading}>\r\n                        {\n\n                            (action != \"\") ?\n                                Object.keys(responseData.formData).length > 0 && (\r\n                                    <SingleForm isCreate={true} property={this} props={this} responseData={responseData} getFieldDecorator={getFieldDecorator} handleCancel={thisObj.handleCDISCDataStdVariableMetadataCancel} handleSubmit={thisObj.handleSubmit} handleClear={thisObj.handleClear} />) : <div></div>\n\r\n                        }\r\n\r\n                    </Spin>\r\n\r\n                    {<Progress progress={progress} />}\r\n\r\n                    \r\n                    <ConfirmModal title=\"Update Standard Variable Import\" SubmitButtonName=\"Update\" onSubmit={this.handleUpdate} visible={this.state.showEditConfirmationModal} handleCancel={this.handleCancelEditConfirmationModal} getFieldDecorator={getFieldDecorator} loading={this.state.modalLoad} />\n                    <ErrorList exportAction={this.handleExcelDownloadValidation} handleCancel={this.ErrorModalCancel} handleSubmit={this.ErrorModalSubmit} visible={showErrorList} row={row} column={col} />\n                </LayoutContent>\r\n\r\n            </LayoutContentWrapper>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedApp = Form.create()(ImportCDISCDataStdVariableMetadata);\nexport default WrappedApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}