{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\nexports.__esModule = true;\nexports.default = void 0;\nvar _element = require(\"./../../../helpers/dom/element\");\nvar _array = require(\"./../../../helpers/array\");\nvar _unicode = require(\"./../../../helpers/unicode\");\nvar _browser = require(\"./../../../helpers/browser\");\nvar _eventManager = _interopRequireDefault(require(\"./../../../eventManager\"));\nvar _base = _interopRequireDefault(require(\"./overlay/_base\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @class Overlays\n */\nvar Overlays = /*#__PURE__*/\nfunction () {\n  /**\n   * @param {Walkontable} wotInstance\n   */\n  function Overlays(wotInstance) {\n    _classCallCheck(this, Overlays);\n\n    /**\n     * Walkontable instance's reference.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n    this.wot = wotInstance;\n    var _this$wot = this.wot,\n      rootDocument = _this$wot.rootDocument,\n      rootWindow = _this$wot.rootWindow,\n      wtTable = _this$wot.wtTable;\n    /**\n     * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n     * https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values\n     */\n\n    var BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).lineHeight, 10);\n    var FALLBACK_BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).fontSize, 10) * 1.2; // legacy support\n\n    this.instance = this.wot;\n    this.eventManager = new _eventManager.default(this.wot);\n    this.scrollbarSize = (0, _element.getScrollbarWidth)(rootDocument);\n    this.wot.update('scrollbarWidth', this.scrollbarSize);\n    this.wot.update('scrollbarHeight', this.scrollbarSize);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : (0, _element.getScrollableElement)(wtTable.TABLE);\n    this.topOverlay = void 0;\n    this.bottomOverlay = void 0;\n    this.leftOverlay = void 0;\n    this.topLeftCornerOverlay = void 0;\n    this.bottomLeftCornerOverlay = void 0;\n    this.prepareOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.browserLineHeight = BODY_LINE_HEIGHT || FALLBACK_BODY_LINE_HEIGHT;\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n  /**\n   * Prepare overlays based on user settings.\n   *\n   * @returns {Boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n   */\n\n  _createClass(Overlays, [{\n    key: \"prepareOverlays\",\n    value: function prepareOverlays() {\n      var syncScroll = false;\n      if (this.topOverlay) {\n        syncScroll = this.topOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.topOverlay = _base.default.createOverlay(_base.default.CLONE_TOP, this.wot);\n      }\n      if (!_base.default.hasOverlay(_base.default.CLONE_BOTTOM)) {\n        this.bottomOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n      if (!_base.default.hasOverlay(_base.default.CLONE_BOTTOM_LEFT_CORNER)) {\n        this.bottomLeftCornerOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n      if (this.bottomOverlay) {\n        syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.bottomOverlay = _base.default.createOverlay(_base.default.CLONE_BOTTOM, this.wot);\n      }\n      if (this.leftOverlay) {\n        syncScroll = this.leftOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.leftOverlay = _base.default.createOverlay(_base.default.CLONE_LEFT, this.wot);\n      }\n      if (this.topOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.topLeftCornerOverlay) {\n          syncScroll = this.topLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.topLeftCornerOverlay = _base.default.createOverlay(_base.default.CLONE_TOP_LEFT_CORNER, this.wot);\n        }\n      }\n      if (this.bottomOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.bottomLeftCornerOverlay) {\n          syncScroll = this.bottomLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.bottomLeftCornerOverlay = _base.default.createOverlay(_base.default.CLONE_BOTTOM_LEFT_CORNER, this.wot);\n        }\n      }\n      if (this.wot.getSetting('debug') && !this.debug) {\n        this.debug = _base.default.createOverlay(_base.default.CLONE_DEBUG, this.wot);\n      }\n      return syncScroll;\n    }\n    /**\n     * Refresh and redraw table\n     */\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n      if (!this.wot.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n      this.wot.draw(true);\n      if (this.verticalScrolling) {\n        this.leftOverlay.onScroll();\n      }\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n    /**\n     * Register all necessary event listeners.\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this = this;\n      var _this$wot2 = this.wot,\n        rootDocument = _this$wot2.rootDocument,\n        rootWindow = _this$wot2.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var leftOverlayScrollableElement = this.leftOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this.onTableScroll(event);\n      }, {\n        passive: true\n      });\n      if (topOverlayScrollableElement !== leftOverlayScrollableElement) {\n        this.eventManager.addEventListener(leftOverlayScrollableElement, 'scroll', function (event) {\n          return _this.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wot.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n      if (preventWheel || isHighPixelRatio || !(0, _browser.isChrome)()) {\n        this.eventManager.addEventListener(this.wot.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n      var overlays = [this.topOverlay, this.bottomOverlay, this.leftOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder;\n          _this.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this.wot.getSetting('onWindowResize');\n        }, 200);\n      });\n    }\n    /**\n     * Deregister all previously registered listeners.\n     */\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n    /**\n     * Scroll listener\n     *\n     * @param {Event} event\n     */\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.wot.rootWindow;\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n      this.syncScrollPositions(event);\n    }\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event\n     */\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.wot.rootWindow; // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * Key down listener\n     */\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = (0, _unicode.isKey)(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n    /**\n     * Key up listener\n     */\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position\n     *\n     * @private\n     * @param {Event} event\n     */\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var browserLineHeight = this.browserLineHeight;\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * browserLineHeight;\n        deltaY += deltaY * browserLineHeight;\n      }\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n      var rootWindow = this.wot.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder;\n      var leftHolder = this.leftOverlay.clone.wtTable.holder;\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n        scrollLeft = _ref[0],\n        scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null;\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n      this.refreshAll();\n    }\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar\n     */\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n        scrollTop = master.scrollTop;\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n      if (this.leftOverlay.needFullRender) {\n        this.leftOverlay.clone.wtTable.holder.scrollTop = scrollTop;\n      }\n    }\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.leftOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n      var _this$wot3 = this.wot,\n        rootWindow = _this$wot3.rootWindow,\n        wtTable = _this$wot3.wtTable;\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = (0, _element.getScrollableElement)(wtTable.TABLE);\n      }\n      this.registerListeners();\n    }\n    /**\n     *\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.eventManager.destroy();\n      this.topOverlay.destroy();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n      this.leftOverlay.destroy();\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.destroy();\n      }\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.destroy();\n      }\n      if (this.debug) {\n        this.debug.destroy();\n      }\n      this.destroyed = true;\n    }\n    /**\n     * @param {Boolean} [fastDraw=false]\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.topOverlay.areElementSizesAdjusted && this.leftOverlay.areElementSizesAdjusted) {\n        var container = this.wot.wtTable.wtRootElement.parentNode || this.wot.wtTable.wtRootElement;\n        var width = container.clientWidth;\n        var height = container.clientHeight;\n        if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {\n          this.spreaderLastSize.width = width;\n          this.spreaderLastSize.height = height;\n          this.adjustElementsSize();\n        }\n      }\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n      this.leftOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.refresh(fastDraw);\n      }\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.refresh(fastDraw);\n      }\n      if (this.debug) {\n        this.debug.refresh(fastDraw);\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size\n     *\n     * @param {Boolean} [force=false]\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _this$wot4 = this.wot,\n        wtViewport = _this$wot4.wtViewport,\n        wtTable = _this$wot4.wtTable;\n      var totalColumns = this.wot.getSetting('totalColumns');\n      var totalRows = this.wot.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.leftOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n      if (this.scrollbarSize > 0) {\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n          rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n          rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n          holderScrollHeight = _wtTable$holder.scrollHeight,\n          holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n      this.topOverlay.adjustElementsSize(force);\n      this.leftOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n    /**\n     *\n     */\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var wtTable = this.wot.wtTable;\n      if (!wtTable.isVisible()) {\n        return;\n      }\n      if (!this.topOverlay.areElementSizesAdjusted || !this.leftOverlay.areElementSizesAdjusted) {\n        this.adjustElementsSize();\n      }\n      this.topOverlay.applyToDOM();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n      this.leftOverlay.applyToDOM();\n    }\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element\n     * @returns {Object|null}\n     */\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n      var overlays = [this.topOverlay, this.leftOverlay, this.bottomOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      var result = null;\n      (0, _array.arrayEach)(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n        if (elem.clone && elem.clone.wtTable.TABLE.contains(element)) {\n          result = elem.clone;\n        }\n      });\n      return result;\n    }\n  }]);\n  return Overlays;\n}();\nvar _default = Overlays;\nexports.default = _default;","map":{"version":3,"names":["require","exports","__esModule","default","_element","_array","_unicode","_browser","_eventManager","_interopRequireDefault","_base","obj","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Overlays","wotInstance","wot","_this$wot","rootDocument","rootWindow","wtTable","BODY_LINE_HEIGHT","parseInt","getComputedStyle","body","lineHeight","FALLBACK_BODY_LINE_HEIGHT","fontSize","eventManager","scrollbarSize","getScrollbarWidth","update","isOverflowHidden","wtRootElement","parentNode","getPropertyValue","scrollableElement","holder","getScrollableElement","TABLE","topOverlay","bottomOverlay","leftOverlay","topLeftCornerOverlay","bottomLeftCornerOverlay","prepareOverlays","hasScrollbarBottom","hasScrollbarRight","destroyed","keyPressed","spreaderLastSize","width","height","verticalScrolling","horizontalScrolling","browserLineHeight","registerListeners","lastScrollX","scrollX","lastScrollY","scrollY","value","syncScroll","updateStateOfRendering","createOverlay","CLONE_TOP","hasOverlay","CLONE_BOTTOM","needFullRender","CLONE_BOTTOM_LEFT_CORNER","CLONE_LEFT","CLONE_TOP_LEFT_CORNER","getSetting","debug","CLONE_DEBUG","refreshAll","drawn","destroy","draw","onScroll","_this","_this$wot2","topOverlayScrollableElement","mainTableScrollableElement","leftOverlayScrollableElement","addEventListener","documentElement","event","onKeyDown","onKeyUp","onTableScroll","passive","isHighPixelRatio","devicePixelRatio","isScrollOnWindow","preventWheel","wtSettings","wheelEventOptions","isChrome","onCloneWheel","overlays","forEach","overlay","clone","resizeTimeout","clearTimeout","setTimeout","deregisterListeners","clearEvents","masterHorizontal","masterVertical","contains","syncScrollPositions","preventDefault","shouldNotWheelVertically","shouldNotWheelHorizontally","isScrollPossible","translateMouseWheelToScroll","isKey","keyCode","deltaY","isNaN","wheelDeltaY","deltaX","wheelDeltaX","deltaMode","isScrollVerticallyPossible","scrollVertically","isScrollHorizontallyPossible","scrollHorizontally","delta","previousScroll","scrollTop","scrollLeft","topHolder","leftHolder","_ref","bottomHolder","syncScrollWithMaster","master","updateMainScrollableElements","updateMainScrollableElement","_this$wot3","refresh","fastDraw","arguments","undefined","areElementSizesAdjusted","container","clientWidth","clientHeight","adjustElementsSize","force","_this$wot4","wtViewport","totalColumns","totalRows","headerRowSize","getRowHeaderWidth","headerColumnSize","getColumnHeaderHeight","hiderStyle","hider","style","concat","sumCellSizes","_wtTable$wtRootElemen","rootElemScrollHeight","scrollHeight","rootElemScrollWidth","scrollWidth","_wtTable$holder","holderScrollHeight","holderScrollWidth","applyToDOM","isVisible","getParentOverlay","element","result","arrayEach","elem","_default"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/handsontable/commonjs/3rdparty/walkontable/src/overlays.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.timers\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _element = require(\"./../../../helpers/dom/element\");\n\nvar _array = require(\"./../../../helpers/array\");\n\nvar _unicode = require(\"./../../../helpers/unicode\");\n\nvar _browser = require(\"./../../../helpers/browser\");\n\nvar _eventManager = _interopRequireDefault(require(\"./../../../eventManager\"));\n\nvar _base = _interopRequireDefault(require(\"./overlay/_base\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @class Overlays\n */\nvar Overlays =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Walkontable} wotInstance\n   */\n  function Overlays(wotInstance) {\n    _classCallCheck(this, Overlays);\n\n    /**\n     * Walkontable instance's reference.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n    this.wot = wotInstance;\n    var _this$wot = this.wot,\n        rootDocument = _this$wot.rootDocument,\n        rootWindow = _this$wot.rootWindow,\n        wtTable = _this$wot.wtTable;\n    /**\n     * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n     * https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values\n     */\n\n    var BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).lineHeight, 10);\n    var FALLBACK_BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).fontSize, 10) * 1.2; // legacy support\n\n    this.instance = this.wot;\n    this.eventManager = new _eventManager.default(this.wot);\n    this.scrollbarSize = (0, _element.getScrollbarWidth)(rootDocument);\n    this.wot.update('scrollbarWidth', this.scrollbarSize);\n    this.wot.update('scrollbarHeight', this.scrollbarSize);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : (0, _element.getScrollableElement)(wtTable.TABLE);\n    this.topOverlay = void 0;\n    this.bottomOverlay = void 0;\n    this.leftOverlay = void 0;\n    this.topLeftCornerOverlay = void 0;\n    this.bottomLeftCornerOverlay = void 0;\n    this.prepareOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.browserLineHeight = BODY_LINE_HEIGHT || FALLBACK_BODY_LINE_HEIGHT;\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n  /**\n   * Prepare overlays based on user settings.\n   *\n   * @returns {Boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n   */\n\n\n  _createClass(Overlays, [{\n    key: \"prepareOverlays\",\n    value: function prepareOverlays() {\n      var syncScroll = false;\n\n      if (this.topOverlay) {\n        syncScroll = this.topOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.topOverlay = _base.default.createOverlay(_base.default.CLONE_TOP, this.wot);\n      }\n\n      if (!_base.default.hasOverlay(_base.default.CLONE_BOTTOM)) {\n        this.bottomOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n\n      if (!_base.default.hasOverlay(_base.default.CLONE_BOTTOM_LEFT_CORNER)) {\n        this.bottomLeftCornerOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n\n      if (this.bottomOverlay) {\n        syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.bottomOverlay = _base.default.createOverlay(_base.default.CLONE_BOTTOM, this.wot);\n      }\n\n      if (this.leftOverlay) {\n        syncScroll = this.leftOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.leftOverlay = _base.default.createOverlay(_base.default.CLONE_LEFT, this.wot);\n      }\n\n      if (this.topOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.topLeftCornerOverlay) {\n          syncScroll = this.topLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.topLeftCornerOverlay = _base.default.createOverlay(_base.default.CLONE_TOP_LEFT_CORNER, this.wot);\n        }\n      }\n\n      if (this.bottomOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.bottomLeftCornerOverlay) {\n          syncScroll = this.bottomLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.bottomLeftCornerOverlay = _base.default.createOverlay(_base.default.CLONE_BOTTOM_LEFT_CORNER, this.wot);\n        }\n      }\n\n      if (this.wot.getSetting('debug') && !this.debug) {\n        this.debug = _base.default.createOverlay(_base.default.CLONE_DEBUG, this.wot);\n      }\n\n      return syncScroll;\n    }\n    /**\n     * Refresh and redraw table\n     */\n\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n\n      if (!this.wot.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n\n      this.wot.draw(true);\n\n      if (this.verticalScrolling) {\n        this.leftOverlay.onScroll();\n      }\n\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n    /**\n     * Register all necessary event listeners.\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this = this;\n\n      var _this$wot2 = this.wot,\n          rootDocument = _this$wot2.rootDocument,\n          rootWindow = _this$wot2.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var leftOverlayScrollableElement = this.leftOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this.onTableScroll(event);\n      }, {\n        passive: true\n      });\n\n      if (topOverlayScrollableElement !== leftOverlayScrollableElement) {\n        this.eventManager.addEventListener(leftOverlayScrollableElement, 'scroll', function (event) {\n          return _this.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wot.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n\n      if (preventWheel || isHighPixelRatio || !(0, _browser.isChrome)()) {\n        this.eventManager.addEventListener(this.wot.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n\n      var overlays = [this.topOverlay, this.bottomOverlay, this.leftOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder;\n\n          _this.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this.wot.getSetting('onWindowResize');\n        }, 200);\n      });\n    }\n    /**\n     * Deregister all previously registered listeners.\n     */\n\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n    /**\n     * Scroll listener\n     *\n     * @param {Event} event\n     */\n\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.wot.rootWindow;\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n\n      this.syncScrollPositions(event);\n    }\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event\n     */\n\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.wot.rootWindow; // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * Key down listener\n     */\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = (0, _unicode.isKey)(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n    /**\n     * Key up listener\n     */\n\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position\n     *\n     * @private\n     * @param {Event} event\n     */\n\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var browserLineHeight = this.browserLineHeight;\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * browserLineHeight;\n        deltaY += deltaY * browserLineHeight;\n      }\n\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n\n      var rootWindow = this.wot.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder;\n      var leftHolder = this.leftOverlay.clone.wtTable.holder;\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n          scrollLeft = _ref[0],\n          scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null;\n\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n\n      this.refreshAll();\n    }\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar\n     */\n\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n          scrollTop = master.scrollTop;\n\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n\n      if (this.leftOverlay.needFullRender) {\n        this.leftOverlay.clone.wtTable.holder.scrollTop = scrollTop;\n      }\n    }\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.leftOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n\n      var _this$wot3 = this.wot,\n          rootWindow = _this$wot3.rootWindow,\n          wtTable = _this$wot3.wtTable;\n\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = (0, _element.getScrollableElement)(wtTable.TABLE);\n      }\n\n      this.registerListeners();\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.eventManager.destroy();\n      this.topOverlay.destroy();\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n\n      this.leftOverlay.destroy();\n\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.destroy();\n      }\n\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.destroy();\n      }\n\n      if (this.debug) {\n        this.debug.destroy();\n      }\n\n      this.destroyed = true;\n    }\n    /**\n     * @param {Boolean} [fastDraw=false]\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.topOverlay.areElementSizesAdjusted && this.leftOverlay.areElementSizesAdjusted) {\n        var container = this.wot.wtTable.wtRootElement.parentNode || this.wot.wtTable.wtRootElement;\n        var width = container.clientWidth;\n        var height = container.clientHeight;\n\n        if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {\n          this.spreaderLastSize.width = width;\n          this.spreaderLastSize.height = height;\n          this.adjustElementsSize();\n        }\n      }\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n\n      this.leftOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.refresh(fastDraw);\n      }\n\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.refresh(fastDraw);\n      }\n\n      if (this.debug) {\n        this.debug.refresh(fastDraw);\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size\n     *\n     * @param {Boolean} [force=false]\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _this$wot4 = this.wot,\n          wtViewport = _this$wot4.wtViewport,\n          wtTable = _this$wot4.wtTable;\n      var totalColumns = this.wot.getSetting('totalColumns');\n      var totalRows = this.wot.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.leftOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n\n      if (this.scrollbarSize > 0) {\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n            rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n            rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n            holderScrollHeight = _wtTable$holder.scrollHeight,\n            holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n\n      this.topOverlay.adjustElementsSize(force);\n      this.leftOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var wtTable = this.wot.wtTable;\n\n      if (!wtTable.isVisible()) {\n        return;\n      }\n\n      if (!this.topOverlay.areElementSizesAdjusted || !this.leftOverlay.areElementSizesAdjusted) {\n        this.adjustElementsSize();\n      }\n\n      this.topOverlay.applyToDOM();\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n\n      this.leftOverlay.applyToDOM();\n    }\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element\n     * @returns {Object|null}\n     */\n\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n\n      var overlays = [this.topOverlay, this.leftOverlay, this.bottomOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      var result = null;\n      (0, _array.arrayEach)(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n\n        if (elem.clone && elem.clone.wtTable.TABLE.contains(element)) {\n          result = elem.clone;\n        }\n      });\n      return result;\n    }\n  }]);\n\n  return Overlays;\n}();\n\nvar _default = Overlays;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}