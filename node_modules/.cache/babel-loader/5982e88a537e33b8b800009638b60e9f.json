{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { TokenizationRegistry } from '../../../common/modes.js';\nimport { editorCursorForeground, editorOverviewRulerBorder } from '../../../common/view/editorColorRegistry.js';\nvar Settings = /** @class */function () {\n  function Settings(config, theme) {\n    var options = config.options;\n    this.lineHeight = options.get(49 /* lineHeight */);\n    this.pixelRatio = options.get(105 /* pixelRatio */);\n    this.overviewRulerLanes = options.get(63 /* overviewRulerLanes */);\n    this.renderBorder = options.get(62 /* overviewRulerBorder */);\n    var borderColor = theme.getColor(editorOverviewRulerBorder);\n    this.borderColor = borderColor ? borderColor.toString() : null;\n    this.hideCursor = options.get(42 /* hideCursorInOverviewRuler */);\n    var cursorColor = theme.getColor(editorCursorForeground);\n    this.cursorColor = cursorColor ? cursorColor.transparent(0.7).toString() : null;\n    this.themeType = theme.type;\n    var minimapOpts = options.get(54 /* minimap */);\n    var minimapEnabled = minimapOpts.enabled;\n    var minimapSide = minimapOpts.side;\n    var backgroundColor = minimapEnabled ? TokenizationRegistry.getDefaultBackground() : null;\n    if (backgroundColor === null || minimapSide === 'left') {\n      this.backgroundColor = null;\n    } else {\n      this.backgroundColor = Color.Format.CSS.formatHex(backgroundColor);\n    }\n    var layoutInfo = options.get(107 /* layoutInfo */);\n    var position = layoutInfo.overviewRuler;\n    this.top = position.top;\n    this.right = position.right;\n    this.domWidth = position.width;\n    this.domHeight = position.height;\n    if (this.overviewRulerLanes === 0) {\n      // overview ruler is off\n      this.canvasWidth = 0;\n      this.canvasHeight = 0;\n    } else {\n      this.canvasWidth = this.domWidth * this.pixelRatio | 0;\n      this.canvasHeight = this.domHeight * this.pixelRatio | 0;\n    }\n    var _a = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes),\n      x = _a[0],\n      w = _a[1];\n    this.x = x;\n    this.w = w;\n  }\n  Settings.prototype._initLanes = function (canvasLeftOffset, canvasWidth, laneCount) {\n    var remainingWidth = canvasWidth - canvasLeftOffset;\n    if (laneCount >= 3) {\n      var leftWidth = Math.floor(remainingWidth / 3);\n      var rightWidth = Math.floor(remainingWidth / 3);\n      var centerWidth = remainingWidth - leftWidth - rightWidth;\n      var leftOffset = canvasLeftOffset;\n      var centerOffset = leftOffset + leftWidth;\n      var rightOffset = leftOffset + leftWidth + centerWidth;\n      return [[0, leftOffset, centerOffset, leftOffset, rightOffset, leftOffset, centerOffset, leftOffset], [0, leftWidth, centerWidth, leftWidth + centerWidth, rightWidth, leftWidth + centerWidth + rightWidth, centerWidth + rightWidth, leftWidth + centerWidth + rightWidth]];\n    } else if (laneCount === 2) {\n      var leftWidth = Math.floor(remainingWidth / 2);\n      var rightWidth = remainingWidth - leftWidth;\n      var leftOffset = canvasLeftOffset;\n      var rightOffset = leftOffset + leftWidth;\n      return [[0, leftOffset, leftOffset, leftOffset, rightOffset, leftOffset, leftOffset, leftOffset], [0, leftWidth, leftWidth, leftWidth, rightWidth, leftWidth + rightWidth, leftWidth + rightWidth, leftWidth + rightWidth]];\n    } else {\n      var offset = canvasLeftOffset;\n      var width = remainingWidth;\n      return [[0, offset, offset, offset, offset, offset, offset, offset], [0, width, width, width, width, width, width, width]];\n    }\n  };\n  Settings.prototype.equals = function (other) {\n    return this.lineHeight === other.lineHeight && this.pixelRatio === other.pixelRatio && this.overviewRulerLanes === other.overviewRulerLanes && this.renderBorder === other.renderBorder && this.borderColor === other.borderColor && this.hideCursor === other.hideCursor && this.cursorColor === other.cursorColor && this.themeType === other.themeType && this.backgroundColor === other.backgroundColor && this.top === other.top && this.right === other.right && this.domWidth === other.domWidth && this.domHeight === other.domHeight && this.canvasWidth === other.canvasWidth && this.canvasHeight === other.canvasHeight;\n  };\n  return Settings;\n}();\nvar DecorationsOverviewRuler = /** @class */function (_super) {\n  __extends(DecorationsOverviewRuler, _super);\n  function DecorationsOverviewRuler(context) {\n    var _this = _super.call(this, context) || this;\n    _this._domNode = createFastDomNode(document.createElement('canvas'));\n    _this._domNode.setClassName('decorationsOverviewRuler');\n    _this._domNode.setPosition('absolute');\n    _this._domNode.setLayerHinting(true);\n    _this._domNode.setContain('strict');\n    _this._domNode.setAttribute('aria-hidden', 'true');\n    _this._updateSettings(false);\n    _this._tokensColorTrackerListener = TokenizationRegistry.onDidChange(function (e) {\n      if (e.changedColorMap) {\n        _this._updateSettings(true);\n      }\n    });\n    _this._cursorPositions = [];\n    return _this;\n  }\n  DecorationsOverviewRuler.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n    this._tokensColorTrackerListener.dispose();\n  };\n  DecorationsOverviewRuler.prototype._updateSettings = function (renderNow) {\n    var newSettings = new Settings(this._context.configuration, this._context.theme);\n    if (this._settings && this._settings.equals(newSettings)) {\n      // nothing to do\n      return false;\n    }\n    this._settings = newSettings;\n    this._domNode.setTop(this._settings.top);\n    this._domNode.setRight(this._settings.right);\n    this._domNode.setWidth(this._settings.domWidth);\n    this._domNode.setHeight(this._settings.domHeight);\n    this._domNode.domNode.width = this._settings.canvasWidth;\n    this._domNode.domNode.height = this._settings.canvasHeight;\n    if (renderNow) {\n      this._render();\n    }\n    return true;\n  };\n  // ---- begin view event handlers\n  DecorationsOverviewRuler.prototype.onConfigurationChanged = function (e) {\n    return this._updateSettings(false);\n  };\n  DecorationsOverviewRuler.prototype.onCursorStateChanged = function (e) {\n    this._cursorPositions = [];\n    for (var i = 0, len = e.selections.length; i < len; i++) {\n      this._cursorPositions[i] = e.selections[i].getPosition();\n    }\n    this._cursorPositions.sort(Position.compare);\n    return true;\n  };\n  DecorationsOverviewRuler.prototype.onDecorationsChanged = function (e) {\n    return true;\n  };\n  DecorationsOverviewRuler.prototype.onFlushed = function (e) {\n    return true;\n  };\n  DecorationsOverviewRuler.prototype.onScrollChanged = function (e) {\n    return e.scrollHeightChanged;\n  };\n  DecorationsOverviewRuler.prototype.onZonesChanged = function (e) {\n    return true;\n  };\n  DecorationsOverviewRuler.prototype.onThemeChanged = function (e) {\n    // invalidate color cache\n    this._context.model.invalidateOverviewRulerColorCache();\n    return this._updateSettings(false);\n  };\n  // ---- end view event handlers\n  DecorationsOverviewRuler.prototype.getDomNode = function () {\n    return this._domNode.domNode;\n  };\n  DecorationsOverviewRuler.prototype.prepareRender = function (ctx) {\n    // Nothing to read\n  };\n  DecorationsOverviewRuler.prototype.render = function (editorCtx) {\n    this._render();\n  };\n  DecorationsOverviewRuler.prototype._render = function () {\n    if (this._settings.overviewRulerLanes === 0) {\n      // overview ruler is off\n      this._domNode.setBackgroundColor(this._settings.backgroundColor ? this._settings.backgroundColor : '');\n      return;\n    }\n    var canvasWidth = this._settings.canvasWidth;\n    var canvasHeight = this._settings.canvasHeight;\n    var lineHeight = this._settings.lineHeight;\n    var viewLayout = this._context.viewLayout;\n    var outerHeight = this._context.viewLayout.getScrollHeight();\n    var heightRatio = canvasHeight / outerHeight;\n    var decorations = this._context.model.getAllOverviewRulerDecorations(this._context.theme);\n    var minDecorationHeight = 6 /* MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio | 0;\n    var halfMinDecorationHeight = minDecorationHeight / 2 | 0;\n    var canvasCtx = this._domNode.domNode.getContext('2d');\n    if (this._settings.backgroundColor === null) {\n      canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n    } else {\n      canvasCtx.fillStyle = this._settings.backgroundColor;\n      canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n    }\n    var x = this._settings.x;\n    var w = this._settings.w;\n    // Avoid flickering by always rendering the colors in the same order\n    // colors that don't use transparency will be sorted last (they start with #)\n    var colors = Object.keys(decorations);\n    colors.sort();\n    for (var cIndex = 0, cLen = colors.length; cIndex < cLen; cIndex++) {\n      var color = colors[cIndex];\n      var colorDecorations = decorations[color];\n      canvasCtx.fillStyle = color;\n      var prevLane = 0;\n      var prevY1 = 0;\n      var prevY2 = 0;\n      for (var i = 0, len = colorDecorations.length; i < len; i++) {\n        var lane = colorDecorations[3 * i];\n        var startLineNumber = colorDecorations[3 * i + 1];\n        var endLineNumber = colorDecorations[3 * i + 2];\n        var y1 = viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio | 0;\n        var y2 = (viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio | 0;\n        var height = y2 - y1;\n        if (height < minDecorationHeight) {\n          var yCenter = (y1 + y2) / 2 | 0;\n          if (yCenter < halfMinDecorationHeight) {\n            yCenter = halfMinDecorationHeight;\n          } else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n            yCenter = canvasHeight - halfMinDecorationHeight;\n          }\n          y1 = yCenter - halfMinDecorationHeight;\n          y2 = yCenter + halfMinDecorationHeight;\n        }\n        if (y1 > prevY2 + 1 || lane !== prevLane) {\n          // flush prev\n          if (i !== 0) {\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n          }\n          prevLane = lane;\n          prevY1 = y1;\n          prevY2 = y2;\n        } else {\n          // merge into prev\n          if (y2 > prevY2) {\n            prevY2 = y2;\n          }\n        }\n      }\n      canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n    }\n    // Draw cursors\n    if (!this._settings.hideCursor && this._settings.cursorColor) {\n      var cursorHeight = 2 * this._settings.pixelRatio | 0;\n      var halfCursorHeight = cursorHeight / 2 | 0;\n      var cursorX = this._settings.x[7 /* Full */];\n      var cursorW = this._settings.w[7 /* Full */];\n      canvasCtx.fillStyle = this._settings.cursorColor;\n      var prevY1 = -100;\n      var prevY2 = -100;\n      for (var i = 0, len = this._cursorPositions.length; i < len; i++) {\n        var cursor = this._cursorPositions[i];\n        var yCenter = viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio | 0;\n        if (yCenter < halfCursorHeight) {\n          yCenter = halfCursorHeight;\n        } else if (yCenter + halfCursorHeight > canvasHeight) {\n          yCenter = canvasHeight - halfCursorHeight;\n        }\n        var y1 = yCenter - halfCursorHeight;\n        var y2 = y1 + cursorHeight;\n        if (y1 > prevY2 + 1) {\n          // flush prev\n          if (i !== 0) {\n            canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n          }\n          prevY1 = y1;\n          prevY2 = y2;\n        } else {\n          // merge into prev\n          if (y2 > prevY2) {\n            prevY2 = y2;\n          }\n        }\n      }\n      canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n    }\n    if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n      canvasCtx.beginPath();\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = this._settings.borderColor;\n      canvasCtx.moveTo(0, 0);\n      canvasCtx.lineTo(0, canvasHeight);\n      canvasCtx.stroke();\n      canvasCtx.moveTo(0, 0);\n      canvasCtx.lineTo(canvasWidth, 0);\n      canvasCtx.stroke();\n    }\n  };\n  return DecorationsOverviewRuler;\n}(ViewPart);\nexport { DecorationsOverviewRuler };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","createFastDomNode","Color","ViewPart","Position","TokenizationRegistry","editorCursorForeground","editorOverviewRulerBorder","Settings","config","theme","options","lineHeight","get","pixelRatio","overviewRulerLanes","renderBorder","borderColor","getColor","toString","hideCursor","cursorColor","transparent","themeType","type","minimapOpts","minimapEnabled","enabled","minimapSide","side","backgroundColor","getDefaultBackground","Format","CSS","formatHex","layoutInfo","position","overviewRuler","top","right","domWidth","width","domHeight","height","canvasWidth","canvasHeight","_a","_initLanes","x","w","canvasLeftOffset","laneCount","remainingWidth","leftWidth","Math","floor","rightWidth","centerWidth","leftOffset","centerOffset","rightOffset","offset","equals","other","DecorationsOverviewRuler","_super","context","_this","call","_domNode","document","createElement","setClassName","setPosition","setLayerHinting","setContain","setAttribute","_updateSettings","_tokensColorTrackerListener","onDidChange","e","changedColorMap","_cursorPositions","dispose","renderNow","newSettings","_context","configuration","_settings","setTop","setRight","setWidth","setHeight","domNode","_render","onConfigurationChanged","onCursorStateChanged","i","len","selections","length","getPosition","sort","compare","onDecorationsChanged","onFlushed","onScrollChanged","scrollHeightChanged","onZonesChanged","onThemeChanged","model","invalidateOverviewRulerColorCache","getDomNode","prepareRender","ctx","render","editorCtx","setBackgroundColor","viewLayout","outerHeight","getScrollHeight","heightRatio","decorations","getAllOverviewRulerDecorations","minDecorationHeight","halfMinDecorationHeight","canvasCtx","getContext","clearRect","fillStyle","fillRect","colors","keys","cIndex","cLen","color","colorDecorations","prevLane","prevY1","prevY2","lane","startLineNumber","endLineNumber","y1","getVerticalOffsetForLineNumber","y2","yCenter","cursorHeight","halfCursorHeight","cursorX","cursorW","cursor","lineNumber","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { ViewPart } from '../../view/viewPart.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { TokenizationRegistry } from '../../../common/modes.js';\r\nimport { editorCursorForeground, editorOverviewRulerBorder } from '../../../common/view/editorColorRegistry.js';\r\nvar Settings = /** @class */ (function () {\r\n    function Settings(config, theme) {\r\n        var options = config.options;\r\n        this.lineHeight = options.get(49 /* lineHeight */);\r\n        this.pixelRatio = options.get(105 /* pixelRatio */);\r\n        this.overviewRulerLanes = options.get(63 /* overviewRulerLanes */);\r\n        this.renderBorder = options.get(62 /* overviewRulerBorder */);\r\n        var borderColor = theme.getColor(editorOverviewRulerBorder);\r\n        this.borderColor = borderColor ? borderColor.toString() : null;\r\n        this.hideCursor = options.get(42 /* hideCursorInOverviewRuler */);\r\n        var cursorColor = theme.getColor(editorCursorForeground);\r\n        this.cursorColor = cursorColor ? cursorColor.transparent(0.7).toString() : null;\r\n        this.themeType = theme.type;\r\n        var minimapOpts = options.get(54 /* minimap */);\r\n        var minimapEnabled = minimapOpts.enabled;\r\n        var minimapSide = minimapOpts.side;\r\n        var backgroundColor = (minimapEnabled ? TokenizationRegistry.getDefaultBackground() : null);\r\n        if (backgroundColor === null || minimapSide === 'left') {\r\n            this.backgroundColor = null;\r\n        }\r\n        else {\r\n            this.backgroundColor = Color.Format.CSS.formatHex(backgroundColor);\r\n        }\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        var position = layoutInfo.overviewRuler;\r\n        this.top = position.top;\r\n        this.right = position.right;\r\n        this.domWidth = position.width;\r\n        this.domHeight = position.height;\r\n        if (this.overviewRulerLanes === 0) {\r\n            // overview ruler is off\r\n            this.canvasWidth = 0;\r\n            this.canvasHeight = 0;\r\n        }\r\n        else {\r\n            this.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\r\n            this.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\r\n        }\r\n        var _a = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes), x = _a[0], w = _a[1];\r\n        this.x = x;\r\n        this.w = w;\r\n    }\r\n    Settings.prototype._initLanes = function (canvasLeftOffset, canvasWidth, laneCount) {\r\n        var remainingWidth = canvasWidth - canvasLeftOffset;\r\n        if (laneCount >= 3) {\r\n            var leftWidth = Math.floor(remainingWidth / 3);\r\n            var rightWidth = Math.floor(remainingWidth / 3);\r\n            var centerWidth = remainingWidth - leftWidth - rightWidth;\r\n            var leftOffset = canvasLeftOffset;\r\n            var centerOffset = leftOffset + leftWidth;\r\n            var rightOffset = leftOffset + leftWidth + centerWidth;\r\n            return [\r\n                [\r\n                    0,\r\n                    leftOffset,\r\n                    centerOffset,\r\n                    leftOffset,\r\n                    rightOffset,\r\n                    leftOffset,\r\n                    centerOffset,\r\n                    leftOffset,\r\n                ], [\r\n                    0,\r\n                    leftWidth,\r\n                    centerWidth,\r\n                    leftWidth + centerWidth,\r\n                    rightWidth,\r\n                    leftWidth + centerWidth + rightWidth,\r\n                    centerWidth + rightWidth,\r\n                    leftWidth + centerWidth + rightWidth,\r\n                ]\r\n            ];\r\n        }\r\n        else if (laneCount === 2) {\r\n            var leftWidth = Math.floor(remainingWidth / 2);\r\n            var rightWidth = remainingWidth - leftWidth;\r\n            var leftOffset = canvasLeftOffset;\r\n            var rightOffset = leftOffset + leftWidth;\r\n            return [\r\n                [\r\n                    0,\r\n                    leftOffset,\r\n                    leftOffset,\r\n                    leftOffset,\r\n                    rightOffset,\r\n                    leftOffset,\r\n                    leftOffset,\r\n                    leftOffset,\r\n                ], [\r\n                    0,\r\n                    leftWidth,\r\n                    leftWidth,\r\n                    leftWidth,\r\n                    rightWidth,\r\n                    leftWidth + rightWidth,\r\n                    leftWidth + rightWidth,\r\n                    leftWidth + rightWidth,\r\n                ]\r\n            ];\r\n        }\r\n        else {\r\n            var offset = canvasLeftOffset;\r\n            var width = remainingWidth;\r\n            return [\r\n                [\r\n                    0,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                ], [\r\n                    0,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                ]\r\n            ];\r\n        }\r\n    };\r\n    Settings.prototype.equals = function (other) {\r\n        return (this.lineHeight === other.lineHeight\r\n            && this.pixelRatio === other.pixelRatio\r\n            && this.overviewRulerLanes === other.overviewRulerLanes\r\n            && this.renderBorder === other.renderBorder\r\n            && this.borderColor === other.borderColor\r\n            && this.hideCursor === other.hideCursor\r\n            && this.cursorColor === other.cursorColor\r\n            && this.themeType === other.themeType\r\n            && this.backgroundColor === other.backgroundColor\r\n            && this.top === other.top\r\n            && this.right === other.right\r\n            && this.domWidth === other.domWidth\r\n            && this.domHeight === other.domHeight\r\n            && this.canvasWidth === other.canvasWidth\r\n            && this.canvasHeight === other.canvasHeight);\r\n    };\r\n    return Settings;\r\n}());\r\nvar DecorationsOverviewRuler = /** @class */ (function (_super) {\r\n    __extends(DecorationsOverviewRuler, _super);\r\n    function DecorationsOverviewRuler(context) {\r\n        var _this = _super.call(this, context) || this;\r\n        _this._domNode = createFastDomNode(document.createElement('canvas'));\r\n        _this._domNode.setClassName('decorationsOverviewRuler');\r\n        _this._domNode.setPosition('absolute');\r\n        _this._domNode.setLayerHinting(true);\r\n        _this._domNode.setContain('strict');\r\n        _this._domNode.setAttribute('aria-hidden', 'true');\r\n        _this._updateSettings(false);\r\n        _this._tokensColorTrackerListener = TokenizationRegistry.onDidChange(function (e) {\r\n            if (e.changedColorMap) {\r\n                _this._updateSettings(true);\r\n            }\r\n        });\r\n        _this._cursorPositions = [];\r\n        return _this;\r\n    }\r\n    DecorationsOverviewRuler.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this._tokensColorTrackerListener.dispose();\r\n    };\r\n    DecorationsOverviewRuler.prototype._updateSettings = function (renderNow) {\r\n        var newSettings = new Settings(this._context.configuration, this._context.theme);\r\n        if (this._settings && this._settings.equals(newSettings)) {\r\n            // nothing to do\r\n            return false;\r\n        }\r\n        this._settings = newSettings;\r\n        this._domNode.setTop(this._settings.top);\r\n        this._domNode.setRight(this._settings.right);\r\n        this._domNode.setWidth(this._settings.domWidth);\r\n        this._domNode.setHeight(this._settings.domHeight);\r\n        this._domNode.domNode.width = this._settings.canvasWidth;\r\n        this._domNode.domNode.height = this._settings.canvasHeight;\r\n        if (renderNow) {\r\n            this._render();\r\n        }\r\n        return true;\r\n    };\r\n    // ---- begin view event handlers\r\n    DecorationsOverviewRuler.prototype.onConfigurationChanged = function (e) {\r\n        return this._updateSettings(false);\r\n    };\r\n    DecorationsOverviewRuler.prototype.onCursorStateChanged = function (e) {\r\n        this._cursorPositions = [];\r\n        for (var i = 0, len = e.selections.length; i < len; i++) {\r\n            this._cursorPositions[i] = e.selections[i].getPosition();\r\n        }\r\n        this._cursorPositions.sort(Position.compare);\r\n        return true;\r\n    };\r\n    DecorationsOverviewRuler.prototype.onDecorationsChanged = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverviewRuler.prototype.onFlushed = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverviewRuler.prototype.onScrollChanged = function (e) {\r\n        return e.scrollHeightChanged;\r\n    };\r\n    DecorationsOverviewRuler.prototype.onZonesChanged = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverviewRuler.prototype.onThemeChanged = function (e) {\r\n        // invalidate color cache\r\n        this._context.model.invalidateOverviewRulerColorCache();\r\n        return this._updateSettings(false);\r\n    };\r\n    // ---- end view event handlers\r\n    DecorationsOverviewRuler.prototype.getDomNode = function () {\r\n        return this._domNode.domNode;\r\n    };\r\n    DecorationsOverviewRuler.prototype.prepareRender = function (ctx) {\r\n        // Nothing to read\r\n    };\r\n    DecorationsOverviewRuler.prototype.render = function (editorCtx) {\r\n        this._render();\r\n    };\r\n    DecorationsOverviewRuler.prototype._render = function () {\r\n        if (this._settings.overviewRulerLanes === 0) {\r\n            // overview ruler is off\r\n            this._domNode.setBackgroundColor(this._settings.backgroundColor ? this._settings.backgroundColor : '');\r\n            return;\r\n        }\r\n        var canvasWidth = this._settings.canvasWidth;\r\n        var canvasHeight = this._settings.canvasHeight;\r\n        var lineHeight = this._settings.lineHeight;\r\n        var viewLayout = this._context.viewLayout;\r\n        var outerHeight = this._context.viewLayout.getScrollHeight();\r\n        var heightRatio = canvasHeight / outerHeight;\r\n        var decorations = this._context.model.getAllOverviewRulerDecorations(this._context.theme);\r\n        var minDecorationHeight = (6 /* MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio) | 0;\r\n        var halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\r\n        var canvasCtx = this._domNode.domNode.getContext('2d');\r\n        if (this._settings.backgroundColor === null) {\r\n            canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n        }\r\n        else {\r\n            canvasCtx.fillStyle = this._settings.backgroundColor;\r\n            canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n        }\r\n        var x = this._settings.x;\r\n        var w = this._settings.w;\r\n        // Avoid flickering by always rendering the colors in the same order\r\n        // colors that don't use transparency will be sorted last (they start with #)\r\n        var colors = Object.keys(decorations);\r\n        colors.sort();\r\n        for (var cIndex = 0, cLen = colors.length; cIndex < cLen; cIndex++) {\r\n            var color = colors[cIndex];\r\n            var colorDecorations = decorations[color];\r\n            canvasCtx.fillStyle = color;\r\n            var prevLane = 0;\r\n            var prevY1 = 0;\r\n            var prevY2 = 0;\r\n            for (var i = 0, len = colorDecorations.length; i < len; i++) {\r\n                var lane = colorDecorations[3 * i];\r\n                var startLineNumber = colorDecorations[3 * i + 1];\r\n                var endLineNumber = colorDecorations[3 * i + 2];\r\n                var y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\r\n                var y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\r\n                var height = y2 - y1;\r\n                if (height < minDecorationHeight) {\r\n                    var yCenter = ((y1 + y2) / 2) | 0;\r\n                    if (yCenter < halfMinDecorationHeight) {\r\n                        yCenter = halfMinDecorationHeight;\r\n                    }\r\n                    else if (yCenter + halfMinDecorationHeight > canvasHeight) {\r\n                        yCenter = canvasHeight - halfMinDecorationHeight;\r\n                    }\r\n                    y1 = yCenter - halfMinDecorationHeight;\r\n                    y2 = yCenter + halfMinDecorationHeight;\r\n                }\r\n                if (y1 > prevY2 + 1 || lane !== prevLane) {\r\n                    // flush prev\r\n                    if (i !== 0) {\r\n                        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\r\n                    }\r\n                    prevLane = lane;\r\n                    prevY1 = y1;\r\n                    prevY2 = y2;\r\n                }\r\n                else {\r\n                    // merge into prev\r\n                    if (y2 > prevY2) {\r\n                        prevY2 = y2;\r\n                    }\r\n                }\r\n            }\r\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\r\n        }\r\n        // Draw cursors\r\n        if (!this._settings.hideCursor && this._settings.cursorColor) {\r\n            var cursorHeight = (2 * this._settings.pixelRatio) | 0;\r\n            var halfCursorHeight = (cursorHeight / 2) | 0;\r\n            var cursorX = this._settings.x[7 /* Full */];\r\n            var cursorW = this._settings.w[7 /* Full */];\r\n            canvasCtx.fillStyle = this._settings.cursorColor;\r\n            var prevY1 = -100;\r\n            var prevY2 = -100;\r\n            for (var i = 0, len = this._cursorPositions.length; i < len; i++) {\r\n                var cursor = this._cursorPositions[i];\r\n                var yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\r\n                if (yCenter < halfCursorHeight) {\r\n                    yCenter = halfCursorHeight;\r\n                }\r\n                else if (yCenter + halfCursorHeight > canvasHeight) {\r\n                    yCenter = canvasHeight - halfCursorHeight;\r\n                }\r\n                var y1 = yCenter - halfCursorHeight;\r\n                var y2 = y1 + cursorHeight;\r\n                if (y1 > prevY2 + 1) {\r\n                    // flush prev\r\n                    if (i !== 0) {\r\n                        canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\r\n                    }\r\n                    prevY1 = y1;\r\n                    prevY2 = y2;\r\n                }\r\n                else {\r\n                    // merge into prev\r\n                    if (y2 > prevY2) {\r\n                        prevY2 = y2;\r\n                    }\r\n                }\r\n            }\r\n            canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\r\n        }\r\n        if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\r\n            canvasCtx.beginPath();\r\n            canvasCtx.lineWidth = 1;\r\n            canvasCtx.strokeStyle = this._settings.borderColor;\r\n            canvasCtx.moveTo(0, 0);\r\n            canvasCtx.lineTo(0, canvasHeight);\r\n            canvasCtx.stroke();\r\n            canvasCtx.moveTo(0, 0);\r\n            canvasCtx.lineTo(canvasWidth, 0);\r\n            canvasCtx.stroke();\r\n        }\r\n    };\r\n    return DecorationsOverviewRuler;\r\n}(ViewPart));\r\nexport { DecorationsOverviewRuler };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,cAAa,GAAG,uBAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,cAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC;QAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;MAAC;IAAC,CAAC;IAC9E,OAAOP,cAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,cAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,SAASI,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,sBAAsB,EAAEC,yBAAyB,QAAQ,6CAA6C;AAC/G,IAAIC,QAAQ,GAAG,aAAe,YAAY;EACtC,SAASA,QAAQ,CAACC,MAAM,EAAEC,KAAK,EAAE;IAC7B,IAAIC,OAAO,GAAGF,MAAM,CAACE,OAAO;IAC5B,IAAI,CAACC,UAAU,GAAGD,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,iBAAiB;IAClD,IAAI,CAACC,UAAU,GAAGH,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,iBAAiB;IACnD,IAAI,CAACE,kBAAkB,GAAGJ,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,yBAAyB;IAClE,IAAI,CAACG,YAAY,GAAGL,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,0BAA0B;IAC7D,IAAII,WAAW,GAAGP,KAAK,CAACQ,QAAQ,CAACX,yBAAyB,CAAC;IAC3D,IAAI,CAACU,WAAW,GAAGA,WAAW,GAAGA,WAAW,CAACE,QAAQ,EAAE,GAAG,IAAI;IAC9D,IAAI,CAACC,UAAU,GAAGT,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,gCAAgC;IACjE,IAAIQ,WAAW,GAAGX,KAAK,CAACQ,QAAQ,CAACZ,sBAAsB,CAAC;IACxD,IAAI,CAACe,WAAW,GAAGA,WAAW,GAAGA,WAAW,CAACC,WAAW,CAAC,GAAG,CAAC,CAACH,QAAQ,EAAE,GAAG,IAAI;IAC/E,IAAI,CAACI,SAAS,GAAGb,KAAK,CAACc,IAAI;IAC3B,IAAIC,WAAW,GAAGd,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,cAAc;IAC/C,IAAIa,cAAc,GAAGD,WAAW,CAACE,OAAO;IACxC,IAAIC,WAAW,GAAGH,WAAW,CAACI,IAAI;IAClC,IAAIC,eAAe,GAAIJ,cAAc,GAAGrB,oBAAoB,CAAC0B,oBAAoB,EAAE,GAAG,IAAK;IAC3F,IAAID,eAAe,KAAK,IAAI,IAAIF,WAAW,KAAK,MAAM,EAAE;MACpD,IAAI,CAACE,eAAe,GAAG,IAAI;IAC/B,CAAC,MACI;MACD,IAAI,CAACA,eAAe,GAAG5B,KAAK,CAAC8B,MAAM,CAACC,GAAG,CAACC,SAAS,CAACJ,eAAe,CAAC;IACtE;IACA,IAAIK,UAAU,GAAGxB,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,iBAAiB;IAClD,IAAIuB,QAAQ,GAAGD,UAAU,CAACE,aAAa;IACvC,IAAI,CAACC,GAAG,GAAGF,QAAQ,CAACE,GAAG;IACvB,IAAI,CAACC,KAAK,GAAGH,QAAQ,CAACG,KAAK;IAC3B,IAAI,CAACC,QAAQ,GAAGJ,QAAQ,CAACK,KAAK;IAC9B,IAAI,CAACC,SAAS,GAAGN,QAAQ,CAACO,MAAM;IAChC,IAAI,IAAI,CAAC5B,kBAAkB,KAAK,CAAC,EAAE;MAC/B;MACA,IAAI,CAAC6B,WAAW,GAAG,CAAC;MACpB,IAAI,CAACC,YAAY,GAAG,CAAC;IACzB,CAAC,MACI;MACD,IAAI,CAACD,WAAW,GAAI,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAAC1B,UAAU,GAAI,CAAC;MACxD,IAAI,CAAC+B,YAAY,GAAI,IAAI,CAACH,SAAS,GAAG,IAAI,CAAC5B,UAAU,GAAI,CAAC;IAC9D;IACA,IAAIgC,EAAE,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,IAAI,CAACH,WAAW,EAAE,IAAI,CAAC7B,kBAAkB,CAAC;MAAEiC,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC;MAAEG,CAAC,GAAGH,EAAE,CAAC,CAAC,CAAC;IAC5F,IAAI,CAACE,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACd;EACAzC,QAAQ,CAACT,SAAS,CAACgD,UAAU,GAAG,UAAUG,gBAAgB,EAAEN,WAAW,EAAEO,SAAS,EAAE;IAChF,IAAIC,cAAc,GAAGR,WAAW,GAAGM,gBAAgB;IACnD,IAAIC,SAAS,IAAI,CAAC,EAAE;MAChB,IAAIE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,GAAG,CAAC,CAAC;MAC9C,IAAII,UAAU,GAAGF,IAAI,CAACC,KAAK,CAACH,cAAc,GAAG,CAAC,CAAC;MAC/C,IAAIK,WAAW,GAAGL,cAAc,GAAGC,SAAS,GAAGG,UAAU;MACzD,IAAIE,UAAU,GAAGR,gBAAgB;MACjC,IAAIS,YAAY,GAAGD,UAAU,GAAGL,SAAS;MACzC,IAAIO,WAAW,GAAGF,UAAU,GAAGL,SAAS,GAAGI,WAAW;MACtD,OAAO,CACH,CACI,CAAC,EACDC,UAAU,EACVC,YAAY,EACZD,UAAU,EACVE,WAAW,EACXF,UAAU,EACVC,YAAY,EACZD,UAAU,CACb,EAAE,CACC,CAAC,EACDL,SAAS,EACTI,WAAW,EACXJ,SAAS,GAAGI,WAAW,EACvBD,UAAU,EACVH,SAAS,GAAGI,WAAW,GAAGD,UAAU,EACpCC,WAAW,GAAGD,UAAU,EACxBH,SAAS,GAAGI,WAAW,GAAGD,UAAU,CACvC,CACJ;IACL,CAAC,MACI,IAAIL,SAAS,KAAK,CAAC,EAAE;MACtB,IAAIE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,GAAG,CAAC,CAAC;MAC9C,IAAII,UAAU,GAAGJ,cAAc,GAAGC,SAAS;MAC3C,IAAIK,UAAU,GAAGR,gBAAgB;MACjC,IAAIU,WAAW,GAAGF,UAAU,GAAGL,SAAS;MACxC,OAAO,CACH,CACI,CAAC,EACDK,UAAU,EACVA,UAAU,EACVA,UAAU,EACVE,WAAW,EACXF,UAAU,EACVA,UAAU,EACVA,UAAU,CACb,EAAE,CACC,CAAC,EACDL,SAAS,EACTA,SAAS,EACTA,SAAS,EACTG,UAAU,EACVH,SAAS,GAAGG,UAAU,EACtBH,SAAS,GAAGG,UAAU,EACtBH,SAAS,GAAGG,UAAU,CACzB,CACJ;IACL,CAAC,MACI;MACD,IAAIK,MAAM,GAAGX,gBAAgB;MAC7B,IAAIT,KAAK,GAAGW,cAAc;MAC1B,OAAO,CACH,CACI,CAAC,EACDS,MAAM,EACNA,MAAM,EACNA,MAAM,EACNA,MAAM,EACNA,MAAM,EACNA,MAAM,EACNA,MAAM,CACT,EAAE,CACC,CAAC,EACDpB,KAAK,EACLA,KAAK,EACLA,KAAK,EACLA,KAAK,EACLA,KAAK,EACLA,KAAK,EACLA,KAAK,CACR,CACJ;IACL;EACJ,CAAC;EACDjC,QAAQ,CAACT,SAAS,CAAC+D,MAAM,GAAG,UAAUC,KAAK,EAAE;IACzC,OAAQ,IAAI,CAACnD,UAAU,KAAKmD,KAAK,CAACnD,UAAU,IACrC,IAAI,CAACE,UAAU,KAAKiD,KAAK,CAACjD,UAAU,IACpC,IAAI,CAACC,kBAAkB,KAAKgD,KAAK,CAAChD,kBAAkB,IACpD,IAAI,CAACC,YAAY,KAAK+C,KAAK,CAAC/C,YAAY,IACxC,IAAI,CAACC,WAAW,KAAK8C,KAAK,CAAC9C,WAAW,IACtC,IAAI,CAACG,UAAU,KAAK2C,KAAK,CAAC3C,UAAU,IACpC,IAAI,CAACC,WAAW,KAAK0C,KAAK,CAAC1C,WAAW,IACtC,IAAI,CAACE,SAAS,KAAKwC,KAAK,CAACxC,SAAS,IAClC,IAAI,CAACO,eAAe,KAAKiC,KAAK,CAACjC,eAAe,IAC9C,IAAI,CAACQ,GAAG,KAAKyB,KAAK,CAACzB,GAAG,IACtB,IAAI,CAACC,KAAK,KAAKwB,KAAK,CAACxB,KAAK,IAC1B,IAAI,CAACC,QAAQ,KAAKuB,KAAK,CAACvB,QAAQ,IAChC,IAAI,CAACE,SAAS,KAAKqB,KAAK,CAACrB,SAAS,IAClC,IAAI,CAACE,WAAW,KAAKmB,KAAK,CAACnB,WAAW,IACtC,IAAI,CAACC,YAAY,KAAKkB,KAAK,CAAClB,YAAY;EACnD,CAAC;EACD,OAAOrC,QAAQ;AACnB,CAAC,EAAG;AACJ,IAAIwD,wBAAwB,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5D9E,SAAS,CAAC6E,wBAAwB,EAAEC,MAAM,CAAC;EAC3C,SAASD,wBAAwB,CAACE,OAAO,EAAE;IACvC,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,EAAEF,OAAO,CAAC,IAAI,IAAI;IAC9CC,KAAK,CAACE,QAAQ,GAAGpE,iBAAiB,CAACqE,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACpEJ,KAAK,CAACE,QAAQ,CAACG,YAAY,CAAC,0BAA0B,CAAC;IACvDL,KAAK,CAACE,QAAQ,CAACI,WAAW,CAAC,UAAU,CAAC;IACtCN,KAAK,CAACE,QAAQ,CAACK,eAAe,CAAC,IAAI,CAAC;IACpCP,KAAK,CAACE,QAAQ,CAACM,UAAU,CAAC,QAAQ,CAAC;IACnCR,KAAK,CAACE,QAAQ,CAACO,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;IAClDT,KAAK,CAACU,eAAe,CAAC,KAAK,CAAC;IAC5BV,KAAK,CAACW,2BAA2B,GAAGzE,oBAAoB,CAAC0E,WAAW,CAAC,UAAUC,CAAC,EAAE;MAC9E,IAAIA,CAAC,CAACC,eAAe,EAAE;QACnBd,KAAK,CAACU,eAAe,CAAC,IAAI,CAAC;MAC/B;IACJ,CAAC,CAAC;IACFV,KAAK,CAACe,gBAAgB,GAAG,EAAE;IAC3B,OAAOf,KAAK;EAChB;EACAH,wBAAwB,CAACjE,SAAS,CAACoF,OAAO,GAAG,YAAY;IACrDlB,MAAM,CAAClE,SAAS,CAACoF,OAAO,CAACf,IAAI,CAAC,IAAI,CAAC;IACnC,IAAI,CAACU,2BAA2B,CAACK,OAAO,EAAE;EAC9C,CAAC;EACDnB,wBAAwB,CAACjE,SAAS,CAAC8E,eAAe,GAAG,UAAUO,SAAS,EAAE;IACtE,IAAIC,WAAW,GAAG,IAAI7E,QAAQ,CAAC,IAAI,CAAC8E,QAAQ,CAACC,aAAa,EAAE,IAAI,CAACD,QAAQ,CAAC5E,KAAK,CAAC;IAChF,IAAI,IAAI,CAAC8E,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC1B,MAAM,CAACuB,WAAW,CAAC,EAAE;MACtD;MACA,OAAO,KAAK;IAChB;IACA,IAAI,CAACG,SAAS,GAAGH,WAAW;IAC5B,IAAI,CAAChB,QAAQ,CAACoB,MAAM,CAAC,IAAI,CAACD,SAAS,CAAClD,GAAG,CAAC;IACxC,IAAI,CAAC+B,QAAQ,CAACqB,QAAQ,CAAC,IAAI,CAACF,SAAS,CAACjD,KAAK,CAAC;IAC5C,IAAI,CAAC8B,QAAQ,CAACsB,QAAQ,CAAC,IAAI,CAACH,SAAS,CAAChD,QAAQ,CAAC;IAC/C,IAAI,CAAC6B,QAAQ,CAACuB,SAAS,CAAC,IAAI,CAACJ,SAAS,CAAC9C,SAAS,CAAC;IACjD,IAAI,CAAC2B,QAAQ,CAACwB,OAAO,CAACpD,KAAK,GAAG,IAAI,CAAC+C,SAAS,CAAC5C,WAAW;IACxD,IAAI,CAACyB,QAAQ,CAACwB,OAAO,CAAClD,MAAM,GAAG,IAAI,CAAC6C,SAAS,CAAC3C,YAAY;IAC1D,IAAIuC,SAAS,EAAE;MACX,IAAI,CAACU,OAAO,EAAE;IAClB;IACA,OAAO,IAAI;EACf,CAAC;EACD;EACA9B,wBAAwB,CAACjE,SAAS,CAACgG,sBAAsB,GAAG,UAAUf,CAAC,EAAE;IACrE,OAAO,IAAI,CAACH,eAAe,CAAC,KAAK,CAAC;EACtC,CAAC;EACDb,wBAAwB,CAACjE,SAAS,CAACiG,oBAAoB,GAAG,UAAUhB,CAAC,EAAE;IACnE,IAAI,CAACE,gBAAgB,GAAG,EAAE;IAC1B,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGlB,CAAC,CAACmB,UAAU,CAACC,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MACrD,IAAI,CAACf,gBAAgB,CAACe,CAAC,CAAC,GAAGjB,CAAC,CAACmB,UAAU,CAACF,CAAC,CAAC,CAACI,WAAW,EAAE;IAC5D;IACA,IAAI,CAACnB,gBAAgB,CAACoB,IAAI,CAAClG,QAAQ,CAACmG,OAAO,CAAC;IAC5C,OAAO,IAAI;EACf,CAAC;EACDvC,wBAAwB,CAACjE,SAAS,CAACyG,oBAAoB,GAAG,UAAUxB,CAAC,EAAE;IACnE,OAAO,IAAI;EACf,CAAC;EACDhB,wBAAwB,CAACjE,SAAS,CAAC0G,SAAS,GAAG,UAAUzB,CAAC,EAAE;IACxD,OAAO,IAAI;EACf,CAAC;EACDhB,wBAAwB,CAACjE,SAAS,CAAC2G,eAAe,GAAG,UAAU1B,CAAC,EAAE;IAC9D,OAAOA,CAAC,CAAC2B,mBAAmB;EAChC,CAAC;EACD3C,wBAAwB,CAACjE,SAAS,CAAC6G,cAAc,GAAG,UAAU5B,CAAC,EAAE;IAC7D,OAAO,IAAI;EACf,CAAC;EACDhB,wBAAwB,CAACjE,SAAS,CAAC8G,cAAc,GAAG,UAAU7B,CAAC,EAAE;IAC7D;IACA,IAAI,CAACM,QAAQ,CAACwB,KAAK,CAACC,iCAAiC,EAAE;IACvD,OAAO,IAAI,CAAClC,eAAe,CAAC,KAAK,CAAC;EACtC,CAAC;EACD;EACAb,wBAAwB,CAACjE,SAAS,CAACiH,UAAU,GAAG,YAAY;IACxD,OAAO,IAAI,CAAC3C,QAAQ,CAACwB,OAAO;EAChC,CAAC;EACD7B,wBAAwB,CAACjE,SAAS,CAACkH,aAAa,GAAG,UAAUC,GAAG,EAAE;IAC9D;EAAA,CACH;EACDlD,wBAAwB,CAACjE,SAAS,CAACoH,MAAM,GAAG,UAAUC,SAAS,EAAE;IAC7D,IAAI,CAACtB,OAAO,EAAE;EAClB,CAAC;EACD9B,wBAAwB,CAACjE,SAAS,CAAC+F,OAAO,GAAG,YAAY;IACrD,IAAI,IAAI,CAACN,SAAS,CAACzE,kBAAkB,KAAK,CAAC,EAAE;MACzC;MACA,IAAI,CAACsD,QAAQ,CAACgD,kBAAkB,CAAC,IAAI,CAAC7B,SAAS,CAAC1D,eAAe,GAAG,IAAI,CAAC0D,SAAS,CAAC1D,eAAe,GAAG,EAAE,CAAC;MACtG;IACJ;IACA,IAAIc,WAAW,GAAG,IAAI,CAAC4C,SAAS,CAAC5C,WAAW;IAC5C,IAAIC,YAAY,GAAG,IAAI,CAAC2C,SAAS,CAAC3C,YAAY;IAC9C,IAAIjC,UAAU,GAAG,IAAI,CAAC4E,SAAS,CAAC5E,UAAU;IAC1C,IAAI0G,UAAU,GAAG,IAAI,CAAChC,QAAQ,CAACgC,UAAU;IACzC,IAAIC,WAAW,GAAG,IAAI,CAACjC,QAAQ,CAACgC,UAAU,CAACE,eAAe,EAAE;IAC5D,IAAIC,WAAW,GAAG5E,YAAY,GAAG0E,WAAW;IAC5C,IAAIG,WAAW,GAAG,IAAI,CAACpC,QAAQ,CAACwB,KAAK,CAACa,8BAA8B,CAAC,IAAI,CAACrC,QAAQ,CAAC5E,KAAK,CAAC;IACzF,IAAIkH,mBAAmB,GAAI,CAAC,CAAC,8BAA8B,IAAI,CAACpC,SAAS,CAAC1E,UAAU,GAAI,CAAC;IACzF,IAAI+G,uBAAuB,GAAID,mBAAmB,GAAG,CAAC,GAAI,CAAC;IAC3D,IAAIE,SAAS,GAAG,IAAI,CAACzD,QAAQ,CAACwB,OAAO,CAACkC,UAAU,CAAC,IAAI,CAAC;IACtD,IAAI,IAAI,CAACvC,SAAS,CAAC1D,eAAe,KAAK,IAAI,EAAE;MACzCgG,SAAS,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEpF,WAAW,EAAEC,YAAY,CAAC;IACxD,CAAC,MACI;MACDiF,SAAS,CAACG,SAAS,GAAG,IAAI,CAACzC,SAAS,CAAC1D,eAAe;MACpDgG,SAAS,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEtF,WAAW,EAAEC,YAAY,CAAC;IACvD;IACA,IAAIG,CAAC,GAAG,IAAI,CAACwC,SAAS,CAACxC,CAAC;IACxB,IAAIC,CAAC,GAAG,IAAI,CAACuC,SAAS,CAACvC,CAAC;IACxB;IACA;IACA,IAAIkF,MAAM,GAAG5I,MAAM,CAAC6I,IAAI,CAACV,WAAW,CAAC;IACrCS,MAAM,CAAC7B,IAAI,EAAE;IACb,KAAK,IAAI+B,MAAM,GAAG,CAAC,EAAEC,IAAI,GAAGH,MAAM,CAAC/B,MAAM,EAAEiC,MAAM,GAAGC,IAAI,EAAED,MAAM,EAAE,EAAE;MAChE,IAAIE,KAAK,GAAGJ,MAAM,CAACE,MAAM,CAAC;MAC1B,IAAIG,gBAAgB,GAAGd,WAAW,CAACa,KAAK,CAAC;MACzCT,SAAS,CAACG,SAAS,GAAGM,KAAK;MAC3B,IAAIE,QAAQ,GAAG,CAAC;MAChB,IAAIC,MAAM,GAAG,CAAC;MACd,IAAIC,MAAM,GAAG,CAAC;MACd,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGsC,gBAAgB,CAACpC,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QACzD,IAAI2C,IAAI,GAAGJ,gBAAgB,CAAC,CAAC,GAAGvC,CAAC,CAAC;QAClC,IAAI4C,eAAe,GAAGL,gBAAgB,CAAC,CAAC,GAAGvC,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI6C,aAAa,GAAGN,gBAAgB,CAAC,CAAC,GAAGvC,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI8C,EAAE,GAAIzB,UAAU,CAAC0B,8BAA8B,CAACH,eAAe,CAAC,GAAGpB,WAAW,GAAI,CAAC;QACvF,IAAIwB,EAAE,GAAI,CAAC3B,UAAU,CAAC0B,8BAA8B,CAACF,aAAa,CAAC,GAAGlI,UAAU,IAAI6G,WAAW,GAAI,CAAC;QACpG,IAAI9E,MAAM,GAAGsG,EAAE,GAAGF,EAAE;QACpB,IAAIpG,MAAM,GAAGiF,mBAAmB,EAAE;UAC9B,IAAIsB,OAAO,GAAI,CAACH,EAAE,GAAGE,EAAE,IAAI,CAAC,GAAI,CAAC;UACjC,IAAIC,OAAO,GAAGrB,uBAAuB,EAAE;YACnCqB,OAAO,GAAGrB,uBAAuB;UACrC,CAAC,MACI,IAAIqB,OAAO,GAAGrB,uBAAuB,GAAGhF,YAAY,EAAE;YACvDqG,OAAO,GAAGrG,YAAY,GAAGgF,uBAAuB;UACpD;UACAkB,EAAE,GAAGG,OAAO,GAAGrB,uBAAuB;UACtCoB,EAAE,GAAGC,OAAO,GAAGrB,uBAAuB;QAC1C;QACA,IAAIkB,EAAE,GAAGJ,MAAM,GAAG,CAAC,IAAIC,IAAI,KAAKH,QAAQ,EAAE;UACtC;UACA,IAAIxC,CAAC,KAAK,CAAC,EAAE;YACT6B,SAAS,CAACI,QAAQ,CAAClF,CAAC,CAACyF,QAAQ,CAAC,EAAEC,MAAM,EAAEzF,CAAC,CAACwF,QAAQ,CAAC,EAAEE,MAAM,GAAGD,MAAM,CAAC;UACzE;UACAD,QAAQ,GAAGG,IAAI;UACfF,MAAM,GAAGK,EAAE;UACXJ,MAAM,GAAGM,EAAE;QACf,CAAC,MACI;UACD;UACA,IAAIA,EAAE,GAAGN,MAAM,EAAE;YACbA,MAAM,GAAGM,EAAE;UACf;QACJ;MACJ;MACAnB,SAAS,CAACI,QAAQ,CAAClF,CAAC,CAACyF,QAAQ,CAAC,EAAEC,MAAM,EAAEzF,CAAC,CAACwF,QAAQ,CAAC,EAAEE,MAAM,GAAGD,MAAM,CAAC;IACzE;IACA;IACA,IAAI,CAAC,IAAI,CAAClD,SAAS,CAACpE,UAAU,IAAI,IAAI,CAACoE,SAAS,CAACnE,WAAW,EAAE;MAC1D,IAAI8H,YAAY,GAAI,CAAC,GAAG,IAAI,CAAC3D,SAAS,CAAC1E,UAAU,GAAI,CAAC;MACtD,IAAIsI,gBAAgB,GAAID,YAAY,GAAG,CAAC,GAAI,CAAC;MAC7C,IAAIE,OAAO,GAAG,IAAI,CAAC7D,SAAS,CAACxC,CAAC,CAAC,CAAC,CAAC,WAAW;MAC5C,IAAIsG,OAAO,GAAG,IAAI,CAAC9D,SAAS,CAACvC,CAAC,CAAC,CAAC,CAAC,WAAW;MAC5C6E,SAAS,CAACG,SAAS,GAAG,IAAI,CAACzC,SAAS,CAACnE,WAAW;MAChD,IAAIqH,MAAM,GAAG,CAAC,GAAG;MACjB,IAAIC,MAAM,GAAG,CAAC,GAAG;MACjB,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAAChB,gBAAgB,CAACkB,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAC9D,IAAIsD,MAAM,GAAG,IAAI,CAACrE,gBAAgB,CAACe,CAAC,CAAC;QACrC,IAAIiD,OAAO,GAAI5B,UAAU,CAAC0B,8BAA8B,CAACO,MAAM,CAACC,UAAU,CAAC,GAAG/B,WAAW,GAAI,CAAC;QAC9F,IAAIyB,OAAO,GAAGE,gBAAgB,EAAE;UAC5BF,OAAO,GAAGE,gBAAgB;QAC9B,CAAC,MACI,IAAIF,OAAO,GAAGE,gBAAgB,GAAGvG,YAAY,EAAE;UAChDqG,OAAO,GAAGrG,YAAY,GAAGuG,gBAAgB;QAC7C;QACA,IAAIL,EAAE,GAAGG,OAAO,GAAGE,gBAAgB;QACnC,IAAIH,EAAE,GAAGF,EAAE,GAAGI,YAAY;QAC1B,IAAIJ,EAAE,GAAGJ,MAAM,GAAG,CAAC,EAAE;UACjB;UACA,IAAI1C,CAAC,KAAK,CAAC,EAAE;YACT6B,SAAS,CAACI,QAAQ,CAACmB,OAAO,EAAEX,MAAM,EAAEY,OAAO,EAAEX,MAAM,GAAGD,MAAM,CAAC;UACjE;UACAA,MAAM,GAAGK,EAAE;UACXJ,MAAM,GAAGM,EAAE;QACf,CAAC,MACI;UACD;UACA,IAAIA,EAAE,GAAGN,MAAM,EAAE;YACbA,MAAM,GAAGM,EAAE;UACf;QACJ;MACJ;MACAnB,SAAS,CAACI,QAAQ,CAACmB,OAAO,EAAEX,MAAM,EAAEY,OAAO,EAAEX,MAAM,GAAGD,MAAM,CAAC;IACjE;IACA,IAAI,IAAI,CAAClD,SAAS,CAACxE,YAAY,IAAI,IAAI,CAACwE,SAAS,CAACvE,WAAW,IAAI,IAAI,CAACuE,SAAS,CAACzE,kBAAkB,GAAG,CAAC,EAAE;MACpG+G,SAAS,CAAC2B,SAAS,EAAE;MACrB3B,SAAS,CAAC4B,SAAS,GAAG,CAAC;MACvB5B,SAAS,CAAC6B,WAAW,GAAG,IAAI,CAACnE,SAAS,CAACvE,WAAW;MAClD6G,SAAS,CAAC8B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MACtB9B,SAAS,CAAC+B,MAAM,CAAC,CAAC,EAAEhH,YAAY,CAAC;MACjCiF,SAAS,CAACgC,MAAM,EAAE;MAClBhC,SAAS,CAAC8B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MACtB9B,SAAS,CAAC+B,MAAM,CAACjH,WAAW,EAAE,CAAC,CAAC;MAChCkF,SAAS,CAACgC,MAAM,EAAE;IACtB;EACJ,CAAC;EACD,OAAO9F,wBAAwB;AACnC,CAAC,CAAC7D,QAAQ,CAAE;AACZ,SAAS6D,wBAAwB"},"metadata":{},"sourceType":"module"}