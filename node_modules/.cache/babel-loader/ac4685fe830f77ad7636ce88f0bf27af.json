{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../base/common/search.js';\n/**\r\n * Assigned when the replace pattern is entirely static.\r\n */\nvar StaticValueReplacePattern = /** @class */function () {\n  function StaticValueReplacePattern(staticValue) {\n    this.staticValue = staticValue;\n    this.kind = 0 /* StaticValue */;\n  }\n\n  return StaticValueReplacePattern;\n}();\n/**\r\n * Assigned when the replace pattern has replacemend patterns.\r\n */\nvar DynamicPiecesReplacePattern = /** @class */function () {\n  function DynamicPiecesReplacePattern(pieces) {\n    this.pieces = pieces;\n    this.kind = 1 /* DynamicPieces */;\n  }\n\n  return DynamicPiecesReplacePattern;\n}();\nvar ReplacePattern = /** @class */function () {\n  function ReplacePattern(pieces) {\n    if (!pieces || pieces.length === 0) {\n      this._state = new StaticValueReplacePattern('');\n    } else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n      this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n    } else {\n      this._state = new DynamicPiecesReplacePattern(pieces);\n    }\n  }\n  ReplacePattern.fromStaticValue = function (value) {\n    return new ReplacePattern([ReplacePiece.staticValue(value)]);\n  };\n  Object.defineProperty(ReplacePattern.prototype, \"hasReplacementPatterns\", {\n    get: function get() {\n      return this._state.kind === 1 /* DynamicPieces */;\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  ReplacePattern.prototype.buildReplaceString = function (matches, preserveCase) {\n    if (this._state.kind === 0 /* StaticValue */) {\n      if (preserveCase) {\n        return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n      } else {\n        return this._state.staticValue;\n      }\n    }\n    var result = '';\n    for (var i = 0, len = this._state.pieces.length; i < len; i++) {\n      var piece = this._state.pieces[i];\n      if (piece.staticValue !== null) {\n        // static value ReplacePiece\n        result += piece.staticValue;\n        continue;\n      }\n      // match index ReplacePiece\n      result += ReplacePattern._substitute(piece.matchIndex, matches);\n    }\n    return result;\n  };\n  ReplacePattern._substitute = function (matchIndex, matches) {\n    if (matches === null) {\n      return '';\n    }\n    if (matchIndex === 0) {\n      return matches[0];\n    }\n    var remainder = '';\n    while (matchIndex > 0) {\n      if (matchIndex < matches.length) {\n        // A match can be undefined\n        var match = matches[matchIndex] || '';\n        return match + remainder;\n      }\n      remainder = String(matchIndex % 10) + remainder;\n      matchIndex = Math.floor(matchIndex / 10);\n    }\n    return '$' + remainder;\n  };\n  return ReplacePattern;\n}();\nexport { ReplacePattern };\n/**\r\n * A replace piece can either be a static string or an index to a specific match.\r\n */\nvar ReplacePiece = /** @class */function () {\n  function ReplacePiece(staticValue, matchIndex) {\n    this.staticValue = staticValue;\n    this.matchIndex = matchIndex;\n  }\n  ReplacePiece.staticValue = function (value) {\n    return new ReplacePiece(value, -1);\n  };\n  ReplacePiece.matchIndex = function (index) {\n    return new ReplacePiece(null, index);\n  };\n  return ReplacePiece;\n}();\nexport { ReplacePiece };\nvar ReplacePieceBuilder = /** @class */function () {\n  function ReplacePieceBuilder(source) {\n    this._source = source;\n    this._lastCharIndex = 0;\n    this._result = [];\n    this._resultLen = 0;\n    this._currentStaticPiece = '';\n  }\n  ReplacePieceBuilder.prototype.emitUnchanged = function (toCharIndex) {\n    this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n    this._lastCharIndex = toCharIndex;\n  };\n  ReplacePieceBuilder.prototype.emitStatic = function (value, toCharIndex) {\n    this._emitStatic(value);\n    this._lastCharIndex = toCharIndex;\n  };\n  ReplacePieceBuilder.prototype._emitStatic = function (value) {\n    if (value.length === 0) {\n      return;\n    }\n    this._currentStaticPiece += value;\n  };\n  ReplacePieceBuilder.prototype.emitMatchIndex = function (index, toCharIndex) {\n    if (this._currentStaticPiece.length !== 0) {\n      this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n      this._currentStaticPiece = '';\n    }\n    this._result[this._resultLen++] = ReplacePiece.matchIndex(index);\n    this._lastCharIndex = toCharIndex;\n  };\n  ReplacePieceBuilder.prototype.finalize = function () {\n    this.emitUnchanged(this._source.length);\n    if (this._currentStaticPiece.length !== 0) {\n      this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n      this._currentStaticPiece = '';\n    }\n    return new ReplacePattern(this._result);\n  };\n  return ReplacePieceBuilder;\n}();\n/**\r\n * \\n\t\t\t=> inserts a LF\r\n * \\t\t\t\t=> inserts a TAB\r\n * \\\\\t\t\t=> inserts a \"\\\".\r\n * $$\t\t\t=> inserts a \"$\".\r\n * $& and $0\t=> inserts the matched substring.\r\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\r\n * everything else stays untouched\r\n *\r\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\r\n */\nexport function parseReplaceString(replaceString) {\n  if (!replaceString || replaceString.length === 0) {\n    return new ReplacePattern(null);\n  }\n  var result = new ReplacePieceBuilder(replaceString);\n  for (var i = 0, len = replaceString.length; i < len; i++) {\n    var chCode = replaceString.charCodeAt(i);\n    if (chCode === 92 /* Backslash */) {\n      // move to next char\n      i++;\n      if (i >= len) {\n        // string ends with a \\\n        break;\n      }\n      var nextChCode = replaceString.charCodeAt(i);\n      // let replaceWithCharacter: string | null = null;\n      switch (nextChCode) {\n        case 92 /* Backslash */:\n          // \\\\ => inserts a \"\\\"\n          result.emitUnchanged(i - 1);\n          result.emitStatic('\\\\', i + 1);\n          break;\n        case 110 /* n */:\n          // \\n => inserts a LF\n          result.emitUnchanged(i - 1);\n          result.emitStatic('\\n', i + 1);\n          break;\n        case 116 /* t */:\n          // \\t => inserts a TAB\n          result.emitUnchanged(i - 1);\n          result.emitStatic('\\t', i + 1);\n          break;\n      }\n      continue;\n    }\n    if (chCode === 36 /* DollarSign */) {\n      // move to next char\n      i++;\n      if (i >= len) {\n        // string ends with a $\n        break;\n      }\n      var nextChCode = replaceString.charCodeAt(i);\n      if (nextChCode === 36 /* DollarSign */) {\n        // $$ => inserts a \"$\"\n        result.emitUnchanged(i - 1);\n        result.emitStatic('$', i + 1);\n        continue;\n      }\n      if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\n        // $& and $0 => inserts the matched substring.\n        result.emitUnchanged(i - 1);\n        result.emitMatchIndex(0, i + 1);\n        continue;\n      }\n      if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\n        // $n\n        var matchIndex = nextChCode - 48 /* Digit0 */;\n        // peek next char to probe for $nn\n        if (i + 1 < len) {\n          var nextNextChCode = replaceString.charCodeAt(i + 1);\n          if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\n            // $nn\n            // move to next char\n            i++;\n            matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\n            result.emitUnchanged(i - 2);\n            result.emitMatchIndex(matchIndex, i + 1);\n            continue;\n          }\n        }\n        result.emitUnchanged(i - 1);\n        result.emitMatchIndex(matchIndex, i + 1);\n        continue;\n      }\n    }\n  }\n  return result.finalize();\n}","map":{"version":3,"names":["buildReplaceStringWithCasePreserved","StaticValueReplacePattern","staticValue","kind","DynamicPiecesReplacePattern","pieces","ReplacePattern","length","_state","fromStaticValue","value","ReplacePiece","Object","defineProperty","prototype","get","enumerable","configurable","buildReplaceString","matches","preserveCase","result","i","len","piece","_substitute","matchIndex","remainder","match","String","Math","floor","index","ReplacePieceBuilder","source","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","substring","emitStatic","emitMatchIndex","finalize","parseReplaceString","replaceString","chCode","charCodeAt","nextChCode","nextNextChCode"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/find/replacePattern.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { buildReplaceStringWithCasePreserved } from '../../../base/common/search.js';\r\n/**\r\n * Assigned when the replace pattern is entirely static.\r\n */\r\nvar StaticValueReplacePattern = /** @class */ (function () {\r\n    function StaticValueReplacePattern(staticValue) {\r\n        this.staticValue = staticValue;\r\n        this.kind = 0 /* StaticValue */;\r\n    }\r\n    return StaticValueReplacePattern;\r\n}());\r\n/**\r\n * Assigned when the replace pattern has replacemend patterns.\r\n */\r\nvar DynamicPiecesReplacePattern = /** @class */ (function () {\r\n    function DynamicPiecesReplacePattern(pieces) {\r\n        this.pieces = pieces;\r\n        this.kind = 1 /* DynamicPieces */;\r\n    }\r\n    return DynamicPiecesReplacePattern;\r\n}());\r\nvar ReplacePattern = /** @class */ (function () {\r\n    function ReplacePattern(pieces) {\r\n        if (!pieces || pieces.length === 0) {\r\n            this._state = new StaticValueReplacePattern('');\r\n        }\r\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\r\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\r\n        }\r\n        else {\r\n            this._state = new DynamicPiecesReplacePattern(pieces);\r\n        }\r\n    }\r\n    ReplacePattern.fromStaticValue = function (value) {\r\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\r\n    };\r\n    Object.defineProperty(ReplacePattern.prototype, \"hasReplacementPatterns\", {\r\n        get: function () {\r\n            return (this._state.kind === 1 /* DynamicPieces */);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ReplacePattern.prototype.buildReplaceString = function (matches, preserveCase) {\r\n        if (this._state.kind === 0 /* StaticValue */) {\r\n            if (preserveCase) {\r\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\r\n            }\r\n            else {\r\n                return this._state.staticValue;\r\n            }\r\n        }\r\n        var result = '';\r\n        for (var i = 0, len = this._state.pieces.length; i < len; i++) {\r\n            var piece = this._state.pieces[i];\r\n            if (piece.staticValue !== null) {\r\n                // static value ReplacePiece\r\n                result += piece.staticValue;\r\n                continue;\r\n            }\r\n            // match index ReplacePiece\r\n            result += ReplacePattern._substitute(piece.matchIndex, matches);\r\n        }\r\n        return result;\r\n    };\r\n    ReplacePattern._substitute = function (matchIndex, matches) {\r\n        if (matches === null) {\r\n            return '';\r\n        }\r\n        if (matchIndex === 0) {\r\n            return matches[0];\r\n        }\r\n        var remainder = '';\r\n        while (matchIndex > 0) {\r\n            if (matchIndex < matches.length) {\r\n                // A match can be undefined\r\n                var match = (matches[matchIndex] || '');\r\n                return match + remainder;\r\n            }\r\n            remainder = String(matchIndex % 10) + remainder;\r\n            matchIndex = Math.floor(matchIndex / 10);\r\n        }\r\n        return '$' + remainder;\r\n    };\r\n    return ReplacePattern;\r\n}());\r\nexport { ReplacePattern };\r\n/**\r\n * A replace piece can either be a static string or an index to a specific match.\r\n */\r\nvar ReplacePiece = /** @class */ (function () {\r\n    function ReplacePiece(staticValue, matchIndex) {\r\n        this.staticValue = staticValue;\r\n        this.matchIndex = matchIndex;\r\n    }\r\n    ReplacePiece.staticValue = function (value) {\r\n        return new ReplacePiece(value, -1);\r\n    };\r\n    ReplacePiece.matchIndex = function (index) {\r\n        return new ReplacePiece(null, index);\r\n    };\r\n    return ReplacePiece;\r\n}());\r\nexport { ReplacePiece };\r\nvar ReplacePieceBuilder = /** @class */ (function () {\r\n    function ReplacePieceBuilder(source) {\r\n        this._source = source;\r\n        this._lastCharIndex = 0;\r\n        this._result = [];\r\n        this._resultLen = 0;\r\n        this._currentStaticPiece = '';\r\n    }\r\n    ReplacePieceBuilder.prototype.emitUnchanged = function (toCharIndex) {\r\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\r\n        this._lastCharIndex = toCharIndex;\r\n    };\r\n    ReplacePieceBuilder.prototype.emitStatic = function (value, toCharIndex) {\r\n        this._emitStatic(value);\r\n        this._lastCharIndex = toCharIndex;\r\n    };\r\n    ReplacePieceBuilder.prototype._emitStatic = function (value) {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n        this._currentStaticPiece += value;\r\n    };\r\n    ReplacePieceBuilder.prototype.emitMatchIndex = function (index, toCharIndex) {\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        this._result[this._resultLen++] = ReplacePiece.matchIndex(index);\r\n        this._lastCharIndex = toCharIndex;\r\n    };\r\n    ReplacePieceBuilder.prototype.finalize = function () {\r\n        this.emitUnchanged(this._source.length);\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        return new ReplacePattern(this._result);\r\n    };\r\n    return ReplacePieceBuilder;\r\n}());\r\n/**\r\n * \\n\t\t\t=> inserts a LF\r\n * \\t\t\t\t=> inserts a TAB\r\n * \\\\\t\t\t=> inserts a \"\\\".\r\n * $$\t\t\t=> inserts a \"$\".\r\n * $& and $0\t=> inserts the matched substring.\r\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\r\n * everything else stays untouched\r\n *\r\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\r\n */\r\nexport function parseReplaceString(replaceString) {\r\n    if (!replaceString || replaceString.length === 0) {\r\n        return new ReplacePattern(null);\r\n    }\r\n    var result = new ReplacePieceBuilder(replaceString);\r\n    for (var i = 0, len = replaceString.length; i < len; i++) {\r\n        var chCode = replaceString.charCodeAt(i);\r\n        if (chCode === 92 /* Backslash */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a \\\r\n                break;\r\n            }\r\n            var nextChCode = replaceString.charCodeAt(i);\r\n            // let replaceWithCharacter: string | null = null;\r\n            switch (nextChCode) {\r\n                case 92 /* Backslash */:\r\n                    // \\\\ => inserts a \"\\\"\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\\\', i + 1);\r\n                    break;\r\n                case 110 /* n */:\r\n                    // \\n => inserts a LF\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\n', i + 1);\r\n                    break;\r\n                case 116 /* t */:\r\n                    // \\t => inserts a TAB\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\t', i + 1);\r\n                    break;\r\n            }\r\n            continue;\r\n        }\r\n        if (chCode === 36 /* DollarSign */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a $\r\n                break;\r\n            }\r\n            var nextChCode = replaceString.charCodeAt(i);\r\n            if (nextChCode === 36 /* DollarSign */) {\r\n                // $$ => inserts a \"$\"\r\n                result.emitUnchanged(i - 1);\r\n                result.emitStatic('$', i + 1);\r\n                continue;\r\n            }\r\n            if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\r\n                // $& and $0 => inserts the matched substring.\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(0, i + 1);\r\n                continue;\r\n            }\r\n            if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\r\n                // $n\r\n                var matchIndex = nextChCode - 48 /* Digit0 */;\r\n                // peek next char to probe for $nn\r\n                if (i + 1 < len) {\r\n                    var nextNextChCode = replaceString.charCodeAt(i + 1);\r\n                    if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\r\n                        // $nn\r\n                        // move to next char\r\n                        i++;\r\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\r\n                        result.emitUnchanged(i - 2);\r\n                        result.emitMatchIndex(matchIndex, i + 1);\r\n                        continue;\r\n                    }\r\n                }\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(matchIndex, i + 1);\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n    return result.finalize();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}