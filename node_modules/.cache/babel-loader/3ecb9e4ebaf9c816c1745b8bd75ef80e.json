{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\XsltConfigurationFiles\\\\index.js\";\nimport React, { Component } from 'react';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport { CallServerPost, errorModal, PostCallWithZone, successModalCallback, DownloadFileWithPostData, checkPermission } from '../Utility/sharedUtility';\nimport { Breadcrumb, Form } from 'antd';\nimport Button from '../../components/uielements/button';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport ReactTable from '../Utility/reactTable';\nimport ConfirmModal from '../Utility/ConfirmModal';\nimport { stringSorter } from '../Utility/htmlUtility';\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\nimport AddXsltConfigurationFile from './addXsltConfigurationFile.js';\nvar FormItem = Form.Item;\nvar margin = {\n  margin: '0 5px 0 0'\n};\nvar floatCss = {\n  float: 'right'\n};\nvar thisObj;\nvar XsltConfigurationFiles = /*#__PURE__*/function (_Component) {\n  _inherits(XsltConfigurationFiles, _Component);\n  var _super = _createSuper(XsltConfigurationFiles);\n  function XsltConfigurationFiles(props) {\n    var _this;\n    _classCallCheck(this, XsltConfigurationFiles);\n    _this = _super.call(this, props);\n    _this.getList = function () {\n      CallServerPost('XsltConfigurationFiles/GetAllXsltConfigurationFiles', {}).then(function (response) {\n        var _this2 = this;\n        if (response.value != null) {\n          thisObj.setState({\n            loading: false\n          });\n          if (response.value != null) {\n            var datas = [];\n            var xsltConfigurationFilesList = response.value;\n            var permissions = thisObj.props.permissions;\n            var perLevel = checkPermission(permissions, ['self']);\n            var _loop = function _loop() {\n              var xsltConfigurationFileID = xsltConfigurationFilesList[i].xsltConfigurationFileID;\n              var fileCell = /*#__PURE__*/React.createElement(\"div\", {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 46\n                }\n              }, perLevel >= 1 ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n                tooltip: \"Download\",\n                shape: \"circle\",\n                classname: \"fas fa-file-download\",\n                size: \"small\",\n                style: (margin, floatCss),\n                onClick: function onClick() {\n                  return thisObj.fnToDownloadXsltConfigFile(xsltConfigurationFileID);\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 50\n                }\n              }) : \"\", /*#__PURE__*/React.createElement(\"span\", {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }\n              }, thisObj.getFileName(xsltConfigurationFilesList[i].xsltFile)));\n              var editCell = /*#__PURE__*/React.createElement(\"div\", {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 46\n                }\n              }, perLevel >= 1 ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n                tooltip: perLevel >= 2 ? \"Edit\" : \"View\",\n                shape: \"circle\",\n                classname: \"fas fa-pen\",\n                size: \"small\",\n                style: margin,\n                onClick: function onClick() {\n                  return thisObj.editXsltConfigurationFile(xsltConfigurationFileID);\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 50\n                }\n              }) : \"\", perLevel >= 4 ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n                tooltip: \"Delete\",\n                shape: \"circle\",\n                classname: \"fas fa-trash-alt\",\n                size: \"small\",\n                style: margin,\n                onClick: function onClick() {\n                  return thisObj.deleteXsltConfigurationFile(xsltConfigurationFileID);\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 50\n                }\n              }) : \"\");\n              datas.push({\n                key: xsltConfigurationFilesList[i].xsltConfigurationFileID,\n                standardName: xsltConfigurationFilesList[i].standardName,\n                defineVersion: xsltConfigurationFilesList[i].defineVersionText,\n                fileName: fileCell,\n                xsltFileType: xsltConfigurationFilesList[i].xsltFileTypeText,\n                actions: editCell\n              });\n            };\n            for (var i = 0; i < xsltConfigurationFilesList.length; i++) {\n              _loop();\n            }\n            thisObj.setState({\n              dataSource: datas,\n              loading: false\n            });\n          }\n        } else {\n          thisObj.setState({\n            dataSource: [],\n            loading: false\n          });\n        }\n      });\n    };\n    _this.fnToDownloadXsltConfigFile = function (fileID) {\n      var fileName = \"\";\n      _this.state.dataSource.map(function (values, keys) {\n        if (values.key === fileID) {\n          fileName = values.fileName.props.children[1].props.children;\n        }\n      });\n      DownloadFileWithPostData('XsltConfigurationFiles/DownloadXsltFiles', fileName, {\n        XsltConfigurationFileID: fileID\n      });\n    };\n    _this.getFileName = function (fileURL) {\n      var getFileURL = fileURL;\n      var getFileName = getFileURL.split(\"Uploads\", 2);\n      return getFileName[1].replace(/\\\\/g, '');\n    };\n    _this.addXsltConfigurationFile = function () {\n      _this.setState({\n        title: \"Add XsltConfiguration File\",\n        showAddXsltConfigurationFileModal: true,\n        action: 'Create',\n        xsltConfigurationFileID: 0\n      });\n    };\n    _this.handleAddXsltConfigurationFileCancel = function () {\n      thisObj.getList(thisObj.props);\n      _this.setState({\n        action: \"\",\n        showAddXsltConfigurationFileModal: false\n      });\n    };\n    _this.handleEditXsltConfigurationFileCancel = function () {\n      thisObj.getList(thisObj.props);\n      _this.setState({\n        action: \"\",\n        showEditXsltConfigurationFileModal: false\n      });\n    };\n    _this.editXsltConfigurationFile = function (xsltConfigurationFileID) {\n      _this.setState({\n        title: \"Edit XsltConfiguration File\",\n        showAddXsltConfigurationFileModal: true,\n        action: 'Update',\n        xsltConfigurationFileID: xsltConfigurationFileID\n      });\n    };\n    _this.deleteXsltConfigurationFile = function (xsltConfigurationFileID) {\n      _this.setState({\n        showDeleteConfirmationModal: true,\n        action: 'Delete',\n        xsltConfigurationFileID: xsltConfigurationFileID\n      });\n    };\n    _this.handleDelete = function (ChangeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      var values = {};\n      thisObj.setState({\n        modalLoad: true\n      });\n      values[\"XsltConfigurationFileID\"] = thisObj.state.xsltConfigurationFileID;\n      values[\"ChangeReason\"] = ChangeReason;\n      PostCallWithZone('XsltConfigurationFiles/Delete', values).then(function (response) {\n        thisObj.setState({\n          modalLoad: false\n        });\n        if (response.status == 1) {\n          thisObj.setState({\n            showDeleteConfirmationModal: false\n          });\n          successModalCallback(response.message, thisObj.refreshXsltConfigurationFiles);\n        } else {\n          thisObj.setState({\n            showDeleteConfirmationModal: false\n          });\n          errorModal(response.message);\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.refreshXsltConfigurationFiles = function () {\n      thisObj.handleCancelDeleteConfirmationModal();\n      thisObj.getList();\n      thisObj.setState({\n        action: \"\",\n        showAddXsltConfigurationFileModal: false,\n        modalLoad: false\n      });\n    };\n    _this.handleCancelDeleteConfirmationModal = function () {\n      _this.setState({\n        showDeleteConfirmationModal: false\n      });\n      _this.props.form.resetFields([\"Change Reason\"]);\n    };\n    _this.addXsltConfigurationFile = _this.addXsltConfigurationFile.bind(_assertThisInitialized(_this));\n    _this.state = {\n      dataSource: [],\n      title: null,\n      showAddXsltConfigurationFileModal: false,\n      showEditXsltConfigurationFileModal: false,\n      showDeleteConfirmationModal: false,\n      xsltConfigurationFileID: 0,\n      action: \"\",\n      modalLoad: false\n    };\n    thisObj = _assertThisInitialized(_this);\n    thisObj.getList();\n    return _this;\n  }\n  _createClass(XsltConfigurationFiles, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n        showAddXsltConfigurationFileModal = _this$state.showAddXsltConfigurationFileModal,\n        showEditXsltConfigurationFileModal = _this$state.showEditXsltConfigurationFileModal,\n        action = _this$state.action,\n        xsltConfigurationFileID = _this$state.xsltConfigurationFileID,\n        title = _this$state.title,\n        dataSource = _this$state.dataSource;\n      var permissions = this.props.permissions;\n      var columns = [{\n        title: 'Standard Name',\n        dataIndex: 'standardName',\n        key: 'standardName',\n        width: 100,\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'standardName');\n        }\n      }, {\n        title: 'Define Version',\n        dataIndex: 'defineVersion',\n        key: 'defineVersion',\n        width: 100,\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'defineVersion');\n        }\n      }, {\n        title: 'File Name',\n        dataIndex: 'fileName',\n        key: 'fileName',\n        width: 100\n        //sorter: (a, b) => stringSorter(a, b, 'fileName'),\n      }, {\n        title: 'Xslt File Type',\n        dataIndex: 'xsltFileType',\n        key: 'xsltFileType',\n        width: 100,\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'xsltFileType');\n        }\n      }, {\n        title: 'Actions',\n        dataIndex: 'actions',\n        key: 'actions',\n        width: 100\n      }];\n      return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-file-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, \"Xslt Configuration Files\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, \"List\")), /*#__PURE__*/React.createElement(LayoutContent, {\n        style: {\n          wordBreak: 'break-all'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ReactTable, {\n        columns: columns,\n        dataSource: dataSource,\n        addAction: checkPermission(permissions, ['self']) >= 3 ? this.addXsltConfigurationFile : null,\n        scroll: {\n          y: \"calc(100vh - 256px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }), (action == \"Update\" || action == \"Create\") && /*#__PURE__*/React.createElement(AddXsltConfigurationFile, {\n        permissions: permissions,\n        readOnly: checkPermission(permissions, ['self']) <= 1,\n        visible: showAddXsltConfigurationFileModal,\n        title: title,\n        handleCancel: this.handleAddXsltConfigurationFileCancel,\n        xsltConfigurationFileID: xsltConfigurationFileID,\n        action: action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 68\n        }\n      }), action == \"Delete\" && /*#__PURE__*/React.createElement(ConfirmModal, {\n        title: \"Delete XsltConfigurationFiles\",\n        history: this.props.history,\n        SubmitButtonName: \"Delete\",\n        onSubmit: this.handleDelete,\n        visible: this.state.showDeleteConfirmationModal,\n        handleCancel: this.handleCancelDeleteConfirmationModal,\n        getFieldDecorator: getFieldDecorator,\n        loading: this.state.modalLoad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 46\n        }\n      })));\n    }\n  }]);\n  return XsltConfigurationFiles;\n}(Component);\nvar WrappedApp = Form.create()(XsltConfigurationFiles);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","LayoutContentWrapper","CallServerPost","errorModal","PostCallWithZone","successModalCallback","DownloadFileWithPostData","checkPermission","Breadcrumb","Form","Button","LayoutContent","ReactTable","ConfirmModal","stringSorter","ButtonWithToolTip","AddXsltConfigurationFile","FormItem","Item","margin","floatCss","float","thisObj","XsltConfigurationFiles","props","getList","then","response","value","setState","loading","datas","xsltConfigurationFilesList","permissions","perLevel","xsltConfigurationFileID","i","fileCell","fnToDownloadXsltConfigFile","getFileName","xsltFile","editCell","editXsltConfigurationFile","deleteXsltConfigurationFile","push","key","standardName","defineVersion","defineVersionText","fileName","xsltFileType","xsltFileTypeText","actions","length","dataSource","fileID","state","map","values","keys","children","XsltConfigurationFileID","fileURL","getFileURL","split","replace","addXsltConfigurationFile","title","showAddXsltConfigurationFileModal","action","handleAddXsltConfigurationFileCancel","handleEditXsltConfigurationFileCancel","showEditXsltConfigurationFileModal","showDeleteConfirmationModal","handleDelete","ChangeReason","modalLoad","status","message","refreshXsltConfigurationFiles","catch","error","handleCancelDeleteConfirmationModal","form","resetFields","bind","getFieldDecorator","columns","dataIndex","width","sorter","a","b","wordBreak","y","history","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/XsltConfigurationFiles/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\r\nimport { CallServerPost, errorModal, PostCallWithZone, successModalCallback, DownloadFileWithPostData, checkPermission } from '../Utility/sharedUtility';\r\nimport { Breadcrumb, Form } from 'antd';\r\nimport Button from '../../components/uielements/button';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport ReactTable from '../Utility/reactTable';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\nimport { stringSorter } from '../Utility/htmlUtility';\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\r\nimport AddXsltConfigurationFile from './addXsltConfigurationFile.js';\r\n\r\nconst FormItem = Form.Item;\r\nconst margin = {\r\n    margin: '0 5px 0 0'\r\n};\r\nconst floatCss = {\r\n    float: 'right'\r\n}\r\nvar thisObj;\r\n\r\nclass XsltConfigurationFiles extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addXsltConfigurationFile = this.addXsltConfigurationFile.bind(this);\r\n        this.state = {\r\n            dataSource: [],\r\n            title: null,\r\n            showAddXsltConfigurationFileModal: false,\r\n            showEditXsltConfigurationFileModal: false,\r\n            showDeleteConfirmationModal: false,\r\n            xsltConfigurationFileID: 0,\r\n            action: \"\",\r\n            modalLoad: false,\r\n        };\r\n        thisObj = this;\n        thisObj.getList();\n    }\r\n    getList = () => {\r\n        CallServerPost('XsltConfigurationFiles/GetAllXsltConfigurationFiles', {})\r\n            .then(\r\n            function (response) {\r\n                if (response.value != null) {\r\n                    thisObj.setState({ loading: false });\r\n                    if (response.value != null) {\r\n                        var datas = [];\r\n                        const xsltConfigurationFilesList = response.value;\r\n                        const permissions = thisObj.props.permissions;\r\n                        const perLevel = checkPermission(permissions, ['self']);\r\n                        for (var i = 0; i < xsltConfigurationFilesList.length; i++) {\r\n\r\n                            const xsltConfigurationFileID = xsltConfigurationFilesList[i].xsltConfigurationFileID;\r\n                            const fileCell = <div>\r\n                                {perLevel >= 1 ? <ButtonWithToolTip\r\n                                        tooltip=\"Download\"\r\n                                        shape=\"circle\"\r\n                                        classname=\"fas fa-file-download\"\r\n                                        size=\"small\"\r\n                                        style={margin,floatCss}\r\n                                        onClick={() => thisObj.fnToDownloadXsltConfigFile(xsltConfigurationFileID)}\r\n                                /> : \"\"}\r\n                                <span>{thisObj.getFileName(xsltConfigurationFilesList[i].xsltFile)}</span>\r\n                            </div>;\r\n\r\n                            const editCell = <div>\n                                {perLevel >= 1 ? <ButtonWithToolTip\n                                    tooltip={perLevel >= 2 ? \"Edit\" : \"View\"}\r\n                                    shape=\"circle\"\r\n                                    classname=\"fas fa-pen\"\r\n                                    size=\"small\"\r\n                                    style={margin}\r\n                                    onClick={() => thisObj.editXsltConfigurationFile(xsltConfigurationFileID)}\r\n                                /> : \"\"}\r\n\r\n                                {perLevel >= 4 ? <ButtonWithToolTip\r\n                                        tooltip=\"Delete\"\r\n                                        shape=\"circle\"\r\n                                        classname=\"fas fa-trash-alt\"\r\n                                        size=\"small\"\r\n                                        style={margin}\r\n                                        onClick={() => thisObj.deleteXsltConfigurationFile(xsltConfigurationFileID)}\r\n                                /> : \"\"}\r\n                            \r\n                            </div>;\r\n                            datas.push({\r\n                                key: xsltConfigurationFilesList[i].xsltConfigurationFileID,\r\n                                standardName: xsltConfigurationFilesList[i].standardName,\r\n                                defineVersion: xsltConfigurationFilesList[i].defineVersionText,\r\n                                fileName: fileCell,\r\n                                xsltFileType: xsltConfigurationFilesList[i].xsltFileTypeText,\r\n                                actions: editCell\r\n                            });\r\n                        }\r\n                        thisObj.setState({ dataSource: datas, loading: false });\r\n                    }\r\n                }\r\n                else {\r\n                    thisObj.setState({ dataSource: [], loading: false });\r\n                }\r\n            });    \r\n    }\r\n    fnToDownloadXsltConfigFile = (fileID) => {\r\n        var fileName = \"\";\r\n        this.state.dataSource.map(function (values, keys) {\r\n            if (values.key === fileID) {\r\n                fileName = values.fileName.props.children[1].props.children;   \r\n            }\r\n        });\r\n        DownloadFileWithPostData('XsltConfigurationFiles/DownloadXsltFiles', fileName, { XsltConfigurationFileID: fileID });\r\n    }\r\n    getFileName = (fileURL) => {\r\n        var getFileURL = fileURL;\r\n        var getFileName = getFileURL.split('\\Uploads', 2);\r\n        return getFileName[1].replace(/\\\\/g, '');\r\n    }\r\n    addXsltConfigurationFile = () => {\r\n        this.setState({ title: \"Add XsltConfiguration File\", showAddXsltConfigurationFileModal: true, action: 'Create', xsltConfigurationFileID: 0 })\r\n\r\n    }\r\n    handleAddXsltConfigurationFileCancel = () => {\r\n        thisObj.getList(thisObj.props);\n        this.setState({ action: \"\", showAddXsltConfigurationFileModal: false });\r\n    }\r\n    handleEditXsltConfigurationFileCancel = () => {\r\n        thisObj.getList(thisObj.props);\n        this.setState({ action: \"\", showEditXsltConfigurationFileModal: false });\r\n    }\r\n\r\n    editXsltConfigurationFile = (xsltConfigurationFileID) => {\r\n        this.setState({ title: \"Edit XsltConfiguration File\", showAddXsltConfigurationFileModal: true, action: 'Update', xsltConfigurationFileID: xsltConfigurationFileID })\r\n    }\r\n\r\n    deleteXsltConfigurationFile = (xsltConfigurationFileID) => {\r\n\r\n        this.setState({ showDeleteConfirmationModal: true, action: 'Delete', xsltConfigurationFileID: xsltConfigurationFileID });\r\n    }\r\n\r\n    handleDelete = (ChangeReason) => {\r\n        const thisObj = this;\r\n        let values = {};\r\n        thisObj.setState({ modalLoad: true });\r\n        values[\"XsltConfigurationFileID\"] = thisObj.state.xsltConfigurationFileID;\r\n        values[\"ChangeReason\"] = ChangeReason;\r\n\r\n        PostCallWithZone('XsltConfigurationFiles/Delete', values)\r\n            .then(\r\n            function (response) {\r\n                thisObj.setState({ modalLoad: false });\r\n                if (response.status == 1) {\r\n                    thisObj.setState({ showDeleteConfirmationModal: false });\r\n                    successModalCallback(response.message, thisObj.refreshXsltConfigurationFiles);\r\n                } else {\r\n                    thisObj.setState({ showDeleteConfirmationModal: false });\r\n                    errorModal(response.message);\r\n                }\r\n            }).catch(error => error);\r\n\r\n    }\r\n    refreshXsltConfigurationFiles = () => {        \r\n        thisObj.handleCancelDeleteConfirmationModal();       \r\n        thisObj.getList();\r\n        thisObj.setState({ action: \"\", showAddXsltConfigurationFileModal: false, modalLoad: false });\r\n    }\r\n    handleCancelDeleteConfirmationModal = () => {\r\n        this.setState({ showDeleteConfirmationModal: false });\r\n        this.props.form.resetFields([\"Change Reason\"]);\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { showAddXsltConfigurationFileModal, showEditXsltConfigurationFileModal, action, xsltConfigurationFileID, title, dataSource } = this.state;\r\n        const permissions = this.props.permissions;\r\n        const columns = [\r\n            {\r\n                title: 'Standard Name',\r\n                dataIndex: 'standardName',\r\n                key: 'standardName',\r\n                width: 100,\r\n                sorter: (a, b) => stringSorter(a, b, 'standardName'),\r\n            },\r\n            {\r\n                title: 'Define Version',\r\n                dataIndex: 'defineVersion',\r\n                key: 'defineVersion',\r\n                width: 100,\r\n                sorter: (a, b) => stringSorter(a, b, 'defineVersion'),\r\n            },\r\n            {\r\n                title: 'File Name',\r\n                dataIndex: 'fileName',\r\n                key: 'fileName',\r\n                width: 100\r\n                //sorter: (a, b) => stringSorter(a, b, 'fileName'),\r\n            },  \r\n            {\r\n                title: 'Xslt File Type',\r\n                dataIndex: 'xsltFileType',\r\n                key: 'xsltFileType',\r\n                width: 100,\r\n                sorter: (a, b) => stringSorter(a, b, 'xsltFileType'),\r\n            },        \r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'actions',\r\n                key: 'actions',\r\n                width: 100\r\n            }\r\n        ];\r\n        \r\n        return (\r\n\r\n            <LayoutContentWrapper>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <i className=\"fas fa-file-alt\" ></i>\r\n                        <span>Xslt Configuration Files</span>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        List\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <LayoutContent style={{ wordBreak: 'break-all'}}>\r\n                    \r\n                    <ReactTable\r\n                        columns={columns}\r\n                        dataSource={dataSource}\r\n                        addAction={checkPermission(permissions, ['self']) >= 3 ? this.addXsltConfigurationFile : null}\r\n                        scroll={{ y: \"calc(100vh - 256px)\" }}\r\n                    />\r\n                    {(action == \"Update\" || action == \"Create\") && <AddXsltConfigurationFile permissions={permissions} readOnly={checkPermission(permissions, ['self']) <= 1} visible={showAddXsltConfigurationFileModal} title={title} handleCancel={this.handleAddXsltConfigurationFileCancel} xsltConfigurationFileID={xsltConfigurationFileID} action={action} />}                    \n                    {(action == \"Delete\") && <ConfirmModal title=\"Delete XsltConfigurationFiles\" history={this.props.history} SubmitButtonName=\"Delete\" onSubmit={this.handleDelete} visible={this.state.showDeleteConfirmationModal} handleCancel={this.handleCancelDeleteConfirmationModal} getFieldDecorator={getFieldDecorator} loading={this.state.modalLoad} />}\r\n\r\n                </LayoutContent>\r\n\r\n            </LayoutContentWrapper>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst WrappedApp = Form.create()(XsltConfigurationFiles);\r\nexport default WrappedApp;\r\n\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,SAASC,cAAc,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,wBAAwB,EAAEC,eAAe,QAAQ,0BAA0B;AACxJ,SAASC,UAAU,EAAEC,IAAI,QAAQ,MAAM;AACvC,OAAOC,MAAM,MAAM,oCAAoC;AACvD,OAAOC,aAAa,MAAM,wCAAwC;AAClE,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,wBAAwB,MAAM,+BAA+B;AAEpE,IAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAI;AAC1B,IAAMC,MAAM,GAAG;EACXA,MAAM,EAAE;AACZ,CAAC;AACD,IAAMC,QAAQ,GAAG;EACbC,KAAK,EAAE;AACX,CAAC;AACD,IAAIC,OAAO;AAAC,IAENC,sBAAsB;EAAA;EAAA;EAExB,gCAAYC,KAAK,EAAE;IAAA;IAAA;IACf,0BAAMA,KAAK;IAAE,MAejBC,OAAO,GAAG,YAAM;MACZvB,cAAc,CAAC,qDAAqD,EAAE,CAAC,CAAC,CAAC,CACpEwB,IAAI,CACL,UAAUC,QAAQ,EAAE;QAAA;QAChB,IAAIA,QAAQ,CAACC,KAAK,IAAI,IAAI,EAAE;UACxBN,OAAO,CAACO,QAAQ,CAAC;YAAEC,OAAO,EAAE;UAAM,CAAC,CAAC;UACpC,IAAIH,QAAQ,CAACC,KAAK,IAAI,IAAI,EAAE;YACxB,IAAIG,KAAK,GAAG,EAAE;YACd,IAAMC,0BAA0B,GAAGL,QAAQ,CAACC,KAAK;YACjD,IAAMK,WAAW,GAAGX,OAAO,CAACE,KAAK,CAACS,WAAW;YAC7C,IAAMC,QAAQ,GAAG3B,eAAe,CAAC0B,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC;YAAC;cAGpD,IAAME,uBAAuB,GAAGH,0BAA0B,CAACI,CAAC,CAAC,CAACD,uBAAuB;cACrF,IAAME,QAAQ,gBAAG;gBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAA,GACZH,QAAQ,IAAI,CAAC,gBAAG,oBAAC,iBAAiB;gBAC3B,OAAO,EAAC,UAAU;gBAClB,KAAK,EAAC,QAAQ;gBACd,SAAS,EAAC,sBAAsB;gBAChC,IAAI,EAAC,OAAO;gBACZ,KAAK,GAAEf,MAAM,EAACC,QAAQ,CAAC;gBACvB,OAAO,EAAE;kBAAA,OAAME,OAAO,CAACgB,0BAA0B,CAACH,uBAAuB,CAAC;gBAAA,CAAC;gBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAA,EACjF,GAAG,EAAE,eACP;gBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAA,GAAOb,OAAO,CAACiB,WAAW,CAACP,0BAA0B,CAACI,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAQ,CACxE;cAEN,IAAMC,QAAQ,gBAAG;gBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAA,GACZP,QAAQ,IAAI,CAAC,gBAAG,oBAAC,iBAAiB;gBAC/B,OAAO,EAAEA,QAAQ,IAAI,CAAC,GAAG,MAAM,GAAG,MAAO;gBACzC,KAAK,EAAC,QAAQ;gBACd,SAAS,EAAC,YAAY;gBACtB,IAAI,EAAC,OAAO;gBACZ,KAAK,EAAEf,MAAO;gBACd,OAAO,EAAE;kBAAA,OAAMG,OAAO,CAACoB,yBAAyB,CAACP,uBAAuB,CAAC;gBAAA,CAAC;gBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAA,EAC5E,GAAG,EAAE,EAEND,QAAQ,IAAI,CAAC,gBAAG,oBAAC,iBAAiB;gBAC3B,OAAO,EAAC,QAAQ;gBAChB,KAAK,EAAC,QAAQ;gBACd,SAAS,EAAC,kBAAkB;gBAC5B,IAAI,EAAC,OAAO;gBACZ,KAAK,EAAEf,MAAO;gBACd,OAAO,EAAE;kBAAA,OAAMG,OAAO,CAACqB,2BAA2B,CAACR,uBAAuB,CAAC;gBAAA,CAAC;gBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAA,EAClF,GAAG,EAAE,CAEL;cACNJ,KAAK,CAACa,IAAI,CAAC;gBACPC,GAAG,EAAEb,0BAA0B,CAACI,CAAC,CAAC,CAACD,uBAAuB;gBAC1DW,YAAY,EAAEd,0BAA0B,CAACI,CAAC,CAAC,CAACU,YAAY;gBACxDC,aAAa,EAAEf,0BAA0B,CAACI,CAAC,CAAC,CAACY,iBAAiB;gBAC9DC,QAAQ,EAAEZ,QAAQ;gBAClBa,YAAY,EAAElB,0BAA0B,CAACI,CAAC,CAAC,CAACe,gBAAgB;gBAC5DC,OAAO,EAAEX;cACb,CAAC,CAAC;YAAC;YA1CP,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,0BAA0B,CAACqB,MAAM,EAAEjB,CAAC,EAAE,EAAE;cAAA;YA2C5D;YACAd,OAAO,CAACO,QAAQ,CAAC;cAAEyB,UAAU,EAAEvB,KAAK;cAAED,OAAO,EAAE;YAAM,CAAC,CAAC;UAC3D;QACJ,CAAC,MACI;UACDR,OAAO,CAACO,QAAQ,CAAC;YAAEyB,UAAU,EAAE,EAAE;YAAExB,OAAO,EAAE;UAAM,CAAC,CAAC;QACxD;MACJ,CAAC,CAAC;IACV,CAAC;IAAA,MACDQ,0BAA0B,GAAG,UAACiB,MAAM,EAAK;MACrC,IAAIN,QAAQ,GAAG,EAAE;MACjB,MAAKO,KAAK,CAACF,UAAU,CAACG,GAAG,CAAC,UAAUC,MAAM,EAAEC,IAAI,EAAE;QAC9C,IAAID,MAAM,CAACb,GAAG,KAAKU,MAAM,EAAE;UACvBN,QAAQ,GAAGS,MAAM,CAACT,QAAQ,CAACzB,KAAK,CAACoC,QAAQ,CAAC,CAAC,CAAC,CAACpC,KAAK,CAACoC,QAAQ;QAC/D;MACJ,CAAC,CAAC;MACFtD,wBAAwB,CAAC,0CAA0C,EAAE2C,QAAQ,EAAE;QAAEY,uBAAuB,EAAEN;MAAO,CAAC,CAAC;IACvH,CAAC;IAAA,MACDhB,WAAW,GAAG,UAACuB,OAAO,EAAK;MACvB,IAAIC,UAAU,GAAGD,OAAO;MACxB,IAAIvB,WAAW,GAAGwB,UAAU,CAACC,KAAK,CAAC,SAAU,EAAE,CAAC,CAAC;MACjD,OAAOzB,WAAW,CAAC,CAAC,CAAC,CAAC0B,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC5C,CAAC;IAAA,MACDC,wBAAwB,GAAG,YAAM;MAC7B,MAAKrC,QAAQ,CAAC;QAAEsC,KAAK,EAAE,4BAA4B;QAAEC,iCAAiC,EAAE,IAAI;QAAEC,MAAM,EAAE,QAAQ;QAAElC,uBAAuB,EAAE;MAAE,CAAC,CAAC;IAEjJ,CAAC;IAAA,MACDmC,oCAAoC,GAAG,YAAM;MACzChD,OAAO,CAACG,OAAO,CAACH,OAAO,CAACE,KAAK,CAAC;MAC9B,MAAKK,QAAQ,CAAC;QAAEwC,MAAM,EAAE,EAAE;QAAED,iCAAiC,EAAE;MAAM,CAAC,CAAC;IAC3E,CAAC;IAAA,MACDG,qCAAqC,GAAG,YAAM;MAC1CjD,OAAO,CAACG,OAAO,CAACH,OAAO,CAACE,KAAK,CAAC;MAC9B,MAAKK,QAAQ,CAAC;QAAEwC,MAAM,EAAE,EAAE;QAAEG,kCAAkC,EAAE;MAAM,CAAC,CAAC;IAC5E,CAAC;IAAA,MAED9B,yBAAyB,GAAG,UAACP,uBAAuB,EAAK;MACrD,MAAKN,QAAQ,CAAC;QAAEsC,KAAK,EAAE,6BAA6B;QAAEC,iCAAiC,EAAE,IAAI;QAAEC,MAAM,EAAE,QAAQ;QAAElC,uBAAuB,EAAEA;MAAwB,CAAC,CAAC;IACxK,CAAC;IAAA,MAEDQ,2BAA2B,GAAG,UAACR,uBAAuB,EAAK;MAEvD,MAAKN,QAAQ,CAAC;QAAE4C,2BAA2B,EAAE,IAAI;QAAEJ,MAAM,EAAE,QAAQ;QAAElC,uBAAuB,EAAEA;MAAwB,CAAC,CAAC;IAC5H,CAAC;IAAA,MAEDuC,YAAY,GAAG,UAACC,YAAY,EAAK;MAC7B,IAAMrD,OAAO,gCAAO;MACpB,IAAIoC,MAAM,GAAG,CAAC,CAAC;MACfpC,OAAO,CAACO,QAAQ,CAAC;QAAE+C,SAAS,EAAE;MAAK,CAAC,CAAC;MACrClB,MAAM,CAAC,yBAAyB,CAAC,GAAGpC,OAAO,CAACkC,KAAK,CAACrB,uBAAuB;MACzEuB,MAAM,CAAC,cAAc,CAAC,GAAGiB,YAAY;MAErCvE,gBAAgB,CAAC,+BAA+B,EAAEsD,MAAM,CAAC,CACpDhC,IAAI,CACL,UAAUC,QAAQ,EAAE;QAChBL,OAAO,CAACO,QAAQ,CAAC;UAAE+C,SAAS,EAAE;QAAM,CAAC,CAAC;QACtC,IAAIjD,QAAQ,CAACkD,MAAM,IAAI,CAAC,EAAE;UACtBvD,OAAO,CAACO,QAAQ,CAAC;YAAE4C,2BAA2B,EAAE;UAAM,CAAC,CAAC;UACxDpE,oBAAoB,CAACsB,QAAQ,CAACmD,OAAO,EAAExD,OAAO,CAACyD,6BAA6B,CAAC;QACjF,CAAC,MAAM;UACHzD,OAAO,CAACO,QAAQ,CAAC;YAAE4C,2BAA2B,EAAE;UAAM,CAAC,CAAC;UACxDtE,UAAU,CAACwB,QAAQ,CAACmD,OAAO,CAAC;QAChC;MACJ,CAAC,CAAC,CAACE,KAAK,CAAC,UAAAC,KAAK;QAAA,OAAIA,KAAK;MAAA,EAAC;IAEhC,CAAC;IAAA,MACDF,6BAA6B,GAAG,YAAM;MAClCzD,OAAO,CAAC4D,mCAAmC,EAAE;MAC7C5D,OAAO,CAACG,OAAO,EAAE;MACjBH,OAAO,CAACO,QAAQ,CAAC;QAAEwC,MAAM,EAAE,EAAE;QAAED,iCAAiC,EAAE,KAAK;QAAEQ,SAAS,EAAE;MAAM,CAAC,CAAC;IAChG,CAAC;IAAA,MACDM,mCAAmC,GAAG,YAAM;MACxC,MAAKrD,QAAQ,CAAC;QAAE4C,2BAA2B,EAAE;MAAM,CAAC,CAAC;MACrD,MAAKjD,KAAK,CAAC2D,IAAI,CAACC,WAAW,CAAC,CAAC,eAAe,CAAC,CAAC;IAClD,CAAC;IA9IG,MAAKlB,wBAAwB,GAAG,MAAKA,wBAAwB,CAACmB,IAAI,+BAAM;IACxE,MAAK7B,KAAK,GAAG;MACTF,UAAU,EAAE,EAAE;MACda,KAAK,EAAE,IAAI;MACXC,iCAAiC,EAAE,KAAK;MACxCI,kCAAkC,EAAE,KAAK;MACzCC,2BAA2B,EAAE,KAAK;MAClCtC,uBAAuB,EAAE,CAAC;MAC1BkC,MAAM,EAAE,EAAE;MACVO,SAAS,EAAE;IACf,CAAC;IACDtD,OAAO,gCAAO;IACdA,OAAO,CAACG,OAAO,EAAE;IAAC;EACtB;EAAC;IAAA;IAAA,OAmID,kBAAS;MACL,IAAQ6D,iBAAiB,GAAK,IAAI,CAAC9D,KAAK,CAAC2D,IAAI,CAArCG,iBAAiB;MACzB,kBAAsI,IAAI,CAAC9B,KAAK;QAAxIY,iCAAiC,eAAjCA,iCAAiC;QAAEI,kCAAkC,eAAlCA,kCAAkC;QAAEH,MAAM,eAANA,MAAM;QAAElC,uBAAuB,eAAvBA,uBAAuB;QAAEgC,KAAK,eAALA,KAAK;QAAEb,UAAU,eAAVA,UAAU;MACjI,IAAMrB,WAAW,GAAG,IAAI,CAACT,KAAK,CAACS,WAAW;MAC1C,IAAMsD,OAAO,GAAG,CACZ;QACIpB,KAAK,EAAE,eAAe;QACtBqB,SAAS,EAAE,cAAc;QACzB3C,GAAG,EAAE,cAAc;QACnB4C,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,gBAACC,CAAC,EAAEC,CAAC;UAAA,OAAK9E,YAAY,CAAC6E,CAAC,EAAEC,CAAC,EAAE,cAAc,CAAC;QAAA;MACxD,CAAC,EACD;QACIzB,KAAK,EAAE,gBAAgB;QACvBqB,SAAS,EAAE,eAAe;QAC1B3C,GAAG,EAAE,eAAe;QACpB4C,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,gBAACC,CAAC,EAAEC,CAAC;UAAA,OAAK9E,YAAY,CAAC6E,CAAC,EAAEC,CAAC,EAAE,eAAe,CAAC;QAAA;MACzD,CAAC,EACD;QACIzB,KAAK,EAAE,WAAW;QAClBqB,SAAS,EAAE,UAAU;QACrB3C,GAAG,EAAE,UAAU;QACf4C,KAAK,EAAE;QACP;MACJ,CAAC,EACD;QACItB,KAAK,EAAE,gBAAgB;QACvBqB,SAAS,EAAE,cAAc;QACzB3C,GAAG,EAAE,cAAc;QACnB4C,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,gBAACC,CAAC,EAAEC,CAAC;UAAA,OAAK9E,YAAY,CAAC6E,CAAC,EAAEC,CAAC,EAAE,cAAc,CAAC;QAAA;MACxD,CAAC,EACD;QACIzB,KAAK,EAAE,SAAS;QAChBqB,SAAS,EAAE,SAAS;QACpB3C,GAAG,EAAE,SAAS;QACd4C,KAAK,EAAE;MACX,CAAC,CACJ;MAED,oBAEI,oBAAC,oBAAoB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACjB,oBAAC,UAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACP,oBAAC,UAAU,CAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACZ;QAAG,SAAS,EAAC,iBAAiB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAM,eACpC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,8BAAqC,CACvB,eAClB,oBAAC,UAAU,CAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UAEE,CACT,eAEb,oBAAC,aAAa;QAAC,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAW,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAE5C,oBAAC,UAAU;QACP,OAAO,EAAEN,OAAQ;QACjB,UAAU,EAAEjC,UAAW;QACvB,SAAS,EAAE/C,eAAe,CAAC0B,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAACiC,wBAAwB,GAAG,IAAK;QAC9F,MAAM,EAAE;UAAE4B,CAAC,EAAE;QAAsB,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACvC,EACD,CAACzB,MAAM,IAAI,QAAQ,IAAIA,MAAM,IAAI,QAAQ,kBAAK,oBAAC,wBAAwB;QAAC,WAAW,EAAEpC,WAAY;QAAC,QAAQ,EAAE1B,eAAe,CAAC0B,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAE;QAAC,OAAO,EAAEmC,iCAAkC;QAAC,KAAK,EAAED,KAAM;QAAC,YAAY,EAAE,IAAI,CAACG,oCAAqC;QAAC,uBAAuB,EAAEnC,uBAAwB;QAAC,MAAM,EAAEkC,MAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,EAC/UA,MAAM,IAAI,QAAQ,iBAAK,oBAAC,YAAY;QAAC,KAAK,EAAC,+BAA+B;QAAC,OAAO,EAAE,IAAI,CAAC7C,KAAK,CAACuE,OAAQ;QAAC,gBAAgB,EAAC,QAAQ;QAAC,QAAQ,EAAE,IAAI,CAACrB,YAAa;QAAC,OAAO,EAAE,IAAI,CAAClB,KAAK,CAACiB,2BAA4B;QAAC,YAAY,EAAE,IAAI,CAACS,mCAAoC;QAAC,iBAAiB,EAAEI,iBAAkB;QAAC,OAAO,EAAE,IAAI,CAAC9B,KAAK,CAACoB,SAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAErU,CAEG;IAG/B;EAAC;EAAA;AAAA,EA1NgC5E,SAAS;AA8N9C,IAAMgG,UAAU,GAAGvF,IAAI,CAACwF,MAAM,EAAE,CAAC1E,sBAAsB,CAAC;AACxD,eAAeyE,UAAU"},"metadata":{},"sourceType":"module"}