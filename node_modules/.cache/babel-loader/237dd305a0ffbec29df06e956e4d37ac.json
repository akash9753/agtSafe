{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\nvar ModelRawFlush = /** @class */function () {\n  function ModelRawFlush() {\n    this.changeType = 1 /* Flush */;\n  }\n\n  return ModelRawFlush;\n}();\nexport { ModelRawFlush };\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\nvar ModelRawLineChanged = /** @class */function () {\n  function ModelRawLineChanged(lineNumber, detail) {\n    this.changeType = 2 /* LineChanged */;\n    this.lineNumber = lineNumber;\n    this.detail = detail;\n  }\n  return ModelRawLineChanged;\n}();\nexport { ModelRawLineChanged };\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\nvar ModelRawLinesDeleted = /** @class */function () {\n  function ModelRawLinesDeleted(fromLineNumber, toLineNumber) {\n    this.changeType = 3 /* LinesDeleted */;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n  }\n  return ModelRawLinesDeleted;\n}();\nexport { ModelRawLinesDeleted };\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\nvar ModelRawLinesInserted = /** @class */function () {\n  function ModelRawLinesInserted(fromLineNumber, toLineNumber, detail) {\n    this.changeType = 4 /* LinesInserted */;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n    this.detail = detail;\n  }\n  return ModelRawLinesInserted;\n}();\nexport { ModelRawLinesInserted };\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\nvar ModelRawEOLChanged = /** @class */function () {\n  function ModelRawEOLChanged() {\n    this.changeType = 5 /* EOLChanged */;\n  }\n\n  return ModelRawEOLChanged;\n}();\nexport { ModelRawEOLChanged };\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\nvar ModelRawContentChangedEvent = /** @class */function () {\n  function ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing) {\n    this.changes = changes;\n    this.versionId = versionId;\n    this.isUndoing = isUndoing;\n    this.isRedoing = isRedoing;\n  }\n  ModelRawContentChangedEvent.prototype.containsEvent = function (type) {\n    for (var i = 0, len = this.changes.length; i < len; i++) {\n      var change = this.changes[i];\n      if (change.changeType === type) {\n        return true;\n      }\n    }\n    return false;\n  };\n  ModelRawContentChangedEvent.merge = function (a, b) {\n    var changes = [].concat(a.changes).concat(b.changes);\n    var versionId = b.versionId;\n    var isUndoing = a.isUndoing || b.isUndoing;\n    var isRedoing = a.isRedoing || b.isRedoing;\n    return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\n  };\n  return ModelRawContentChangedEvent;\n}();\nexport { ModelRawContentChangedEvent };\n/**\r\n * @internal\r\n */\nvar InternalModelContentChangeEvent = /** @class */function () {\n  function InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent) {\n    this.rawContentChangedEvent = rawContentChangedEvent;\n    this.contentChangedEvent = contentChangedEvent;\n  }\n  InternalModelContentChangeEvent.prototype.merge = function (other) {\n    var rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\n    var contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\n    return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\n  };\n  InternalModelContentChangeEvent._mergeChangeEvents = function (a, b) {\n    var changes = [].concat(a.changes).concat(b.changes);\n    var eol = b.eol;\n    var versionId = b.versionId;\n    var isUndoing = a.isUndoing || b.isUndoing;\n    var isRedoing = a.isRedoing || b.isRedoing;\n    var isFlush = a.isFlush || b.isFlush;\n    return {\n      changes: changes,\n      eol: eol,\n      versionId: versionId,\n      isUndoing: isUndoing,\n      isRedoing: isRedoing,\n      isFlush: isFlush\n    };\n  };\n  return InternalModelContentChangeEvent;\n}();\nexport { InternalModelContentChangeEvent };","map":{"version":3,"names":["ModelRawFlush","changeType","ModelRawLineChanged","lineNumber","detail","ModelRawLinesDeleted","fromLineNumber","toLineNumber","ModelRawLinesInserted","ModelRawEOLChanged","ModelRawContentChangedEvent","changes","versionId","isUndoing","isRedoing","prototype","containsEvent","type","i","len","length","change","merge","a","b","concat","InternalModelContentChangeEvent","rawContentChangedEvent","contentChangedEvent","other","_mergeChangeEvents","eol","isFlush"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/model/textModelEvents.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\r\nvar ModelRawFlush = /** @class */ (function () {\r\n    function ModelRawFlush() {\r\n        this.changeType = 1 /* Flush */;\r\n    }\r\n    return ModelRawFlush;\r\n}());\r\nexport { ModelRawFlush };\r\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\r\nvar ModelRawLineChanged = /** @class */ (function () {\r\n    function ModelRawLineChanged(lineNumber, detail) {\r\n        this.changeType = 2 /* LineChanged */;\r\n        this.lineNumber = lineNumber;\r\n        this.detail = detail;\r\n    }\r\n    return ModelRawLineChanged;\r\n}());\r\nexport { ModelRawLineChanged };\r\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\r\nvar ModelRawLinesDeleted = /** @class */ (function () {\r\n    function ModelRawLinesDeleted(fromLineNumber, toLineNumber) {\r\n        this.changeType = 3 /* LinesDeleted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n    }\r\n    return ModelRawLinesDeleted;\r\n}());\r\nexport { ModelRawLinesDeleted };\r\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\r\nvar ModelRawLinesInserted = /** @class */ (function () {\r\n    function ModelRawLinesInserted(fromLineNumber, toLineNumber, detail) {\r\n        this.changeType = 4 /* LinesInserted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n        this.detail = detail;\r\n    }\r\n    return ModelRawLinesInserted;\r\n}());\r\nexport { ModelRawLinesInserted };\r\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\r\nvar ModelRawEOLChanged = /** @class */ (function () {\r\n    function ModelRawEOLChanged() {\r\n        this.changeType = 5 /* EOLChanged */;\r\n    }\r\n    return ModelRawEOLChanged;\r\n}());\r\nexport { ModelRawEOLChanged };\r\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\r\nvar ModelRawContentChangedEvent = /** @class */ (function () {\r\n    function ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing) {\r\n        this.changes = changes;\r\n        this.versionId = versionId;\r\n        this.isUndoing = isUndoing;\r\n        this.isRedoing = isRedoing;\r\n    }\r\n    ModelRawContentChangedEvent.prototype.containsEvent = function (type) {\r\n        for (var i = 0, len = this.changes.length; i < len; i++) {\r\n            var change = this.changes[i];\r\n            if (change.changeType === type) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ModelRawContentChangedEvent.merge = function (a, b) {\r\n        var changes = [].concat(a.changes).concat(b.changes);\r\n        var versionId = b.versionId;\r\n        var isUndoing = (a.isUndoing || b.isUndoing);\r\n        var isRedoing = (a.isRedoing || b.isRedoing);\r\n        return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\r\n    };\r\n    return ModelRawContentChangedEvent;\r\n}());\r\nexport { ModelRawContentChangedEvent };\r\n/**\r\n * @internal\r\n */\r\nvar InternalModelContentChangeEvent = /** @class */ (function () {\r\n    function InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent) {\r\n        this.rawContentChangedEvent = rawContentChangedEvent;\r\n        this.contentChangedEvent = contentChangedEvent;\r\n    }\r\n    InternalModelContentChangeEvent.prototype.merge = function (other) {\r\n        var rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\r\n        var contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\r\n        return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\r\n    };\r\n    InternalModelContentChangeEvent._mergeChangeEvents = function (a, b) {\r\n        var changes = [].concat(a.changes).concat(b.changes);\r\n        var eol = b.eol;\r\n        var versionId = b.versionId;\r\n        var isUndoing = (a.isUndoing || b.isUndoing);\r\n        var isRedoing = (a.isRedoing || b.isRedoing);\r\n        var isFlush = (a.isFlush || b.isFlush);\r\n        return {\r\n            changes: changes,\r\n            eol: eol,\r\n            versionId: versionId,\r\n            isUndoing: isUndoing,\r\n            isRedoing: isRedoing,\r\n            isFlush: isFlush\r\n        };\r\n    };\r\n    return InternalModelContentChangeEvent;\r\n}());\r\nexport { InternalModelContentChangeEvent };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}