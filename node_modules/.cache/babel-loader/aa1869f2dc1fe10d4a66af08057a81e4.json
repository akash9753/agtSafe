{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = typeof monaco === 'undefined' ? self.monaco : monaco;\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: ['<!--', '-->']\n  },\n  brackets: [['<!--', '-->'], ['<', '>'], ['{', '}'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '<',\n    close: '>'\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n    action: {\n      indentAction: _monaco.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    action: {\n      indentAction: _monaco.languages.IndentAction.Indent\n    }\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '',\n  // ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/@@/], [/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.root'\n    }], [/<!DOCTYPE/, 'metatag.html', '@doctype'], [/<!--/, 'comment.html', '@comment'], [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']], [/(<)(script)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@script'\n    }]], [/(<)(style)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@style'\n    }]], [/(<)([:\\w]+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/(<\\/)(\\w+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/</, 'delimiter.html'], [/[ \\t\\r\\n]+/], [/[^<@]+/]],\n    doctype: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.comment'\n    }], [/[^>]+/, 'metatag.content.html'], [/>/, 'metatag.html', '@pop']],\n    comment: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.comment'\n    }], [/-->/, 'comment.html', '@pop'], [/[^-]+/, 'comment.content.html'], [/./, 'comment.content.html']],\n    otherTag: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.otherTag'\n    }], [/\\/?>/, 'delimiter.html', '@pop'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/]],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.script'\n    }], [/type/, 'attribute.name', '@scriptAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.scriptAfterType'\n    }], [/=/, 'delimiter', '@scriptAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.scriptAfterTypeEquals'\n    }], [/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.scriptWithCustomType.$S2'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    scriptEmbedded: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInEmbeddedState.scriptEmbedded.$S2',\n      nextEmbedded: '@pop'\n    }], [/<\\/script/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }]],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.style'\n    }], [/type/, 'attribute.name', '@styleAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.styleAfterType'\n    }], [/=/, 'delimiter', '@styleAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.styleAfterTypeEquals'\n    }], [/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInSimpleState.styleWithCustomType.$S2'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    styleEmbedded: [[/@[^@]/, {\n      token: '@rematch',\n      switchTo: '@razorInEmbeddedState.styleEmbedded.$S2',\n      nextEmbedded: '@pop'\n    }], [/<\\/style/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }]],\n    // -- END <style> tags handling\n    razorInSimpleState: [[/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'], [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'], [/(@)(\\s*[\\w]+)/, ['metatag.cs', {\n      token: 'identifier.cs',\n      switchTo: '@$S2.$S3'\n    }]], [/[})]/, {\n      token: 'metatag.cs',\n      switchTo: '@$S2.$S3'\n    }], [/\\*@/, {\n      token: 'comment.cs',\n      switchTo: '@$S2.$S3'\n    }]],\n    razorInEmbeddedState: [[/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'], [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'], [/(@)(\\s*[\\w]+)/, ['metatag.cs', {\n      token: 'identifier.cs',\n      switchTo: '@$S2.$S3',\n      nextEmbedded: '$S3'\n    }]], [/[})]/, {\n      token: 'metatag.cs',\n      switchTo: '@$S2.$S3',\n      nextEmbedded: '$S3'\n    }], [/\\*@/, {\n      token: 'comment.cs',\n      switchTo: '@$S2.$S3',\n      nextEmbedded: '$S3'\n    }]],\n    razorBlockCommentTopLevel: [[/\\*@/, '@rematch', '@pop'], [/[^*]+/, 'comment.cs'], [/./, 'comment.cs']],\n    razorBlockComment: [[/\\*@/, 'comment.cs', '@pop'], [/[^*]+/, 'comment.cs'], [/./, 'comment.cs']],\n    razorRootTopLevel: [[/\\{/, 'delimiter.bracket.cs', '@razorRoot'], [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'], [/[})]/, '@rematch', '@pop'], {\n      include: 'razorCommon'\n    }],\n    razorRoot: [[/\\{/, 'delimiter.bracket.cs', '@razorRoot'], [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'], [/\\}/, 'delimiter.bracket.cs', '@pop'], [/\\)/, 'delimiter.parenthesis.cs', '@pop'], {\n      include: 'razorCommon'\n    }],\n    razorCommon: [[/[a-zA-Z_]\\w*/, {\n      cases: {\n        '@razorKeywords': {\n          token: 'keyword.cs'\n        },\n        '@default': 'identifier.cs'\n      }\n    }],\n    // brackets\n    [/[\\[\\]]/, 'delimiter.array.cs'],\n    // whitespace\n    [/[ \\t\\r\\n]+/],\n    // comments\n    [/\\/\\/.*$/, 'comment.cs'], [/@\\*/, 'comment.cs', '@razorBlockComment'],\n    // strings\n    [/\"([^\"]*)\"/, 'string.cs'], [/'([^']*)'/, 'string.cs'],\n    // simple html\n    [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']], [/(<)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']], [/(<\\/)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n    // delimiters\n    [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,]/, 'delimiter.cs'],\n    // numbers\n    [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.cs'], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.cs'], [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.cs'], [/0[0-7']*[0-7]/, 'number.octal.cs'], [/0[bB][0-1']*[0-1]/, 'number.binary.cs'], [/\\d[\\d']*/, 'number.cs'], [/\\d/, 'number.cs']]\n  },\n  razorKeywords: ['abstract', 'as', 'async', 'await', 'base', 'bool', 'break', 'by', 'byte', 'case', 'catch', 'char', 'checked', 'class', 'const', 'continue', 'decimal', 'default', 'delegate', 'do', 'double', 'descending', 'explicit', 'event', 'extern', 'else', 'enum', 'false', 'finally', 'fixed', 'float', 'for', 'foreach', 'from', 'goto', 'group', 'if', 'implicit', 'in', 'int', 'interface', 'internal', 'into', 'is', 'lock', 'long', 'nameof', 'new', 'null', 'namespace', 'object', 'operator', 'out', 'override', 'orderby', 'params', 'private', 'protected', 'public', 'readonly', 'ref', 'return', 'switch', 'struct', 'sbyte', 'sealed', 'short', 'sizeof', 'stackalloc', 'static', 'string', 'select', 'this', 'throw', 'true', 'try', 'typeof', 'uint', 'ulong', 'unchecked', 'unsafe', 'ushort', 'using', 'var', 'virtual', 'volatile', 'void', 'when', 'while', 'where', 'yield', 'model', 'inject' // Razor specific\n  ],\n\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\n};","map":{"version":3,"names":["_monaco","monaco","self","EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","razorInSimpleState","razorInEmbeddedState","razorBlockCommentTopLevel","razorBlockComment","razorRootTopLevel","include","razorRoot","razorCommon","cases","razorKeywords","escapes"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n// Allow for running under nodejs/requirejs in tests\r\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\r\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['<!--', '-->']\r\n    },\r\n    brackets: [\r\n        ['<!--', '-->'],\r\n        ['<', '>'],\r\n        ['{', '}'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '<', close: '>' }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\r\n        },\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\r\n        }\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    // ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/@@/],\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.root' }],\r\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\r\n            [/<!--/, 'comment.html', '@comment'],\r\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\r\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/</, 'delimiter.html'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/[^<@]+/],\r\n        ],\r\n        doctype: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.comment' }],\r\n            [/[^>]+/, 'metatag.content.html'],\r\n            [/>/, 'metatag.html', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.comment' }],\r\n            [/-->/, 'comment.html', '@pop'],\r\n            [/[^-]+/, 'comment.content.html'],\r\n            [/./, 'comment.content.html']\r\n        ],\r\n        otherTag: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.otherTag' }],\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.script' }],\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptAfterType' }],\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.style' }],\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleAfterType' }],\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <style> tags handling\r\n        razorInSimpleState: [\r\n            [/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'],\r\n            [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'],\r\n            [/(@)(\\s*[\\w]+)/, ['metatag.cs', { token: 'identifier.cs', switchTo: '@$S2.$S3' }]],\r\n            [/[})]/, { token: 'metatag.cs', switchTo: '@$S2.$S3' }],\r\n            [/\\*@/, { token: 'comment.cs', switchTo: '@$S2.$S3' }],\r\n        ],\r\n        razorInEmbeddedState: [\r\n            [/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'],\r\n            [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'],\r\n            [/(@)(\\s*[\\w]+)/, ['metatag.cs', { token: 'identifier.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }]],\r\n            [/[})]/, { token: 'metatag.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\r\n            [/\\*@/, { token: 'comment.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\r\n        ],\r\n        razorBlockCommentTopLevel: [\r\n            [/\\*@/, '@rematch', '@pop'],\r\n            [/[^*]+/, 'comment.cs'],\r\n            [/./, 'comment.cs']\r\n        ],\r\n        razorBlockComment: [\r\n            [/\\*@/, 'comment.cs', '@pop'],\r\n            [/[^*]+/, 'comment.cs'],\r\n            [/./, 'comment.cs']\r\n        ],\r\n        razorRootTopLevel: [\r\n            [/\\{/, 'delimiter.bracket.cs', '@razorRoot'],\r\n            [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'],\r\n            [/[})]/, '@rematch', '@pop'],\r\n            { include: 'razorCommon' }\r\n        ],\r\n        razorRoot: [\r\n            [/\\{/, 'delimiter.bracket.cs', '@razorRoot'],\r\n            [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'],\r\n            [/\\}/, 'delimiter.bracket.cs', '@pop'],\r\n            [/\\)/, 'delimiter.parenthesis.cs', '@pop'],\r\n            { include: 'razorCommon' }\r\n        ],\r\n        razorCommon: [\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@razorKeywords': { token: 'keyword.cs' },\r\n                        '@default': 'identifier.cs'\r\n                    }\r\n                }],\r\n            // brackets\r\n            [/[\\[\\]]/, 'delimiter.array.cs'],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/],\r\n            // comments\r\n            [/\\/\\/.*$/, 'comment.cs'],\r\n            [/@\\*/, 'comment.cs', '@razorBlockComment'],\r\n            // strings\r\n            [/\"([^\"]*)\"/, 'string.cs'],\r\n            [/'([^']*)'/, 'string.cs'],\r\n            // simple html\r\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<\\/)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            // delimiters\r\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,]/, 'delimiter.cs'],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.cs'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.cs'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.cs'],\r\n            [/0[0-7']*[0-7]/, 'number.octal.cs'],\r\n            [/0[bB][0-1']*[0-1]/, 'number.binary.cs'],\r\n            [/\\d[\\d']*/, 'number.cs'],\r\n            [/\\d/, 'number.cs'],\r\n        ]\r\n    },\r\n    razorKeywords: [\r\n        'abstract', 'as', 'async', 'await', 'base', 'bool',\r\n        'break', 'by', 'byte', 'case',\r\n        'catch', 'char', 'checked', 'class',\r\n        'const', 'continue', 'decimal', 'default',\r\n        'delegate', 'do', 'double', 'descending',\r\n        'explicit', 'event', 'extern', 'else',\r\n        'enum', 'false', 'finally', 'fixed',\r\n        'float', 'for', 'foreach', 'from',\r\n        'goto', 'group', 'if', 'implicit',\r\n        'in', 'int', 'interface', 'internal',\r\n        'into', 'is', 'lock', 'long', 'nameof',\r\n        'new', 'null', 'namespace', 'object',\r\n        'operator', 'out', 'override', 'orderby',\r\n        'params', 'private', 'protected', 'public',\r\n        'readonly', 'ref', 'return', 'switch',\r\n        'struct', 'sbyte', 'sealed', 'short',\r\n        'sizeof', 'stackalloc', 'static', 'string',\r\n        'select', 'this', 'throw', 'true',\r\n        'try', 'typeof', 'uint', 'ulong',\r\n        'unchecked', 'unsafe', 'ushort', 'using',\r\n        'var', 'virtual', 'volatile', 'void', 'when',\r\n        'while', 'where', 'yield',\r\n        'model', 'inject' // Razor specific\r\n    ],\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}