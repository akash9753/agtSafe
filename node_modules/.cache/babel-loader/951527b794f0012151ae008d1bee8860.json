{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar SCSSIssueType = /** @class */function () {\n  function SCSSIssueType(id, message) {\n    this.id = id;\n    this.message = message;\n  }\n  return SCSSIssueType;\n}();\nexport { SCSSIssueType };\nexport var SCSSParseError = {\n  FromExpected: new SCSSIssueType('scss-fromexpected', localize('expected.from', \"'from' expected\")),\n  ThroughOrToExpected: new SCSSIssueType('scss-throughexpected', localize('expected.through', \"'through' or 'to' expected\")),\n  InExpected: new SCSSIssueType('scss-fromexpected', localize('expected.in', \"'in' expected\"))\n};","map":{"version":3,"names":["nls","localize","loadMessageBundle","SCSSIssueType","id","message","SCSSParseError","FromExpected","ThroughOrToExpected","InExpected"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar SCSSIssueType = /** @class */ (function () {\n    function SCSSIssueType(id, message) {\n        this.id = id;\n        this.message = message;\n    }\n    return SCSSIssueType;\n}());\nexport { SCSSIssueType };\nexport var SCSSParseError = {\n    FromExpected: new SCSSIssueType('scss-fromexpected', localize('expected.from', \"'from' expected\")),\n    ThroughOrToExpected: new SCSSIssueType('scss-throughexpected', localize('expected.through', \"'through' or 'to' expected\")),\n    InExpected: new SCSSIssueType('scss-fromexpected', localize('expected.in', \"'in' expected\")),\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZ,OAAO,KAAKA,GAAG,MAAM,kCAAkC;AACvD,IAAIC,QAAQ,GAAGD,GAAG,CAACE,iBAAiB,EAAE;AACtC,IAAIC,aAAa,GAAG,aAAe,YAAY;EAC3C,SAASA,aAAa,CAACC,EAAE,EAAEC,OAAO,EAAE;IAChC,IAAI,CAACD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EACA,OAAOF,aAAa;AACxB,CAAC,EAAG;AACJ,SAASA,aAAa;AACtB,OAAO,IAAIG,cAAc,GAAG;EACxBC,YAAY,EAAE,IAAIJ,aAAa,CAAC,mBAAmB,EAAEF,QAAQ,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;EAClGO,mBAAmB,EAAE,IAAIL,aAAa,CAAC,sBAAsB,EAAEF,QAAQ,CAAC,kBAAkB,EAAE,4BAA4B,CAAC,CAAC;EAC1HQ,UAAU,EAAE,IAAIN,aAAa,CAAC,mBAAmB,EAAEF,QAAQ,CAAC,aAAa,EAAE,eAAe,CAAC;AAC/F,CAAC"},"metadata":{},"sourceType":"module"}