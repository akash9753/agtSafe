{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Program\\\\Blockly\\\\BlocklyComponent.js\";\nvar _excluded = [\"initialXml\", \"fnTargetVariable\", \"children\", \"SourceFieldClick\", \"TargetFieldClick\"];\n/**\r\n * @license\r\n * \r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Blockly React Component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\n\nimport React from 'react';\nimport './BlocklyComponent.css';\nimport Blockly from 'blockly/core';\nimport locale from 'blockly/msg/en';\nimport 'blockly/blocks';\nimport { element } from 'prop-types';\nBlockly.setLocale(locale);\nvar thisObj = \"\";\nvar BlocklyComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlocklyComponent, _React$Component);\n  var _super = _createSuper(BlocklyComponent);\n  function BlocklyComponent() {\n    var _this;\n    _classCallCheck(this, BlocklyComponent);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.FlyoutBlockClick = function (block) {\n      if (typeof block.data === \"string\" && block.data) {\n        var obj = JSON.parse(block.data);\n        if (obj.blockType === \"Target\") {\n          thisObj.props.targetVariableBlocks(obj);\n        }\n      }\n    };\n    _this.onEvent = function (event) {\n      try {\n        //if (event.group && event.type === Blockly.Events.MOVE) {\n        //    Blockly.getMainWorkspace().getAllBlocks().map(Obj => {\n\n        //        if (Obj) {\n        //            let data = JSON.parse(Obj.data);\n\n        //            Obj.setEnabled(Obj.highPriority || Obj.getRootBlock().highPriority);\n        //        }\n        //    });\n        //}\n        if (event.group && event.type == Blockly.Events.CREATE) {\n          //enable && disable validation\n          if (event.xml.getElementsByTagName('data').length > 0) {\n            if (event.xml.lastElementChild.localName == \"data\") {\n              var obj = JSON.parse(event.xml.lastElementChild.textContent);\n              if (obj.blockType === \"Target\") {\n                thisObj.props.targetVariableBlocks(obj);\n              }\n            }\n          }\n          var ids = event.ids || [];\n          ids.map(function (bid) {\n            var Obj = _this.workspace.getBlockById(bid);\n            if (Obj.type === \"exec_by_variables\") {\n              var statement = Obj.getInput(\"by_var_statement\");\n              if (statement) {\n                //get parent \n                var parent = Obj.getParent();\n                if (parent && typeof parent === \"object\" && parent.type === \"variable_type_target_multi\") {\n                  var parentBlockName = parent.getFieldValue(\"var_name\");\n                  statement.connection.setCheck([parentBlockName]);\n                } else {\n                  statement.connection.setCheck([\"NONE\"]);\n                }\n              }\n            }\n          });\n        }\n        if (event.type == Blockly.Events.DELETE) {\n          if (event.blockId === \"order_of_execution\") {\n            Blockly.getMainWorkspace().trashcan.contents_ = [];\n          }\n          if (event.oldXml.getElementsByTagName('data').length > 0) {\n            if (event.oldXml.lastElementChild.localName == \"data\") {\n              var _obj = JSON.parse(event.oldXml.lastElementChild.textContent);\n              thisObj.props.RemoveVariables(_obj);\n            }\n          }\n        }\n        if (event.type == \"drag\") {\n          //let xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\n          var Obj = _this.workspace.getBlockById(event.blockId);\n          //var list = xml.querySelector('[blockId=\"' + event.blockId+'\"]')\n          if (Obj) {\n            if (event.isStart === false) {\n              //Demo_update\n              //TransBot1.0.1\n              //Allow BY_Var for First variable\n              //First variable should not have byvariable\n              //scenario 1\n              //let op_connection = Obj.outputConnection;\n              //let op_connection_blk = op_connection ? op_connection.targetBlock() : false;\n\n              //if (op_connection_blk &&\n              //    op_connection_blk.getPreviousBlock() &&\n              //    op_connection_blk.getPreviousBlock().type === \"exec_order_of_execution\") {\n              //    Obj.outputConnection.disconnect();\n              //    return;\n              //}\n\n              //scenario 2\n              // when we drag block with Byvar block,disconnect Byvar block\n              var prev_connection = Obj.getPreviousBlock();\n              var value_connection = Obj.getInput(\"value_input\") ? Obj.getInput(\"value_input\").connection : false;\n              if (value_connection && value_connection.targetBlock()) {\n                //Obj.getInput(\"value_input\").connection.targetConnection.disconnect();\n                return;\n              } else if (Obj.type === \"exec_by_variables\") {\n                var statement = Obj.getInput(\"by_var_statement\");\n                if (statement) {\n                  //get parent \n                  var parent = Obj.getParent();\n                  if (parent && typeof parent === \"object\" && parent.type === \"variable_type_target_multi\") {\n                    var parentBlockName = parent.getFieldValue(\"var_name\");\n                    statement.connection.setCheck([parentBlockName]);\n                  } else {\n                    statement.connection.setCheck([\"NONE\"]);\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (event.type == Blockly.Events.UI) {\n          //let xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\n          var Obj = _this.workspace.getBlockById(event.blockId);\n          //var list = xml.querySelector('[blockId=\"' + event.blockId+'\"]')\n          if (Obj) {\n            if (event.element === \"dragStop\") {\n              //First variable should not have byvariable\n              //scenario 1\n              var op_connection = Obj.outputConnection;\n              var op_connection_blk = op_connection ? op_connection.targetBlock() : false;\n              if (op_connection_blk && op_connection_blk.getPreviousBlock() && op_connection_blk.getPreviousBlock().type === \"exec_order_of_execution\") {\n                Obj.outputConnection.disconnect();\n                return;\n              }\n              //scenario 2\n\n              var _prev_connection = Obj.getPreviousBlock();\n              var _value_connection = Obj.getInput(\"value_input\") ? Obj.getInput(\"value_input\").connection : false;\n              if (_value_connection && _value_connection.targetBlock()) {\n                Obj.getInput(\"value_input\").connection.targetConnection.disconnect();\n                return;\n              }\n              //End also first variable should not have byvariable\n              else if (Obj.type === \"exec_by_variables\") {\n                var _statement = Obj.getInput(\"by_var_statement\");\n                if (_statement) {\n                  //get parent \n                  var _parent = Obj.getParent();\n                  if (_parent && typeof _parent === \"object\" && _parent.type === \"variable_type_target_multi\") {\n                    var _parentBlockName = _parent.getFieldValue(\"var_name\");\n                    _statement.connection.setCheck([_parentBlockName]);\n                  } else {\n                    _statement.connection.setCheck([\"NONE\"]);\n                  }\n                }\n              }\n            } else if (event.element === \"click\") {\n              if ('data' in Obj && Obj.data !== null) {\n                var data = JSON.parse(Obj.data);\n                if (data.blockType === \"TargetVar\") {\n                  thisObj.props.getAllTheUsedBlockFromMappingXML(Obj, data);\n                }\n              }\n            }\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    return _this;\n  }\n  _createClass(BlocklyComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        initialXml = _this$props.initialXml,\n        fnTargetVariable = _this$props.fnTargetVariable,\n        children = _this$props.children,\n        SourceFieldClick = _this$props.SourceFieldClick,\n        TargetFieldClick = _this$props.TargetFieldClick,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      thisObj = this;\n      this.primaryWorkspace = Blockly.inject(this.blocklyDiv, _objectSpread(_objectSpread({\n        toolbox: this.toolbox\n      }, rest), {}, {\n        zoom: {\n          controls: true,\n          wheel: true,\n          startScale: 1.0,\n          maxScale: 3,\n          minScale: 0.3,\n          scaleSpeed: 1.2\n        },\n        trashcan: true\n      }));\n\n      //Blockly.ContextMenu.populate_ = function (a, b) {\n      //    var c = new Blockly.Menu;\n      //    c.setRightToLeft(b);\n      //    for (var d = 0, e; e = a[d]; d++) {\n      //        var f = new Blockly.MenuItem(e.text);\n      //        f.setRightToLeft(b);\n      //        c.addChild(f, !0);\n      //        f.setEnabled(e.enabled);\n      //        if (e.enabled)\n      //            f.onAction(function () {\n      //                this.callback(Blockly.ContextMenu.currentBlock)\n      //                Blockly.ContextMenu.hide();\n      //            }, e)\n      //    }\n      //    return c\n      //}\n\n      //When Click we remove the default action and do custom work\n      Blockly.Gesture.prototype.doBlockClick_ = function () {\n        if (this.flyout_ && this.flyout_.autoClose) {\n          return this.targetBlock_.isEnabled() && (Blockly.Events.getGroup() || Blockly.Events.setGroup(!0), thisObj.FlyoutBlockClick(this.targetBlock_));\n        } else {\n          Blockly.Events.fire(new Blockly.Events.Ui(this.startBlock_, \"click\", void 0, void 0));\n        }\n        this.bringBlockToFront_();\n        Blockly.Events.setGroup(!1);\n      };\n\n      //Custom change is adding extra parameter @opt\n      Blockly.Flyout.prototype.createBlock = function (a) {\n        var b = null;\n        Blockly.Events.disable();\n        var c = this.targetWorkspace.getAllVariables();\n        this.targetWorkspace.setResizesEnabled(!1);\n        try {\n          //Custom change is adding extra parameter @opt\n          b = this.placeNewBlock_(a);\n        } finally {\n          Blockly.Events.enable();\n        }\n        a = Blockly.Variables.getAddedVariables(this.targetWorkspace, c);\n        if (Blockly.Events.isEnabled()) for (Blockly.Events.setGroup(!0), Blockly.Events.fire(new Blockly.Events.Create(b)), c = 0; c < a.length; c++) {\n          Blockly.Events.fire(new Blockly.Events.VarCreate(a[c]));\n        }\n        return b;\n      };\n\n      //End\n      //Override comment icon\n      Blockly.Comment.prototype.drawIcon_ = function (a) {\n        //Override\n        Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\n          \"class\": \"blocklyIconShape\",\n          r: \"8\",\n          cx: \"8\",\n          cy: \"8\"\n        }, a);\n        Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\n          \"class\": \"blocklyIconSymbol\",\n          d: \"M4 5 L12 5 L12 10 L9 10 L7 12 L7 10 L4 10 Z\"\n        }, a);\n\n        //Actual Library code\n        //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\n        //    \"class\": \"blocklyIconShape\",\n        //    r: \"8\",\n        //    cx: \"8\",\n        //    cy: \"8\"\n        //}, a);\n        //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\n        //    \"class\": \"blocklyIconSymbol\",\n        //    d: \"m6.8,10h2c0.003,-0.617 0.271,-0.962 0.633,-1.266 2.875,-2.4050.607,-5.534 -3.765,-3.874v1.7c3.12,-1.657 3.698,0.118 2.336,1.25-1.201,0.998 -1.201,1.528 -1.204,2.19z\"\n        //}, a);\n        //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\n        //    \"class\": \"blocklyIconSymbol\",\n        //    x: \"6.8\",\n        //    y: \"10.78\",\n        //    height: \"2\",\n        //    width: \"2\"\n        //}, a)\n      };\n\n      if (initialXml) {\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\n      }\n\n      // Custom Code \n      this.primaryWorkspace.addChangeListener(this.onEvent);\n      //console.log(this.primaryWorkspace)\n      this.primaryWorkspace.registerToolboxCategoryCallback(\"fnTargetVariable\", fnTargetVariable);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      window.dispatchEvent(new Event('resize'));\n      this.workspace.resize();\n      var tools = this.toolbox;\n      //console.log(this)\n      this.workspace.updateToolbox(this.toolbox);\n    }\n\n    //When Click we remove the default action and do custom work\n  }, {\n    key: \"workspace\",\n    get: function get() {\n      return this.primaryWorkspace;\n    }\n  }, {\n    key: \"tools\",\n    get: function get() {\n      return this.toolbox;\n    }\n  }, {\n    key: \"setXml\",\n    value: function setXml(xml) {\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var children = this.props.children;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(e) {\n          return _this2.blocklyDiv = e;\n        },\n        id: \"blocklyDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"xml\", {\n        xmlns: \"https://developers.google.com/blockly/xml\",\n        is: \"blockly\",\n        style: {\n          display: 'none'\n        },\n        ref: function ref(toolbox) {\n          _this2.toolbox = toolbox;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, children));\n    }\n  }]);\n  return BlocklyComponent;\n}(React.Component);\nexport default BlocklyComponent;","map":{"version":3,"names":["React","Blockly","locale","element","setLocale","thisObj","BlocklyComponent","FlyoutBlockClick","block","data","obj","JSON","parse","blockType","props","targetVariableBlocks","onEvent","event","group","type","Events","CREATE","xml","getElementsByTagName","length","lastElementChild","localName","textContent","ids","map","bid","Obj","workspace","getBlockById","statement","getInput","parent","getParent","parentBlockName","getFieldValue","connection","setCheck","DELETE","blockId","getMainWorkspace","trashcan","contents_","oldXml","RemoveVariables","isStart","prev_connection","getPreviousBlock","value_connection","targetBlock","UI","op_connection","outputConnection","op_connection_blk","disconnect","targetConnection","getAllTheUsedBlockFromMappingXML","e","console","log","initialXml","fnTargetVariable","children","SourceFieldClick","TargetFieldClick","rest","primaryWorkspace","inject","blocklyDiv","toolbox","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","Gesture","prototype","doBlockClick_","flyout_","autoClose","targetBlock_","isEnabled","getGroup","setGroup","fire","Ui","startBlock_","bringBlockToFront_","Flyout","createBlock","a","b","disable","c","targetWorkspace","getAllVariables","setResizesEnabled","placeNewBlock_","enable","Variables","getAddedVariables","Create","VarCreate","Comment","drawIcon_","utils","dom","createSvgElement","Svg","CIRCLE","r","cx","cy","PATH","d","Xml","domToWorkspace","textToDom","addChangeListener","registerToolboxCategoryCallback","window","dispatchEvent","Event","resize","tools","updateToolbox","display","Component"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Program/Blockly/BlocklyComponent.js"],"sourcesContent":["/**\r\n * @license\r\n * \r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview Blockly React Component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\r\n\r\nimport React from 'react';\r\nimport './BlocklyComponent.css';\r\n\r\nimport Blockly from 'blockly/core';\r\nimport locale from 'blockly/msg/en';\r\nimport 'blockly/blocks';\r\nimport { element } from 'prop-types';\r\n\r\nBlockly.setLocale(locale);\r\nvar thisObj = \"\";\r\n\r\nclass BlocklyComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        const { initialXml, fnTargetVariable, children, SourceFieldClick, TargetFieldClick, ...rest } = this.props;\r\n        thisObj = this;\r\n\r\n        this.primaryWorkspace = Blockly.inject(\r\n            this.blocklyDiv,\r\n            {\r\n                toolbox: this.toolbox,\r\n                ...rest,\r\n                zoom:\r\n                {\r\n                    controls: true,\r\n                    wheel: true,\r\n                    startScale: 1.0,\r\n                    maxScale: 3,\r\n                    minScale: 0.3,\r\n                    scaleSpeed: 1.2\r\n                },\r\n                trashcan: true,\r\n            });\r\n      \r\n        //Blockly.ContextMenu.populate_ = function (a, b) {\r\n        //    var c = new Blockly.Menu;\r\n        //    c.setRightToLeft(b);\r\n        //    for (var d = 0, e; e = a[d]; d++) {\r\n        //        var f = new Blockly.MenuItem(e.text);\r\n        //        f.setRightToLeft(b);\r\n        //        c.addChild(f, !0);\r\n        //        f.setEnabled(e.enabled);\r\n        //        if (e.enabled)\r\n        //            f.onAction(function () {\r\n        //                this.callback(Blockly.ContextMenu.currentBlock)\r\n        //                Blockly.ContextMenu.hide();\r\n        //            }, e)\r\n        //    }\r\n        //    return c\r\n        //}\r\n\r\n        //When Click we remove the default action and do custom work\r\n        Blockly.Gesture.prototype.doBlockClick_ = function () {\r\n            if (this.flyout_ && this.flyout_.autoClose) {\r\n                return this.targetBlock_.isEnabled() && (Blockly.Events.getGroup() || Blockly.Events.setGroup(!0), thisObj.FlyoutBlockClick(this.targetBlock_))\r\n            } else {\r\n                Blockly.Events.fire(new Blockly.Events.Ui(this.startBlock_, \"click\", void 0, void 0));\r\n            }\r\n            this.bringBlockToFront_();\r\n            Blockly.Events.setGroup(!1)\r\n        };\r\n\r\n        //Custom change is adding extra parameter @opt\r\n        Blockly.Flyout.prototype.createBlock = function (a) {\r\n            var b = null;\r\n            Blockly.Events.disable();\r\n            var c = this.targetWorkspace.getAllVariables();\r\n            this.targetWorkspace.setResizesEnabled(!1);\r\n\r\n            try {\r\n                //Custom change is adding extra parameter @opt\r\n                b = this.placeNewBlock_(a);\r\n            } finally {\r\n                Blockly.Events.enable();\r\n            }\r\n\r\n            a = Blockly.Variables.getAddedVariables(this.targetWorkspace, c);\r\n            if (Blockly.Events.isEnabled()) for (Blockly.Events.setGroup(!0), Blockly.Events.fire(new Blockly.Events.Create(b)), c = 0; c < a.length; c++) {\r\n                Blockly.Events.fire(new Blockly.Events.VarCreate(a[c]));\r\n            }\r\n            return b;\r\n        };\r\n        \r\n        //End\r\n        //Override comment icon\r\n        Blockly.Comment.prototype.drawIcon_ = function (a) {\r\n            //Override\r\n            Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\r\n                \"class\": \"blocklyIconShape\",\r\n                r: \"8\",\r\n                cx: \"8\",\r\n                cy: \"8\"\r\n            }, a);\r\n            Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\r\n                \"class\": \"blocklyIconSymbol\",\r\n                d: \"M4 5 L12 5 L12 10 L9 10 L7 12 L7 10 L4 10 Z\"\r\n            }, a);\r\n\r\n            //Actual Library code\r\n            //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\r\n            //    \"class\": \"blocklyIconShape\",\r\n            //    r: \"8\",\r\n            //    cx: \"8\",\r\n            //    cy: \"8\"\r\n            //}, a);\r\n            //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\r\n            //    \"class\": \"blocklyIconSymbol\",\r\n            //    d: \"m6.8,10h2c0.003,-0.617 0.271,-0.962 0.633,-1.266 2.875,-2.4050.607,-5.534 -3.765,-3.874v1.7c3.12,-1.657 3.698,0.118 2.336,1.25-1.201,0.998 -1.201,1.528 -1.204,2.19z\"\r\n            //}, a);\r\n            //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\r\n            //    \"class\": \"blocklyIconSymbol\",\r\n            //    x: \"6.8\",\r\n            //    y: \"10.78\",\r\n            //    height: \"2\",\r\n            //    width: \"2\"\r\n            //}, a)\r\n\r\n        };\r\n        if (initialXml) {\r\n            Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\r\n        }\r\n\r\n\r\n        // Custom Code \r\n        this.primaryWorkspace.addChangeListener(this.onEvent);\r\n        //console.log(this.primaryWorkspace)\r\n        this.primaryWorkspace.registerToolboxCategoryCallback(\r\n            \"fnTargetVariable\",\r\n            fnTargetVariable\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.dispatchEvent(new Event('resize'));\r\n        this.workspace.resize();\r\n        let tools = this.toolbox;\r\n        //console.log(this)\r\n        this.workspace.updateToolbox(this.toolbox);\r\n\r\n    }\r\n\r\n    //When Click we remove the default action and do custom work\r\n    FlyoutBlockClick = (block) => {\r\n        if (typeof block.data === \"string\" && block.data) {\r\n            let obj = JSON.parse(block.data);\r\n            if (obj.blockType === \"Target\") {\r\n                thisObj.props.targetVariableBlocks(obj);\r\n            }\r\n        }\r\n    }\r\n    //End\r\n\r\n    onEvent = (event) => {\r\n        try {\r\n\r\n            //if (event.group && event.type === Blockly.Events.MOVE) {\r\n            //    Blockly.getMainWorkspace().getAllBlocks().map(Obj => {\r\n\r\n            //        if (Obj) {\r\n            //            let data = JSON.parse(Obj.data);\r\n\r\n            //            Obj.setEnabled(Obj.highPriority || Obj.getRootBlock().highPriority);\r\n            //        }\r\n            //    });\r\n            //}\r\n            if (event.group && event.type == Blockly.Events.CREATE) {\r\n                //enable && disable validation\r\n                if (event.xml.getElementsByTagName('data').length > 0)\r\n                {\r\n                    if (event.xml.lastElementChild.localName == \"data\") {\r\n                        let obj = JSON.parse(event.xml.lastElementChild.textContent);\r\n                        if (obj.blockType === \"Target\")\r\n                        {\r\n                            thisObj.props.targetVariableBlocks(obj);\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n\r\n                let ids = event.ids || [];\r\n                ids.map((bid) =>\r\n                {\r\n                    var Obj = this.workspace.getBlockById(bid);\r\n                    if (Obj.type === \"exec_by_variables\") {\r\n                        let statement = Obj.getInput(\"by_var_statement\")\r\n                        if (statement)\r\n                        {\r\n                            //get parent \r\n                            let parent = Obj.getParent();\r\n                            if (parent && typeof parent === \"object\" && parent.type === \"variable_type_target_multi\")\r\n                            {\r\n                                let parentBlockName = parent.getFieldValue(\"var_name\");\r\n                                statement.connection.setCheck([parentBlockName]);\r\n                            }\r\n                            else\r\n                            {\r\n                                statement.connection.setCheck([\"NONE\"]);\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n            if (event.type == Blockly.Events.DELETE)\r\n            {\r\n                if (event.blockId === \"order_of_execution\")\r\n                {\r\n                    Blockly.getMainWorkspace().trashcan.contents_ = [];\r\n                }\r\n                if (event.oldXml.getElementsByTagName('data').length > 0)\r\n                {\r\n                    if (event.oldXml.lastElementChild.localName == \"data\")\r\n                    {\r\n                        let obj = JSON.parse(event.oldXml.lastElementChild.textContent);\r\n                        thisObj.props.RemoveVariables(obj);\r\n                    }\r\n                }\r\n            }\r\n           \r\n            if (event.type == \"drag\")\r\n            {\r\n\r\n                //let xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\r\n                var Obj = this.workspace.getBlockById(event.blockId);\r\n                //var list = xml.querySelector('[blockId=\"' + event.blockId+'\"]')\r\n                if (Obj) {\r\n                    if (event.isStart === false) {\r\n                        //Demo_update\r\n                        //TransBot1.0.1\r\n                        //Allow BY_Var for First variable\r\n                        //First variable should not have byvariable\r\n                        //scenario 1\r\n                        //let op_connection = Obj.outputConnection;\r\n                        //let op_connection_blk = op_connection ? op_connection.targetBlock() : false;\r\n\r\n                        //if (op_connection_blk &&\r\n                        //    op_connection_blk.getPreviousBlock() &&\r\n                        //    op_connection_blk.getPreviousBlock().type === \"exec_order_of_execution\") {\r\n                        //    Obj.outputConnection.disconnect();\r\n                        //    return;\r\n                        //}\r\n\r\n                        //scenario 2\r\n                        // when we drag block with Byvar block,disconnect Byvar block\r\n                        let prev_connection = Obj.getPreviousBlock();\r\n                        let value_connection = Obj.getInput(\"value_input\") ? Obj.getInput(\"value_input\").connection : false;\r\n                        if (value_connection && value_connection.targetBlock()) {\r\n                            //Obj.getInput(\"value_input\").connection.targetConnection.disconnect();\r\n                            return;\r\n                        }\r\n                        else if (Obj.type === \"exec_by_variables\")\r\n                        {\r\n                            let statement = Obj.getInput(\"by_var_statement\")\r\n                            if (statement) {\r\n                                //get parent \r\n                                let parent = Obj.getParent();\r\n                                if (parent && typeof parent === \"object\" && parent.type === \"variable_type_target_multi\") {\r\n                                    let parentBlockName = parent.getFieldValue(\"var_name\");\r\n                                    statement.connection.setCheck([parentBlockName]);\r\n                                } else {\r\n                                    statement.connection.setCheck([\"NONE\"]);\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.type == Blockly.Events.UI) {\r\n\r\n                //let xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\r\n                var Obj = this.workspace.getBlockById(event.blockId)\r\n                //var list = xml.querySelector('[blockId=\"' + event.blockId+'\"]')\r\n                if (Obj) {\r\n                    if (event.element === \"dragStop\") {\r\n\r\n                        //First variable should not have byvariable\r\n                        //scenario 1\r\n                        let op_connection = Obj.outputConnection;\r\n                        let op_connection_blk = op_connection ? op_connection.targetBlock() : false;\r\n\r\n                        if (op_connection_blk &&\r\n                            op_connection_blk.getPreviousBlock() &&\r\n                            op_connection_blk.getPreviousBlock().type === \"exec_order_of_execution\") {\r\n                            Obj.outputConnection.disconnect();\r\n                            return;\r\n                        }\r\n                        //scenario 2\r\n\r\n                        let prev_connection = Obj.getPreviousBlock();\r\n                        let value_connection = Obj.getInput(\"value_input\") ? Obj.getInput(\"value_input\").connection : false;\r\n                        if (value_connection && value_connection.targetBlock()) {\r\n                            Obj.getInput(\"value_input\").connection.targetConnection.disconnect();\r\n                            return;\r\n                        }\r\n                        //End also first variable should not have byvariable\r\n                        else if (Obj.type === \"exec_by_variables\") {\r\n                            let statement = Obj.getInput(\"by_var_statement\")\r\n                            if (statement) {\r\n                                //get parent \r\n                                let parent = Obj.getParent();\r\n                                if (parent && typeof parent === \"object\" && parent.type === \"variable_type_target_multi\") {\r\n                                    let parentBlockName = parent.getFieldValue(\"var_name\");\r\n                                    statement.connection.setCheck([parentBlockName]);\r\n                                } else {\r\n                                    statement.connection.setCheck([\"NONE\"]);\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (event.element === \"click\") {\r\n                        if ('data' in Obj && Obj.data !== null) {\r\n                            let data = JSON.parse(Obj.data);\r\n                            if (data.blockType === \"TargetVar\") {\r\n                                thisObj.props.getAllTheUsedBlockFromMappingXML(Obj, data);\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n     }\r\n\r\n    get workspace() {\r\n        return this.primaryWorkspace;\r\n    }\r\n\r\n    get tools() {\r\n        return this.toolbox;\r\n    }\r\n\r\n    setXml(xml) {\r\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return <React.Fragment>\r\n            <div ref={e => this.blocklyDiv = e} id=\"blocklyDiv\" />\r\n            <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: 'none' }} ref={(toolbox) => { this.toolbox = toolbox; }}>\r\n                {children}\r\n            </xml>\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default BlocklyComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}