{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['[', ']'], ['(', ')'], ['{', '}']],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment', 'identifier']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment', 'identifier']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment', 'identifier']\n  }, {\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment', 'identifier']\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.pq',\n  ignoreCase: false,\n  brackets: [{\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '{',\n    close: '}',\n    token: 'delimiter.brackets'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }],\n  operatorKeywords: [\"and\", \"not\", \"or\"],\n  keywords: [\"as\", \"each\", \"else\", \"error\", \"false\", \"if\", \"in\", \"is\", \"let\", \"meta\", \"otherwise\", \"section\", \"shared\", \"then\", \"true\", \"try\", \"type\"],\n  constructors: [\"#binary\", \"#date\", \"#datetime\", \"#datetimezone\", \"#duration\", \"#table\", \"#time\"],\n  constants: [\"#infinity\", \"#nan\", \"#sections\", \"#shared\"],\n  typeKeywords: [\"action\", \"any\", \"anynonnull\", \"none\", \"null\", \"logical\", \"number\", \"time\", \"date\", \"datetime\", \"datetimezone\", \"duration\", \"text\", \"binary\", \"list\", \"record\", \"table\", \"function\"],\n  builtinFunctions: [\"Access.Database\", \"Action.Return\", \"Action.Sequence\", \"Action.Try\", \"ActiveDirectory.Domains\", \"AdoDotNet.DataSource\", \"AdoDotNet.Query\", \"AdobeAnalytics.Cubes\", \"AnalysisServices.Database\", \"AnalysisServices.Databases\", \"AzureStorage.BlobContents\", \"AzureStorage.Blobs\", \"AzureStorage.Tables\", \"Binary.Buffer\", \"Binary.Combine\", \"Binary.Compress\", \"Binary.Decompress\", \"Binary.End\", \"Binary.From\", \"Binary.FromList\", \"Binary.FromText\", \"Binary.InferContentType\", \"Binary.Length\", \"Binary.ToList\", \"Binary.ToText\", \"BinaryFormat.7BitEncodedSignedInteger\", \"BinaryFormat.7BitEncodedUnsignedInteger\", \"BinaryFormat.Binary\", \"BinaryFormat.Byte\", \"BinaryFormat.ByteOrder\", \"BinaryFormat.Choice\", \"BinaryFormat.Decimal\", \"BinaryFormat.Double\", \"BinaryFormat.Group\", \"BinaryFormat.Length\", \"BinaryFormat.List\", \"BinaryFormat.Null\", \"BinaryFormat.Record\", \"BinaryFormat.SignedInteger16\", \"BinaryFormat.SignedInteger32\", \"BinaryFormat.SignedInteger64\", \"BinaryFormat.Single\", \"BinaryFormat.Text\", \"BinaryFormat.Transform\", \"BinaryFormat.UnsignedInteger16\", \"BinaryFormat.UnsignedInteger32\", \"BinaryFormat.UnsignedInteger64\", \"Byte.From\", \"Character.FromNumber\", \"Character.ToNumber\", \"Combiner.CombineTextByDelimiter\", \"Combiner.CombineTextByEachDelimiter\", \"Combiner.CombineTextByLengths\", \"Combiner.CombineTextByPositions\", \"Combiner.CombineTextByRanges\", \"Comparer.Equals\", \"Comparer.FromCulture\", \"Comparer.Ordinal\", \"Comparer.OrdinalIgnoreCase\", \"Csv.Document\", \"Cube.AddAndExpandDimensionColumn\", \"Cube.AddMeasureColumn\", \"Cube.ApplyParameter\", \"Cube.AttributeMemberId\", \"Cube.AttributeMemberProperty\", \"Cube.CollapseAndRemoveColumns\", \"Cube.Dimensions\", \"Cube.DisplayFolders\", \"Cube.Measures\", \"Cube.Parameters\", \"Cube.Properties\", \"Cube.PropertyKey\", \"Cube.ReplaceDimensions\", \"Cube.Transform\", \"Currency.From\", \"DB2.Database\", \"Date.AddDays\", \"Date.AddMonths\", \"Date.AddQuarters\", \"Date.AddWeeks\", \"Date.AddYears\", \"Date.Day\", \"Date.DayOfWeek\", \"Date.DayOfWeekName\", \"Date.DayOfYear\", \"Date.DaysInMonth\", \"Date.EndOfDay\", \"Date.EndOfMonth\", \"Date.EndOfQuarter\", \"Date.EndOfWeek\", \"Date.EndOfYear\", \"Date.From\", \"Date.FromText\", \"Date.IsInCurrentDay\", \"Date.IsInCurrentMonth\", \"Date.IsInCurrentQuarter\", \"Date.IsInCurrentWeek\", \"Date.IsInCurrentYear\", \"Date.IsInNextDay\", \"Date.IsInNextMonth\", \"Date.IsInNextNDays\", \"Date.IsInNextNMonths\", \"Date.IsInNextNQuarters\", \"Date.IsInNextNWeeks\", \"Date.IsInNextNYears\", \"Date.IsInNextQuarter\", \"Date.IsInNextWeek\", \"Date.IsInNextYear\", \"Date.IsInPreviousDay\", \"Date.IsInPreviousMonth\", \"Date.IsInPreviousNDays\", \"Date.IsInPreviousNMonths\", \"Date.IsInPreviousNQuarters\", \"Date.IsInPreviousNWeeks\", \"Date.IsInPreviousNYears\", \"Date.IsInPreviousQuarter\", \"Date.IsInPreviousWeek\", \"Date.IsInPreviousYear\", \"Date.IsInYearToDate\", \"Date.IsLeapYear\", \"Date.Month\", \"Date.MonthName\", \"Date.QuarterOfYear\", \"Date.StartOfDay\", \"Date.StartOfMonth\", \"Date.StartOfQuarter\", \"Date.StartOfWeek\", \"Date.StartOfYear\", \"Date.ToRecord\", \"Date.ToText\", \"Date.WeekOfMonth\", \"Date.WeekOfYear\", \"Date.Year\", \"DateTime.AddZone\", \"DateTime.Date\", \"DateTime.FixedLocalNow\", \"DateTime.From\", \"DateTime.FromFileTime\", \"DateTime.FromText\", \"DateTime.IsInCurrentHour\", \"DateTime.IsInCurrentMinute\", \"DateTime.IsInCurrentSecond\", \"DateTime.IsInNextHour\", \"DateTime.IsInNextMinute\", \"DateTime.IsInNextNHours\", \"DateTime.IsInNextNMinutes\", \"DateTime.IsInNextNSeconds\", \"DateTime.IsInNextSecond\", \"DateTime.IsInPreviousHour\", \"DateTime.IsInPreviousMinute\", \"DateTime.IsInPreviousNHours\", \"DateTime.IsInPreviousNMinutes\", \"DateTime.IsInPreviousNSeconds\", \"DateTime.IsInPreviousSecond\", \"DateTime.LocalNow\", \"DateTime.Time\", \"DateTime.ToRecord\", \"DateTime.ToText\", \"DateTimeZone.FixedLocalNow\", \"DateTimeZone.FixedUtcNow\", \"DateTimeZone.From\", \"DateTimeZone.FromFileTime\", \"DateTimeZone.FromText\", \"DateTimeZone.LocalNow\", \"DateTimeZone.RemoveZone\", \"DateTimeZone.SwitchZone\", \"DateTimeZone.ToLocal\", \"DateTimeZone.ToRecord\", \"DateTimeZone.ToText\", \"DateTimeZone.ToUtc\", \"DateTimeZone.UtcNow\", \"DateTimeZone.ZoneHours\", \"DateTimeZone.ZoneMinutes\", \"Decimal.From\", \"Diagnostics.ActivityId\", \"Diagnostics.Trace\", \"DirectQueryCapabilities.From\", \"Double.From\", \"Duration.Days\", \"Duration.From\", \"Duration.FromText\", \"Duration.Hours\", \"Duration.Minutes\", \"Duration.Seconds\", \"Duration.ToRecord\", \"Duration.ToText\", \"Duration.TotalDays\", \"Duration.TotalHours\", \"Duration.TotalMinutes\", \"Duration.TotalSeconds\", \"Embedded.Value\", \"Error.Record\", \"Excel.CurrentWorkbook\", \"Excel.Workbook\", \"Exchange.Contents\", \"Expression.Constant\", \"Expression.Evaluate\", \"Expression.Identifier\", \"Facebook.Graph\", \"File.Contents\", \"Folder.Contents\", \"Folder.Files\", \"Function.From\", \"Function.Invoke\", \"Function.InvokeAfter\", \"Function.IsDataSource\", \"GoogleAnalytics.Accounts\", \"Guid.From\", \"HdInsight.Containers\", \"HdInsight.Contents\", \"HdInsight.Files\", \"Hdfs.Contents\", \"Hdfs.Files\", \"Informix.Database\", \"Int16.From\", \"Int32.From\", \"Int64.From\", \"Int8.From\", \"ItemExpression.From\", \"Json.Document\", \"Json.FromValue\", \"Lines.FromBinary\", \"Lines.FromText\", \"Lines.ToBinary\", \"Lines.ToText\", \"List.Accumulate\", \"List.AllTrue\", \"List.Alternate\", \"List.AnyTrue\", \"List.Average\", \"List.Buffer\", \"List.Combine\", \"List.Contains\", \"List.ContainsAll\", \"List.ContainsAny\", \"List.Count\", \"List.Covariance\", \"List.DateTimeZones\", \"List.DateTimes\", \"List.Dates\", \"List.Difference\", \"List.Distinct\", \"List.Durations\", \"List.FindText\", \"List.First\", \"List.FirstN\", \"List.Generate\", \"List.InsertRange\", \"List.Intersect\", \"List.IsDistinct\", \"List.IsEmpty\", \"List.Last\", \"List.LastN\", \"List.MatchesAll\", \"List.MatchesAny\", \"List.Max\", \"List.MaxN\", \"List.Median\", \"List.Min\", \"List.MinN\", \"List.Mode\", \"List.Modes\", \"List.NonNullCount\", \"List.Numbers\", \"List.PositionOf\", \"List.PositionOfAny\", \"List.Positions\", \"List.Product\", \"List.Random\", \"List.Range\", \"List.RemoveFirstN\", \"List.RemoveItems\", \"List.RemoveLastN\", \"List.RemoveMatchingItems\", \"List.RemoveNulls\", \"List.RemoveRange\", \"List.Repeat\", \"List.ReplaceMatchingItems\", \"List.ReplaceRange\", \"List.ReplaceValue\", \"List.Reverse\", \"List.Select\", \"List.Single\", \"List.SingleOrDefault\", \"List.Skip\", \"List.Sort\", \"List.StandardDeviation\", \"List.Sum\", \"List.Times\", \"List.Transform\", \"List.TransformMany\", \"List.Union\", \"List.Zip\", \"Logical.From\", \"Logical.FromText\", \"Logical.ToText\", \"MQ.Queue\", \"MySQL.Database\", \"Number.Abs\", \"Number.Acos\", \"Number.Asin\", \"Number.Atan\", \"Number.Atan2\", \"Number.BitwiseAnd\", \"Number.BitwiseNot\", \"Number.BitwiseOr\", \"Number.BitwiseShiftLeft\", \"Number.BitwiseShiftRight\", \"Number.BitwiseXor\", \"Number.Combinations\", \"Number.Cos\", \"Number.Cosh\", \"Number.Exp\", \"Number.Factorial\", \"Number.From\", \"Number.FromText\", \"Number.IntegerDivide\", \"Number.IsEven\", \"Number.IsNaN\", \"Number.IsOdd\", \"Number.Ln\", \"Number.Log\", \"Number.Log10\", \"Number.Mod\", \"Number.Permutations\", \"Number.Power\", \"Number.Random\", \"Number.RandomBetween\", \"Number.Round\", \"Number.RoundAwayFromZero\", \"Number.RoundDown\", \"Number.RoundTowardZero\", \"Number.RoundUp\", \"Number.Sign\", \"Number.Sin\", \"Number.Sinh\", \"Number.Sqrt\", \"Number.Tan\", \"Number.Tanh\", \"Number.ToText\", \"OData.Feed\", \"Odbc.DataSource\", \"Odbc.Query\", \"OleDb.DataSource\", \"OleDb.Query\", \"Oracle.Database\", \"Percentage.From\", \"PostgreSQL.Database\", \"RData.FromBinary\", \"Record.AddField\", \"Record.Combine\", \"Record.Field\", \"Record.FieldCount\", \"Record.FieldNames\", \"Record.FieldOrDefault\", \"Record.FieldValues\", \"Record.FromList\", \"Record.FromTable\", \"Record.HasFields\", \"Record.RemoveFields\", \"Record.RenameFields\", \"Record.ReorderFields\", \"Record.SelectFields\", \"Record.ToList\", \"Record.ToTable\", \"Record.TransformFields\", \"Replacer.ReplaceText\", \"Replacer.ReplaceValue\", \"RowExpression.Column\", \"RowExpression.From\", \"Salesforce.Data\", \"Salesforce.Reports\", \"SapBusinessWarehouse.Cubes\", \"SapHana.Database\", \"SharePoint.Contents\", \"SharePoint.Files\", \"SharePoint.Tables\", \"Single.From\", \"Soda.Feed\", \"Splitter.SplitByNothing\", \"Splitter.SplitTextByAnyDelimiter\", \"Splitter.SplitTextByDelimiter\", \"Splitter.SplitTextByEachDelimiter\", \"Splitter.SplitTextByLengths\", \"Splitter.SplitTextByPositions\", \"Splitter.SplitTextByRanges\", \"Splitter.SplitTextByRepeatedLengths\", \"Splitter.SplitTextByWhitespace\", \"Sql.Database\", \"Sql.Databases\", \"SqlExpression.SchemaFrom\", \"SqlExpression.ToExpression\", \"Sybase.Database\", \"Table.AddColumn\", \"Table.AddIndexColumn\", \"Table.AddJoinColumn\", \"Table.AddKey\", \"Table.AggregateTableColumn\", \"Table.AlternateRows\", \"Table.Buffer\", \"Table.Column\", \"Table.ColumnCount\", \"Table.ColumnNames\", \"Table.ColumnsOfType\", \"Table.Combine\", \"Table.CombineColumns\", \"Table.Contains\", \"Table.ContainsAll\", \"Table.ContainsAny\", \"Table.DemoteHeaders\", \"Table.Distinct\", \"Table.DuplicateColumn\", \"Table.ExpandListColumn\", \"Table.ExpandRecordColumn\", \"Table.ExpandTableColumn\", \"Table.FillDown\", \"Table.FillUp\", \"Table.FilterWithDataTable\", \"Table.FindText\", \"Table.First\", \"Table.FirstN\", \"Table.FirstValue\", \"Table.FromColumns\", \"Table.FromList\", \"Table.FromPartitions\", \"Table.FromRecords\", \"Table.FromRows\", \"Table.FromValue\", \"Table.Group\", \"Table.HasColumns\", \"Table.InsertRows\", \"Table.IsDistinct\", \"Table.IsEmpty\", \"Table.Join\", \"Table.Keys\", \"Table.Last\", \"Table.LastN\", \"Table.MatchesAllRows\", \"Table.MatchesAnyRows\", \"Table.Max\", \"Table.MaxN\", \"Table.Min\", \"Table.MinN\", \"Table.NestedJoin\", \"Table.Partition\", \"Table.PartitionValues\", \"Table.Pivot\", \"Table.PositionOf\", \"Table.PositionOfAny\", \"Table.PrefixColumns\", \"Table.Profile\", \"Table.PromoteHeaders\", \"Table.Range\", \"Table.RemoveColumns\", \"Table.RemoveFirstN\", \"Table.RemoveLastN\", \"Table.RemoveMatchingRows\", \"Table.RemoveRows\", \"Table.RemoveRowsWithErrors\", \"Table.RenameColumns\", \"Table.ReorderColumns\", \"Table.Repeat\", \"Table.ReplaceErrorValues\", \"Table.ReplaceKeys\", \"Table.ReplaceMatchingRows\", \"Table.ReplaceRelationshipIdentity\", \"Table.ReplaceRows\", \"Table.ReplaceValue\", \"Table.ReverseRows\", \"Table.RowCount\", \"Table.Schema\", \"Table.SelectColumns\", \"Table.SelectRows\", \"Table.SelectRowsWithErrors\", \"Table.SingleRow\", \"Table.Skip\", \"Table.Sort\", \"Table.SplitColumn\", \"Table.ToColumns\", \"Table.ToList\", \"Table.ToRecords\", \"Table.ToRows\", \"Table.TransformColumnNames\", \"Table.TransformColumnTypes\", \"Table.TransformColumns\", \"Table.TransformRows\", \"Table.Transpose\", \"Table.Unpivot\", \"Table.UnpivotOtherColumns\", \"Table.View\", \"Table.ViewFunction\", \"TableAction.DeleteRows\", \"TableAction.InsertRows\", \"TableAction.UpdateRows\", \"Tables.GetRelationships\", \"Teradata.Database\", \"Text.AfterDelimiter\", \"Text.At\", \"Text.BeforeDelimiter\", \"Text.BetweenDelimiters\", \"Text.Clean\", \"Text.Combine\", \"Text.Contains\", \"Text.End\", \"Text.EndsWith\", \"Text.Format\", \"Text.From\", \"Text.FromBinary\", \"Text.Insert\", \"Text.Length\", \"Text.Lower\", \"Text.Middle\", \"Text.NewGuid\", \"Text.PadEnd\", \"Text.PadStart\", \"Text.PositionOf\", \"Text.PositionOfAny\", \"Text.Proper\", \"Text.Range\", \"Text.Remove\", \"Text.RemoveRange\", \"Text.Repeat\", \"Text.Replace\", \"Text.ReplaceRange\", \"Text.Select\", \"Text.Split\", \"Text.SplitAny\", \"Text.Start\", \"Text.StartsWith\", \"Text.ToBinary\", \"Text.ToList\", \"Text.Trim\", \"Text.TrimEnd\", \"Text.TrimStart\", \"Text.Upper\", \"Time.EndOfHour\", \"Time.From\", \"Time.FromText\", \"Time.Hour\", \"Time.Minute\", \"Time.Second\", \"Time.StartOfHour\", \"Time.ToRecord\", \"Time.ToText\", \"Type.AddTableKey\", \"Type.ClosedRecord\", \"Type.Facets\", \"Type.ForFunction\", \"Type.ForRecord\", \"Type.FunctionParameters\", \"Type.FunctionRequiredParameters\", \"Type.FunctionReturn\", \"Type.Is\", \"Type.IsNullable\", \"Type.IsOpenRecord\", \"Type.ListItem\", \"Type.NonNullable\", \"Type.OpenRecord\", \"Type.RecordFields\", \"Type.ReplaceFacets\", \"Type.ReplaceTableKeys\", \"Type.TableColumn\", \"Type.TableKeys\", \"Type.TableRow\", \"Type.TableSchema\", \"Type.Union\", \"Uri.BuildQueryString\", \"Uri.Combine\", \"Uri.EscapeDataString\", \"Uri.Parts\", \"Value.Add\", \"Value.As\", \"Value.Compare\", \"Value.Divide\", \"Value.Equals\", \"Value.Firewall\", \"Value.FromText\", \"Value.Is\", \"Value.Metadata\", \"Value.Multiply\", \"Value.NativeQuery\", \"Value.NullableEquals\", \"Value.RemoveMetadata\", \"Value.ReplaceMetadata\", \"Value.ReplaceType\", \"Value.Subtract\", \"Value.Type\", \"ValueAction.NativeStatement\", \"ValueAction.Replace\", \"Variable.Value\", \"Web.Contents\", \"Web.Page\", \"WebAction.Request\", \"Xml.Document\", \"Xml.Tables\"],\n  builtinConstants: [\"BinaryEncoding.Base64\", \"BinaryEncoding.Hex\", \"BinaryOccurrence.Optional\", \"BinaryOccurrence.Repeating\", \"BinaryOccurrence.Required\", \"ByteOrder.BigEndian\", \"ByteOrder.LittleEndian\", \"Compression.Deflate\", \"Compression.GZip\", \"CsvStyle.QuoteAfterDelimiter\", \"CsvStyle.QuoteAlways\", \"Culture.Current\", \"Day.Friday\", \"Day.Monday\", \"Day.Saturday\", \"Day.Sunday\", \"Day.Thursday\", \"Day.Tuesday\", \"Day.Wednesday\", \"ExtraValues.Error\", \"ExtraValues.Ignore\", \"ExtraValues.List\", \"GroupKind.Global\", \"GroupKind.Local\", \"JoinAlgorithm.Dynamic\", \"JoinAlgorithm.LeftHash\", \"JoinAlgorithm.LeftIndex\", \"JoinAlgorithm.PairwiseHash\", \"JoinAlgorithm.RightHash\", \"JoinAlgorithm.RightIndex\", \"JoinAlgorithm.SortMerge\", \"JoinKind.FullOuter\", \"JoinKind.Inner\", \"JoinKind.LeftAnti\", \"JoinKind.LeftOuter\", \"JoinKind.RightAnti\", \"JoinKind.RightOuter\", \"JoinSide.Left\", \"JoinSide.Right\", \"MissingField.Error\", \"MissingField.Ignore\", \"MissingField.UseNull\", \"Number.E\", \"Number.Epsilon\", \"Number.NaN\", \"Number.NegativeInfinity\", \"Number.PI\", \"Number.PositiveInfinity\", \"Occurrence.All\", \"Occurrence.First\", \"Occurrence.Last\", \"Occurrence.Optional\", \"Occurrence.Repeating\", \"Occurrence.Required\", \"Order.Ascending\", \"Order.Descending\", \"Precision.Decimal\", \"Precision.Double\", \"QuoteStyle.Csv\", \"QuoteStyle.None\", \"RelativePosition.FromEnd\", \"RelativePosition.FromStart\", \"RoundingMode.AwayFromZero\", \"RoundingMode.Down\", \"RoundingMode.ToEven\", \"RoundingMode.TowardZero\", \"RoundingMode.Up\", \"SapHanaDistribution.All\", \"SapHanaDistribution.Connection\", \"SapHanaDistribution.Off\", \"SapHanaDistribution.Statement\", \"SapHanaRangeOperator.Equals\", \"SapHanaRangeOperator.GreaterThan\", \"SapHanaRangeOperator.GreaterThanOrEquals\", \"SapHanaRangeOperator.LessThan\", \"SapHanaRangeOperator.LessThanOrEquals\", \"SapHanaRangeOperator.NotEquals\", \"TextEncoding.Ascii\", \"TextEncoding.BigEndianUnicode\", \"TextEncoding.Unicode\", \"TextEncoding.Utf16\", \"TextEncoding.Utf8\", \"TextEncoding.Windows\", \"TraceLevel.Critical\", \"TraceLevel.Error\", \"TraceLevel.Information\", \"TraceLevel.Verbose\", \"TraceLevel.Warning\", \"WebMethod.Delete\", \"WebMethod.Get\", \"WebMethod.Head\", \"WebMethod.Patch\", \"WebMethod.Post\", \"WebMethod.Put\"],\n  builtinTypes: [\"Action.Type\", \"Any.Type\", \"Binary.Type\", \"BinaryEncoding.Type\", \"BinaryOccurrence.Type\", \"Byte.Type\", \"ByteOrder.Type\", \"Character.Type\", \"Compression.Type\", \"CsvStyle.Type\", \"Currency.Type\", \"Date.Type\", \"DateTime.Type\", \"DateTimeZone.Type\", \"Day.Type\", \"Decimal.Type\", \"Double.Type\", \"Duration.Type\", \"ExtraValues.Type\", \"Function.Type\", \"GroupKind.Type\", \"Guid.Type\", \"Int16.Type\", \"Int32.Type\", \"Int64.Type\", \"Int8.Type\", \"JoinAlgorithm.Type\", \"JoinKind.Type\", \"JoinSide.Type\", \"List.Type\", \"Logical.Type\", \"MissingField.Type\", \"None.Type\", \"Null.Type\", \"Number.Type\", \"Occurrence.Type\", \"Order.Type\", \"Password.Type\", \"Percentage.Type\", \"Precision.Type\", \"QuoteStyle.Type\", \"Record.Type\", \"RelativePosition.Type\", \"RoundingMode.Type\", \"SapHanaDistribution.Type\", \"SapHanaRangeOperator.Type\", \"Single.Type\", \"Table.Type\", \"Text.Type\", \"TextEncoding.Type\", \"Time.Type\", \"TraceLevel.Type\", \"Type.Type\", \"Uri.Type\", \"WebMethod.Type\"],\n  tokenizer: {\n    root: [\n    // quoted identifier\n    [/#\"[\\w \\.]+\"/, \"identifier.quote\"],\n    // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/\\d+([eE][\\-+]?\\d+)?/, \"number\"],\n    // keywords\n    [/(#?[a-z]+)\\b/, {\n      cases: {\n        \"@typeKeywords\": \"type\",\n        \"@keywords\": \"keyword\",\n        \"@constants\": \"constant\",\n        \"@constructors\": \"constructor\",\n        \"@operatorKeywords\": \"operators\",\n        \"@default\": \"identifier\"\n      }\n    }],\n    // built-in types\n    [/\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/, {\n      cases: {\n        \"@builtinTypes\": \"type\",\n        \"@default\": \"identifier\"\n      }\n    }],\n    // other built-ins\n    [/\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/, {\n      cases: {\n        \"@builtinFunctions\": \"keyword.function\",\n        \"@builtinConstants\": \"constant\",\n        \"@default\": \"identifier\"\n      }\n    }],\n    // other identifiers\n    [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@comments\"\n    }, {\n      include: \"@strings\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"], [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]],\n    comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [\".\", \"comment\"]],\n    strings: [[\"\\\"\", \"string\", \"@string\"]],\n    string: [[\"\\\"\\\"\", \"string.escape\"], [\"\\\"\", \"string\", \"@pop\"], [\".\", \"string\"]]\n  }\n};","map":{"version":3,"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","operatorKeywords","keywords","constructors","constants","typeKeywords","builtinFunctions","builtinConstants","builtinTypes","tokenizer","root","cases","include","whitespace","comment","strings","string"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [['[', ']'], ['(', ')'], ['{', '}']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment', 'identifier'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment', 'identifier'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment', 'identifier'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment', 'identifier'] },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pq',\r\n    ignoreCase: false,\r\n    brackets: [\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '{', close: '}', token: 'delimiter.brackets' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    operatorKeywords: [\r\n        \"and\",\r\n        \"not\",\r\n        \"or\"\r\n    ],\r\n    keywords: [\r\n        \"as\",\r\n        \"each\",\r\n        \"else\",\r\n        \"error\",\r\n        \"false\",\r\n        \"if\",\r\n        \"in\",\r\n        \"is\",\r\n        \"let\",\r\n        \"meta\",\r\n        \"otherwise\",\r\n        \"section\",\r\n        \"shared\",\r\n        \"then\",\r\n        \"true\",\r\n        \"try\",\r\n        \"type\"\r\n    ],\r\n    constructors: [\r\n        \"#binary\",\r\n        \"#date\",\r\n        \"#datetime\",\r\n        \"#datetimezone\",\r\n        \"#duration\",\r\n        \"#table\",\r\n        \"#time\"\r\n    ],\r\n    constants: [\r\n        \"#infinity\",\r\n        \"#nan\",\r\n        \"#sections\",\r\n        \"#shared\"\r\n    ],\r\n    typeKeywords: [\r\n        \"action\",\r\n        \"any\",\r\n        \"anynonnull\",\r\n        \"none\",\r\n        \"null\",\r\n        \"logical\",\r\n        \"number\",\r\n        \"time\",\r\n        \"date\",\r\n        \"datetime\",\r\n        \"datetimezone\",\r\n        \"duration\",\r\n        \"text\",\r\n        \"binary\",\r\n        \"list\",\r\n        \"record\",\r\n        \"table\",\r\n        \"function\"\r\n    ],\r\n    builtinFunctions: [\r\n        \"Access.Database\",\r\n        \"Action.Return\",\r\n        \"Action.Sequence\",\r\n        \"Action.Try\",\r\n        \"ActiveDirectory.Domains\",\r\n        \"AdoDotNet.DataSource\",\r\n        \"AdoDotNet.Query\",\r\n        \"AdobeAnalytics.Cubes\",\r\n        \"AnalysisServices.Database\",\r\n        \"AnalysisServices.Databases\",\r\n        \"AzureStorage.BlobContents\",\r\n        \"AzureStorage.Blobs\",\r\n        \"AzureStorage.Tables\",\r\n        \"Binary.Buffer\",\r\n        \"Binary.Combine\",\r\n        \"Binary.Compress\",\r\n        \"Binary.Decompress\",\r\n        \"Binary.End\",\r\n        \"Binary.From\",\r\n        \"Binary.FromList\",\r\n        \"Binary.FromText\",\r\n        \"Binary.InferContentType\",\r\n        \"Binary.Length\",\r\n        \"Binary.ToList\",\r\n        \"Binary.ToText\",\r\n        \"BinaryFormat.7BitEncodedSignedInteger\",\r\n        \"BinaryFormat.7BitEncodedUnsignedInteger\",\r\n        \"BinaryFormat.Binary\",\r\n        \"BinaryFormat.Byte\",\r\n        \"BinaryFormat.ByteOrder\",\r\n        \"BinaryFormat.Choice\",\r\n        \"BinaryFormat.Decimal\",\r\n        \"BinaryFormat.Double\",\r\n        \"BinaryFormat.Group\",\r\n        \"BinaryFormat.Length\",\r\n        \"BinaryFormat.List\",\r\n        \"BinaryFormat.Null\",\r\n        \"BinaryFormat.Record\",\r\n        \"BinaryFormat.SignedInteger16\",\r\n        \"BinaryFormat.SignedInteger32\",\r\n        \"BinaryFormat.SignedInteger64\",\r\n        \"BinaryFormat.Single\",\r\n        \"BinaryFormat.Text\",\r\n        \"BinaryFormat.Transform\",\r\n        \"BinaryFormat.UnsignedInteger16\",\r\n        \"BinaryFormat.UnsignedInteger32\",\r\n        \"BinaryFormat.UnsignedInteger64\",\r\n        \"Byte.From\",\r\n        \"Character.FromNumber\",\r\n        \"Character.ToNumber\",\r\n        \"Combiner.CombineTextByDelimiter\",\r\n        \"Combiner.CombineTextByEachDelimiter\",\r\n        \"Combiner.CombineTextByLengths\",\r\n        \"Combiner.CombineTextByPositions\",\r\n        \"Combiner.CombineTextByRanges\",\r\n        \"Comparer.Equals\",\r\n        \"Comparer.FromCulture\",\r\n        \"Comparer.Ordinal\",\r\n        \"Comparer.OrdinalIgnoreCase\",\r\n        \"Csv.Document\",\r\n        \"Cube.AddAndExpandDimensionColumn\",\r\n        \"Cube.AddMeasureColumn\",\r\n        \"Cube.ApplyParameter\",\r\n        \"Cube.AttributeMemberId\",\r\n        \"Cube.AttributeMemberProperty\",\r\n        \"Cube.CollapseAndRemoveColumns\",\r\n        \"Cube.Dimensions\",\r\n        \"Cube.DisplayFolders\",\r\n        \"Cube.Measures\",\r\n        \"Cube.Parameters\",\r\n        \"Cube.Properties\",\r\n        \"Cube.PropertyKey\",\r\n        \"Cube.ReplaceDimensions\",\r\n        \"Cube.Transform\",\r\n        \"Currency.From\",\r\n        \"DB2.Database\",\r\n        \"Date.AddDays\",\r\n        \"Date.AddMonths\",\r\n        \"Date.AddQuarters\",\r\n        \"Date.AddWeeks\",\r\n        \"Date.AddYears\",\r\n        \"Date.Day\",\r\n        \"Date.DayOfWeek\",\r\n        \"Date.DayOfWeekName\",\r\n        \"Date.DayOfYear\",\r\n        \"Date.DaysInMonth\",\r\n        \"Date.EndOfDay\",\r\n        \"Date.EndOfMonth\",\r\n        \"Date.EndOfQuarter\",\r\n        \"Date.EndOfWeek\",\r\n        \"Date.EndOfYear\",\r\n        \"Date.From\",\r\n        \"Date.FromText\",\r\n        \"Date.IsInCurrentDay\",\r\n        \"Date.IsInCurrentMonth\",\r\n        \"Date.IsInCurrentQuarter\",\r\n        \"Date.IsInCurrentWeek\",\r\n        \"Date.IsInCurrentYear\",\r\n        \"Date.IsInNextDay\",\r\n        \"Date.IsInNextMonth\",\r\n        \"Date.IsInNextNDays\",\r\n        \"Date.IsInNextNMonths\",\r\n        \"Date.IsInNextNQuarters\",\r\n        \"Date.IsInNextNWeeks\",\r\n        \"Date.IsInNextNYears\",\r\n        \"Date.IsInNextQuarter\",\r\n        \"Date.IsInNextWeek\",\r\n        \"Date.IsInNextYear\",\r\n        \"Date.IsInPreviousDay\",\r\n        \"Date.IsInPreviousMonth\",\r\n        \"Date.IsInPreviousNDays\",\r\n        \"Date.IsInPreviousNMonths\",\r\n        \"Date.IsInPreviousNQuarters\",\r\n        \"Date.IsInPreviousNWeeks\",\r\n        \"Date.IsInPreviousNYears\",\r\n        \"Date.IsInPreviousQuarter\",\r\n        \"Date.IsInPreviousWeek\",\r\n        \"Date.IsInPreviousYear\",\r\n        \"Date.IsInYearToDate\",\r\n        \"Date.IsLeapYear\",\r\n        \"Date.Month\",\r\n        \"Date.MonthName\",\r\n        \"Date.QuarterOfYear\",\r\n        \"Date.StartOfDay\",\r\n        \"Date.StartOfMonth\",\r\n        \"Date.StartOfQuarter\",\r\n        \"Date.StartOfWeek\",\r\n        \"Date.StartOfYear\",\r\n        \"Date.ToRecord\",\r\n        \"Date.ToText\",\r\n        \"Date.WeekOfMonth\",\r\n        \"Date.WeekOfYear\",\r\n        \"Date.Year\",\r\n        \"DateTime.AddZone\",\r\n        \"DateTime.Date\",\r\n        \"DateTime.FixedLocalNow\",\r\n        \"DateTime.From\",\r\n        \"DateTime.FromFileTime\",\r\n        \"DateTime.FromText\",\r\n        \"DateTime.IsInCurrentHour\",\r\n        \"DateTime.IsInCurrentMinute\",\r\n        \"DateTime.IsInCurrentSecond\",\r\n        \"DateTime.IsInNextHour\",\r\n        \"DateTime.IsInNextMinute\",\r\n        \"DateTime.IsInNextNHours\",\r\n        \"DateTime.IsInNextNMinutes\",\r\n        \"DateTime.IsInNextNSeconds\",\r\n        \"DateTime.IsInNextSecond\",\r\n        \"DateTime.IsInPreviousHour\",\r\n        \"DateTime.IsInPreviousMinute\",\r\n        \"DateTime.IsInPreviousNHours\",\r\n        \"DateTime.IsInPreviousNMinutes\",\r\n        \"DateTime.IsInPreviousNSeconds\",\r\n        \"DateTime.IsInPreviousSecond\",\r\n        \"DateTime.LocalNow\",\r\n        \"DateTime.Time\",\r\n        \"DateTime.ToRecord\",\r\n        \"DateTime.ToText\",\r\n        \"DateTimeZone.FixedLocalNow\",\r\n        \"DateTimeZone.FixedUtcNow\",\r\n        \"DateTimeZone.From\",\r\n        \"DateTimeZone.FromFileTime\",\r\n        \"DateTimeZone.FromText\",\r\n        \"DateTimeZone.LocalNow\",\r\n        \"DateTimeZone.RemoveZone\",\r\n        \"DateTimeZone.SwitchZone\",\r\n        \"DateTimeZone.ToLocal\",\r\n        \"DateTimeZone.ToRecord\",\r\n        \"DateTimeZone.ToText\",\r\n        \"DateTimeZone.ToUtc\",\r\n        \"DateTimeZone.UtcNow\",\r\n        \"DateTimeZone.ZoneHours\",\r\n        \"DateTimeZone.ZoneMinutes\",\r\n        \"Decimal.From\",\r\n        \"Diagnostics.ActivityId\",\r\n        \"Diagnostics.Trace\",\r\n        \"DirectQueryCapabilities.From\",\r\n        \"Double.From\",\r\n        \"Duration.Days\",\r\n        \"Duration.From\",\r\n        \"Duration.FromText\",\r\n        \"Duration.Hours\",\r\n        \"Duration.Minutes\",\r\n        \"Duration.Seconds\",\r\n        \"Duration.ToRecord\",\r\n        \"Duration.ToText\",\r\n        \"Duration.TotalDays\",\r\n        \"Duration.TotalHours\",\r\n        \"Duration.TotalMinutes\",\r\n        \"Duration.TotalSeconds\",\r\n        \"Embedded.Value\",\r\n        \"Error.Record\",\r\n        \"Excel.CurrentWorkbook\",\r\n        \"Excel.Workbook\",\r\n        \"Exchange.Contents\",\r\n        \"Expression.Constant\",\r\n        \"Expression.Evaluate\",\r\n        \"Expression.Identifier\",\r\n        \"Facebook.Graph\",\r\n        \"File.Contents\",\r\n        \"Folder.Contents\",\r\n        \"Folder.Files\",\r\n        \"Function.From\",\r\n        \"Function.Invoke\",\r\n        \"Function.InvokeAfter\",\r\n        \"Function.IsDataSource\",\r\n        \"GoogleAnalytics.Accounts\",\r\n        \"Guid.From\",\r\n        \"HdInsight.Containers\",\r\n        \"HdInsight.Contents\",\r\n        \"HdInsight.Files\",\r\n        \"Hdfs.Contents\",\r\n        \"Hdfs.Files\",\r\n        \"Informix.Database\",\r\n        \"Int16.From\",\r\n        \"Int32.From\",\r\n        \"Int64.From\",\r\n        \"Int8.From\",\r\n        \"ItemExpression.From\",\r\n        \"Json.Document\",\r\n        \"Json.FromValue\",\r\n        \"Lines.FromBinary\",\r\n        \"Lines.FromText\",\r\n        \"Lines.ToBinary\",\r\n        \"Lines.ToText\",\r\n        \"List.Accumulate\",\r\n        \"List.AllTrue\",\r\n        \"List.Alternate\",\r\n        \"List.AnyTrue\",\r\n        \"List.Average\",\r\n        \"List.Buffer\",\r\n        \"List.Combine\",\r\n        \"List.Contains\",\r\n        \"List.ContainsAll\",\r\n        \"List.ContainsAny\",\r\n        \"List.Count\",\r\n        \"List.Covariance\",\r\n        \"List.DateTimeZones\",\r\n        \"List.DateTimes\",\r\n        \"List.Dates\",\r\n        \"List.Difference\",\r\n        \"List.Distinct\",\r\n        \"List.Durations\",\r\n        \"List.FindText\",\r\n        \"List.First\",\r\n        \"List.FirstN\",\r\n        \"List.Generate\",\r\n        \"List.InsertRange\",\r\n        \"List.Intersect\",\r\n        \"List.IsDistinct\",\r\n        \"List.IsEmpty\",\r\n        \"List.Last\",\r\n        \"List.LastN\",\r\n        \"List.MatchesAll\",\r\n        \"List.MatchesAny\",\r\n        \"List.Max\",\r\n        \"List.MaxN\",\r\n        \"List.Median\",\r\n        \"List.Min\",\r\n        \"List.MinN\",\r\n        \"List.Mode\",\r\n        \"List.Modes\",\r\n        \"List.NonNullCount\",\r\n        \"List.Numbers\",\r\n        \"List.PositionOf\",\r\n        \"List.PositionOfAny\",\r\n        \"List.Positions\",\r\n        \"List.Product\",\r\n        \"List.Random\",\r\n        \"List.Range\",\r\n        \"List.RemoveFirstN\",\r\n        \"List.RemoveItems\",\r\n        \"List.RemoveLastN\",\r\n        \"List.RemoveMatchingItems\",\r\n        \"List.RemoveNulls\",\r\n        \"List.RemoveRange\",\r\n        \"List.Repeat\",\r\n        \"List.ReplaceMatchingItems\",\r\n        \"List.ReplaceRange\",\r\n        \"List.ReplaceValue\",\r\n        \"List.Reverse\",\r\n        \"List.Select\",\r\n        \"List.Single\",\r\n        \"List.SingleOrDefault\",\r\n        \"List.Skip\",\r\n        \"List.Sort\",\r\n        \"List.StandardDeviation\",\r\n        \"List.Sum\",\r\n        \"List.Times\",\r\n        \"List.Transform\",\r\n        \"List.TransformMany\",\r\n        \"List.Union\",\r\n        \"List.Zip\",\r\n        \"Logical.From\",\r\n        \"Logical.FromText\",\r\n        \"Logical.ToText\",\r\n        \"MQ.Queue\",\r\n        \"MySQL.Database\",\r\n        \"Number.Abs\",\r\n        \"Number.Acos\",\r\n        \"Number.Asin\",\r\n        \"Number.Atan\",\r\n        \"Number.Atan2\",\r\n        \"Number.BitwiseAnd\",\r\n        \"Number.BitwiseNot\",\r\n        \"Number.BitwiseOr\",\r\n        \"Number.BitwiseShiftLeft\",\r\n        \"Number.BitwiseShiftRight\",\r\n        \"Number.BitwiseXor\",\r\n        \"Number.Combinations\",\r\n        \"Number.Cos\",\r\n        \"Number.Cosh\",\r\n        \"Number.Exp\",\r\n        \"Number.Factorial\",\r\n        \"Number.From\",\r\n        \"Number.FromText\",\r\n        \"Number.IntegerDivide\",\r\n        \"Number.IsEven\",\r\n        \"Number.IsNaN\",\r\n        \"Number.IsOdd\",\r\n        \"Number.Ln\",\r\n        \"Number.Log\",\r\n        \"Number.Log10\",\r\n        \"Number.Mod\",\r\n        \"Number.Permutations\",\r\n        \"Number.Power\",\r\n        \"Number.Random\",\r\n        \"Number.RandomBetween\",\r\n        \"Number.Round\",\r\n        \"Number.RoundAwayFromZero\",\r\n        \"Number.RoundDown\",\r\n        \"Number.RoundTowardZero\",\r\n        \"Number.RoundUp\",\r\n        \"Number.Sign\",\r\n        \"Number.Sin\",\r\n        \"Number.Sinh\",\r\n        \"Number.Sqrt\",\r\n        \"Number.Tan\",\r\n        \"Number.Tanh\",\r\n        \"Number.ToText\",\r\n        \"OData.Feed\",\r\n        \"Odbc.DataSource\",\r\n        \"Odbc.Query\",\r\n        \"OleDb.DataSource\",\r\n        \"OleDb.Query\",\r\n        \"Oracle.Database\",\r\n        \"Percentage.From\",\r\n        \"PostgreSQL.Database\",\r\n        \"RData.FromBinary\",\r\n        \"Record.AddField\",\r\n        \"Record.Combine\",\r\n        \"Record.Field\",\r\n        \"Record.FieldCount\",\r\n        \"Record.FieldNames\",\r\n        \"Record.FieldOrDefault\",\r\n        \"Record.FieldValues\",\r\n        \"Record.FromList\",\r\n        \"Record.FromTable\",\r\n        \"Record.HasFields\",\r\n        \"Record.RemoveFields\",\r\n        \"Record.RenameFields\",\r\n        \"Record.ReorderFields\",\r\n        \"Record.SelectFields\",\r\n        \"Record.ToList\",\r\n        \"Record.ToTable\",\r\n        \"Record.TransformFields\",\r\n        \"Replacer.ReplaceText\",\r\n        \"Replacer.ReplaceValue\",\r\n        \"RowExpression.Column\",\r\n        \"RowExpression.From\",\r\n        \"Salesforce.Data\",\r\n        \"Salesforce.Reports\",\r\n        \"SapBusinessWarehouse.Cubes\",\r\n        \"SapHana.Database\",\r\n        \"SharePoint.Contents\",\r\n        \"SharePoint.Files\",\r\n        \"SharePoint.Tables\",\r\n        \"Single.From\",\r\n        \"Soda.Feed\",\r\n        \"Splitter.SplitByNothing\",\r\n        \"Splitter.SplitTextByAnyDelimiter\",\r\n        \"Splitter.SplitTextByDelimiter\",\r\n        \"Splitter.SplitTextByEachDelimiter\",\r\n        \"Splitter.SplitTextByLengths\",\r\n        \"Splitter.SplitTextByPositions\",\r\n        \"Splitter.SplitTextByRanges\",\r\n        \"Splitter.SplitTextByRepeatedLengths\",\r\n        \"Splitter.SplitTextByWhitespace\",\r\n        \"Sql.Database\",\r\n        \"Sql.Databases\",\r\n        \"SqlExpression.SchemaFrom\",\r\n        \"SqlExpression.ToExpression\",\r\n        \"Sybase.Database\",\r\n        \"Table.AddColumn\",\r\n        \"Table.AddIndexColumn\",\r\n        \"Table.AddJoinColumn\",\r\n        \"Table.AddKey\",\r\n        \"Table.AggregateTableColumn\",\r\n        \"Table.AlternateRows\",\r\n        \"Table.Buffer\",\r\n        \"Table.Column\",\r\n        \"Table.ColumnCount\",\r\n        \"Table.ColumnNames\",\r\n        \"Table.ColumnsOfType\",\r\n        \"Table.Combine\",\r\n        \"Table.CombineColumns\",\r\n        \"Table.Contains\",\r\n        \"Table.ContainsAll\",\r\n        \"Table.ContainsAny\",\r\n        \"Table.DemoteHeaders\",\r\n        \"Table.Distinct\",\r\n        \"Table.DuplicateColumn\",\r\n        \"Table.ExpandListColumn\",\r\n        \"Table.ExpandRecordColumn\",\r\n        \"Table.ExpandTableColumn\",\r\n        \"Table.FillDown\",\r\n        \"Table.FillUp\",\r\n        \"Table.FilterWithDataTable\",\r\n        \"Table.FindText\",\r\n        \"Table.First\",\r\n        \"Table.FirstN\",\r\n        \"Table.FirstValue\",\r\n        \"Table.FromColumns\",\r\n        \"Table.FromList\",\r\n        \"Table.FromPartitions\",\r\n        \"Table.FromRecords\",\r\n        \"Table.FromRows\",\r\n        \"Table.FromValue\",\r\n        \"Table.Group\",\r\n        \"Table.HasColumns\",\r\n        \"Table.InsertRows\",\r\n        \"Table.IsDistinct\",\r\n        \"Table.IsEmpty\",\r\n        \"Table.Join\",\r\n        \"Table.Keys\",\r\n        \"Table.Last\",\r\n        \"Table.LastN\",\r\n        \"Table.MatchesAllRows\",\r\n        \"Table.MatchesAnyRows\",\r\n        \"Table.Max\",\r\n        \"Table.MaxN\",\r\n        \"Table.Min\",\r\n        \"Table.MinN\",\r\n        \"Table.NestedJoin\",\r\n        \"Table.Partition\",\r\n        \"Table.PartitionValues\",\r\n        \"Table.Pivot\",\r\n        \"Table.PositionOf\",\r\n        \"Table.PositionOfAny\",\r\n        \"Table.PrefixColumns\",\r\n        \"Table.Profile\",\r\n        \"Table.PromoteHeaders\",\r\n        \"Table.Range\",\r\n        \"Table.RemoveColumns\",\r\n        \"Table.RemoveFirstN\",\r\n        \"Table.RemoveLastN\",\r\n        \"Table.RemoveMatchingRows\",\r\n        \"Table.RemoveRows\",\r\n        \"Table.RemoveRowsWithErrors\",\r\n        \"Table.RenameColumns\",\r\n        \"Table.ReorderColumns\",\r\n        \"Table.Repeat\",\r\n        \"Table.ReplaceErrorValues\",\r\n        \"Table.ReplaceKeys\",\r\n        \"Table.ReplaceMatchingRows\",\r\n        \"Table.ReplaceRelationshipIdentity\",\r\n        \"Table.ReplaceRows\",\r\n        \"Table.ReplaceValue\",\r\n        \"Table.ReverseRows\",\r\n        \"Table.RowCount\",\r\n        \"Table.Schema\",\r\n        \"Table.SelectColumns\",\r\n        \"Table.SelectRows\",\r\n        \"Table.SelectRowsWithErrors\",\r\n        \"Table.SingleRow\",\r\n        \"Table.Skip\",\r\n        \"Table.Sort\",\r\n        \"Table.SplitColumn\",\r\n        \"Table.ToColumns\",\r\n        \"Table.ToList\",\r\n        \"Table.ToRecords\",\r\n        \"Table.ToRows\",\r\n        \"Table.TransformColumnNames\",\r\n        \"Table.TransformColumnTypes\",\r\n        \"Table.TransformColumns\",\r\n        \"Table.TransformRows\",\r\n        \"Table.Transpose\",\r\n        \"Table.Unpivot\",\r\n        \"Table.UnpivotOtherColumns\",\r\n        \"Table.View\",\r\n        \"Table.ViewFunction\",\r\n        \"TableAction.DeleteRows\",\r\n        \"TableAction.InsertRows\",\r\n        \"TableAction.UpdateRows\",\r\n        \"Tables.GetRelationships\",\r\n        \"Teradata.Database\",\r\n        \"Text.AfterDelimiter\",\r\n        \"Text.At\",\r\n        \"Text.BeforeDelimiter\",\r\n        \"Text.BetweenDelimiters\",\r\n        \"Text.Clean\",\r\n        \"Text.Combine\",\r\n        \"Text.Contains\",\r\n        \"Text.End\",\r\n        \"Text.EndsWith\",\r\n        \"Text.Format\",\r\n        \"Text.From\",\r\n        \"Text.FromBinary\",\r\n        \"Text.Insert\",\r\n        \"Text.Length\",\r\n        \"Text.Lower\",\r\n        \"Text.Middle\",\r\n        \"Text.NewGuid\",\r\n        \"Text.PadEnd\",\r\n        \"Text.PadStart\",\r\n        \"Text.PositionOf\",\r\n        \"Text.PositionOfAny\",\r\n        \"Text.Proper\",\r\n        \"Text.Range\",\r\n        \"Text.Remove\",\r\n        \"Text.RemoveRange\",\r\n        \"Text.Repeat\",\r\n        \"Text.Replace\",\r\n        \"Text.ReplaceRange\",\r\n        \"Text.Select\",\r\n        \"Text.Split\",\r\n        \"Text.SplitAny\",\r\n        \"Text.Start\",\r\n        \"Text.StartsWith\",\r\n        \"Text.ToBinary\",\r\n        \"Text.ToList\",\r\n        \"Text.Trim\",\r\n        \"Text.TrimEnd\",\r\n        \"Text.TrimStart\",\r\n        \"Text.Upper\",\r\n        \"Time.EndOfHour\",\r\n        \"Time.From\",\r\n        \"Time.FromText\",\r\n        \"Time.Hour\",\r\n        \"Time.Minute\",\r\n        \"Time.Second\",\r\n        \"Time.StartOfHour\",\r\n        \"Time.ToRecord\",\r\n        \"Time.ToText\",\r\n        \"Type.AddTableKey\",\r\n        \"Type.ClosedRecord\",\r\n        \"Type.Facets\",\r\n        \"Type.ForFunction\",\r\n        \"Type.ForRecord\",\r\n        \"Type.FunctionParameters\",\r\n        \"Type.FunctionRequiredParameters\",\r\n        \"Type.FunctionReturn\",\r\n        \"Type.Is\",\r\n        \"Type.IsNullable\",\r\n        \"Type.IsOpenRecord\",\r\n        \"Type.ListItem\",\r\n        \"Type.NonNullable\",\r\n        \"Type.OpenRecord\",\r\n        \"Type.RecordFields\",\r\n        \"Type.ReplaceFacets\",\r\n        \"Type.ReplaceTableKeys\",\r\n        \"Type.TableColumn\",\r\n        \"Type.TableKeys\",\r\n        \"Type.TableRow\",\r\n        \"Type.TableSchema\",\r\n        \"Type.Union\",\r\n        \"Uri.BuildQueryString\",\r\n        \"Uri.Combine\",\r\n        \"Uri.EscapeDataString\",\r\n        \"Uri.Parts\",\r\n        \"Value.Add\",\r\n        \"Value.As\",\r\n        \"Value.Compare\",\r\n        \"Value.Divide\",\r\n        \"Value.Equals\",\r\n        \"Value.Firewall\",\r\n        \"Value.FromText\",\r\n        \"Value.Is\",\r\n        \"Value.Metadata\",\r\n        \"Value.Multiply\",\r\n        \"Value.NativeQuery\",\r\n        \"Value.NullableEquals\",\r\n        \"Value.RemoveMetadata\",\r\n        \"Value.ReplaceMetadata\",\r\n        \"Value.ReplaceType\",\r\n        \"Value.Subtract\",\r\n        \"Value.Type\",\r\n        \"ValueAction.NativeStatement\",\r\n        \"ValueAction.Replace\",\r\n        \"Variable.Value\",\r\n        \"Web.Contents\",\r\n        \"Web.Page\",\r\n        \"WebAction.Request\",\r\n        \"Xml.Document\",\r\n        \"Xml.Tables\"\r\n    ],\r\n    builtinConstants: [\r\n        \"BinaryEncoding.Base64\",\r\n        \"BinaryEncoding.Hex\",\r\n        \"BinaryOccurrence.Optional\",\r\n        \"BinaryOccurrence.Repeating\",\r\n        \"BinaryOccurrence.Required\",\r\n        \"ByteOrder.BigEndian\",\r\n        \"ByteOrder.LittleEndian\",\r\n        \"Compression.Deflate\",\r\n        \"Compression.GZip\",\r\n        \"CsvStyle.QuoteAfterDelimiter\",\r\n        \"CsvStyle.QuoteAlways\",\r\n        \"Culture.Current\",\r\n        \"Day.Friday\",\r\n        \"Day.Monday\",\r\n        \"Day.Saturday\",\r\n        \"Day.Sunday\",\r\n        \"Day.Thursday\",\r\n        \"Day.Tuesday\",\r\n        \"Day.Wednesday\",\r\n        \"ExtraValues.Error\",\r\n        \"ExtraValues.Ignore\",\r\n        \"ExtraValues.List\",\r\n        \"GroupKind.Global\",\r\n        \"GroupKind.Local\",\r\n        \"JoinAlgorithm.Dynamic\",\r\n        \"JoinAlgorithm.LeftHash\",\r\n        \"JoinAlgorithm.LeftIndex\",\r\n        \"JoinAlgorithm.PairwiseHash\",\r\n        \"JoinAlgorithm.RightHash\",\r\n        \"JoinAlgorithm.RightIndex\",\r\n        \"JoinAlgorithm.SortMerge\",\r\n        \"JoinKind.FullOuter\",\r\n        \"JoinKind.Inner\",\r\n        \"JoinKind.LeftAnti\",\r\n        \"JoinKind.LeftOuter\",\r\n        \"JoinKind.RightAnti\",\r\n        \"JoinKind.RightOuter\",\r\n        \"JoinSide.Left\",\r\n        \"JoinSide.Right\",\r\n        \"MissingField.Error\",\r\n        \"MissingField.Ignore\",\r\n        \"MissingField.UseNull\",\r\n        \"Number.E\",\r\n        \"Number.Epsilon\",\r\n        \"Number.NaN\",\r\n        \"Number.NegativeInfinity\",\r\n        \"Number.PI\",\r\n        \"Number.PositiveInfinity\",\r\n        \"Occurrence.All\",\r\n        \"Occurrence.First\",\r\n        \"Occurrence.Last\",\r\n        \"Occurrence.Optional\",\r\n        \"Occurrence.Repeating\",\r\n        \"Occurrence.Required\",\r\n        \"Order.Ascending\",\r\n        \"Order.Descending\",\r\n        \"Precision.Decimal\",\r\n        \"Precision.Double\",\r\n        \"QuoteStyle.Csv\",\r\n        \"QuoteStyle.None\",\r\n        \"RelativePosition.FromEnd\",\r\n        \"RelativePosition.FromStart\",\r\n        \"RoundingMode.AwayFromZero\",\r\n        \"RoundingMode.Down\",\r\n        \"RoundingMode.ToEven\",\r\n        \"RoundingMode.TowardZero\",\r\n        \"RoundingMode.Up\",\r\n        \"SapHanaDistribution.All\",\r\n        \"SapHanaDistribution.Connection\",\r\n        \"SapHanaDistribution.Off\",\r\n        \"SapHanaDistribution.Statement\",\r\n        \"SapHanaRangeOperator.Equals\",\r\n        \"SapHanaRangeOperator.GreaterThan\",\r\n        \"SapHanaRangeOperator.GreaterThanOrEquals\",\r\n        \"SapHanaRangeOperator.LessThan\",\r\n        \"SapHanaRangeOperator.LessThanOrEquals\",\r\n        \"SapHanaRangeOperator.NotEquals\",\r\n        \"TextEncoding.Ascii\",\r\n        \"TextEncoding.BigEndianUnicode\",\r\n        \"TextEncoding.Unicode\",\r\n        \"TextEncoding.Utf16\",\r\n        \"TextEncoding.Utf8\",\r\n        \"TextEncoding.Windows\",\r\n        \"TraceLevel.Critical\",\r\n        \"TraceLevel.Error\",\r\n        \"TraceLevel.Information\",\r\n        \"TraceLevel.Verbose\",\r\n        \"TraceLevel.Warning\",\r\n        \"WebMethod.Delete\",\r\n        \"WebMethod.Get\",\r\n        \"WebMethod.Head\",\r\n        \"WebMethod.Patch\",\r\n        \"WebMethod.Post\",\r\n        \"WebMethod.Put\"\r\n    ],\r\n    builtinTypes: [\r\n        \"Action.Type\",\r\n        \"Any.Type\",\r\n        \"Binary.Type\",\r\n        \"BinaryEncoding.Type\",\r\n        \"BinaryOccurrence.Type\",\r\n        \"Byte.Type\",\r\n        \"ByteOrder.Type\",\r\n        \"Character.Type\",\r\n        \"Compression.Type\",\r\n        \"CsvStyle.Type\",\r\n        \"Currency.Type\",\r\n        \"Date.Type\",\r\n        \"DateTime.Type\",\r\n        \"DateTimeZone.Type\",\r\n        \"Day.Type\",\r\n        \"Decimal.Type\",\r\n        \"Double.Type\",\r\n        \"Duration.Type\",\r\n        \"ExtraValues.Type\",\r\n        \"Function.Type\",\r\n        \"GroupKind.Type\",\r\n        \"Guid.Type\",\r\n        \"Int16.Type\",\r\n        \"Int32.Type\",\r\n        \"Int64.Type\",\r\n        \"Int8.Type\",\r\n        \"JoinAlgorithm.Type\",\r\n        \"JoinKind.Type\",\r\n        \"JoinSide.Type\",\r\n        \"List.Type\",\r\n        \"Logical.Type\",\r\n        \"MissingField.Type\",\r\n        \"None.Type\",\r\n        \"Null.Type\",\r\n        \"Number.Type\",\r\n        \"Occurrence.Type\",\r\n        \"Order.Type\",\r\n        \"Password.Type\",\r\n        \"Percentage.Type\",\r\n        \"Precision.Type\",\r\n        \"QuoteStyle.Type\",\r\n        \"Record.Type\",\r\n        \"RelativePosition.Type\",\r\n        \"RoundingMode.Type\",\r\n        \"SapHanaDistribution.Type\",\r\n        \"SapHanaRangeOperator.Type\",\r\n        \"Single.Type\",\r\n        \"Table.Type\",\r\n        \"Text.Type\",\r\n        \"TextEncoding.Type\",\r\n        \"Time.Type\",\r\n        \"TraceLevel.Type\",\r\n        \"Type.Type\",\r\n        \"Uri.Type\",\r\n        \"WebMethod.Type\"\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            // quoted identifier\r\n            [/#\"[\\w \\.]+\"/, \"identifier.quote\"],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\r\n            [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\r\n            [/\\d+([eE][\\-+]?\\d+)?/, \"number\"],\r\n            // keywords\r\n            [/(#?[a-z]+)\\b/,\r\n                {\r\n                    cases: {\r\n                        \"@typeKeywords\": \"type\",\r\n                        \"@keywords\": \"keyword\",\r\n                        \"@constants\": \"constant\",\r\n                        \"@constructors\": \"constructor\",\r\n                        \"@operatorKeywords\": \"operators\",\r\n                        \"@default\": \"identifier\"\r\n                    }\r\n                }\r\n            ],\r\n            // built-in types\r\n            [/\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/,\r\n                {\r\n                    cases: {\r\n                        \"@builtinTypes\": \"type\",\r\n                        \"@default\": \"identifier\"\r\n                    }\r\n                }\r\n            ],\r\n            // other built-ins\r\n            [/\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/,\r\n                {\r\n                    cases: {\r\n                        \"@builtinFunctions\": \"keyword.function\",\r\n                        \"@builtinConstants\": \"constant\",\r\n                        \"@default\": \"identifier\"\r\n                    }\r\n                }\r\n            ],\r\n            // other identifiers\r\n            [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"],\r\n            { include: \"@whitespace\" },\r\n            { include: \"@comments\" },\r\n            { include: \"@strings\" },\r\n            [/[{}()\\[\\]]/, \"@brackets\"],\r\n            [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"],\r\n            [/[,;]/, \"delimiter\"],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, \"white\"]\r\n        ],\r\n        comments: [\r\n            [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\r\n            [\"\\\\/\\\\/+.*\", \"comment\"]\r\n        ],\r\n        comment: [\r\n            [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\r\n            [\".\", \"comment\"]\r\n        ],\r\n        strings: [\r\n            [\"\\\"\", \"string\", \"@string\"]\r\n        ],\r\n        string: [\r\n            [\"\\\"\\\"\", \"string.escape\"],\r\n            [\"\\\"\", \"string\", \"@pop\"],\r\n            [\".\", \"string\"]\r\n        ]\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZ,OAAO,IAAIA,IAAI,GAAG;EACdC,QAAQ,EAAE;IACNC,WAAW,EAAE,IAAI;IACjBC,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI;EAC7B,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9CC,gBAAgB,EAAE,CACd;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY;EAAE,CAAC,EACrE;IAAEF,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY;EAAE,CAAC,EACrE;IAAEF,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY;EAAE,CAAC,EACrE;IAAEF,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY;EAAE,CAAC;AAE7E,CAAC;AACD,OAAO,IAAIC,QAAQ,GAAG;EAClBC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,KAAK;EACnBC,UAAU,EAAE,KAAK;EACjBR,QAAQ,EAAE,CACN;IAAEE,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEM,KAAK,EAAE;EAAmB,CAAC,EACpD;IAAEP,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEM,KAAK,EAAE;EAAqB,CAAC,EACtD;IAAEP,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEM,KAAK,EAAE;EAAwB,CAAC,CAC5D;EACDC,gBAAgB,EAAE,CACd,KAAK,EACL,KAAK,EACL,IAAI,CACP;EACDC,QAAQ,EAAE,CACN,IAAI,EACJ,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,MAAM,EACN,WAAW,EACX,SAAS,EACT,QAAQ,EACR,MAAM,EACN,MAAM,EACN,KAAK,EACL,MAAM,CACT;EACDC,YAAY,EAAE,CACV,SAAS,EACT,OAAO,EACP,WAAW,EACX,eAAe,EACf,WAAW,EACX,QAAQ,EACR,OAAO,CACV;EACDC,SAAS,EAAE,CACP,WAAW,EACX,MAAM,EACN,WAAW,EACX,SAAS,CACZ;EACDC,YAAY,EAAE,CACV,QAAQ,EACR,KAAK,EACL,YAAY,EACZ,MAAM,EACN,MAAM,EACN,SAAS,EACT,QAAQ,EACR,MAAM,EACN,MAAM,EACN,UAAU,EACV,cAAc,EACd,UAAU,EACV,MAAM,EACN,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,OAAO,EACP,UAAU,CACb;EACDC,gBAAgB,EAAE,CACd,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EACjB,YAAY,EACZ,yBAAyB,EACzB,sBAAsB,EACtB,iBAAiB,EACjB,sBAAsB,EACtB,2BAA2B,EAC3B,4BAA4B,EAC5B,2BAA2B,EAC3B,oBAAoB,EACpB,qBAAqB,EACrB,eAAe,EACf,gBAAgB,EAChB,iBAAiB,EACjB,mBAAmB,EACnB,YAAY,EACZ,aAAa,EACb,iBAAiB,EACjB,iBAAiB,EACjB,yBAAyB,EACzB,eAAe,EACf,eAAe,EACf,eAAe,EACf,uCAAuC,EACvC,yCAAyC,EACzC,qBAAqB,EACrB,mBAAmB,EACnB,wBAAwB,EACxB,qBAAqB,EACrB,sBAAsB,EACtB,qBAAqB,EACrB,oBAAoB,EACpB,qBAAqB,EACrB,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACrB,8BAA8B,EAC9B,8BAA8B,EAC9B,8BAA8B,EAC9B,qBAAqB,EACrB,mBAAmB,EACnB,wBAAwB,EACxB,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,WAAW,EACX,sBAAsB,EACtB,oBAAoB,EACpB,iCAAiC,EACjC,qCAAqC,EACrC,+BAA+B,EAC/B,iCAAiC,EACjC,8BAA8B,EAC9B,iBAAiB,EACjB,sBAAsB,EACtB,kBAAkB,EAClB,4BAA4B,EAC5B,cAAc,EACd,kCAAkC,EAClC,uBAAuB,EACvB,qBAAqB,EACrB,wBAAwB,EACxB,8BAA8B,EAC9B,+BAA+B,EAC/B,iBAAiB,EACjB,qBAAqB,EACrB,eAAe,EACf,iBAAiB,EACjB,iBAAiB,EACjB,kBAAkB,EAClB,wBAAwB,EACxB,gBAAgB,EAChB,eAAe,EACf,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,kBAAkB,EAClB,eAAe,EACf,eAAe,EACf,UAAU,EACV,gBAAgB,EAChB,oBAAoB,EACpB,gBAAgB,EAChB,kBAAkB,EAClB,eAAe,EACf,iBAAiB,EACjB,mBAAmB,EACnB,gBAAgB,EAChB,gBAAgB,EAChB,WAAW,EACX,eAAe,EACf,qBAAqB,EACrB,uBAAuB,EACvB,yBAAyB,EACzB,sBAAsB,EACtB,sBAAsB,EACtB,kBAAkB,EAClB,oBAAoB,EACpB,oBAAoB,EACpB,sBAAsB,EACtB,wBAAwB,EACxB,qBAAqB,EACrB,qBAAqB,EACrB,sBAAsB,EACtB,mBAAmB,EACnB,mBAAmB,EACnB,sBAAsB,EACtB,wBAAwB,EACxB,wBAAwB,EACxB,0BAA0B,EAC1B,4BAA4B,EAC5B,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,uBAAuB,EACvB,uBAAuB,EACvB,qBAAqB,EACrB,iBAAiB,EACjB,YAAY,EACZ,gBAAgB,EAChB,oBAAoB,EACpB,iBAAiB,EACjB,mBAAmB,EACnB,qBAAqB,EACrB,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,aAAa,EACb,kBAAkB,EAClB,iBAAiB,EACjB,WAAW,EACX,kBAAkB,EAClB,eAAe,EACf,wBAAwB,EACxB,eAAe,EACf,uBAAuB,EACvB,mBAAmB,EACnB,0BAA0B,EAC1B,4BAA4B,EAC5B,4BAA4B,EAC5B,uBAAuB,EACvB,yBAAyB,EACzB,yBAAyB,EACzB,2BAA2B,EAC3B,2BAA2B,EAC3B,yBAAyB,EACzB,2BAA2B,EAC3B,6BAA6B,EAC7B,6BAA6B,EAC7B,+BAA+B,EAC/B,+BAA+B,EAC/B,6BAA6B,EAC7B,mBAAmB,EACnB,eAAe,EACf,mBAAmB,EACnB,iBAAiB,EACjB,4BAA4B,EAC5B,0BAA0B,EAC1B,mBAAmB,EACnB,2BAA2B,EAC3B,uBAAuB,EACvB,uBAAuB,EACvB,yBAAyB,EACzB,yBAAyB,EACzB,sBAAsB,EACtB,uBAAuB,EACvB,qBAAqB,EACrB,oBAAoB,EACpB,qBAAqB,EACrB,wBAAwB,EACxB,0BAA0B,EAC1B,cAAc,EACd,wBAAwB,EACxB,mBAAmB,EACnB,8BAA8B,EAC9B,aAAa,EACb,eAAe,EACf,eAAe,EACf,mBAAmB,EACnB,gBAAgB,EAChB,kBAAkB,EAClB,kBAAkB,EAClB,mBAAmB,EACnB,iBAAiB,EACjB,oBAAoB,EACpB,qBAAqB,EACrB,uBAAuB,EACvB,uBAAuB,EACvB,gBAAgB,EAChB,cAAc,EACd,uBAAuB,EACvB,gBAAgB,EAChB,mBAAmB,EACnB,qBAAqB,EACrB,qBAAqB,EACrB,uBAAuB,EACvB,gBAAgB,EAChB,eAAe,EACf,iBAAiB,EACjB,cAAc,EACd,eAAe,EACf,iBAAiB,EACjB,sBAAsB,EACtB,uBAAuB,EACvB,0BAA0B,EAC1B,WAAW,EACX,sBAAsB,EACtB,oBAAoB,EACpB,iBAAiB,EACjB,eAAe,EACf,YAAY,EACZ,mBAAmB,EACnB,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,qBAAqB,EACrB,eAAe,EACf,gBAAgB,EAChB,kBAAkB,EAClB,gBAAgB,EAChB,gBAAgB,EAChB,cAAc,EACd,iBAAiB,EACjB,cAAc,EACd,gBAAgB,EAChB,cAAc,EACd,cAAc,EACd,aAAa,EACb,cAAc,EACd,eAAe,EACf,kBAAkB,EAClB,kBAAkB,EAClB,YAAY,EACZ,iBAAiB,EACjB,oBAAoB,EACpB,gBAAgB,EAChB,YAAY,EACZ,iBAAiB,EACjB,eAAe,EACf,gBAAgB,EAChB,eAAe,EACf,YAAY,EACZ,aAAa,EACb,eAAe,EACf,kBAAkB,EAClB,gBAAgB,EAChB,iBAAiB,EACjB,cAAc,EACd,WAAW,EACX,YAAY,EACZ,iBAAiB,EACjB,iBAAiB,EACjB,UAAU,EACV,WAAW,EACX,aAAa,EACb,UAAU,EACV,WAAW,EACX,WAAW,EACX,YAAY,EACZ,mBAAmB,EACnB,cAAc,EACd,iBAAiB,EACjB,oBAAoB,EACpB,gBAAgB,EAChB,cAAc,EACd,aAAa,EACb,YAAY,EACZ,mBAAmB,EACnB,kBAAkB,EAClB,kBAAkB,EAClB,0BAA0B,EAC1B,kBAAkB,EAClB,kBAAkB,EAClB,aAAa,EACb,2BAA2B,EAC3B,mBAAmB,EACnB,mBAAmB,EACnB,cAAc,EACd,aAAa,EACb,aAAa,EACb,sBAAsB,EACtB,WAAW,EACX,WAAW,EACX,wBAAwB,EACxB,UAAU,EACV,YAAY,EACZ,gBAAgB,EAChB,oBAAoB,EACpB,YAAY,EACZ,UAAU,EACV,cAAc,EACd,kBAAkB,EAClB,gBAAgB,EAChB,UAAU,EACV,gBAAgB,EAChB,YAAY,EACZ,aAAa,EACb,aAAa,EACb,aAAa,EACb,cAAc,EACd,mBAAmB,EACnB,mBAAmB,EACnB,kBAAkB,EAClB,yBAAyB,EACzB,0BAA0B,EAC1B,mBAAmB,EACnB,qBAAqB,EACrB,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,kBAAkB,EAClB,aAAa,EACb,iBAAiB,EACjB,sBAAsB,EACtB,eAAe,EACf,cAAc,EACd,cAAc,EACd,WAAW,EACX,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,qBAAqB,EACrB,cAAc,EACd,eAAe,EACf,sBAAsB,EACtB,cAAc,EACd,0BAA0B,EAC1B,kBAAkB,EAClB,wBAAwB,EACxB,gBAAgB,EAChB,aAAa,EACb,YAAY,EACZ,aAAa,EACb,aAAa,EACb,YAAY,EACZ,aAAa,EACb,eAAe,EACf,YAAY,EACZ,iBAAiB,EACjB,YAAY,EACZ,kBAAkB,EAClB,aAAa,EACb,iBAAiB,EACjB,iBAAiB,EACjB,qBAAqB,EACrB,kBAAkB,EAClB,iBAAiB,EACjB,gBAAgB,EAChB,cAAc,EACd,mBAAmB,EACnB,mBAAmB,EACnB,uBAAuB,EACvB,oBAAoB,EACpB,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,qBAAqB,EACrB,qBAAqB,EACrB,sBAAsB,EACtB,qBAAqB,EACrB,eAAe,EACf,gBAAgB,EAChB,wBAAwB,EACxB,sBAAsB,EACtB,uBAAuB,EACvB,sBAAsB,EACtB,oBAAoB,EACpB,iBAAiB,EACjB,oBAAoB,EACpB,4BAA4B,EAC5B,kBAAkB,EAClB,qBAAqB,EACrB,kBAAkB,EAClB,mBAAmB,EACnB,aAAa,EACb,WAAW,EACX,yBAAyB,EACzB,kCAAkC,EAClC,+BAA+B,EAC/B,mCAAmC,EACnC,6BAA6B,EAC7B,+BAA+B,EAC/B,4BAA4B,EAC5B,qCAAqC,EACrC,gCAAgC,EAChC,cAAc,EACd,eAAe,EACf,0BAA0B,EAC1B,4BAA4B,EAC5B,iBAAiB,EACjB,iBAAiB,EACjB,sBAAsB,EACtB,qBAAqB,EACrB,cAAc,EACd,4BAA4B,EAC5B,qBAAqB,EACrB,cAAc,EACd,cAAc,EACd,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACrB,eAAe,EACf,sBAAsB,EACtB,gBAAgB,EAChB,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACrB,gBAAgB,EAChB,uBAAuB,EACvB,wBAAwB,EACxB,0BAA0B,EAC1B,yBAAyB,EACzB,gBAAgB,EAChB,cAAc,EACd,2BAA2B,EAC3B,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,kBAAkB,EAClB,mBAAmB,EACnB,gBAAgB,EAChB,sBAAsB,EACtB,mBAAmB,EACnB,gBAAgB,EAChB,iBAAiB,EACjB,aAAa,EACb,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,sBAAsB,EACtB,sBAAsB,EACtB,WAAW,EACX,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,kBAAkB,EAClB,iBAAiB,EACjB,uBAAuB,EACvB,aAAa,EACb,kBAAkB,EAClB,qBAAqB,EACrB,qBAAqB,EACrB,eAAe,EACf,sBAAsB,EACtB,aAAa,EACb,qBAAqB,EACrB,oBAAoB,EACpB,mBAAmB,EACnB,0BAA0B,EAC1B,kBAAkB,EAClB,4BAA4B,EAC5B,qBAAqB,EACrB,sBAAsB,EACtB,cAAc,EACd,0BAA0B,EAC1B,mBAAmB,EACnB,2BAA2B,EAC3B,mCAAmC,EACnC,mBAAmB,EACnB,oBAAoB,EACpB,mBAAmB,EACnB,gBAAgB,EAChB,cAAc,EACd,qBAAqB,EACrB,kBAAkB,EAClB,4BAA4B,EAC5B,iBAAiB,EACjB,YAAY,EACZ,YAAY,EACZ,mBAAmB,EACnB,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,cAAc,EACd,4BAA4B,EAC5B,4BAA4B,EAC5B,wBAAwB,EACxB,qBAAqB,EACrB,iBAAiB,EACjB,eAAe,EACf,2BAA2B,EAC3B,YAAY,EACZ,oBAAoB,EACpB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,yBAAyB,EACzB,mBAAmB,EACnB,qBAAqB,EACrB,SAAS,EACT,sBAAsB,EACtB,wBAAwB,EACxB,YAAY,EACZ,cAAc,EACd,eAAe,EACf,UAAU,EACV,eAAe,EACf,aAAa,EACb,WAAW,EACX,iBAAiB,EACjB,aAAa,EACb,aAAa,EACb,YAAY,EACZ,aAAa,EACb,cAAc,EACd,aAAa,EACb,eAAe,EACf,iBAAiB,EACjB,oBAAoB,EACpB,aAAa,EACb,YAAY,EACZ,aAAa,EACb,kBAAkB,EAClB,aAAa,EACb,cAAc,EACd,mBAAmB,EACnB,aAAa,EACb,YAAY,EACZ,eAAe,EACf,YAAY,EACZ,iBAAiB,EACjB,eAAe,EACf,aAAa,EACb,WAAW,EACX,cAAc,EACd,gBAAgB,EAChB,YAAY,EACZ,gBAAgB,EAChB,WAAW,EACX,eAAe,EACf,WAAW,EACX,aAAa,EACb,aAAa,EACb,kBAAkB,EAClB,eAAe,EACf,aAAa,EACb,kBAAkB,EAClB,mBAAmB,EACnB,aAAa,EACb,kBAAkB,EAClB,gBAAgB,EAChB,yBAAyB,EACzB,iCAAiC,EACjC,qBAAqB,EACrB,SAAS,EACT,iBAAiB,EACjB,mBAAmB,EACnB,eAAe,EACf,kBAAkB,EAClB,iBAAiB,EACjB,mBAAmB,EACnB,oBAAoB,EACpB,uBAAuB,EACvB,kBAAkB,EAClB,gBAAgB,EAChB,eAAe,EACf,kBAAkB,EAClB,YAAY,EACZ,sBAAsB,EACtB,aAAa,EACb,sBAAsB,EACtB,WAAW,EACX,WAAW,EACX,UAAU,EACV,eAAe,EACf,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,gBAAgB,EAChB,UAAU,EACV,gBAAgB,EAChB,gBAAgB,EAChB,mBAAmB,EACnB,sBAAsB,EACtB,sBAAsB,EACtB,uBAAuB,EACvB,mBAAmB,EACnB,gBAAgB,EAChB,YAAY,EACZ,6BAA6B,EAC7B,qBAAqB,EACrB,gBAAgB,EAChB,cAAc,EACd,UAAU,EACV,mBAAmB,EACnB,cAAc,EACd,YAAY,CACf;EACDC,gBAAgB,EAAE,CACd,uBAAuB,EACvB,oBAAoB,EACpB,2BAA2B,EAC3B,4BAA4B,EAC5B,2BAA2B,EAC3B,qBAAqB,EACrB,wBAAwB,EACxB,qBAAqB,EACrB,kBAAkB,EAClB,8BAA8B,EAC9B,sBAAsB,EACtB,iBAAiB,EACjB,YAAY,EACZ,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,cAAc,EACd,aAAa,EACb,eAAe,EACf,mBAAmB,EACnB,oBAAoB,EACpB,kBAAkB,EAClB,kBAAkB,EAClB,iBAAiB,EACjB,uBAAuB,EACvB,wBAAwB,EACxB,yBAAyB,EACzB,4BAA4B,EAC5B,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,oBAAoB,EACpB,gBAAgB,EAChB,mBAAmB,EACnB,oBAAoB,EACpB,oBAAoB,EACpB,qBAAqB,EACrB,eAAe,EACf,gBAAgB,EAChB,oBAAoB,EACpB,qBAAqB,EACrB,sBAAsB,EACtB,UAAU,EACV,gBAAgB,EAChB,YAAY,EACZ,yBAAyB,EACzB,WAAW,EACX,yBAAyB,EACzB,gBAAgB,EAChB,kBAAkB,EAClB,iBAAiB,EACjB,qBAAqB,EACrB,sBAAsB,EACtB,qBAAqB,EACrB,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,kBAAkB,EAClB,gBAAgB,EAChB,iBAAiB,EACjB,0BAA0B,EAC1B,4BAA4B,EAC5B,2BAA2B,EAC3B,mBAAmB,EACnB,qBAAqB,EACrB,yBAAyB,EACzB,iBAAiB,EACjB,yBAAyB,EACzB,gCAAgC,EAChC,yBAAyB,EACzB,+BAA+B,EAC/B,6BAA6B,EAC7B,kCAAkC,EAClC,0CAA0C,EAC1C,+BAA+B,EAC/B,uCAAuC,EACvC,gCAAgC,EAChC,oBAAoB,EACpB,+BAA+B,EAC/B,sBAAsB,EACtB,oBAAoB,EACpB,mBAAmB,EACnB,sBAAsB,EACtB,qBAAqB,EACrB,kBAAkB,EAClB,wBAAwB,EACxB,oBAAoB,EACpB,oBAAoB,EACpB,kBAAkB,EAClB,eAAe,EACf,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,eAAe,CAClB;EACDC,YAAY,EAAE,CACV,aAAa,EACb,UAAU,EACV,aAAa,EACb,qBAAqB,EACrB,uBAAuB,EACvB,WAAW,EACX,gBAAgB,EAChB,gBAAgB,EAChB,kBAAkB,EAClB,eAAe,EACf,eAAe,EACf,WAAW,EACX,eAAe,EACf,mBAAmB,EACnB,UAAU,EACV,cAAc,EACd,aAAa,EACb,eAAe,EACf,kBAAkB,EAClB,eAAe,EACf,gBAAgB,EAChB,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,oBAAoB,EACpB,eAAe,EACf,eAAe,EACf,WAAW,EACX,cAAc,EACd,mBAAmB,EACnB,WAAW,EACX,WAAW,EACX,aAAa,EACb,iBAAiB,EACjB,YAAY,EACZ,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,aAAa,EACb,uBAAuB,EACvB,mBAAmB,EACnB,0BAA0B,EAC1B,2BAA2B,EAC3B,aAAa,EACb,YAAY,EACZ,WAAW,EACX,mBAAmB,EACnB,WAAW,EACX,iBAAiB,EACjB,WAAW,EACX,UAAU,EACV,gBAAgB,CACnB;EACDC,SAAS,EAAE;IACPC,IAAI,EAAE;IACF;IACA,CAAC,aAAa,EAAE,kBAAkB,CAAC;IACnC;IACA,CAAC,0BAA0B,EAAE,cAAc,CAAC,EAC5C,CAAC,mBAAmB,EAAE,YAAY,CAAC,EACnC,CAAC,qBAAqB,EAAE,QAAQ,CAAC;IACjC;IACA,CAAC,cAAc,EACX;MACIC,KAAK,EAAE;QACH,eAAe,EAAE,MAAM;QACvB,WAAW,EAAE,SAAS;QACtB,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE,aAAa;QAC9B,mBAAmB,EAAE,WAAW;QAChC,UAAU,EAAE;MAChB;IACJ,CAAC,CACJ;IACD;IACA,CAAC,+BAA+B,EAC5B;MACIA,KAAK,EAAE;QACH,eAAe,EAAE,MAAM;QACvB,UAAU,EAAE;MAChB;IACJ,CAAC,CACJ;IACD;IACA,CAAC,4CAA4C,EACzC;MACIA,KAAK,EAAE;QACH,mBAAmB,EAAE,kBAAkB;QACvC,mBAAmB,EAAE,UAAU;QAC/B,UAAU,EAAE;MAChB;IACJ,CAAC,CACJ;IACD;IACA,CAAC,wBAAwB,EAAE,YAAY,CAAC,EACxC;MAAEC,OAAO,EAAE;IAAc,CAAC,EAC1B;MAAEA,OAAO,EAAE;IAAY,CAAC,EACxB;MAAEA,OAAO,EAAE;IAAW,CAAC,EACvB,CAAC,YAAY,EAAE,WAAW,CAAC,EAC3B,CAAC,wDAAwD,EAAE,WAAW,CAAC,EACvE,CAAC,MAAM,EAAE,WAAW,CAAC,CACxB;IACDC,UAAU,EAAE,CACR,CAAC,KAAK,EAAE,OAAO,CAAC,CACnB;IACDzB,QAAQ,EAAE,CACN,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,EACjC,CAAC,WAAW,EAAE,SAAS,CAAC,CAC3B;IACD0B,OAAO,EAAE,CACL,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,EAC7B,CAAC,GAAG,EAAE,SAAS,CAAC,CACnB;IACDC,OAAO,EAAE,CACL,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAC9B;IACDC,MAAM,EAAE,CACJ,CAAC,MAAM,EAAE,eAAe,CAAC,EACzB,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,EACxB,CAAC,GAAG,EAAE,QAAQ,CAAC;EAEvB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}