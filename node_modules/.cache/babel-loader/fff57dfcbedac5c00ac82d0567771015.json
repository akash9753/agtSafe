{"ast":null,"code":"\"use strict\";\n\nexports[\"default\"] = function () {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n  peg$subclass(peg$SyntaxError, Error);\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n      parser = this,\n      peg$FAILED = {},\n      peg$startRuleFunctions = {\n        start: peg$parsestart\n      },\n      peg$startRuleFunction = peg$parsestart,\n      peg$c0 = function peg$c0(elements) {\n        return {\n          type: 'messageFormatPattern',\n          elements: elements,\n          location: location()\n        };\n      },\n      peg$c1 = function peg$c1(text) {\n        var string = '',\n          i,\n          j,\n          outerLen,\n          inner,\n          innerLen;\n        for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n          inner = text[i];\n          for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n            string += inner[j];\n          }\n        }\n        return string;\n      },\n      peg$c2 = function peg$c2(messageText) {\n        return {\n          type: 'messageTextElement',\n          value: messageText,\n          location: location()\n        };\n      },\n      peg$c3 = /^[^ \\t\\n\\r,.+={}#]/,\n      peg$c4 = {\n        type: \"class\",\n        value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\",\n        description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\"\n      },\n      peg$c5 = \"{\",\n      peg$c6 = {\n        type: \"literal\",\n        value: \"{\",\n        description: \"\\\"{\\\"\"\n      },\n      peg$c7 = \",\",\n      peg$c8 = {\n        type: \"literal\",\n        value: \",\",\n        description: \"\\\",\\\"\"\n      },\n      peg$c9 = \"}\",\n      peg$c10 = {\n        type: \"literal\",\n        value: \"}\",\n        description: \"\\\"}\\\"\"\n      },\n      peg$c11 = function peg$c11(id, format) {\n        return {\n          type: 'argumentElement',\n          id: id,\n          format: format && format[2],\n          location: location()\n        };\n      },\n      peg$c12 = \"number\",\n      peg$c13 = {\n        type: \"literal\",\n        value: \"number\",\n        description: \"\\\"number\\\"\"\n      },\n      peg$c14 = \"date\",\n      peg$c15 = {\n        type: \"literal\",\n        value: \"date\",\n        description: \"\\\"date\\\"\"\n      },\n      peg$c16 = \"time\",\n      peg$c17 = {\n        type: \"literal\",\n        value: \"time\",\n        description: \"\\\"time\\\"\"\n      },\n      peg$c18 = function peg$c18(type, style) {\n        return {\n          type: type + 'Format',\n          style: style && style[2],\n          location: location()\n        };\n      },\n      peg$c19 = \"plural\",\n      peg$c20 = {\n        type: \"literal\",\n        value: \"plural\",\n        description: \"\\\"plural\\\"\"\n      },\n      peg$c21 = function peg$c21(pluralStyle) {\n        return {\n          type: pluralStyle.type,\n          ordinal: false,\n          offset: pluralStyle.offset || 0,\n          options: pluralStyle.options,\n          location: location()\n        };\n      },\n      peg$c22 = \"selectordinal\",\n      peg$c23 = {\n        type: \"literal\",\n        value: \"selectordinal\",\n        description: \"\\\"selectordinal\\\"\"\n      },\n      peg$c24 = function peg$c24(pluralStyle) {\n        return {\n          type: pluralStyle.type,\n          ordinal: true,\n          offset: pluralStyle.offset || 0,\n          options: pluralStyle.options,\n          location: location()\n        };\n      },\n      peg$c25 = \"select\",\n      peg$c26 = {\n        type: \"literal\",\n        value: \"select\",\n        description: \"\\\"select\\\"\"\n      },\n      peg$c27 = function peg$c27(options) {\n        return {\n          type: 'selectFormat',\n          options: options,\n          location: location()\n        };\n      },\n      peg$c28 = \"=\",\n      peg$c29 = {\n        type: \"literal\",\n        value: \"=\",\n        description: \"\\\"=\\\"\"\n      },\n      peg$c30 = function peg$c30(selector, pattern) {\n        return {\n          type: 'optionalFormatPattern',\n          selector: selector,\n          value: pattern,\n          location: location()\n        };\n      },\n      peg$c31 = \"offset:\",\n      peg$c32 = {\n        type: \"literal\",\n        value: \"offset:\",\n        description: \"\\\"offset:\\\"\"\n      },\n      peg$c33 = function peg$c33(number) {\n        return number;\n      },\n      peg$c34 = function peg$c34(offset, options) {\n        return {\n          type: 'pluralFormat',\n          offset: offset,\n          options: options,\n          location: location()\n        };\n      },\n      peg$c35 = {\n        type: \"other\",\n        description: \"whitespace\"\n      },\n      peg$c36 = /^[ \\t\\n\\r]/,\n      peg$c37 = {\n        type: \"class\",\n        value: \"[ \\\\t\\\\n\\\\r]\",\n        description: \"[ \\\\t\\\\n\\\\r]\"\n      },\n      peg$c38 = {\n        type: \"other\",\n        description: \"optionalWhitespace\"\n      },\n      peg$c39 = /^[0-9]/,\n      peg$c40 = {\n        type: \"class\",\n        value: \"[0-9]\",\n        description: \"[0-9]\"\n      },\n      peg$c41 = /^[0-9a-f]/i,\n      peg$c42 = {\n        type: \"class\",\n        value: \"[0-9a-f]i\",\n        description: \"[0-9a-f]i\"\n      },\n      peg$c43 = \"0\",\n      peg$c44 = {\n        type: \"literal\",\n        value: \"0\",\n        description: \"\\\"0\\\"\"\n      },\n      peg$c45 = /^[1-9]/,\n      peg$c46 = {\n        type: \"class\",\n        value: \"[1-9]\",\n        description: \"[1-9]\"\n      },\n      peg$c47 = function peg$c47(digits) {\n        return parseInt(digits, 10);\n      },\n      peg$c48 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n      peg$c49 = {\n        type: \"class\",\n        value: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\",\n        description: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\"\n      },\n      peg$c50 = \"\\\\\\\\\",\n      peg$c51 = {\n        type: \"literal\",\n        value: \"\\\\\\\\\",\n        description: \"\\\"\\\\\\\\\\\\\\\\\\\"\"\n      },\n      peg$c52 = function peg$c52() {\n        return '\\\\';\n      },\n      peg$c53 = \"\\\\#\",\n      peg$c54 = {\n        type: \"literal\",\n        value: \"\\\\#\",\n        description: \"\\\"\\\\\\\\#\\\"\"\n      },\n      peg$c55 = function peg$c55() {\n        return '\\\\#';\n      },\n      peg$c56 = \"\\\\{\",\n      peg$c57 = {\n        type: \"literal\",\n        value: \"\\\\{\",\n        description: \"\\\"\\\\\\\\{\\\"\"\n      },\n      peg$c58 = function peg$c58() {\n        return \"{\";\n      },\n      peg$c59 = \"\\\\}\",\n      peg$c60 = {\n        type: \"literal\",\n        value: \"\\\\}\",\n        description: \"\\\"\\\\\\\\}\\\"\"\n      },\n      peg$c61 = function peg$c61() {\n        return \"}\";\n      },\n      peg$c62 = \"\\\\u\",\n      peg$c63 = {\n        type: \"literal\",\n        value: \"\\\\u\",\n        description: \"\\\"\\\\\\\\u\\\"\"\n      },\n      peg$c64 = function peg$c64(digits) {\n        return String.fromCharCode(parseInt(digits, 16));\n      },\n      peg$c65 = function peg$c65(chars) {\n        return chars.join('');\n      },\n      peg$currPos = 0,\n      peg$savedPos = 0,\n      peg$posDetailsCache = [{\n        line: 1,\n        column: 1,\n        seenCR: false\n      }],\n      peg$maxFailPos = 0,\n      peg$maxFailExpected = [],\n      peg$silentFails = 0,\n      peg$result;\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description) {\n      throw peg$buildException(null, [{\n        type: \"other\",\n        description: description\n      }], input.substring(peg$savedPos, peg$currPos), peg$computeLocation(peg$savedPos, peg$currPos));\n    }\n    function error(message) {\n      throw peg$buildException(message, null, input.substring(peg$savedPos, peg$currPos), peg$computeLocation(peg$savedPos, peg$currPos));\n    }\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n        p,\n        ch;\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) {\n              details.line++;\n            }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n          p++;\n        }\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails = peg$computePosDetails(endPos);\n      return {\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n      peg$maxFailExpected.push(expected);\n    }\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n        expected.sort(function (a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n          }\n          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n            return '\\\\x0' + hex(ch);\n          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n            return '\\\\x' + hex(ch);\n          }).replace(/[\\u0100-\\u0FFF]/g, function (ch) {\n            return \"\\\\u0\" + hex(ch);\n          }).replace(/[\\u1000-\\uFFFF]/g, function (ch) {\n            return \"\\\\u\" + hex(ch);\n          });\n        }\n        var expectedDescs = new Array(expected.length),\n          expectedDesc,\n          foundDesc,\n          i;\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] : expectedDescs[0];\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n      return new peg$SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, location);\n    }\n    function peg$parsestart() {\n      var s0;\n      s0 = peg$parsemessageFormatPattern();\n      return s0;\n    }\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n      }\n      s0 = s1;\n      return s0;\n    }\n    function peg$parsemessageFormatElement() {\n      var s0;\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n      return s0;\n    }\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n      return s0;\n    }\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1);\n      }\n      s0 = s1;\n      return s0;\n    }\n    function peg$parseargument() {\n      var s0, s1, s2;\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c3.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c4);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c3.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n              }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n      return s0;\n    }\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c6);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c7;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c8);\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c10);\n                    }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c11(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parseelementFormat() {\n      var s0;\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectOrdinalFormat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectFormat();\n          }\n        }\n      }\n      return s0;\n    }\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c13);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c14) {\n          s1 = peg$c14;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c15);\n          }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c17);\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c7;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c8);\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c19) {\n        s1 = peg$c19;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c20);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c8);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parseselectOrdinalFormat() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 13) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 13;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c23);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c8);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c26);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c8);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$FAILED;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c28;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c29);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n      return s0;\n    }\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c5;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c6);\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c9;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c10);\n                      }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c30(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c31) {\n        s1 = peg$c31;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c32);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c33(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parsepluralStyle() {\n      var s0, s1, s2, s3, s4;\n      s0 = peg$currPos;\n      s1 = peg$parseoffset();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoptionalFormatPattern();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseoptionalFormatPattern();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c34(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      return s0;\n    }\n    function peg$parsews() {\n      var s0, s1;\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c37);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c36.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c37);\n            }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c35);\n        }\n      }\n      return s0;\n    }\n    function peg$parse_() {\n      var s0, s1, s2;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c38);\n        }\n      }\n      return s0;\n    }\n    function peg$parsedigit() {\n      var s0;\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c40);\n        }\n      }\n      return s0;\n    }\n    function peg$parsehexDigit() {\n      var s0;\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c42);\n        }\n      }\n      return s0;\n    }\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c44);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c46);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = input.substring(s1, peg$currPos);\n        } else {\n          s1 = s2;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c47(s1);\n      }\n      s0 = s1;\n      return s0;\n    }\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n      if (peg$c48.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c49);\n        }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c50) {\n          s1 = peg$c50;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c51);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c52();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c53) {\n            s1 = peg$c53;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c54);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c56) {\n              s1 = peg$c56;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c58();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c59) {\n                s1 = peg$c59;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c60);\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c61();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c62) {\n                  s1 = peg$c62;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c63);\n                  }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  s4 = peg$parsehexDigit();\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parsehexDigit();\n                    if (s5 !== peg$FAILED) {\n                      s6 = peg$parsehexDigit();\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parsehexDigit();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s2 = input.substring(s2, peg$currPos);\n                  } else {\n                    s2 = s3;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c64(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n      return s0;\n    }\n    function peg$parsechars() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c65(s1);\n      }\n      s0 = s1;\n      return s0;\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({\n          type: \"end\",\n          description: \"end of input\"\n        });\n      }\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse: peg$parse\n  };\n}();","map":{"version":3,"sources":["src/parser.js"],"names":[],"mappings":"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","sourcesContent":["export default (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements,\n                    location: location()\n                };\n            },\n        peg$c1 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c2 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText,\n                    location: location()\n                };\n            },\n        peg$c3 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c4 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c5 = \"{\",\n        peg$c6 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c7 = \",\",\n        peg$c8 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c9 = \"}\",\n        peg$c10 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c11 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2],\n                    location: location()\n                };\n            },\n        peg$c12 = \"number\",\n        peg$c13 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c14 = \"date\",\n        peg$c15 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c16 = \"time\",\n        peg$c17 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c18 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2],\n                    location: location()\n                };\n            },\n        peg$c19 = \"plural\",\n        peg$c20 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c21 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: false,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options,\n                    location: location()\n                };\n            },\n        peg$c22 = \"selectordinal\",\n        peg$c23 = { type: \"literal\", value: \"selectordinal\", description: \"\\\"selectordinal\\\"\" },\n        peg$c24 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: true,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options,\n                    location: location()\n                }\n            },\n        peg$c25 = \"select\",\n        peg$c26 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c27 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options,\n                    location: location()\n                };\n            },\n        peg$c28 = \"=\",\n        peg$c29 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c30 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern,\n                    location: location()\n                };\n            },\n        peg$c31 = \"offset:\",\n        peg$c32 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c33 = function(number) {\n                return number;\n            },\n        peg$c34 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset,\n                    options: options,\n                    location: location()\n                };\n            },\n        peg$c35 = { type: \"other\", description: \"whitespace\" },\n        peg$c36 = /^[ \\t\\n\\r]/,\n        peg$c37 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c38 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c39 = /^[0-9]/,\n        peg$c40 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c41 = /^[0-9a-f]/i,\n        peg$c42 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c43 = \"0\",\n        peg$c44 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c45 = /^[1-9]/,\n        peg$c46 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c47 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c48 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c49 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\" },\n        peg$c50 = \"\\\\\\\\\",\n        peg$c51 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c52 = function() { return '\\\\'; },\n        peg$c53 = \"\\\\#\",\n        peg$c54 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c55 = function() { return '\\\\#'; },\n        peg$c56 = \"\\\\{\",\n        peg$c57 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c58 = function() { return '\\u007B'; },\n        peg$c59 = \"\\\\}\",\n        peg$c60 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c61 = function() { return '\\u007D'; },\n        peg$c62 = \"\\\\u\",\n        peg$c63 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c64 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c65 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c3.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c3.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c7;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c8); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c11(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectOrdinalFormat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectFormat();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c14) {\n          s1 = peg$c14;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c7;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c19) {\n        s1 = peg$c19;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectOrdinalFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 13) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 13;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$FAILED;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c28;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c5;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c9;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c30(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c31) {\n        s1 = peg$c31;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c33(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralStyle() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseoffset();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoptionalFormatPattern();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseoptionalFormatPattern();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c34(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c36.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c37); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = input.substring(s1, peg$currPos);\n        } else {\n          s1 = s2;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c47(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c48.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c50) {\n          s1 = peg$c50;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c52();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c53) {\n            s1 = peg$c53;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c56) {\n              s1 = peg$c56;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c58();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c59) {\n                s1 = peg$c59;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c61();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c62) {\n                  s1 = peg$c62;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c63); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  s4 = peg$parsehexDigit();\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parsehexDigit();\n                    if (s5 !== peg$FAILED) {\n                      s6 = peg$parsehexDigit();\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parsehexDigit();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s2 = input.substring(s2, peg$currPos);\n                  } else {\n                    s2 = s3;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c64(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c65(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();"],"sourceRoot":"/"},"metadata":{},"sourceType":"script"}