{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n  comments: {\n    blockComment: ['/*', '*/'],\n    lineComment: '//'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.scss',\n  ws: '[ \\t\\n\\r\\f]*',\n  identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@selector'\n    }],\n    selector: [{\n      include: '@comments'\n    }, {\n      include: '@import'\n    }, {\n      include: '@variabledeclaration'\n    }, {\n      include: '@warndebug'\n    }, ['[@](include)', {\n      token: 'keyword',\n      next: '@includedeclaration'\n    }], ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', {\n      token: 'keyword',\n      next: '@keyframedeclaration'\n    }], ['[@](page|content|font-face|-moz-document)', {\n      token: 'keyword'\n    }], ['[@](charset|namespace)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }], ['[@](function)', {\n      token: 'keyword',\n      next: '@functiondeclaration'\n    }], ['[@](mixin)', {\n      token: 'keyword',\n      next: '@mixindeclaration'\n    }], ['url(\\\\-prefix)?\\\\(', {\n      token: 'meta',\n      next: '@urldeclaration'\n    }], {\n      include: '@controlstatement'\n    }, {\n      include: '@selectorname'\n    }, ['[&\\\\*]', 'tag'], ['[>\\\\+,]', 'delimiter'], ['\\\\[', {\n      token: 'delimiter.bracket',\n      next: '@selectorattribute'\n    }], ['{', {\n      token: 'delimiter.curly',\n      next: '@selectorbody'\n    }]],\n    selectorbody: [['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'], {\n      include: '@selector'\n    }, ['[@](extend)', {\n      token: 'keyword',\n      next: '@extendbody'\n    }], ['[@](return)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }], ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    selectorname: [['#{', {\n      token: 'meta',\n      next: '@variableinterpolation'\n    }], ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag']],\n    selectorattribute: [{\n      include: '@term'\n    }, [']', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    term: [{\n      include: '@comments'\n    }, ['url(\\\\-prefix)?\\\\(', {\n      token: 'meta',\n      next: '@urldeclaration'\n    }], {\n      include: '@functioninvocation'\n    }, {\n      include: '@numbers'\n    }, {\n      include: '@strings'\n    }, {\n      include: '@variablereference'\n    }, ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'], {\n      include: '@name'\n    }, ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'], [',', 'delimiter'], ['!default', 'literal'], ['\\\\(', {\n      token: 'delimiter.parenthesis',\n      next: '@parenthizedterm'\n    }]],\n    rulevalue: [{\n      include: '@term'\n    }, ['!important', 'literal'], [';', 'delimiter', '@pop'], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@nestedproperty'\n    }], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }]],\n    nestedproperty: [['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'], {\n      include: '@comments'\n    }, ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    warndebug: [['[@](warn|debug)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    import: [['[@](import)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    variabledeclaration: [['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody']],\n    urldeclaration: [{\n      include: '@strings'\n    }, ['[^)\\r\\n]+', 'string'], ['\\\\)', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    parenthizedterm: [{\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'delimiter.parenthesis',\n      next: '@pop'\n    }]],\n    declarationbody: [{\n      include: '@term'\n    }, [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }]],\n    extendbody: [{\n      include: '@selectorname'\n    }, ['!optional', 'literal'], [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }]],\n    variablereference: [['\\\\$@identifier', 'variable.ref'], ['\\\\.\\\\.\\\\.', 'operator'], ['#{', {\n      token: 'meta',\n      next: '@variableinterpolation'\n    }]],\n    variableinterpolation: [{\n      include: '@variablereference'\n    }, ['}', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    comments: [['\\\\/\\\\*', 'comment', '@comment'], ['\\\\/\\\\/+.*', 'comment']],\n    comment: [['\\\\*\\\\/', 'comment', '@pop'], ['.', 'comment']],\n    name: [['@identifier', 'attribute.value']],\n    numbers: [['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', {\n      token: 'number',\n      next: '@units'\n    }], ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex']],\n    units: [['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']],\n    functiondeclaration: [['@identifier@ws\\\\(', {\n      token: 'meta',\n      next: '@parameterdeclaration'\n    }], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@functionbody'\n    }]],\n    mixindeclaration: [\n    // mixin with parameters\n    ['@identifier@ws\\\\(', {\n      token: 'meta',\n      next: '@parameterdeclaration'\n    }],\n    // mixin without parameters\n    ['@identifier', 'meta'], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@selectorbody'\n    }]],\n    parameterdeclaration: [['\\\\$@identifier@ws:', 'variable.decl'], ['\\\\.\\\\.\\\\.', 'operator'], [',', 'delimiter'], {\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    includedeclaration: [{\n      include: '@functioninvocation'\n    }, ['@identifier', 'meta'], [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@selectorbody'\n    }]],\n    keyframedeclaration: [['@identifier', 'meta'], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@keyframebody'\n    }]],\n    keyframebody: [{\n      include: '@term'\n    }, ['{', {\n      token: 'delimiter.curly',\n      next: '@selectorbody'\n    }], ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    controlstatement: [['[@](if|else|for|while|each|media)', {\n      token: 'keyword.flow',\n      next: '@controlstatementdeclaration'\n    }]],\n    controlstatementdeclaration: [['(in|from|through|if|to)\\\\b', {\n      token: 'keyword.flow'\n    }], {\n      include: '@term'\n    }, ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@selectorbody'\n    }]],\n    functionbody: [['[@](return)', {\n      token: 'keyword'\n    }], {\n      include: '@variabledeclaration'\n    }, {\n      include: '@term'\n    }, {\n      include: '@controlstatement'\n    }, [';', 'delimiter'], ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    functioninvocation: [['@identifier\\\\(', {\n      token: 'meta',\n      next: '@functionarguments'\n    }]],\n    functionarguments: [['\\\\$@identifier@ws:', 'attribute.name'], ['[,]', 'delimiter'], {\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    strings: [['~?\"', {\n      token: 'string.delimiter',\n      next: '@stringenddoublequote'\n    }], ['~?\\'', {\n      token: 'string.delimiter',\n      next: '@stringendquote'\n    }]],\n    stringenddoublequote: [['\\\\\\\\.', 'string'], ['\"', {\n      token: 'string.delimiter',\n      next: '@pop'\n    }], ['.', 'string']],\n    stringendquote: [['\\\\\\\\.', 'string'], ['\\'', {\n      token: 'string.delimiter',\n      next: '@pop'\n    }], ['.', 'string']]\n  }\n};","map":{"version":3,"names":["conf","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/'],\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\r\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.scss',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@selector' },\r\n        ],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@variabledeclaration' },\r\n            { include: '@warndebug' },\r\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\r\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\r\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@controlstatement' },\r\n            { include: '@selectorname' },\r\n            ['[&\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n        ],\r\n        selectorbody: [\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            { include: '@selector' },\r\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\r\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        selectorname: [\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            { include: '@variablereference' },\r\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\r\n            { include: '@name' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\r\n            [',', 'delimiter'],\r\n            ['!default', 'literal'],\r\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }],\r\n        ],\r\n        rulevalue: [\r\n            { include: '@term' },\r\n            ['!important', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        nestedproperty: [\r\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\r\n            { include: '@comments' },\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        warndebug: [\r\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }],\r\n        ],\r\n        import: [\r\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }],\r\n        ],\r\n        variabledeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\r\n        ],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        extendbody: [\r\n            { include: '@selectorname' },\r\n            ['!optional', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        variablereference: [\r\n            ['\\\\$@identifier', 'variable.ref'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n        ],\r\n        variableinterpolation: [\r\n            { include: '@variablereference' },\r\n            ['}', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment'],\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment'],\r\n        ],\r\n        name: [\r\n            ['@identifier', 'attribute.value'],\r\n        ],\r\n        numbers: [\r\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex'],\r\n        ],\r\n        units: [\r\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']\r\n        ],\r\n        functiondeclaration: [\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }],\r\n        ],\r\n        mixindeclaration: [\r\n            // mixin with parameters\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            // mixin without parameters\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        parameterdeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            [',', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        includedeclaration: [\r\n            { include: '@functioninvocation' },\r\n            ['@identifier', 'meta'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }],\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        controlstatement: [\r\n            ['[@](if|else|for|while|each|media)', { token: 'keyword.flow', next: '@controlstatementdeclaration' }],\r\n        ],\r\n        controlstatementdeclaration: [\r\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        functionbody: [\r\n            ['[@](return)', { token: 'keyword' }],\r\n            { include: '@variabledeclaration' },\r\n            { include: '@term' },\r\n            { include: '@controlstatement' },\r\n            [';', 'delimiter'],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        functioninvocation: [\r\n            ['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }],\r\n        ],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\r\n            ['~?\\'', { token: 'string.delimiter', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\\'', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}