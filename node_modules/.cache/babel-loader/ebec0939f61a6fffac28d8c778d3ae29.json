{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirst(array, p) {\n  var low = 0,\n    high = array.length;\n  if (high === 0) {\n    return 0; // no children\n  }\n\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (p(array[mid])) {\n      high = mid;\n    } else {\n      low = mid + 1;\n    }\n  }\n  return low;\n}\nexport function binarySearch(array, key, comparator) {\n  var low = 0,\n    high = array.length - 1;\n  while (low <= high) {\n    var mid = (low + high) / 2 | 0;\n    var comp = comparator(array[mid], key);\n    if (comp < 0) {\n      low = mid + 1;\n    } else if (comp > 0) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n  return -(low + 1);\n}","map":{"version":3,"names":["findFirst","array","p","low","high","length","mid","Math","floor","binarySearch","key","comparator","comp"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/arrays.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirst(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAS,CAACC,KAAK,EAAEC,CAAC,EAAE;EAChC,IAAIC,GAAG,GAAG,CAAC;IAAEC,IAAI,GAAGH,KAAK,CAACI,MAAM;EAChC,IAAID,IAAI,KAAK,CAAC,EAAE;IACZ,OAAO,CAAC,CAAC,CAAC;EACd;;EACA,OAAOD,GAAG,GAAGC,IAAI,EAAE;IACf,IAAIE,GAAG,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACL,GAAG,GAAGC,IAAI,IAAI,CAAC,CAAC;IACtC,IAAIF,CAAC,CAACD,KAAK,CAACK,GAAG,CAAC,CAAC,EAAE;MACfF,IAAI,GAAGE,GAAG;IACd,CAAC,MACI;MACDH,GAAG,GAAGG,GAAG,GAAG,CAAC;IACjB;EACJ;EACA,OAAOH,GAAG;AACd;AACA,OAAO,SAASM,YAAY,CAACR,KAAK,EAAES,GAAG,EAAEC,UAAU,EAAE;EACjD,IAAIR,GAAG,GAAG,CAAC;IAAEC,IAAI,GAAGH,KAAK,CAACI,MAAM,GAAG,CAAC;EACpC,OAAOF,GAAG,IAAIC,IAAI,EAAE;IAChB,IAAIE,GAAG,GAAI,CAACH,GAAG,GAAGC,IAAI,IAAI,CAAC,GAAI,CAAC;IAChC,IAAIQ,IAAI,GAAGD,UAAU,CAACV,KAAK,CAACK,GAAG,CAAC,EAAEI,GAAG,CAAC;IACtC,IAAIE,IAAI,GAAG,CAAC,EAAE;MACVT,GAAG,GAAGG,GAAG,GAAG,CAAC;IACjB,CAAC,MACI,IAAIM,IAAI,GAAG,CAAC,EAAE;MACfR,IAAI,GAAGE,GAAG,GAAG,CAAC;IAClB,CAAC,MACI;MACD,OAAOA,GAAG;IACd;EACJ;EACA,OAAO,EAAEH,GAAG,GAAG,CAAC,CAAC;AACrB"},"metadata":{},"sourceType":"module"}