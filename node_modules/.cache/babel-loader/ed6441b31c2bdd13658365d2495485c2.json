{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Mapper\\\\Blockly\\\\BlocklyComponent.js\";\nvar _excluded = [\"initialXml\", \"children\", \"SourceFieldClick\", \"TargetFieldClick\"];\n/**\r\n * @license\r\n * \r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Blockly React Component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\n\nimport React from 'react';\nimport './BlocklyComponent.css';\nimport Blockly from 'blockly/core';\nimport locale from 'blockly/msg/en';\nimport 'blockly/blocks';\nBlockly.setLocale(locale);\nvar thisObj = \"\";\nvar BlocklyComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlocklyComponent, _React$Component);\n  var _super = _createSuper(BlocklyComponent);\n  function BlocklyComponent() {\n    var _this;\n    _classCallCheck(this, BlocklyComponent);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.FlyoutBlockClick = function (block) {\n      if (typeof block.data === \"string\" && block.data) {\n        var obj = JSON.parse(block.data);\n        if (obj.blockType === \"Source\") {\n          thisObj.props.sourceVariableBlocks(obj, block);\n        } else if (obj.blockType === \"Target\") {\n          thisObj.props.targetVariableBlocks(obj, block);\n        } else if (obj.blockType === \"Work\") {\n          thisObj.props.workVariableBlocks(obj, block);\n        }\n      }\n    };\n    _this.onEvent = function (event) {\n      if (event.group && event.type === Blockly.Events.MOVE) {\n        Blockly.getMainWorkspace().getAllBlocks().map(function (Obj) {\n          if (Obj) {\n            var data = JSON.parse(Obj.data);\n            Obj.setEnabled(Obj.highPriority || Obj.getRootBlock().highPriority);\n          }\n        });\n      }\n      if (event.group && event.type == Blockly.Events.CREATE) {\n        //enable && disable validation\n        var block = _this.workspace.getBlockById(event.blockId);\n        if (event.xml.getElementsByTagName('data').length > 0) {\n          if (event.xml.lastElementChild.localName == \"data\") {\n            var obj = JSON.parse(event.xml.lastElementChild.textContent);\n            if (obj.blockType === \"Source\") {\n              thisObj.props.sourceVariableBlocks(obj, block);\n            } else if (obj.blockType === \"Target\") {\n              thisObj.props.targetVariableBlocks(obj, block);\n            } else if (obj.blockType === \"Work\") {\n              thisObj.props.workVariableBlocks(obj, block);\n            }\n          }\n        }\n      }\n      if (event.type == Blockly.Events.DELETE) {\n        var Obj = _this.workspace.getBlockById(event.blockId);\n        if (event.oldXml.getAttribute(\"type\") === \"final_step_type\") {\n          var initialXml = _this.props.initialXml;\n          Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), _this.primaryWorkspace);\n\n          //Empty the trashcan\n          Blockly.getMainWorkspace().trashcan.contents_ = [];\n        }\n        if (event.oldXml.getElementsByTagName('data').length > 0) {\n          if (event.oldXml.lastElementChild.localName == \"data\") {\n            var _obj = JSON.parse(event.oldXml.lastElementChild.textContent);\n            thisObj.props.RemoveVariables(_obj);\n          }\n        } else if (Obj && 'type' in Obj && Obj.type === \"merge_type\") {\n          thisObj.props.clearMergeVar();\n        }\n      }\n      if (event.type === Blockly.Events.UI) {\n        if (event.element && event.element === \"click\") {\n          //console.log(Blockly)\n          //let xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\n\n          var _Obj = _this.workspace.getBlockById(event.blockId);\n          //var list = xml.querySelector('[blockId=\"' + event.blockId+'\"]')\n          if (_Obj) {\n            if ('type' in _Obj && _Obj.type === \"step_type\") {\n              //thisObj.props.setCurrentStep(Obj);\n            } else if ('type' in _Obj && _Obj.type === \"merge_type\") {\n              var StatementFirstBlocks = _Obj.getInputTargetBlock(\"datasets_to_merge\");\n              if (StatementFirstBlocks) {\n                thisObj.props.mergeVariables(_Obj);\n              }\n            } else if ('data' in _Obj && _Obj.data !== null) {\n              var data = JSON.parse(_Obj.data);\n              if (data.blockType === \"Source\") {\n                thisObj.props.sourceVariableBlocks(data, _Obj);\n              } else if (data.blockType === \"Target\") {\n                thisObj.props.targetVariableBlocks(data, _Obj);\n              } else if (data.blockType === \"Work\") {\n                thisObj.props.workVariableBlocks(data, _Obj);\n              }\n            }\n          }\n        }\n      }\n    };\n    return _this;\n  }\n  _createClass(BlocklyComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        initialXml = _this$props.initialXml,\n        children = _this$props.children,\n        SourceFieldClick = _this$props.SourceFieldClick,\n        TargetFieldClick = _this$props.TargetFieldClick,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      thisObj = this;\n      Blockly.mainWorkspace && Blockly.mainWorkspace.clear();\n      this.primaryWorkspace = Blockly.inject(this.blocklyDiv, _objectSpread(_objectSpread({\n        toolbox: this.toolbox\n      }, rest), {}, {\n        zoom: {\n          controls: true,\n          wheel: true,\n          startScale: 1.0,\n          maxScale: 3,\n          minScale: 0.3,\n          scaleSpeed: 1.2\n        },\n        trashcan: true\n      }));\n\n      //Blockly.ContextMenu.populate_ = function (a, b) {\n      //    var c = new Blockly.Menu;\n      //    c.setRightToLeft(b);\n      //    for (var d = 0, e; e = a[d]; d++) {\n      //        var f = new Blockly.MenuItem(e.text);\n      //        f.setRightToLeft(b);\n      //        c.addChild(f, !0);\n      //        f.setEnabled(e.enabled);\n      //        if (e.enabled)\n      //            f.onAction(function () {\n      //                this.callback(Blockly.ContextMenu.currentBlock)\n      //                Blockly.ContextMenu.hide();\n      //            }, e)\n      //    }\n      //    return c\n      //}\n\n      //When Click we remove the default action and do custom work\n      Blockly.Gesture.prototype.doBlockClick_ = function () {\n        if (this.flyout_ && this.flyout_.autoClose) {\n          return this.targetBlock_.isEnabled() && (Blockly.Events.getGroup() || Blockly.Events.setGroup(!0), thisObj.FlyoutBlockClick(this.targetBlock_));\n        } else {\n          Blockly.Events.fire(new Blockly.Events.Ui(this.startBlock_, \"click\", void 0, void 0));\n        }\n        this.bringBlockToFront_();\n        Blockly.Events.setGroup(!1);\n      };\n\n      //Custom change is adding extra parameter @opt\n      Blockly.Flyout.prototype.createBlock = function (a) {\n        var b = null;\n        Blockly.Events.disable();\n        var c = this.targetWorkspace.getAllVariables();\n        this.targetWorkspace.setResizesEnabled(!1);\n        try {\n          //Custom change is adding extra parameter @opt\n          b = this.placeNewBlock_(a);\n        } finally {\n          Blockly.Events.enable();\n        }\n        a = Blockly.Variables.getAddedVariables(this.targetWorkspace, c);\n        if (Blockly.Events.isEnabled()) for (Blockly.Events.setGroup(!0), Blockly.Events.fire(new Blockly.Events.Create(b)), c = 0; c < a.length; c++) {\n          Blockly.Events.fire(new Blockly.Events.VarCreate(a[c]));\n        }\n        return b;\n      };\n\n      //Override comment icon\n      Blockly.Comment.prototype.drawIcon_ = function (a) {\n        //Override\n        Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\n          \"class\": \"blocklyIconShape\",\n          r: \"8\",\n          cx: \"8\",\n          cy: \"8\"\n        }, a);\n        Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\n          \"class\": \"blocklyIconSymbol\",\n          d: \"M4 5 L12 5 L12 10 L9 10 L7 12 L7 10 L4 10 Z\"\n        }, a);\n\n        //Actual Library code\n        //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\n        //    \"class\": \"blocklyIconShape\",\n        //    r: \"8\",\n        //    cx: \"8\",\n        //    cy: \"8\"\n        //}, a);\n        //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\n        //    \"class\": \"blocklyIconSymbol\",\n        //    d: \"m6.8,10h2c0.003,-0.617 0.271,-0.962 0.633,-1.266 2.875,-2.4050.607,-5.534 -3.765,-3.874v1.7c3.12,-1.657 3.698,0.118 2.336,1.25-1.201,0.998 -1.201,1.528 -1.204,2.19z\"\n        //}, a);\n        //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\n        //    \"class\": \"blocklyIconSymbol\",\n        //    x: \"6.8\",\n        //    y: \"10.78\",\n        //    height: \"2\",\n        //    width: \"2\"\n        //}, a)\n      };\n\n      //override warning icon\n      Blockly.Warning.prototype.drawIcon_ = function (a) {\n        //Override \n        Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\n          \"class\": \"blocklyIconShape\",\n          r: \"8\",\n          cx: \"8\",\n          cy: \"8\"\n        }, a);\n        Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\n          \"class\": \"blocklyIconSymbol\",\n          d: \"m6.8,10h2c0.003,-0.617 0.271,-0.962 0.633,-1.266 2.875,-2.4050.607,-5.534 -3.765,-3.874v1.7c3.12,-1.657 3.698,0.118 2.336,1.25-1.201,0.998 -1.201,1.528 -1.204,2.19z\"\n          //  d: \"m4.203,7.296 0,1.368 -0.92,0.677 -0.11,0.41 0.9,1.559 0.41,0.11 1.043,-0.457 1.187,0.683 0.127,1.134 0.3,0.3 1.8,0 0.3,-0.299 0.127,-1.138 1.185,-0.682 1.046,0.458 0.409,-0.11 0.9,-1.559 -0.11,-0.41 -0.92,-0.677 0,-1.366 0.92,-0.677 0.11,-0.41 -0.9,-1.559 -0.409,-0.109 -1.046,0.458 -1.185,-0.682 -0.127,-1.138 -0.3,-0.299 -1.8,0 -0.3,0.3 -0.126,1.135 -1.187,0.682 -1.043,-0.457 -0.41,0.11 -0.899,1.559 0.108,0.409z\"\n          //  d: \"m4.203,7.296 0,1.368 -0.92,0.677 -0.11,0.41 0.9,1.559 0.41,0.11 1.043,-0.457 1.187,0.683 0.127,1.134 0.3,0.3 1.8,0 0.3,-0.299 0.127,-1.138 1.185,-0.682 1.046,0.458 0.409,-0.11 0.9,-1.559 -0.11,-0.41 -0.92,-0.677 0,-1.366 0.92,-0.677 0.11,-0.41 -0.9,-1.559 -0.409,-0.109 -1.046,0.458 -1.185,-0.682 -0.127,-1.138 -0.3,-0.299 -1.8,0 -0.3,0.3 -0.126,1.135 -1.187,0.682 -1.043,-0.457 -0.41,0.11 -0.899,1.559 0.108,0.409z\"\n        }, a);\n        Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\n          \"class\": \"blocklyIconSymbol\",\n          x: \"6.8\",\n          y: \"10.78\",\n          height: \"2\",\n          width: \"2\"\n        }, a);\n\n        //Actual Library code\n\n        //Blockly.Warning.prototype.drawIcon_ = function (a) {\n        //    Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\n        //        \"class\": \"blocklyIconShape\",\n        //        d: \"M2,15Q-1,15 0.5,12L6.5,1.7Q8,-1 9.5,1.7L15.5,12Q17,15 14,15z\"\n        //    }, a);\n        //    Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\n        //        \"class\": \"blocklyIconSymbol\",\n        //        d: \"m7,4.8v3.16l0.27,2.27h1.46l0.27,-2.27v-3.16z\"\n        //    }, a);\n        //    Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\n        //        \"class\": \"blocklyIconSymbol\",\n        //        x: \"7\",\n        //        y: \"11\",\n        //        height: \"2\",\n        //        width: \"2\"\n        //    }, a)\n        //};\n      };\n      //End\n      if (initialXml) {\n        try {\n          var TextToDom = Blockly.Xml.textToDom(initialXml);\n          Blockly.Xml.domToWorkspace(TextToDom, this.primaryWorkspace);\n          // Custom Code \n          this.primaryWorkspace.addChangeListener(this.onEvent);\n        } catch (e) {\n          Blockly.getMainWorkspace().clear();\n          var xml = \"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\">\\n                        <block deletable=\\\"false\\\" type=\\\"final_step_type\\\" startScrollX=\\\"30\\\" startScrollY=\\\"30\\\" x=\\\"30\\\" y=\\\"30\\\" /></xml>\\n                    \";\n          var _TextToDom = Blockly.Xml.textToDom(xml);\n          Blockly.Xml.domToWorkspace(_TextToDom, this.primaryWorkspace);\n          // Custom Code \n          this.primaryWorkspace.addChangeListener(this.onEvent);\n          return true;\n        }\n        return true;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      window.dispatchEvent(new Event('resize'));\n      this.workspace.resize();\n      var tools = this.toolbox;\n      this.workspace.updateToolbox(this.toolbox);\n    }\n\n    //When Click we remove the default action and do custom work\n  }, {\n    key: \"workspace\",\n    get: function get() {\n      return this.primaryWorkspace;\n    }\n  }, {\n    key: \"tools\",\n    get: function get() {\n      return this.toolbox;\n    }\n  }, {\n    key: \"setXml\",\n    value: function setXml(xml) {\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var children = this.props.children;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(e) {\n          return _this2.blocklyDiv = e;\n        },\n        id: \"blocklyDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"xml\", {\n        xmlns: \"https://developers.google.com/blockly/xml\",\n        is: \"blockly\",\n        style: {\n          display: 'none'\n        },\n        ref: function ref(toolbox) {\n          _this2.toolbox = toolbox;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }\n      }, children));\n    }\n  }]);\n  return BlocklyComponent;\n}(React.Component);\nexport default BlocklyComponent;","map":{"version":3,"names":["React","Blockly","locale","setLocale","thisObj","BlocklyComponent","FlyoutBlockClick","block","data","obj","JSON","parse","blockType","props","sourceVariableBlocks","targetVariableBlocks","workVariableBlocks","onEvent","event","group","type","Events","MOVE","getMainWorkspace","getAllBlocks","map","Obj","setEnabled","highPriority","getRootBlock","CREATE","workspace","getBlockById","blockId","xml","getElementsByTagName","length","lastElementChild","localName","textContent","DELETE","oldXml","getAttribute","initialXml","Xml","domToWorkspace","textToDom","primaryWorkspace","trashcan","contents_","RemoveVariables","clearMergeVar","UI","element","StatementFirstBlocks","getInputTargetBlock","mergeVariables","children","SourceFieldClick","TargetFieldClick","rest","mainWorkspace","clear","inject","blocklyDiv","toolbox","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","Gesture","prototype","doBlockClick_","flyout_","autoClose","targetBlock_","isEnabled","getGroup","setGroup","fire","Ui","startBlock_","bringBlockToFront_","Flyout","createBlock","a","b","disable","c","targetWorkspace","getAllVariables","setResizesEnabled","placeNewBlock_","enable","Variables","getAddedVariables","Create","VarCreate","Comment","drawIcon_","utils","dom","createSvgElement","Svg","CIRCLE","r","cx","cy","PATH","d","Warning","RECT","x","y","height","width","TextToDom","addChangeListener","e","window","dispatchEvent","Event","resize","tools","updateToolbox","display","Component"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Mapper/Blockly/BlocklyComponent.js"],"sourcesContent":["/**\r\n * @license\r\n * \r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview Blockly React Component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\r\n\r\nimport React from 'react';\r\nimport './BlocklyComponent.css';\r\n\r\nimport Blockly from 'blockly/core';\r\nimport locale from 'blockly/msg/en';\r\nimport 'blockly/blocks';\r\n\r\nBlockly.setLocale(locale);\r\nvar thisObj = \"\";\r\n\r\nclass BlocklyComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        const { initialXml, children, SourceFieldClick, TargetFieldClick, ...rest } = this.props;\r\n        thisObj = this;\r\n\r\n        Blockly.mainWorkspace && Blockly.mainWorkspace.clear();\r\n\r\n        this.primaryWorkspace = Blockly.inject(\r\n            this.blocklyDiv,\r\n            {\r\n                toolbox: this.toolbox,\r\n                ...rest,\r\n                zoom:\r\n                {\r\n                    controls: true,\r\n                    wheel: true,\r\n                    startScale: 1.0,\r\n                    maxScale: 3,\r\n                    minScale: 0.3,\r\n                    scaleSpeed: 1.2\r\n                },\r\n                trashcan: true,\r\n            });\r\n\r\n        //Blockly.ContextMenu.populate_ = function (a, b) {\r\n        //    var c = new Blockly.Menu;\r\n        //    c.setRightToLeft(b);\r\n        //    for (var d = 0, e; e = a[d]; d++) {\r\n        //        var f = new Blockly.MenuItem(e.text);\r\n        //        f.setRightToLeft(b);\r\n        //        c.addChild(f, !0);\r\n        //        f.setEnabled(e.enabled);\r\n        //        if (e.enabled)\r\n        //            f.onAction(function () {\r\n        //                this.callback(Blockly.ContextMenu.currentBlock)\r\n        //                Blockly.ContextMenu.hide();\r\n        //            }, e)\r\n        //    }\r\n        //    return c\r\n        //}\r\n\r\n        //When Click we remove the default action and do custom work\r\n        Blockly.Gesture.prototype.doBlockClick_ = function () {\r\n            if (this.flyout_ && this.flyout_.autoClose) {\r\n                return this.targetBlock_.isEnabled() && (Blockly.Events.getGroup() || Blockly.Events.setGroup(!0), thisObj.FlyoutBlockClick(this.targetBlock_))\r\n            } else {\r\n                Blockly.Events.fire(new Blockly.Events.Ui(this.startBlock_, \"click\", void 0, void 0));\r\n            }\r\n            this.bringBlockToFront_();\r\n            Blockly.Events.setGroup(!1)\r\n        };\r\n\r\n        //Custom change is adding extra parameter @opt\r\n        Blockly.Flyout.prototype.createBlock = function (a) {\r\n            var b = null;\r\n            Blockly.Events.disable();\r\n            var c = this.targetWorkspace.getAllVariables();\r\n            this.targetWorkspace.setResizesEnabled(!1);\r\n\r\n            try {\r\n                //Custom change is adding extra parameter @opt\r\n                b = this.placeNewBlock_(a);\r\n            } finally {\r\n                Blockly.Events.enable();\r\n            }\r\n\r\n            a = Blockly.Variables.getAddedVariables(this.targetWorkspace, c);\r\n            if (Blockly.Events.isEnabled()) for (Blockly.Events.setGroup(!0), Blockly.Events.fire(new Blockly.Events.Create(b)), c = 0; c < a.length; c++) {\r\n                Blockly.Events.fire(new Blockly.Events.VarCreate(a[c]));\r\n            }\r\n            return b;\r\n        };\r\n\r\n        //Override comment icon\r\n        Blockly.Comment.prototype.drawIcon_ = function (a) {\r\n            //Override\r\n            Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\r\n                \"class\": \"blocklyIconShape\",\r\n                r: \"8\",\r\n                cx: \"8\",\r\n                cy: \"8\"\r\n            }, a);\r\n            Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\r\n                \"class\": \"blocklyIconSymbol\",\r\n                d: \"M4 5 L12 5 L12 10 L9 10 L7 12 L7 10 L4 10 Z\"\r\n            }, a);\r\n\r\n            //Actual Library code\r\n            //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\r\n            //    \"class\": \"blocklyIconShape\",\r\n            //    r: \"8\",\r\n            //    cx: \"8\",\r\n            //    cy: \"8\"\r\n            //}, a);\r\n            //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\r\n            //    \"class\": \"blocklyIconSymbol\",\r\n            //    d: \"m6.8,10h2c0.003,-0.617 0.271,-0.962 0.633,-1.266 2.875,-2.4050.607,-5.534 -3.765,-3.874v1.7c3.12,-1.657 3.698,0.118 2.336,1.25-1.201,0.998 -1.201,1.528 -1.204,2.19z\"\r\n            //}, a);\r\n            //Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\r\n            //    \"class\": \"blocklyIconSymbol\",\r\n            //    x: \"6.8\",\r\n            //    y: \"10.78\",\r\n            //    height: \"2\",\r\n            //    width: \"2\"\r\n            //}, a)\r\n\r\n        };\r\n\r\n        //override warning icon\r\n        Blockly.Warning.prototype.drawIcon_ = function (a) {\r\n            //Override \r\n            Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.CIRCLE, {\r\n                \"class\": \"blocklyIconShape\",\r\n                r: \"8\",\r\n                cx: \"8\",\r\n                cy: \"8\"\r\n            }, a);\r\n            Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\r\n                \"class\": \"blocklyIconSymbol\",\r\n                d: \"m6.8,10h2c0.003,-0.617 0.271,-0.962 0.633,-1.266 2.875,-2.4050.607,-5.534 -3.765,-3.874v1.7c3.12,-1.657 3.698,0.118 2.336,1.25-1.201,0.998 -1.201,1.528 -1.204,2.19z\"\r\n                //  d: \"m4.203,7.296 0,1.368 -0.92,0.677 -0.11,0.41 0.9,1.559 0.41,0.11 1.043,-0.457 1.187,0.683 0.127,1.134 0.3,0.3 1.8,0 0.3,-0.299 0.127,-1.138 1.185,-0.682 1.046,0.458 0.409,-0.11 0.9,-1.559 -0.11,-0.41 -0.92,-0.677 0,-1.366 0.92,-0.677 0.11,-0.41 -0.9,-1.559 -0.409,-0.109 -1.046,0.458 -1.185,-0.682 -0.127,-1.138 -0.3,-0.299 -1.8,0 -0.3,0.3 -0.126,1.135 -1.187,0.682 -1.043,-0.457 -0.41,0.11 -0.899,1.559 0.108,0.409z\"\r\n                //  d: \"m4.203,7.296 0,1.368 -0.92,0.677 -0.11,0.41 0.9,1.559 0.41,0.11 1.043,-0.457 1.187,0.683 0.127,1.134 0.3,0.3 1.8,0 0.3,-0.299 0.127,-1.138 1.185,-0.682 1.046,0.458 0.409,-0.11 0.9,-1.559 -0.11,-0.41 -0.92,-0.677 0,-1.366 0.92,-0.677 0.11,-0.41 -0.9,-1.559 -0.409,-0.109 -1.046,0.458 -1.185,-0.682 -0.127,-1.138 -0.3,-0.299 -1.8,0 -0.3,0.3 -0.126,1.135 -1.187,0.682 -1.043,-0.457 -0.41,0.11 -0.899,1.559 0.108,0.409z\"\r\n\r\n            }, a);\r\n            Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\r\n                \"class\": \"blocklyIconSymbol\",\r\n                x: \"6.8\",\r\n                y: \"10.78\",\r\n                height: \"2\",\r\n                width: \"2\"\r\n            }, a)\r\n\r\n            //Actual Library code\r\n\r\n            //Blockly.Warning.prototype.drawIcon_ = function (a) {\r\n            //    Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\r\n            //        \"class\": \"blocklyIconShape\",\r\n            //        d: \"M2,15Q-1,15 0.5,12L6.5,1.7Q8,-1 9.5,1.7L15.5,12Q17,15 14,15z\"\r\n            //    }, a);\r\n            //    Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.PATH, {\r\n            //        \"class\": \"blocklyIconSymbol\",\r\n            //        d: \"m7,4.8v3.16l0.27,2.27h1.46l0.27,-2.27v-3.16z\"\r\n            //    }, a);\r\n            //    Blockly.utils.dom.createSvgElement(Blockly.utils.Svg.RECT, {\r\n            //        \"class\": \"blocklyIconSymbol\",\r\n            //        x: \"7\",\r\n            //        y: \"11\",\r\n            //        height: \"2\",\r\n            //        width: \"2\"\r\n            //    }, a)\r\n            //};\r\n        };\r\n        //End\r\n        if (initialXml) {\r\n            try\r\n            {\r\n                let TextToDom = Blockly.Xml.textToDom(initialXml);\r\n                Blockly.Xml.domToWorkspace(TextToDom, this.primaryWorkspace);\r\n                // Custom Code \r\n                this.primaryWorkspace.addChangeListener(this.onEvent);\r\n            } catch (e)\r\n            {\r\n                Blockly.getMainWorkspace().clear();\r\n                let xml = `<xml xmlns=\"https://developers.google.com/blockly/xml\">\r\n                        <block deletable=\"false\" type=\"final_step_type\" startScrollX=\"30\" startScrollY=\"30\" x=\"30\" y=\"30\" /></xml>\r\n                    `\r\n                let TextToDom = Blockly.Xml.textToDom(xml);\r\n                Blockly.Xml.domToWorkspace(TextToDom, this.primaryWorkspace);\r\n                // Custom Code \r\n                this.primaryWorkspace.addChangeListener(this.onEvent);\r\n                return true;\r\n             }\r\n            return true;\r\n         }\r\n           \r\n         \r\n        \r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.dispatchEvent(new Event('resize'));\r\n        this.workspace.resize();\r\n        let tools = this.toolbox;\r\n        this.workspace.updateToolbox(this.toolbox);\r\n\r\n    }\r\n\r\n    //When Click we remove the default action and do custom work\r\n    FlyoutBlockClick = (block) => {\r\n        if (typeof block.data === \"string\" && block.data) {\r\n            let obj = JSON.parse(block.data);\r\n            if (obj.blockType === \"Source\") {\r\n                thisObj.props.sourceVariableBlocks(obj, block);\r\n            } else if (obj.blockType === \"Target\") {\r\n                thisObj.props.targetVariableBlocks(obj, block);\r\n            } else if (obj.blockType === \"Work\") {\r\n                thisObj.props.workVariableBlocks(obj, block);\r\n\r\n            }\r\n        }\r\n    }\r\n    //End\r\n\r\n    onEvent = (event) => {\r\n\r\n\r\n        if (event.group && event.type === Blockly.Events.MOVE) {\r\n            Blockly.getMainWorkspace().getAllBlocks().map(Obj => {\r\n\r\n                if (Obj) {\r\n                    let data = JSON.parse(Obj.data);\r\n                   \r\n                    Obj.setEnabled(Obj.highPriority || Obj.getRootBlock().highPriority);\r\n                }\r\n            });\r\n        }\r\n        if (event.group && event.type == Blockly.Events.CREATE)\r\n        {\r\n            //enable && disable validation\r\n            var block = this.workspace.getBlockById(event.blockId)\r\n\r\n             if (event.xml.getElementsByTagName('data').length > 0)\r\n             {\r\n                 if (event.xml.lastElementChild.localName == \"data\")\r\n                 {\r\n                    let obj = JSON.parse(event.xml.lastElementChild.textContent);\r\n                     if (obj.blockType === \"Source\")\r\n                     {\r\n                         thisObj.props.sourceVariableBlocks(obj, block);\r\n                     } else if (obj.blockType === \"Target\")\r\n                     {\r\n                         thisObj.props.targetVariableBlocks(obj, block);\r\n\r\n                     } else if (obj.blockType === \"Work\")\r\n                     {\r\n                         thisObj.props.workVariableBlocks(obj, block);\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (event.type == Blockly.Events.DELETE)\r\n        {\r\n            var Obj = this.workspace.getBlockById(event.blockId)\r\n            if (event.oldXml.getAttribute(\"type\") === \"final_step_type\") {\r\n                const { initialXml } = this.props;\r\n\r\n                Blockly.Xml.domToWorkspace(\r\n                    Blockly.Xml.textToDom(initialXml),\r\n                    this.primaryWorkspace\r\n                );\r\n\r\n                //Empty the trashcan\r\n                Blockly.getMainWorkspace().trashcan.contents_ = [];\r\n            }\r\n\r\n            if (event.oldXml.getElementsByTagName('data').length > 0) {\r\n                if (event.oldXml.lastElementChild.localName == \"data\") {\r\n                    let obj = JSON.parse(event.oldXml.lastElementChild.textContent);\r\n                    thisObj.props.RemoveVariables(obj);\r\n                }\r\n            }\r\n            else if (Obj && 'type' in Obj && Obj.type === \"merge_type\") {\r\n                    thisObj.props.clearMergeVar();\r\n            }\r\n        }\r\n        if (event.type === Blockly.Events.UI) {\r\n            if (event.element && event.element === \"click\") { \r\n            //console.log(Blockly)\r\n            //let xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\r\n\r\n            let Obj = this.workspace.getBlockById(event.blockId)\r\n            //var list = xml.querySelector('[blockId=\"' + event.blockId+'\"]')\r\n            if (Obj) {\r\n                if ('type' in Obj && Obj.type === \"step_type\") {\r\n                    //thisObj.props.setCurrentStep(Obj);\r\n                } else if ('type' in Obj && Obj.type === \"merge_type\") {\r\n                    let StatementFirstBlocks = Obj.getInputTargetBlock(\"datasets_to_merge\");\r\n\r\n                    if (StatementFirstBlocks) {\r\n                        thisObj.props.mergeVariables(Obj);\r\n                    }\r\n                }\r\n                else if ('data' in Obj && Obj.data !== null) {\r\n                    let data = JSON.parse(Obj.data);\r\n                    if (data.blockType === \"Source\") {\r\n                        thisObj.props.sourceVariableBlocks(data, Obj);\r\n                    } else if (data.blockType === \"Target\") {\r\n                        thisObj.props.targetVariableBlocks(data, Obj);\r\n\r\n                    } else if (data.blockType === \"Work\") {\r\n                        thisObj.props.workVariableBlocks(data, Obj);\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    get workspace() {\r\n        return this.primaryWorkspace;\r\n    }\r\n\r\n    get tools() {\r\n        return this.toolbox;\r\n    }\r\n\r\n    setXml(xml) {\r\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return <React.Fragment>\r\n            <div ref={e => this.blocklyDiv = e} id=\"blocklyDiv\" />\r\n            <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: 'none' }} ref={(toolbox) => { this.toolbox = toolbox; }}>\r\n                {children}\r\n            </xml>\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default BlocklyComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}