{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '#'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '`',\n    close: '`'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '`',\n    close: '`'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.perl',\n  brackets: [{\n    token: 'delimiter.bracket',\n    open: '{',\n    close: '}'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  }, {\n    token: 'delimiter.square',\n    open: '[',\n    close: ']'\n  }],\n  // https://learn.perl.org/docs/keywords.html\n  // Perl syntax\n  keywords: ['__DATA__', 'else', 'lock', '__END__', 'elsif', 'lt', '__FILE__', 'eq', '__LINE__', 'exp', 'ne', 'sub', '__PACKAGE__', 'for', 'no', 'and', 'foreach', 'or', 'unless', 'cmp', 'ge', 'package', 'until', 'continue', 'gt', 'while', 'CORE', 'if', 'xor', 'do', 'le', '__DIE__', '__WARN__'],\n  // Perl functions\n  builtinFunctions: ['-A', 'END', 'length', 'setpgrp', '-B', 'endgrent', 'link', 'setpriority', '-b', 'endhostent', 'listen', 'setprotoent', '-C', 'endnetent', 'local', 'setpwent', '-c', 'endprotoent', 'localtime', 'setservent', '-d', 'endpwent', 'log', 'setsockopt', '-e', 'endservent', 'lstat', 'shift', '-f', 'eof', 'map', 'shmctl', '-g', 'eval', 'mkdir', 'shmget', '-k', 'exec', 'msgctl', 'shmread', '-l', 'exists', 'msgget', 'shmwrite', '-M', 'exit', 'msgrcv', 'shutdown', '-O', 'fcntl', 'msgsnd', 'sin', '-o', 'fileno', 'my', 'sleep', '-p', 'flock', 'next', 'socket', '-r', 'fork', 'not', 'socketpair', '-R', 'format', 'oct', 'sort', '-S', 'formline', 'open', 'splice', '-s', 'getc', 'opendir', 'split', '-T', 'getgrent', 'ord', 'sprintf', '-t', 'getgrgid', 'our', 'sqrt', '-u', 'getgrnam', 'pack', 'srand', '-w', 'gethostbyaddr', 'pipe', 'stat', '-W', 'gethostbyname', 'pop', 'state', '-X', 'gethostent', 'pos', 'study', '-x', 'getlogin', 'print', 'substr', '-z', 'getnetbyaddr', 'printf', 'symlink', 'abs', 'getnetbyname', 'prototype', 'syscall', 'accept', 'getnetent', 'push', 'sysopen', 'alarm', 'getpeername', 'quotemeta', 'sysread', 'atan2', 'getpgrp', 'rand', 'sysseek', 'AUTOLOAD', 'getppid', 'read', 'system', 'BEGIN', 'getpriority', 'readdir', 'syswrite', 'bind', 'getprotobyname', 'readline', 'tell', 'binmode', 'getprotobynumber', 'readlink', 'telldir', 'bless', 'getprotoent', 'readpipe', 'tie', 'break', 'getpwent', 'recv', 'tied', 'caller', 'getpwnam', 'redo', 'time', 'chdir', 'getpwuid', 'ref', 'times', 'CHECK', 'getservbyname', 'rename', 'truncate', 'chmod', 'getservbyport', 'require', 'uc', 'chomp', 'getservent', 'reset', 'ucfirst', 'chop', 'getsockname', 'return', 'umask', 'chown', 'getsockopt', 'reverse', 'undef', 'chr', 'glob', 'rewinddir', 'UNITCHECK', 'chroot', 'gmtime', 'rindex', 'unlink', 'close', 'goto', 'rmdir', 'unpack', 'closedir', 'grep', 'say', 'unshift', 'connect', 'hex', 'scalar', 'untie', 'cos', 'index', 'seek', 'use', 'crypt', 'INIT', 'seekdir', 'utime', 'dbmclose', 'int', 'select', 'values', 'dbmopen', 'ioctl', 'semctl', 'vec', 'defined', 'join', 'semget', 'wait', 'delete', 'keys', 'semop', 'waitpid', 'DESTROY', 'kill', 'send', 'wantarray', 'die', 'last', 'setgrent', 'warn', 'dump', 'lc', 'sethostent', 'write', 'each', 'lcfirst', 'setnetent'],\n  // File handlers\n  builtinFileHandlers: ['ARGV', 'STDERR', 'STDOUT', 'ARGVOUT', 'STDIN', 'ENV'],\n  // Perl variables\n  builtinVariables: ['$!', '$^RE_TRIE_MAXBUF', '$LAST_REGEXP_CODE_RESULT', '$\"', '$^S', '$LIST_SEPARATOR', '$#', '$^T', '$MATCH', '$$', '$^TAINT', '$MULTILINE_MATCHING', '$%', '$^UNICODE', '$NR', '$&', '$^UTF8LOCALE', '$OFMT', \"$'\", '$^V', '$OFS', '$(', '$^W', '$ORS', '$)', '$^WARNING_BITS', '$OS_ERROR', '$*', '$^WIDE_SYSTEM_CALLS', '$OSNAME', '$+', '$^X', '$OUTPUT_AUTO_FLUSH', '$,', '$_', '$OUTPUT_FIELD_SEPARATOR', '$-', '$`', '$OUTPUT_RECORD_SEPARATOR', '$.', '$a', '$PERL_VERSION', '$/', '$ACCUMULATOR', '$PERLDB', '$0', '$ARG', '$PID', '$:', '$ARGV', '$POSTMATCH', '$;', '$b', '$PREMATCH', '$<', '$BASETIME', '$PROCESS_ID', '$=', '$CHILD_ERROR', '$PROGRAM_NAME', '$>', '$COMPILING', '$REAL_GROUP_ID', '$?', '$DEBUGGING', '$REAL_USER_ID', '$@', '$EFFECTIVE_GROUP_ID', '$RS', '$[', '$EFFECTIVE_USER_ID', '$SUBSCRIPT_SEPARATOR', '$\\\\', '$EGID', '$SUBSEP', '$]', '$ERRNO', '$SYSTEM_FD_MAX', '$^', '$EUID', '$UID', '$^A', '$EVAL_ERROR', '$WARNING', '$^C', '$EXCEPTIONS_BEING_CAUGHT', '$|', '$^CHILD_ERROR_NATIVE', '$EXECUTABLE_NAME', '$~', '$^D', '$EXTENDED_OS_ERROR', '%!', '$^E', '$FORMAT_FORMFEED', '%^H', '$^ENCODING', '$FORMAT_LINE_BREAK_CHARACTERS', '%ENV', '$^F', '$FORMAT_LINES_LEFT', '%INC', '$^H', '$FORMAT_LINES_PER_PAGE', '%OVERLOAD', '$^I', '$FORMAT_NAME', '%SIG', '$^L', '$FORMAT_PAGE_NUMBER', '@+', '$^M', '$FORMAT_TOP_NAME', '@-', '$^N', '$GID', '@_', '$^O', '$INPLACE_EDIT', '@ARGV', '$^OPEN', '$INPUT_LINE_NUMBER', '@INC', '$^P', '$INPUT_RECORD_SEPARATOR', '@LAST_MATCH_START', '$^R', '$LAST_MATCH_END', '$^RE_DEBUG_FLAGS', '$LAST_PAREN_MATCH'],\n  // operators\n  symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n  quoteLikeOps: ['qr', 'm', 's', 'q', 'qq', 'qx', 'qw', 'tr', 'y'],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [{\n      include: '@whitespace'\n    }, [/[a-zA-Z\\-_][\\w\\-_]*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@builtinFunctions': 'type.identifier',\n        '@builtinFileHandlers': 'variable.predefined',\n        '@quoteLikeOps': {\n          token: '@rematch',\n          next: 'quotedConstructs'\n        },\n        '@default': ''\n      }\n    }],\n    // Perl variables\n    [/[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/, {\n      cases: {\n        '@builtinVariables': 'variable.predefined',\n        '@default': 'variable'\n      }\n    }], {\n      include: '@strings'\n    }, {\n      include: '@dblStrings'\n    },\n    // Perl Doc\n    {\n      include: '@perldoc'\n    },\n    // Here Doc\n    {\n      include: '@heredoc'\n    }, [/[{}\\[\\]()]/, '@brackets'],\n    // RegExp\n    [/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/, 'regexp'], [/@symbols/, 'operators'], {\n      include: '@numbers'\n    }, [/[,;]/, 'delimiter']],\n    whitespace: [[/\\s+/, 'white'], [/(^#!.*$)/, 'metatag'], [/(^#.*$)/, 'comment']],\n    numbers: [[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'], [/\\d+/, 'number']],\n    // Single quote string\n    strings: [[/'/, 'string', '@stringBody']],\n    stringBody: [[/'/, 'string', '@popall'], [/\\\\'/, 'string.escape'], [/./, 'string']],\n    // Double quote string\n    dblStrings: [[/\"/, 'string', '@dblStringBody']],\n    dblStringBody: [[/\"/, 'string', '@popall'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], {\n      include: '@variables'\n    }, [/./, 'string']],\n    // Quoted constructs\n    // Percent strings in Ruby are similar to quote-like operators in Perl.\n    // This is adapted from pstrings in ../ruby/ruby.ts.\n    quotedConstructs: [[/(q|qw|tr|y)\\s*\\(/, {\n      token: 'string.delim',\n      switchTo: '@qstring.(.)'\n    }], [/(q|qw|tr|y)\\s*\\[/, {\n      token: 'string.delim',\n      switchTo: '@qstring.[.]'\n    }], [/(q|qw|tr|y)\\s*\\{/, {\n      token: 'string.delim',\n      switchTo: '@qstring.{.}'\n    }], [/(q|qw|tr|y)\\s*</, {\n      token: 'string.delim',\n      switchTo: '@qstring.<.>'\n    }], [/(q|qw|tr|y)#/, {\n      token: 'string.delim',\n      switchTo: '@qstring.#.#'\n    }], [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, {\n      token: 'string.delim',\n      switchTo: '@qstring.$2.$2'\n    }], [/(q|qw|tr|y)\\s+(\\w)/, {\n      token: 'string.delim',\n      switchTo: '@qstring.$2.$2'\n    }], [/(qr|m|s)\\s*\\(/, {\n      token: 'regexp.delim',\n      switchTo: '@qregexp.(.)'\n    }], [/(qr|m|s)\\s*\\[/, {\n      token: 'regexp.delim',\n      switchTo: '@qregexp.[.]'\n    }], [/(qr|m|s)\\s*\\{/, {\n      token: 'regexp.delim',\n      switchTo: '@qregexp.{.}'\n    }], [/(qr|m|s)\\s*</, {\n      token: 'regexp.delim',\n      switchTo: '@qregexp.<.>'\n    }], [/(qr|m|s)#/, {\n      token: 'regexp.delim',\n      switchTo: '@qregexp.#.#'\n    }], [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, {\n      token: 'regexp.delim',\n      switchTo: '@qregexp.$2.$2'\n    }], [/(qr|m|s)\\s+(\\w)/, {\n      token: 'regexp.delim',\n      switchTo: '@qregexp.$2.$2'\n    }], [/(qq|qx)\\s*\\(/, {\n      token: 'string.delim',\n      switchTo: '@qqstring.(.)'\n    }], [/(qq|qx)\\s*\\[/, {\n      token: 'string.delim',\n      switchTo: '@qqstring.[.]'\n    }], [/(qq|qx)\\s*\\{/, {\n      token: 'string.delim',\n      switchTo: '@qqstring.{.}'\n    }], [/(qq|qx)\\s*</, {\n      token: 'string.delim',\n      switchTo: '@qqstring.<.>'\n    }], [/(qq|qx)#/, {\n      token: 'string.delim',\n      switchTo: '@qqstring.#.#'\n    }], [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, {\n      token: 'string.delim',\n      switchTo: '@qqstring.$2.$2'\n    }], [/(qq|qx)\\s+(\\w)/, {\n      token: 'string.delim',\n      switchTo: '@qqstring.$2.$2'\n    }]],\n    // Non-expanded quoted string\n    // qstring<open>.<close>\n    //  open = open delimiter\n    //  close = close delimiter\n    qstring: [[/\\\\./, 'string.escape'], [/./, {\n      cases: {\n        '$#==$S3': {\n          token: 'string.delim',\n          next: '@pop'\n        },\n        '$#==$S2': {\n          token: 'string.delim',\n          next: '@push'\n        },\n        '@default': 'string'\n      }\n    }]],\n    // Quoted regexp\n    // qregexp.<open>.<close>\n    //  open = open delimiter\n    //  close = close delimiter\n    qregexp: [{\n      include: '@variables'\n    }, [/\\\\./, 'regexp.escape'], [/./, {\n      cases: {\n        '$#==$S3': {\n          token: 'regexp.delim',\n          next: '@regexpModifiers'\n        },\n        '$#==$S2': {\n          token: 'regexp.delim',\n          next: '@push'\n        },\n        '@default': 'regexp'\n      }\n    }]],\n    regexpModifiers: [[/[msixpodualngcer]+/, {\n      token: 'regexp.modifier',\n      next: '@popall'\n    }]],\n    // Expanded quoted string\n    // qqstring.<open>.<close>\n    //  open = open delimiter\n    //  close = close delimiter\n    qqstring: [{\n      include: '@variables'\n    }, {\n      include: '@qstring'\n    }],\n    heredoc: [[/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/, {\n      token: 'string.heredoc.delimiter',\n      next: '@heredocBody.$1'\n    }]],\n    heredocBody: [[/^([\\w\\-]+)$/, {\n      cases: {\n        '$1==$S2': [{\n          token: 'string.heredoc.delimiter',\n          next: '@popall'\n        }],\n        '@default': 'string.heredoc'\n      }\n    }], [/./, 'string.heredoc']],\n    perldoc: [[/^=\\w/, 'comment.doc', '@perldocBody']],\n    perldocBody: [[/^=cut\\b/, 'type.identifier', '@popall'], [/./, 'comment.doc']],\n    variables: [[/\\$\\w+/, 'variable'], [/@\\w+/, 'variable'], [/%\\w+/, 'variable']]\n  }\n};","map":{"version":3,"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","token","keywords","builtinFunctions","builtinFileHandlers","builtinVariables","symbols","quoteLikeOps","escapes","tokenizer","root","include","cases","next","whitespace","numbers","strings","stringBody","dblStrings","dblStringBody","quotedConstructs","switchTo","qstring","qregexp","regexpModifiers","qqstring","heredoc","heredocBody","perldoc","perldocBody","variables"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#',\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.perl',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n    ],\r\n    // https://learn.perl.org/docs/keywords.html\r\n    // Perl syntax\r\n    keywords: [\r\n        '__DATA__',\r\n        'else',\r\n        'lock',\r\n        '__END__',\r\n        'elsif',\r\n        'lt',\r\n        '__FILE__',\r\n        'eq',\r\n        '__LINE__',\r\n        'exp',\r\n        'ne',\r\n        'sub',\r\n        '__PACKAGE__',\r\n        'for',\r\n        'no',\r\n        'and',\r\n        'foreach',\r\n        'or',\r\n        'unless',\r\n        'cmp',\r\n        'ge',\r\n        'package',\r\n        'until',\r\n        'continue',\r\n        'gt',\r\n        'while',\r\n        'CORE',\r\n        'if',\r\n        'xor',\r\n        'do',\r\n        'le',\r\n        '__DIE__',\r\n        '__WARN__',\r\n    ],\r\n    // Perl functions\r\n    builtinFunctions: [\r\n        '-A',\r\n        'END',\r\n        'length',\r\n        'setpgrp',\r\n        '-B',\r\n        'endgrent',\r\n        'link',\r\n        'setpriority',\r\n        '-b',\r\n        'endhostent',\r\n        'listen',\r\n        'setprotoent',\r\n        '-C',\r\n        'endnetent',\r\n        'local',\r\n        'setpwent',\r\n        '-c',\r\n        'endprotoent',\r\n        'localtime',\r\n        'setservent',\r\n        '-d',\r\n        'endpwent',\r\n        'log',\r\n        'setsockopt',\r\n        '-e',\r\n        'endservent',\r\n        'lstat',\r\n        'shift',\r\n        '-f',\r\n        'eof',\r\n        'map',\r\n        'shmctl',\r\n        '-g',\r\n        'eval',\r\n        'mkdir',\r\n        'shmget',\r\n        '-k',\r\n        'exec',\r\n        'msgctl',\r\n        'shmread',\r\n        '-l',\r\n        'exists',\r\n        'msgget',\r\n        'shmwrite',\r\n        '-M',\r\n        'exit',\r\n        'msgrcv',\r\n        'shutdown',\r\n        '-O',\r\n        'fcntl',\r\n        'msgsnd',\r\n        'sin',\r\n        '-o',\r\n        'fileno',\r\n        'my',\r\n        'sleep',\r\n        '-p',\r\n        'flock',\r\n        'next',\r\n        'socket',\r\n        '-r',\r\n        'fork',\r\n        'not',\r\n        'socketpair',\r\n        '-R',\r\n        'format',\r\n        'oct',\r\n        'sort',\r\n        '-S',\r\n        'formline',\r\n        'open',\r\n        'splice',\r\n        '-s',\r\n        'getc',\r\n        'opendir',\r\n        'split',\r\n        '-T',\r\n        'getgrent',\r\n        'ord',\r\n        'sprintf',\r\n        '-t',\r\n        'getgrgid',\r\n        'our',\r\n        'sqrt',\r\n        '-u',\r\n        'getgrnam',\r\n        'pack',\r\n        'srand',\r\n        '-w',\r\n        'gethostbyaddr',\r\n        'pipe',\r\n        'stat',\r\n        '-W',\r\n        'gethostbyname',\r\n        'pop',\r\n        'state',\r\n        '-X',\r\n        'gethostent',\r\n        'pos',\r\n        'study',\r\n        '-x',\r\n        'getlogin',\r\n        'print',\r\n        'substr',\r\n        '-z',\r\n        'getnetbyaddr',\r\n        'printf',\r\n        'symlink',\r\n        'abs',\r\n        'getnetbyname',\r\n        'prototype',\r\n        'syscall',\r\n        'accept',\r\n        'getnetent',\r\n        'push',\r\n        'sysopen',\r\n        'alarm',\r\n        'getpeername',\r\n        'quotemeta',\r\n        'sysread',\r\n        'atan2',\r\n        'getpgrp',\r\n        'rand',\r\n        'sysseek',\r\n        'AUTOLOAD',\r\n        'getppid',\r\n        'read',\r\n        'system',\r\n        'BEGIN',\r\n        'getpriority',\r\n        'readdir',\r\n        'syswrite',\r\n        'bind',\r\n        'getprotobyname',\r\n        'readline',\r\n        'tell',\r\n        'binmode',\r\n        'getprotobynumber',\r\n        'readlink',\r\n        'telldir',\r\n        'bless',\r\n        'getprotoent',\r\n        'readpipe',\r\n        'tie',\r\n        'break',\r\n        'getpwent',\r\n        'recv',\r\n        'tied',\r\n        'caller',\r\n        'getpwnam',\r\n        'redo',\r\n        'time',\r\n        'chdir',\r\n        'getpwuid',\r\n        'ref',\r\n        'times',\r\n        'CHECK',\r\n        'getservbyname',\r\n        'rename',\r\n        'truncate',\r\n        'chmod',\r\n        'getservbyport',\r\n        'require',\r\n        'uc',\r\n        'chomp',\r\n        'getservent',\r\n        'reset',\r\n        'ucfirst',\r\n        'chop',\r\n        'getsockname',\r\n        'return',\r\n        'umask',\r\n        'chown',\r\n        'getsockopt',\r\n        'reverse',\r\n        'undef',\r\n        'chr',\r\n        'glob',\r\n        'rewinddir',\r\n        'UNITCHECK',\r\n        'chroot',\r\n        'gmtime',\r\n        'rindex',\r\n        'unlink',\r\n        'close',\r\n        'goto',\r\n        'rmdir',\r\n        'unpack',\r\n        'closedir',\r\n        'grep',\r\n        'say',\r\n        'unshift',\r\n        'connect',\r\n        'hex',\r\n        'scalar',\r\n        'untie',\r\n        'cos',\r\n        'index',\r\n        'seek',\r\n        'use',\r\n        'crypt',\r\n        'INIT',\r\n        'seekdir',\r\n        'utime',\r\n        'dbmclose',\r\n        'int',\r\n        'select',\r\n        'values',\r\n        'dbmopen',\r\n        'ioctl',\r\n        'semctl',\r\n        'vec',\r\n        'defined',\r\n        'join',\r\n        'semget',\r\n        'wait',\r\n        'delete',\r\n        'keys',\r\n        'semop',\r\n        'waitpid',\r\n        'DESTROY',\r\n        'kill',\r\n        'send',\r\n        'wantarray',\r\n        'die',\r\n        'last',\r\n        'setgrent',\r\n        'warn',\r\n        'dump',\r\n        'lc',\r\n        'sethostent',\r\n        'write',\r\n        'each',\r\n        'lcfirst',\r\n        'setnetent',\r\n    ],\r\n    // File handlers\r\n    builtinFileHandlers: ['ARGV', 'STDERR', 'STDOUT', 'ARGVOUT', 'STDIN', 'ENV'],\r\n    // Perl variables\r\n    builtinVariables: [\r\n        '$!',\r\n        '$^RE_TRIE_MAXBUF',\r\n        '$LAST_REGEXP_CODE_RESULT',\r\n        '$\"',\r\n        '$^S',\r\n        '$LIST_SEPARATOR',\r\n        '$#',\r\n        '$^T',\r\n        '$MATCH',\r\n        '$$',\r\n        '$^TAINT',\r\n        '$MULTILINE_MATCHING',\r\n        '$%',\r\n        '$^UNICODE',\r\n        '$NR',\r\n        '$&',\r\n        '$^UTF8LOCALE',\r\n        '$OFMT',\r\n        \"$'\",\r\n        '$^V',\r\n        '$OFS',\r\n        '$(',\r\n        '$^W',\r\n        '$ORS',\r\n        '$)',\r\n        '$^WARNING_BITS',\r\n        '$OS_ERROR',\r\n        '$*',\r\n        '$^WIDE_SYSTEM_CALLS',\r\n        '$OSNAME',\r\n        '$+',\r\n        '$^X',\r\n        '$OUTPUT_AUTO_FLUSH',\r\n        '$,',\r\n        '$_',\r\n        '$OUTPUT_FIELD_SEPARATOR',\r\n        '$-',\r\n        '$`',\r\n        '$OUTPUT_RECORD_SEPARATOR',\r\n        '$.',\r\n        '$a',\r\n        '$PERL_VERSION',\r\n        '$/',\r\n        '$ACCUMULATOR',\r\n        '$PERLDB',\r\n        '$0',\r\n        '$ARG',\r\n        '$PID',\r\n        '$:',\r\n        '$ARGV',\r\n        '$POSTMATCH',\r\n        '$;',\r\n        '$b',\r\n        '$PREMATCH',\r\n        '$<',\r\n        '$BASETIME',\r\n        '$PROCESS_ID',\r\n        '$=',\r\n        '$CHILD_ERROR',\r\n        '$PROGRAM_NAME',\r\n        '$>',\r\n        '$COMPILING',\r\n        '$REAL_GROUP_ID',\r\n        '$?',\r\n        '$DEBUGGING',\r\n        '$REAL_USER_ID',\r\n        '$@',\r\n        '$EFFECTIVE_GROUP_ID',\r\n        '$RS',\r\n        '$[',\r\n        '$EFFECTIVE_USER_ID',\r\n        '$SUBSCRIPT_SEPARATOR',\r\n        '$\\\\',\r\n        '$EGID',\r\n        '$SUBSEP',\r\n        '$]',\r\n        '$ERRNO',\r\n        '$SYSTEM_FD_MAX',\r\n        '$^',\r\n        '$EUID',\r\n        '$UID',\r\n        '$^A',\r\n        '$EVAL_ERROR',\r\n        '$WARNING',\r\n        '$^C',\r\n        '$EXCEPTIONS_BEING_CAUGHT',\r\n        '$|',\r\n        '$^CHILD_ERROR_NATIVE',\r\n        '$EXECUTABLE_NAME',\r\n        '$~',\r\n        '$^D',\r\n        '$EXTENDED_OS_ERROR',\r\n        '%!',\r\n        '$^E',\r\n        '$FORMAT_FORMFEED',\r\n        '%^H',\r\n        '$^ENCODING',\r\n        '$FORMAT_LINE_BREAK_CHARACTERS',\r\n        '%ENV',\r\n        '$^F',\r\n        '$FORMAT_LINES_LEFT',\r\n        '%INC',\r\n        '$^H',\r\n        '$FORMAT_LINES_PER_PAGE',\r\n        '%OVERLOAD',\r\n        '$^I',\r\n        '$FORMAT_NAME',\r\n        '%SIG',\r\n        '$^L',\r\n        '$FORMAT_PAGE_NUMBER',\r\n        '@+',\r\n        '$^M',\r\n        '$FORMAT_TOP_NAME',\r\n        '@-',\r\n        '$^N',\r\n        '$GID',\r\n        '@_',\r\n        '$^O',\r\n        '$INPLACE_EDIT',\r\n        '@ARGV',\r\n        '$^OPEN',\r\n        '$INPUT_LINE_NUMBER',\r\n        '@INC',\r\n        '$^P',\r\n        '$INPUT_RECORD_SEPARATOR',\r\n        '@LAST_MATCH_START',\r\n        '$^R',\r\n        '$LAST_MATCH_END',\r\n        '$^RE_DEBUG_FLAGS',\r\n        '$LAST_PAREN_MATCH',\r\n    ],\r\n    // operators\r\n    symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\r\n    quoteLikeOps: ['qr', 'm', 's', 'q', 'qq', 'qx', 'qw', 'tr', 'y'],\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            [\r\n                /[a-zA-Z\\-_][\\w\\-_]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@builtinFunctions': 'type.identifier',\r\n                        '@builtinFileHandlers': 'variable.predefined',\r\n                        '@quoteLikeOps': { token: '@rematch', next: 'quotedConstructs' },\r\n                        '@default': '',\r\n                    },\r\n                },\r\n            ],\r\n            // Perl variables\r\n            [\r\n                /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\r\n                {\r\n                    cases: {\r\n                        '@builtinVariables': 'variable.predefined',\r\n                        '@default': 'variable',\r\n                    },\r\n                },\r\n            ],\r\n            { include: '@strings' },\r\n            { include: '@dblStrings' },\r\n            // Perl Doc\r\n            { include: '@perldoc' },\r\n            // Here Doc\r\n            { include: '@heredoc' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            // RegExp\r\n            [\r\n                /[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/,\r\n                'regexp',\r\n            ],\r\n            [/@symbols/, 'operators'],\r\n            { include: '@numbers' },\r\n            [/[,;]/, 'delimiter'],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/(^#!.*$)/, 'metatag'],\r\n            [/(^#.*$)/, 'comment'],\r\n        ],\r\n        numbers: [\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n        ],\r\n        // Single quote string\r\n        strings: [[/'/, 'string', '@stringBody']],\r\n        stringBody: [\r\n            [/'/, 'string', '@popall'],\r\n            [/\\\\'/, 'string.escape'],\r\n            [/./, 'string'],\r\n        ],\r\n        // Double quote string\r\n        dblStrings: [[/\"/, 'string', '@dblStringBody']],\r\n        dblStringBody: [\r\n            [/\"/, 'string', '@popall'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            { include: '@variables' },\r\n            [/./, 'string'],\r\n        ],\r\n        // Quoted constructs\r\n        // Percent strings in Ruby are similar to quote-like operators in Perl.\r\n        // This is adapted from pstrings in ../ruby/ruby.ts.\r\n        quotedConstructs: [\r\n            [/(q|qw|tr|y)\\s*\\(/, { token: 'string.delim', switchTo: '@qstring.(.)' }],\r\n            [/(q|qw|tr|y)\\s*\\[/, { token: 'string.delim', switchTo: '@qstring.[.]' }],\r\n            [/(q|qw|tr|y)\\s*\\{/, { token: 'string.delim', switchTo: '@qstring.{.}' }],\r\n            [/(q|qw|tr|y)\\s*</, { token: 'string.delim', switchTo: '@qstring.<.>' }],\r\n            [/(q|qw|tr|y)#/, { token: 'string.delim', switchTo: '@qstring.#.#' }],\r\n            [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\r\n            [/(q|qw|tr|y)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\r\n            [/(qr|m|s)\\s*\\(/, { token: 'regexp.delim', switchTo: '@qregexp.(.)' }],\r\n            [/(qr|m|s)\\s*\\[/, { token: 'regexp.delim', switchTo: '@qregexp.[.]' }],\r\n            [/(qr|m|s)\\s*\\{/, { token: 'regexp.delim', switchTo: '@qregexp.{.}' }],\r\n            [/(qr|m|s)\\s*</, { token: 'regexp.delim', switchTo: '@qregexp.<.>' }],\r\n            [/(qr|m|s)#/, { token: 'regexp.delim', switchTo: '@qregexp.#.#' }],\r\n            [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\r\n            [/(qr|m|s)\\s+(\\w)/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\r\n            [/(qq|qx)\\s*\\(/, { token: 'string.delim', switchTo: '@qqstring.(.)' }],\r\n            [/(qq|qx)\\s*\\[/, { token: 'string.delim', switchTo: '@qqstring.[.]' }],\r\n            [/(qq|qx)\\s*\\{/, { token: 'string.delim', switchTo: '@qqstring.{.}' }],\r\n            [/(qq|qx)\\s*</, { token: 'string.delim', switchTo: '@qqstring.<.>' }],\r\n            [/(qq|qx)#/, { token: 'string.delim', switchTo: '@qqstring.#.#' }],\r\n            [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\r\n            [/(qq|qx)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\r\n        ],\r\n        // Non-expanded quoted string\r\n        // qstring<open>.<close>\r\n        //  open = open delimiter\r\n        //  close = close delimiter\r\n        qstring: [\r\n            [/\\\\./, 'string.escape'],\r\n            [/./, {\r\n                    cases: {\r\n                        '$#==$S3': { token: 'string.delim', next: '@pop' },\r\n                        '$#==$S2': { token: 'string.delim', next: '@push' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n        ],\r\n        // Quoted regexp\r\n        // qregexp.<open>.<close>\r\n        //  open = open delimiter\r\n        //  close = close delimiter\r\n        qregexp: [\r\n            { include: '@variables' },\r\n            [/\\\\./, 'regexp.escape'],\r\n            [/./, {\r\n                    cases: {\r\n                        '$#==$S3': { token: 'regexp.delim', next: '@regexpModifiers' },\r\n                        '$#==$S2': { token: 'regexp.delim', next: '@push' },\r\n                        '@default': 'regexp'\r\n                    }\r\n                }],\r\n        ],\r\n        regexpModifiers: [\r\n            [/[msixpodualngcer]+/, { token: 'regexp.modifier', next: '@popall' }],\r\n        ],\r\n        // Expanded quoted string\r\n        // qqstring.<open>.<close>\r\n        //  open = open delimiter\r\n        //  close = close delimiter\r\n        qqstring: [\r\n            { include: '@variables' },\r\n            { include: '@qstring' },\r\n        ],\r\n        heredoc: [\r\n            [\r\n                /<<\\s*['\"`]?([\\w\\-]+)['\"`]?/,\r\n                { token: 'string.heredoc.delimiter', next: '@heredocBody.$1' },\r\n            ],\r\n        ],\r\n        heredocBody: [\r\n            [\r\n                /^([\\w\\-]+)$/,\r\n                {\r\n                    cases: {\r\n                        '$1==$S2': [{ token: 'string.heredoc.delimiter', next: '@popall' }],\r\n                        '@default': 'string.heredoc',\r\n                    },\r\n                },\r\n            ],\r\n            [/./, 'string.heredoc'],\r\n        ],\r\n        perldoc: [[/^=\\w/, 'comment.doc', '@perldocBody']],\r\n        perldocBody: [\r\n            [/^=cut\\b/, 'type.identifier', '@popall'],\r\n            [/./, 'comment.doc'],\r\n        ],\r\n        variables: [\r\n            [/\\$\\w+/, 'variable'],\r\n            [/@\\w+/, 'variable'],\r\n            [/%\\w+/, 'variable'],\r\n        ],\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}