{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.regexp.exec\");\nrequire(\"core-js/modules/es.string.search\");\nexports.__esModule = true;\nexports.default = dateValidator;\nexports.correctFormat = correctFormat;\nvar _moment = _interopRequireDefault(require(\"moment\"));\nvar _date = require(\"../helpers/date\");\nvar _editors = require(\"../editors\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Date cell validator\n *\n * @private\n * @validator DateValidator\n * @param {*} value - Value of edited cell\n * @param {Function} callback - Callback called with validation result\n */\nfunction dateValidator(value, callback) {\n  var dateEditor = (0, _editors.getEditorInstance)('date', this.instance);\n  var valueToValidate = value;\n  var valid = true;\n  if (valueToValidate === null || valueToValidate === void 0) {\n    valueToValidate = '';\n  }\n  var isValidFormat = (0, _moment.default)(valueToValidate, this.dateFormat || dateEditor.defaultDateFormat, true).isValid();\n  var isValidDate = (0, _moment.default)(new Date(valueToValidate)).isValid() || isValidFormat;\n  if (this.allowEmpty && valueToValidate === '') {\n    isValidDate = true;\n    isValidFormat = true;\n  }\n  if (!isValidDate) {\n    valid = false;\n  }\n  if (!isValidDate && isValidFormat) {\n    valid = true;\n  }\n  if (isValidDate && !isValidFormat) {\n    if (this.correctFormat === true) {\n      // if format correction is enabled\n      var correctedValue = correctFormat(valueToValidate, this.dateFormat);\n      var row = this.instance.runHooks('unmodifyRow', this.row);\n      var column = this.instance.runHooks('unmodifyCol', this.col);\n      this.instance.setDataAtCell(row, column, correctedValue, 'dateValidator');\n      valid = true;\n    } else {\n      valid = false;\n    }\n  }\n  callback(valid);\n}\n/**\n * Format the given string using moment.js' format feature\n *\n * @param {String} value\n * @param {String} dateFormat\n * @returns {String}\n */\n\nfunction correctFormat(value, dateFormat) {\n  var dateFromDate = (0, _moment.default)((0, _date.getNormalizedDate)(value));\n  var dateFromMoment = (0, _moment.default)(value, dateFormat);\n  var isAlphanumeric = value.search(/[A-z]/g) > -1;\n  var date;\n  if (dateFromDate.isValid() && dateFromDate.format('x') === dateFromMoment.format('x') || !dateFromMoment.isValid() || isAlphanumeric) {\n    date = dateFromDate;\n  } else {\n    date = dateFromMoment;\n  }\n  return date.format(dateFormat);\n}","map":{"version":3,"names":["require","exports","__esModule","default","dateValidator","correctFormat","_moment","_interopRequireDefault","_date","_editors","obj","value","callback","dateEditor","getEditorInstance","instance","valueToValidate","valid","isValidFormat","dateFormat","defaultDateFormat","isValid","isValidDate","Date","allowEmpty","correctedValue","row","runHooks","column","col","setDataAtCell","dateFromDate","getNormalizedDate","dateFromMoment","isAlphanumeric","search","date","format"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/handsontable/commonjs/validators/dateValidator.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.search\");\n\nexports.__esModule = true;\nexports.default = dateValidator;\nexports.correctFormat = correctFormat;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _date = require(\"../helpers/date\");\n\nvar _editors = require(\"../editors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Date cell validator\n *\n * @private\n * @validator DateValidator\n * @param {*} value - Value of edited cell\n * @param {Function} callback - Callback called with validation result\n */\nfunction dateValidator(value, callback) {\n  var dateEditor = (0, _editors.getEditorInstance)('date', this.instance);\n  var valueToValidate = value;\n  var valid = true;\n\n  if (valueToValidate === null || valueToValidate === void 0) {\n    valueToValidate = '';\n  }\n\n  var isValidFormat = (0, _moment.default)(valueToValidate, this.dateFormat || dateEditor.defaultDateFormat, true).isValid();\n  var isValidDate = (0, _moment.default)(new Date(valueToValidate)).isValid() || isValidFormat;\n\n  if (this.allowEmpty && valueToValidate === '') {\n    isValidDate = true;\n    isValidFormat = true;\n  }\n\n  if (!isValidDate) {\n    valid = false;\n  }\n\n  if (!isValidDate && isValidFormat) {\n    valid = true;\n  }\n\n  if (isValidDate && !isValidFormat) {\n    if (this.correctFormat === true) {\n      // if format correction is enabled\n      var correctedValue = correctFormat(valueToValidate, this.dateFormat);\n      var row = this.instance.runHooks('unmodifyRow', this.row);\n      var column = this.instance.runHooks('unmodifyCol', this.col);\n      this.instance.setDataAtCell(row, column, correctedValue, 'dateValidator');\n      valid = true;\n    } else {\n      valid = false;\n    }\n  }\n\n  callback(valid);\n}\n/**\n * Format the given string using moment.js' format feature\n *\n * @param {String} value\n * @param {String} dateFormat\n * @returns {String}\n */\n\n\nfunction correctFormat(value, dateFormat) {\n  var dateFromDate = (0, _moment.default)((0, _date.getNormalizedDate)(value));\n  var dateFromMoment = (0, _moment.default)(value, dateFormat);\n  var isAlphanumeric = value.search(/[A-z]/g) > -1;\n  var date;\n\n  if (dateFromDate.isValid() && dateFromDate.format('x') === dateFromMoment.format('x') || !dateFromMoment.isValid() || isAlphanumeric) {\n    date = dateFromDate;\n  } else {\n    date = dateFromMoment;\n  }\n\n  return date.format(dateFormat);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}