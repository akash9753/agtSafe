{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Utility\\\\XLSXFileReader.js\";\nimport React, { Component } from \"react\";\nimport { Input } from \"antd\";\nimport { XLSX } from \"xlsx\";\nimport { errorModal } from \"./sharedUtility\";\nvar fileName = \"\";\nvar thisObj = [];\nvar Uploads = /*#__PURE__*/function (_Component) {\n  _inherits(Uploads, _Component);\n  var _super = _createSuper(Uploads);\n  function Uploads(_props) {\n    var _this;\n    _classCallCheck(this, Uploads);\n    _this = _super.call(this, _props);\n    _this.changeFile = function (e, name, column) {\n      var input = e.target;\n      if (input.files && input.files[0]) {\n        fileName = input.files[0].name;\n        var file = e.target.files[0];\n        if (file.type !== \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n          thisObj.setState({\n            filename: fileName\n          });\n\n          //Newly added while messagelist updated by client(DVSE054)\n          errorModal(\"Upload only xlsx file\"); /*\"File Upload issue\"*/\n        } else {\n          var FR = new FileReader();\n          FR.onload = function (e) {\n            var data = new Uint8Array(e.target.result);\n            var workbook = XLSX.read(data, {\n              type: \"array\"\n            });\n            var firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n            // header: 1 instructs xlsx to create an 'array of arrays'\n            var result = XLSX.utils.sheet_to_json(firstSheet, {\n              header: 1\n            });\n            result = result.filter(function (x) {\n              return x.length;\n            });\n            var orgDatas = result[0];\n            var datas = result.splice(1);\n            var datasourceArr = datas.map(function (userValues, i) {\n              var col = {};\n              col[\"key\"] = i + 1;\n              column.map(function (name, i) {\n                col[name] = userValues[i];\n              });\n              return col;\n            });\n            thisObj.props.getExcelData(datasourceArr, orgDatas, fileName);\n            thisObj.setState({\n              filename: fileName\n            });\n          };\n          FR.readAsArrayBuffer(file);\n        }\n      } else {\n        errorModal(\"File Upload issue\"); /*\"File Upload issue\"*/\n        /*\"File Upload issue\"*/\n      }\n    };\n    _this.click = function (e) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        props = _assertThisInitialize.props;\n      var id = props.id;\n      var resetFields = props.form.resetFields;\n      var reset = {};\n      reset[props.id] = \"\";\n      e.target.value = \"\";\n      resetFields(id);\n      thisObj.setState({\n        filename: \"\"\n      });\n      props.Clear();\n    };\n    _this.state = {\n      filename: \"\"\n    };\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(Uploads, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var props = this.props;\n      var filename = this.state.filename;\n      var getFieldDecorator = props.getFieldDecorator,\n        form = props.form,\n        id = props.id,\n        column = props.column;\n      var browsevalue = form.getFieldValue(props.id);\n\n      //console.log(form);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        onClick: function onClick(e) {\n          return document.getElementById(props.id).click();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"input-group-text custom-inputChooseFile\",\n        id: \"inputGroupFileAddon01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, \"Choose File\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, getFieldDecorator(id, {\n        rules: [{\n          required: true,\n          message: \"CodeList File is Mandatory\"\n        }],\n        initialValue: \"\"\n      })( /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        className: \"CustomFileInput\",\n        accept: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n        style: {\n          border: \"unset\"\n        },\n        onClick: function onClick(e) {\n          return _this2.click(e);\n        },\n        onChange: function onChange(e) {\n          return _this2.changeFile(e, id, column);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        className: \"CustomFileText\",\n        value: browsevalue === \"\" ? browsevalue : filename,\n        disabled: true,\n        onClick: function onClick(e) {\n          return document.getElementById(id).click();\n        },\n        type: \"text\",\n        placeholder: \"No File\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n  return Uploads;\n}(Component);\nexport { Uploads as default };","map":{"version":3,"names":["React","Component","Input","XLSX","errorModal","fileName","thisObj","Uploads","props","changeFile","e","name","column","input","target","files","file","type","setState","filename","FR","FileReader","onload","data","Uint8Array","result","workbook","read","firstSheet","Sheets","SheetNames","utils","sheet_to_json","header","filter","x","length","orgDatas","datas","splice","datasourceArr","map","userValues","i","col","getExcelData","readAsArrayBuffer","click","id","resetFields","form","reset","value","Clear","state","getFieldDecorator","browsevalue","getFieldValue","document","getElementById","rules","required","message","initialValue","border"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Utility/XLSXFileReader.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport {XLSX} from \"xlsx\";\r\nimport { errorModal } from \"./sharedUtility\";\r\n\r\nlet fileName = \"\";\r\nvar thisObj = [];\r\nexport default class Uploads extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            filename:\"\"\r\n        };\r\n        thisObj = this;\r\n    }\r\n\r\n    changeFile = (e, name,column) =>\r\n    {\r\n        let input = e.target;\r\n        if (input.files && input.files[0]) {\r\n            fileName = input.files[0].name;\r\n\r\n                var file = e.target.files[0];\r\n                if (file.type !== \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")\r\n                {\r\n                    thisObj.setState({ filename: fileName });\r\n\r\n                    //Newly added while messagelist updated by client(DVSE054)\r\n                    errorModal(\"Upload only xlsx file\");/*\"File Upload issue\"*/ \r\n                } else {\r\n                    var FR = new FileReader();\r\n                    FR.onload = function (e) {\r\n                        var data = new Uint8Array(e.target.result);\r\n                        var workbook = XLSX.read(data, { type: \"array\" });\r\n                        var firstSheet = workbook.Sheets[workbook.SheetNames[0]];\r\n                        // header: 1 instructs xlsx to create an 'array of arrays'\r\n                        var result = XLSX.utils.sheet_to_json(firstSheet, { header: 1 });\r\n                        result = result.filter((x) => x.length);\r\n                        var orgDatas = result[0];\r\n                        var datas = result.splice(1);\r\n                        var datasourceArr = datas.map((userValues,i) => {\r\n                            let col = {};\r\n                            col[\"key\"] = (i + 1);\r\n                            column.map((name, i) => {\r\n                                col[name] = userValues[i];\r\n                            });\r\n                            return col;\r\n                        });\r\n                        thisObj.props.getExcelData(datasourceArr, orgDatas, fileName);\r\n                        thisObj.setState({ filename: fileName });\r\n\r\n                    };\r\n                    FR.readAsArrayBuffer(file);\r\n                }\r\n            \r\n        } else {\r\n            errorModal(\"File Upload issue\");/*\"File Upload issue\"*/ \r\n                /*\"File Upload issue\"*/\r\n        }\r\n    };\r\n\r\n    click = (e) => {\r\n        const { props } = this;\r\n        const { id } = props;\r\n        const { resetFields } = props.form;\r\n        let reset = {};\r\n        reset[props.id] = \"\";\r\n        e.target.value = \"\";\r\n        resetFields(id);\r\n        thisObj.setState({ filename: \"\" });\r\n        props.Clear();\r\n        \r\n    };\r\n\r\n    render() {\r\n        const { props } = this;\r\n        const {  filename } = this.state;\r\n        const { getFieldDecorator, form, id ,column} = props;\r\n        let browsevalue = form.getFieldValue(props.id)\r\n\r\n        //console.log(form);\r\n        return (\r\n            <div >\r\n                <div className=\"input-group\">\r\n                    <div\r\n                        className=\"input-group-prepend\"\r\n                        onClick={(e) => document.getElementById(props.id).click()}\r\n                    >\r\n                        <span\r\n                            className=\"input-group-text custom-inputChooseFile\"\r\n                            id=\"inputGroupFileAddon01\"\r\n                        >\r\n                            Choose File\r\n                    </span>\r\n                    </div>\r\n                    <div className=\"custom-file\">\r\n                        {getFieldDecorator(id, {\r\n                            rules: [\r\n                                {\r\n                                    required:true,\r\n                                    message:\"CodeList File is Mandatory\",\r\n                                },\r\n                            ],\r\n                            initialValue: \"\",\r\n                        })(\r\n                            <Input\r\n                                type=\"file\"\r\n                                className=\"CustomFileInput\"\r\n                                accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                                style={{ border: \"unset\" }}\r\n                                onClick={(e) => this.click(e)}\r\n                                onChange={(e) =>\r\n                                    this.changeFile(e, id, column)\r\n                                }\r\n                            />\r\n                        )}\r\n                        <Input\r\n                            className=\"CustomFileText\"\r\n                            value={browsevalue === \"\" ? browsevalue :filename}\r\n                            disabled\r\n                            onClick={(e) => document.getElementById(id).click()}\r\n                            type=\"text\"\r\n                            placeholder=\"No File\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}