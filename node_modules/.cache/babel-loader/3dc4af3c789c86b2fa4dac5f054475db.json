{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n  return r;\n};\nvar _a;\nvar Scanner = /** @class */function () {\n  function Scanner() {\n    this.value = '';\n    this.pos = 0;\n  }\n  Scanner.isDigitCharacter = function (ch) {\n    return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\n  };\n\n  Scanner.isVariableCharacter = function (ch) {\n    return ch === 95 /* Underline */ || ch >= 97 /* a */ && ch <= 122 /* z */ || ch >= 65 /* A */ && ch <= 90 /* Z */;\n  };\n\n  Scanner.prototype.text = function (value) {\n    this.value = value;\n    this.pos = 0;\n  };\n  Scanner.prototype.tokenText = function (token) {\n    return this.value.substr(token.pos, token.len);\n  };\n  Scanner.prototype.next = function () {\n    if (this.pos >= this.value.length) {\n      return {\n        type: 14 /* EOF */,\n        pos: this.pos,\n        len: 0\n      };\n    }\n    var pos = this.pos;\n    var len = 0;\n    var ch = this.value.charCodeAt(pos);\n    var type;\n    // static types\n    type = Scanner._table[ch];\n    if (typeof type === 'number') {\n      this.pos += 1;\n      return {\n        type: type,\n        pos: pos,\n        len: 1\n      };\n    }\n    // number\n    if (Scanner.isDigitCharacter(ch)) {\n      type = 8 /* Int */;\n      do {\n        len += 1;\n        ch = this.value.charCodeAt(pos + len);\n      } while (Scanner.isDigitCharacter(ch));\n      this.pos += len;\n      return {\n        type: type,\n        pos: pos,\n        len: len\n      };\n    }\n    // variable name\n    if (Scanner.isVariableCharacter(ch)) {\n      type = 9 /* VariableName */;\n      do {\n        ch = this.value.charCodeAt(pos + ++len);\n      } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\n      this.pos += len;\n      return {\n        type: type,\n        pos: pos,\n        len: len\n      };\n    }\n    // format\n    type = 10 /* Format */;\n    do {\n      len += 1;\n      ch = this.value.charCodeAt(pos + len);\n    } while (!isNaN(ch) && typeof Scanner._table[ch] === 'undefined' // not static token\n    && !Scanner.isDigitCharacter(ch) // not number\n    && !Scanner.isVariableCharacter(ch) // not variable\n    );\n\n    this.pos += len;\n    return {\n      type: type,\n      pos: pos,\n      len: len\n    };\n  };\n  Scanner._table = (_a = {}, _a[36 /* DollarSign */] = 0 /* Dollar */, _a[58 /* Colon */] = 1 /* Colon */, _a[44 /* Comma */] = 2 /* Comma */, _a[123 /* OpenCurlyBrace */] = 3 /* CurlyOpen */, _a[125 /* CloseCurlyBrace */] = 4 /* CurlyClose */, _a[92 /* Backslash */] = 5 /* Backslash */, _a[47 /* Slash */] = 6 /* Forwardslash */, _a[124 /* Pipe */] = 7 /* Pipe */, _a[43 /* Plus */] = 11 /* Plus */, _a[45 /* Dash */] = 12 /* Dash */, _a[63 /* QuestionMark */] = 13 /* QuestionMark */, _a);\n  return Scanner;\n}();\nexport { Scanner };\nvar Marker = /** @class */function () {\n  function Marker() {\n    this._children = [];\n  }\n  Marker.prototype.appendChild = function (child) {\n    if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\n      // this and previous child are text -> merge them\n      this._children[this._children.length - 1].value += child.value;\n    } else {\n      // normal adoption of child\n      child.parent = this;\n      this._children.push(child);\n    }\n    return this;\n  };\n  Marker.prototype.replace = function (child, others) {\n    var parent = child.parent;\n    var idx = parent.children.indexOf(child);\n    var newChildren = parent.children.slice(0);\n    newChildren.splice.apply(newChildren, __spreadArrays([idx, 1], others));\n    parent._children = newChildren;\n    (function _fixParent(children, parent) {\n      for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n        var child_1 = children_1[_i];\n        child_1.parent = parent;\n        _fixParent(child_1.children, child_1);\n      }\n    })(others, parent);\n  };\n  Object.defineProperty(Marker.prototype, \"children\", {\n    get: function get() {\n      return this._children;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Marker.prototype, \"snippet\", {\n    get: function get() {\n      var candidate = this;\n      while (true) {\n        if (!candidate) {\n          return undefined;\n        }\n        if (candidate instanceof TextmateSnippet) {\n          return candidate;\n        }\n        candidate = candidate.parent;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Marker.prototype.toString = function () {\n    return this.children.reduce(function (prev, cur) {\n      return prev + cur.toString();\n    }, '');\n  };\n  Marker.prototype.len = function () {\n    return 0;\n  };\n  return Marker;\n}();\nexport { Marker };\nvar Text = /** @class */function (_super) {\n  __extends(Text, _super);\n  function Text(value) {\n    var _this_1 = _super.call(this) || this;\n    _this_1.value = value;\n    return _this_1;\n  }\n  Text.prototype.toString = function () {\n    return this.value;\n  };\n  Text.prototype.len = function () {\n    return this.value.length;\n  };\n  Text.prototype.clone = function () {\n    return new Text(this.value);\n  };\n  return Text;\n}(Marker);\nexport { Text };\nvar TransformableMarker = /** @class */function (_super) {\n  __extends(TransformableMarker, _super);\n  function TransformableMarker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return TransformableMarker;\n}(Marker);\nexport { TransformableMarker };\nvar Placeholder = /** @class */function (_super) {\n  __extends(Placeholder, _super);\n  function Placeholder(index) {\n    var _this_1 = _super.call(this) || this;\n    _this_1.index = index;\n    return _this_1;\n  }\n  Placeholder.compareByIndex = function (a, b) {\n    if (a.index === b.index) {\n      return 0;\n    } else if (a.isFinalTabstop) {\n      return 1;\n    } else if (b.isFinalTabstop) {\n      return -1;\n    } else if (a.index < b.index) {\n      return -1;\n    } else if (a.index > b.index) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n  Object.defineProperty(Placeholder.prototype, \"isFinalTabstop\", {\n    get: function get() {\n      return this.index === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Placeholder.prototype, \"choice\", {\n    get: function get() {\n      return this._children.length === 1 && this._children[0] instanceof Choice ? this._children[0] : undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Placeholder.prototype.clone = function () {\n    var ret = new Placeholder(this.index);\n    if (this.transform) {\n      ret.transform = this.transform.clone();\n    }\n    ret._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n  return Placeholder;\n}(TransformableMarker);\nexport { Placeholder };\nvar Choice = /** @class */function (_super) {\n  __extends(Choice, _super);\n  function Choice() {\n    var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n    _this_1.options = [];\n    return _this_1;\n  }\n  Choice.prototype.appendChild = function (marker) {\n    if (marker instanceof Text) {\n      marker.parent = this;\n      this.options.push(marker);\n    }\n    return this;\n  };\n  Choice.prototype.toString = function () {\n    return this.options[0].value;\n  };\n  Choice.prototype.len = function () {\n    return this.options[0].len();\n  };\n  Choice.prototype.clone = function () {\n    var ret = new Choice();\n    this.options.forEach(ret.appendChild, ret);\n    return ret;\n  };\n  return Choice;\n}(Marker);\nexport { Choice };\nvar Transform = /** @class */function (_super) {\n  __extends(Transform, _super);\n  function Transform() {\n    var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n    _this_1.regexp = new RegExp('');\n    return _this_1;\n  }\n  Transform.prototype.resolve = function (value) {\n    var _this = this;\n    var didMatch = false;\n    var ret = value.replace(this.regexp, function () {\n      didMatch = true;\n      return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\n    });\n    // when the regex didn't match and when the transform has\n    // else branches, then run those\n    if (!didMatch && this._children.some(function (child) {\n      return child instanceof FormatString && Boolean(child.elseValue);\n    })) {\n      ret = this._replace([]);\n    }\n    return ret;\n  };\n  Transform.prototype._replace = function (groups) {\n    var ret = '';\n    for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n      var marker = _a[_i];\n      if (marker instanceof FormatString) {\n        var value = groups[marker.index] || '';\n        value = marker.resolve(value);\n        ret += value;\n      } else {\n        ret += marker.toString();\n      }\n    }\n    return ret;\n  };\n  Transform.prototype.toString = function () {\n    return '';\n  };\n  Transform.prototype.clone = function () {\n    var ret = new Transform();\n    ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\n    ret._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n  return Transform;\n}(Marker);\nexport { Transform };\nvar FormatString = /** @class */function (_super) {\n  __extends(FormatString, _super);\n  function FormatString(index, shorthandName, ifValue, elseValue) {\n    var _this_1 = _super.call(this) || this;\n    _this_1.index = index;\n    _this_1.shorthandName = shorthandName;\n    _this_1.ifValue = ifValue;\n    _this_1.elseValue = elseValue;\n    return _this_1;\n  }\n  FormatString.prototype.resolve = function (value) {\n    if (this.shorthandName === 'upcase') {\n      return !value ? '' : value.toLocaleUpperCase();\n    } else if (this.shorthandName === 'downcase') {\n      return !value ? '' : value.toLocaleLowerCase();\n    } else if (this.shorthandName === 'capitalize') {\n      return !value ? '' : value[0].toLocaleUpperCase() + value.substr(1);\n    } else if (this.shorthandName === 'pascalcase') {\n      return !value ? '' : this._toPascalCase(value);\n    } else if (Boolean(value) && typeof this.ifValue === 'string') {\n      return this.ifValue;\n    } else if (!Boolean(value) && typeof this.elseValue === 'string') {\n      return this.elseValue;\n    } else {\n      return value || '';\n    }\n  };\n  FormatString.prototype._toPascalCase = function (value) {\n    var match = value.match(/[a-z]+/gi);\n    if (!match) {\n      return value;\n    }\n    return match.map(function (word) {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    }).join('');\n  };\n  FormatString.prototype.clone = function () {\n    var ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\n    return ret;\n  };\n  return FormatString;\n}(Marker);\nexport { FormatString };\nvar Variable = /** @class */function (_super) {\n  __extends(Variable, _super);\n  function Variable(name) {\n    var _this_1 = _super.call(this) || this;\n    _this_1.name = name;\n    return _this_1;\n  }\n  Variable.prototype.resolve = function (resolver) {\n    var value = resolver.resolve(this);\n    if (this.transform) {\n      value = this.transform.resolve(value || '');\n    }\n    if (value !== undefined) {\n      this._children = [new Text(value)];\n      return true;\n    }\n    return false;\n  };\n  Variable.prototype.clone = function () {\n    var ret = new Variable(this.name);\n    if (this.transform) {\n      ret.transform = this.transform.clone();\n    }\n    ret._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n  return Variable;\n}(TransformableMarker);\nexport { Variable };\nfunction walk(marker, visitor) {\n  var stack = __spreadArrays(marker);\n  while (stack.length > 0) {\n    var marker_1 = stack.shift();\n    var recurse = visitor(marker_1);\n    if (!recurse) {\n      break;\n    }\n    stack.unshift.apply(stack, marker_1.children);\n  }\n}\nvar TextmateSnippet = /** @class */function (_super) {\n  __extends(TextmateSnippet, _super);\n  function TextmateSnippet() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(TextmateSnippet.prototype, \"placeholderInfo\", {\n    get: function get() {\n      if (!this._placeholders) {\n        // fill in placeholders\n        var all_1 = [];\n        var last_1;\n        this.walk(function (candidate) {\n          if (candidate instanceof Placeholder) {\n            all_1.push(candidate);\n            last_1 = !last_1 || last_1.index < candidate.index ? candidate : last_1;\n          }\n          return true;\n        });\n        this._placeholders = {\n          all: all_1,\n          last: last_1\n        };\n      }\n      return this._placeholders;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextmateSnippet.prototype, \"placeholders\", {\n    get: function get() {\n      var all = this.placeholderInfo.all;\n      return all;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TextmateSnippet.prototype.offset = function (marker) {\n    var pos = 0;\n    var found = false;\n    this.walk(function (candidate) {\n      if (candidate === marker) {\n        found = true;\n        return false;\n      }\n      pos += candidate.len();\n      return true;\n    });\n    if (!found) {\n      return -1;\n    }\n    return pos;\n  };\n  TextmateSnippet.prototype.fullLen = function (marker) {\n    var ret = 0;\n    walk([marker], function (marker) {\n      ret += marker.len();\n      return true;\n    });\n    return ret;\n  };\n  TextmateSnippet.prototype.enclosingPlaceholders = function (placeholder) {\n    var ret = [];\n    var parent = placeholder.parent;\n    while (parent) {\n      if (parent instanceof Placeholder) {\n        ret.push(parent);\n      }\n      parent = parent.parent;\n    }\n    return ret;\n  };\n  TextmateSnippet.prototype.resolveVariables = function (resolver) {\n    var _this_1 = this;\n    this.walk(function (candidate) {\n      if (candidate instanceof Variable) {\n        if (candidate.resolve(resolver)) {\n          _this_1._placeholders = undefined;\n        }\n      }\n      return true;\n    });\n    return this;\n  };\n  TextmateSnippet.prototype.appendChild = function (child) {\n    this._placeholders = undefined;\n    return _super.prototype.appendChild.call(this, child);\n  };\n  TextmateSnippet.prototype.replace = function (child, others) {\n    this._placeholders = undefined;\n    return _super.prototype.replace.call(this, child, others);\n  };\n  TextmateSnippet.prototype.clone = function () {\n    var ret = new TextmateSnippet();\n    this._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n  TextmateSnippet.prototype.walk = function (visitor) {\n    walk(this.children, visitor);\n  };\n  return TextmateSnippet;\n}(Marker);\nexport { TextmateSnippet };\nvar SnippetParser = /** @class */function () {\n  function SnippetParser() {\n    this._scanner = new Scanner();\n    this._token = {\n      type: 14 /* EOF */,\n      pos: 0,\n      len: 0\n    };\n  }\n  SnippetParser.escape = function (value) {\n    return value.replace(/\\$|}|\\\\/g, '\\\\$&');\n  };\n  SnippetParser.prototype.parse = function (value, insertFinalTabstop, enforceFinalTabstop) {\n    this._scanner.text(value);\n    this._token = this._scanner.next();\n    var snippet = new TextmateSnippet();\n    while (this._parse(snippet)) {\n      // nothing\n    }\n    // fill in values for placeholders. the first placeholder of an index\n    // that has a value defines the value for all placeholders with that index\n    var placeholderDefaultValues = new Map();\n    var incompletePlaceholders = [];\n    var placeholderCount = 0;\n    snippet.walk(function (marker) {\n      if (marker instanceof Placeholder) {\n        placeholderCount += 1;\n        if (marker.isFinalTabstop) {\n          placeholderDefaultValues.set(0, undefined);\n        } else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\n          placeholderDefaultValues.set(marker.index, marker.children);\n        } else {\n          incompletePlaceholders.push(marker);\n        }\n      }\n      return true;\n    });\n    for (var _i = 0, incompletePlaceholders_1 = incompletePlaceholders; _i < incompletePlaceholders_1.length; _i++) {\n      var placeholder = incompletePlaceholders_1[_i];\n      var defaultValues = placeholderDefaultValues.get(placeholder.index);\n      if (defaultValues) {\n        var clone = new Placeholder(placeholder.index);\n        clone.transform = placeholder.transform;\n        for (var _a = 0, defaultValues_1 = defaultValues; _a < defaultValues_1.length; _a++) {\n          var child = defaultValues_1[_a];\n          clone.appendChild(child.clone());\n        }\n        snippet.replace(placeholder, [clone]);\n      }\n    }\n    if (!enforceFinalTabstop) {\n      enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\n    }\n    if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\n      // the snippet uses placeholders but has no\n      // final tabstop defined -> insert at the end\n      snippet.appendChild(new Placeholder(0));\n    }\n    return snippet;\n  };\n  SnippetParser.prototype._accept = function (type, value) {\n    if (type === undefined || this._token.type === type) {\n      var ret = !value ? true : this._scanner.tokenText(this._token);\n      this._token = this._scanner.next();\n      return ret;\n    }\n    return false;\n  };\n  SnippetParser.prototype._backTo = function (token) {\n    this._scanner.pos = token.pos + token.len;\n    this._token = token;\n    return false;\n  };\n  SnippetParser.prototype._until = function (type) {\n    var start = this._token;\n    while (this._token.type !== type) {\n      if (this._token.type === 14 /* EOF */) {\n        return false;\n      } else if (this._token.type === 5 /* Backslash */) {\n        var nextToken = this._scanner.next();\n        if (nextToken.type !== 0 /* Dollar */ && nextToken.type !== 4 /* CurlyClose */ && nextToken.type !== 5 /* Backslash */) {\n          return false;\n        }\n      }\n      this._token = this._scanner.next();\n    }\n    var value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\n    this._token = this._scanner.next();\n    return value;\n  };\n  SnippetParser.prototype._parse = function (marker) {\n    return this._parseEscaped(marker) || this._parseTabstopOrVariableName(marker) || this._parseComplexPlaceholder(marker) || this._parseComplexVariable(marker) || this._parseAnything(marker);\n  };\n  // \\$, \\\\, \\} -> just text\n  SnippetParser.prototype._parseEscaped = function (marker) {\n    var value;\n    if (value = this._accept(5 /* Backslash */, true)) {\n      // saw a backslash, append escaped token or that backslash\n      value = this._accept(0 /* Dollar */, true) || this._accept(4 /* CurlyClose */, true) || this._accept(5 /* Backslash */, true) || value;\n      marker.appendChild(new Text(value));\n      return true;\n    }\n    return false;\n  };\n  // $foo -> variable, $1 -> tabstop\n  SnippetParser.prototype._parseTabstopOrVariableName = function (parent) {\n    var value;\n    var token = this._token;\n    var match = this._accept(0 /* Dollar */) && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\n    if (!match) {\n      return this._backTo(token);\n    }\n    parent.appendChild(/^\\d+$/.test(value) ? new Placeholder(Number(value)) : new Variable(value));\n    return true;\n  };\n  // ${1:<children>}, ${1} -> placeholder\n  SnippetParser.prototype._parseComplexPlaceholder = function (parent) {\n    var index;\n    var token = this._token;\n    var match = this._accept(0 /* Dollar */) && this._accept(3 /* CurlyOpen */) && (index = this._accept(8 /* Int */, true));\n    if (!match) {\n      return this._backTo(token);\n    }\n    var placeholder = new Placeholder(Number(index));\n    if (this._accept(1 /* Colon */)) {\n      // ${1:<children>}\n      while (true) {\n        // ...} -> done\n        if (this._accept(4 /* CurlyClose */)) {\n          parent.appendChild(placeholder);\n          return true;\n        }\n        if (this._parse(placeholder)) {\n          continue;\n        }\n        // fallback\n        parent.appendChild(new Text('${' + index + ':'));\n        placeholder.children.forEach(parent.appendChild, parent);\n        return true;\n      }\n    } else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\n      // ${1|one,two,three|}\n      var choice = new Choice();\n      while (true) {\n        if (this._parseChoiceElement(choice)) {\n          if (this._accept(2 /* Comma */)) {\n            // opt, -> more\n            continue;\n          }\n          if (this._accept(7 /* Pipe */)) {\n            placeholder.appendChild(choice);\n            if (this._accept(4 /* CurlyClose */)) {\n              // ..|} -> done\n              parent.appendChild(placeholder);\n              return true;\n            }\n          }\n        }\n        this._backTo(token);\n        return false;\n      }\n    } else if (this._accept(6 /* Forwardslash */)) {\n      // ${1/<regex>/<format>/<options>}\n      if (this._parseTransform(placeholder)) {\n        parent.appendChild(placeholder);\n        return true;\n      }\n      this._backTo(token);\n      return false;\n    } else if (this._accept(4 /* CurlyClose */)) {\n      // ${1}\n      parent.appendChild(placeholder);\n      return true;\n    } else {\n      // ${1 <- missing curly or colon\n      return this._backTo(token);\n    }\n  };\n  SnippetParser.prototype._parseChoiceElement = function (parent) {\n    var token = this._token;\n    var values = [];\n    while (true) {\n      if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\n        break;\n      }\n      var value = void 0;\n      if (value = this._accept(5 /* Backslash */, true)) {\n        // \\, \\|, or \\\\\n        value = this._accept(2 /* Comma */, true) || this._accept(7 /* Pipe */, true) || this._accept(5 /* Backslash */, true) || value;\n      } else {\n        value = this._accept(undefined, true);\n      }\n      if (!value) {\n        // EOF\n        this._backTo(token);\n        return false;\n      }\n      values.push(value);\n    }\n    if (values.length === 0) {\n      this._backTo(token);\n      return false;\n    }\n    parent.appendChild(new Text(values.join('')));\n    return true;\n  };\n  // ${foo:<children>}, ${foo} -> variable\n  SnippetParser.prototype._parseComplexVariable = function (parent) {\n    var name;\n    var token = this._token;\n    var match = this._accept(0 /* Dollar */) && this._accept(3 /* CurlyOpen */) && (name = this._accept(9 /* VariableName */, true));\n    if (!match) {\n      return this._backTo(token);\n    }\n    var variable = new Variable(name);\n    if (this._accept(1 /* Colon */)) {\n      // ${foo:<children>}\n      while (true) {\n        // ...} -> done\n        if (this._accept(4 /* CurlyClose */)) {\n          parent.appendChild(variable);\n          return true;\n        }\n        if (this._parse(variable)) {\n          continue;\n        }\n        // fallback\n        parent.appendChild(new Text('${' + name + ':'));\n        variable.children.forEach(parent.appendChild, parent);\n        return true;\n      }\n    } else if (this._accept(6 /* Forwardslash */)) {\n      // ${foo/<regex>/<format>/<options>}\n      if (this._parseTransform(variable)) {\n        parent.appendChild(variable);\n        return true;\n      }\n      this._backTo(token);\n      return false;\n    } else if (this._accept(4 /* CurlyClose */)) {\n      // ${foo}\n      parent.appendChild(variable);\n      return true;\n    } else {\n      // ${foo <- missing curly or colon\n      return this._backTo(token);\n    }\n  };\n  SnippetParser.prototype._parseTransform = function (parent) {\n    // ...<regex>/<format>/<options>}\n    var transform = new Transform();\n    var regexValue = '';\n    var regexOptions = '';\n    // (1) /regex\n    while (true) {\n      if (this._accept(6 /* Forwardslash */)) {\n        break;\n      }\n      var escaped = void 0;\n      if (escaped = this._accept(5 /* Backslash */, true)) {\n        escaped = this._accept(6 /* Forwardslash */, true) || escaped;\n        regexValue += escaped;\n        continue;\n      }\n      if (this._token.type !== 14 /* EOF */) {\n        regexValue += this._accept(undefined, true);\n        continue;\n      }\n      return false;\n    }\n    // (2) /format\n    while (true) {\n      if (this._accept(6 /* Forwardslash */)) {\n        break;\n      }\n      var escaped = void 0;\n      if (escaped = this._accept(5 /* Backslash */, true)) {\n        escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\n        transform.appendChild(new Text(escaped));\n        continue;\n      }\n      if (this._parseFormatString(transform) || this._parseAnything(transform)) {\n        continue;\n      }\n      return false;\n    }\n    // (3) /option\n    while (true) {\n      if (this._accept(4 /* CurlyClose */)) {\n        break;\n      }\n      if (this._token.type !== 14 /* EOF */) {\n        regexOptions += this._accept(undefined, true);\n        continue;\n      }\n      return false;\n    }\n    try {\n      transform.regexp = new RegExp(regexValue, regexOptions);\n    } catch (e) {\n      // invalid regexp\n      return false;\n    }\n    parent.transform = transform;\n    return true;\n  };\n  SnippetParser.prototype._parseFormatString = function (parent) {\n    var token = this._token;\n    if (!this._accept(0 /* Dollar */)) {\n      return false;\n    }\n    var complex = false;\n    if (this._accept(3 /* CurlyOpen */)) {\n      complex = true;\n    }\n    var index = this._accept(8 /* Int */, true);\n    if (!index) {\n      this._backTo(token);\n      return false;\n    } else if (!complex) {\n      // $1\n      parent.appendChild(new FormatString(Number(index)));\n      return true;\n    } else if (this._accept(4 /* CurlyClose */)) {\n      // ${1}\n      parent.appendChild(new FormatString(Number(index)));\n      return true;\n    } else if (!this._accept(1 /* Colon */)) {\n      this._backTo(token);\n      return false;\n    }\n    if (this._accept(6 /* Forwardslash */)) {\n      // ${1:/upcase}\n      var shorthand = this._accept(9 /* VariableName */, true);\n      if (!shorthand || !this._accept(4 /* CurlyClose */)) {\n        this._backTo(token);\n        return false;\n      } else {\n        parent.appendChild(new FormatString(Number(index), shorthand));\n        return true;\n      }\n    } else if (this._accept(11 /* Plus */)) {\n      // ${1:+<if>}\n      var ifValue = this._until(4 /* CurlyClose */);\n      if (ifValue) {\n        parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\n        return true;\n      }\n    } else if (this._accept(12 /* Dash */)) {\n      // ${2:-<else>}\n      var elseValue = this._until(4 /* CurlyClose */);\n      if (elseValue) {\n        parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n        return true;\n      }\n    } else if (this._accept(13 /* QuestionMark */)) {\n      // ${2:?<if>:<else>}\n      var ifValue = this._until(1 /* Colon */);\n      if (ifValue) {\n        var elseValue = this._until(4 /* CurlyClose */);\n        if (elseValue) {\n          parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\n          return true;\n        }\n      }\n    } else {\n      // ${1:<else>}\n      var elseValue = this._until(4 /* CurlyClose */);\n      if (elseValue) {\n        parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n        return true;\n      }\n    }\n    this._backTo(token);\n    return false;\n  };\n  SnippetParser.prototype._parseAnything = function (marker) {\n    if (this._token.type !== 14 /* EOF */) {\n      marker.appendChild(new Text(this._scanner.tokenText(this._token)));\n      this._accept(undefined);\n      return true;\n    }\n    return false;\n  };\n  return SnippetParser;\n}();\nexport { SnippetParser };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","_a","Scanner","value","pos","isDigitCharacter","ch","isVariableCharacter","text","tokenText","token","substr","len","next","type","charCodeAt","_table","isNaN","Marker","_children","appendChild","child","Text","parent","push","replace","others","idx","children","indexOf","newChildren","slice","splice","apply","_fixParent","_i","children_1","child_1","defineProperty","get","enumerable","configurable","candidate","undefined","TextmateSnippet","toString","reduce","prev","cur","_super","_this_1","call","clone","TransformableMarker","Placeholder","index","compareByIndex","isFinalTabstop","Choice","ret","transform","map","options","marker","forEach","Transform","regexp","RegExp","resolve","_this","didMatch","_replace","some","FormatString","Boolean","elseValue","groups","source","ignoreCase","global","shorthandName","ifValue","toLocaleUpperCase","toLocaleLowerCase","_toPascalCase","match","word","charAt","toUpperCase","toLowerCase","join","Variable","name","resolver","walk","visitor","stack","marker_1","shift","recurse","unshift","_placeholders","all_1","last_1","all","last","placeholderInfo","offset","found","fullLen","enclosingPlaceholders","placeholder","resolveVariables","SnippetParser","_scanner","_token","escape","parse","insertFinalTabstop","enforceFinalTabstop","snippet","_parse","placeholderDefaultValues","Map","incompletePlaceholders","placeholderCount","set","has","incompletePlaceholders_1","defaultValues","defaultValues_1","_accept","_backTo","_until","start","nextToken","substring","_parseEscaped","_parseTabstopOrVariableName","_parseComplexPlaceholder","_parseComplexVariable","_parseAnything","test","Number","choice","_parseChoiceElement","_parseTransform","values","variable","regexValue","regexOptions","escaped","_parseFormatString","e","complex","shorthand"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetParser.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nvar _a;\r\nvar Scanner = /** @class */ (function () {\r\n    function Scanner() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    Scanner.isDigitCharacter = function (ch) {\r\n        return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\r\n    };\r\n    Scanner.isVariableCharacter = function (ch) {\r\n        return ch === 95 /* Underline */\r\n            || (ch >= 97 /* a */ && ch <= 122 /* z */)\r\n            || (ch >= 65 /* A */ && ch <= 90 /* Z */);\r\n    };\r\n    Scanner.prototype.text = function (value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    };\r\n    Scanner.prototype.tokenText = function (token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    };\r\n    Scanner.prototype.next = function () {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        var pos = this.pos;\r\n        var len = 0;\r\n        var ch = this.value.charCodeAt(pos);\r\n        var type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type: type, pos: pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type: type, pos: pos, len: len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type: type, pos: pos, len: len };\r\n        }\r\n        // format\r\n        type = 10 /* Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type: type, pos: pos, len: len };\r\n    };\r\n    Scanner._table = (_a = {},\r\n        _a[36 /* DollarSign */] = 0 /* Dollar */,\r\n        _a[58 /* Colon */] = 1 /* Colon */,\r\n        _a[44 /* Comma */] = 2 /* Comma */,\r\n        _a[123 /* OpenCurlyBrace */] = 3 /* CurlyOpen */,\r\n        _a[125 /* CloseCurlyBrace */] = 4 /* CurlyClose */,\r\n        _a[92 /* Backslash */] = 5 /* Backslash */,\r\n        _a[47 /* Slash */] = 6 /* Forwardslash */,\r\n        _a[124 /* Pipe */] = 7 /* Pipe */,\r\n        _a[43 /* Plus */] = 11 /* Plus */,\r\n        _a[45 /* Dash */] = 12 /* Dash */,\r\n        _a[63 /* QuestionMark */] = 13 /* QuestionMark */,\r\n        _a);\r\n    return Scanner;\r\n}());\r\nexport { Scanner };\r\nvar Marker = /** @class */ (function () {\r\n    function Marker() {\r\n        this._children = [];\r\n    }\r\n    Marker.prototype.appendChild = function (child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    };\r\n    Marker.prototype.replace = function (child, others) {\r\n        var parent = child.parent;\r\n        var idx = parent.children.indexOf(child);\r\n        var newChildren = parent.children.slice(0);\r\n        newChildren.splice.apply(newChildren, __spreadArrays([idx, 1], others));\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\r\n                var child_1 = children_1[_i];\r\n                child_1.parent = parent;\r\n                _fixParent(child_1.children, child_1);\r\n            }\r\n        })(others, parent);\r\n    };\r\n    Object.defineProperty(Marker.prototype, \"children\", {\r\n        get: function () {\r\n            return this._children;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Marker.prototype, \"snippet\", {\r\n        get: function () {\r\n            var candidate = this;\r\n            while (true) {\r\n                if (!candidate) {\r\n                    return undefined;\r\n                }\r\n                if (candidate instanceof TextmateSnippet) {\r\n                    return candidate;\r\n                }\r\n                candidate = candidate.parent;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Marker.prototype.toString = function () {\r\n        return this.children.reduce(function (prev, cur) { return prev + cur.toString(); }, '');\r\n    };\r\n    Marker.prototype.len = function () {\r\n        return 0;\r\n    };\r\n    return Marker;\r\n}());\r\nexport { Marker };\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text(value) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.value = value;\r\n        return _this_1;\r\n    }\r\n    Text.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Text.prototype.len = function () {\r\n        return this.value.length;\r\n    };\r\n    Text.prototype.clone = function () {\r\n        return new Text(this.value);\r\n    };\r\n    return Text;\r\n}(Marker));\r\nexport { Text };\r\nvar TransformableMarker = /** @class */ (function (_super) {\r\n    __extends(TransformableMarker, _super);\r\n    function TransformableMarker() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return TransformableMarker;\r\n}(Marker));\r\nexport { TransformableMarker };\r\nvar Placeholder = /** @class */ (function (_super) {\r\n    __extends(Placeholder, _super);\r\n    function Placeholder(index) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.index = index;\r\n        return _this_1;\r\n    }\r\n    Placeholder.compareByIndex = function (a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    Object.defineProperty(Placeholder.prototype, \"isFinalTabstop\", {\r\n        get: function () {\r\n            return this.index === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Placeholder.prototype, \"choice\", {\r\n        get: function () {\r\n            return this._children.length === 1 && this._children[0] instanceof Choice\r\n                ? this._children[0]\r\n                : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Placeholder.prototype.clone = function () {\r\n        var ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Placeholder;\r\n}(TransformableMarker));\r\nexport { Placeholder };\r\nvar Choice = /** @class */ (function (_super) {\r\n    __extends(Choice, _super);\r\n    function Choice() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1.options = [];\r\n        return _this_1;\r\n    }\r\n    Choice.prototype.appendChild = function (marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    };\r\n    Choice.prototype.toString = function () {\r\n        return this.options[0].value;\r\n    };\r\n    Choice.prototype.len = function () {\r\n        return this.options[0].len();\r\n    };\r\n    Choice.prototype.clone = function () {\r\n        var ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    };\r\n    return Choice;\r\n}(Marker));\r\nexport { Choice };\r\nvar Transform = /** @class */ (function (_super) {\r\n    __extends(Transform, _super);\r\n    function Transform() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1.regexp = new RegExp('');\r\n        return _this_1;\r\n    }\r\n    Transform.prototype.resolve = function (value) {\r\n        var _this = this;\r\n        var didMatch = false;\r\n        var ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(function (child) { return child instanceof FormatString && Boolean(child.elseValue); })) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    };\r\n    Transform.prototype._replace = function (groups) {\r\n        var ret = '';\r\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\r\n            var marker = _a[_i];\r\n            if (marker instanceof FormatString) {\r\n                var value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Transform.prototype.toString = function () {\r\n        return '';\r\n    };\r\n    Transform.prototype.clone = function () {\r\n        var ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Transform;\r\n}(Marker));\r\nexport { Transform };\r\nvar FormatString = /** @class */ (function (_super) {\r\n    __extends(FormatString, _super);\r\n    function FormatString(index, shorthandName, ifValue, elseValue) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.index = index;\r\n        _this_1.shorthandName = shorthandName;\r\n        _this_1.ifValue = ifValue;\r\n        _this_1.elseValue = elseValue;\r\n        return _this_1;\r\n    }\r\n    FormatString.prototype.resolve = function (value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    };\r\n    FormatString.prototype._toPascalCase = function (value) {\r\n        var match = value.match(/[a-z]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(function (word) {\r\n            return word.charAt(0).toUpperCase()\r\n                + word.substr(1).toLowerCase();\r\n        })\r\n            .join('');\r\n    };\r\n    FormatString.prototype.clone = function () {\r\n        var ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    };\r\n    return FormatString;\r\n}(Marker));\r\nexport { FormatString };\r\nvar Variable = /** @class */ (function (_super) {\r\n    __extends(Variable, _super);\r\n    function Variable(name) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.name = name;\r\n        return _this_1;\r\n    }\r\n    Variable.prototype.resolve = function (resolver) {\r\n        var value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Variable.prototype.clone = function () {\r\n        var ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Variable;\r\n}(TransformableMarker));\r\nexport { Variable };\r\nfunction walk(marker, visitor) {\r\n    var stack = __spreadArrays(marker);\r\n    while (stack.length > 0) {\r\n        var marker_1 = stack.shift();\r\n        var recurse = visitor(marker_1);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift.apply(stack, marker_1.children);\r\n    }\r\n}\r\nvar TextmateSnippet = /** @class */ (function (_super) {\r\n    __extends(TextmateSnippet, _super);\r\n    function TextmateSnippet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TextmateSnippet.prototype, \"placeholderInfo\", {\r\n        get: function () {\r\n            if (!this._placeholders) {\r\n                // fill in placeholders\r\n                var all_1 = [];\r\n                var last_1;\r\n                this.walk(function (candidate) {\r\n                    if (candidate instanceof Placeholder) {\r\n                        all_1.push(candidate);\r\n                        last_1 = !last_1 || last_1.index < candidate.index ? candidate : last_1;\r\n                    }\r\n                    return true;\r\n                });\r\n                this._placeholders = { all: all_1, last: last_1 };\r\n            }\r\n            return this._placeholders;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextmateSnippet.prototype, \"placeholders\", {\r\n        get: function () {\r\n            var all = this.placeholderInfo.all;\r\n            return all;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextmateSnippet.prototype.offset = function (marker) {\r\n        var pos = 0;\r\n        var found = false;\r\n        this.walk(function (candidate) {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    };\r\n    TextmateSnippet.prototype.fullLen = function (marker) {\r\n        var ret = 0;\r\n        walk([marker], function (marker) {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.enclosingPlaceholders = function (placeholder) {\r\n        var ret = [];\r\n        var parent = placeholder.parent;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.resolveVariables = function (resolver) {\r\n        var _this_1 = this;\r\n        this.walk(function (candidate) {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    _this_1._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    };\r\n    TextmateSnippet.prototype.appendChild = function (child) {\r\n        this._placeholders = undefined;\r\n        return _super.prototype.appendChild.call(this, child);\r\n    };\r\n    TextmateSnippet.prototype.replace = function (child, others) {\r\n        this._placeholders = undefined;\r\n        return _super.prototype.replace.call(this, child, others);\r\n    };\r\n    TextmateSnippet.prototype.clone = function () {\r\n        var ret = new TextmateSnippet();\r\n        this._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.walk = function (visitor) {\r\n        walk(this.children, visitor);\r\n    };\r\n    return TextmateSnippet;\r\n}(Marker));\r\nexport { TextmateSnippet };\r\nvar SnippetParser = /** @class */ (function () {\r\n    function SnippetParser() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* EOF */, pos: 0, len: 0 };\r\n    }\r\n    SnippetParser.escape = function (value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    };\r\n    SnippetParser.prototype.parse = function (value, insertFinalTabstop, enforceFinalTabstop) {\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        var snippet = new TextmateSnippet();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        var placeholderDefaultValues = new Map();\r\n        var incompletePlaceholders = [];\r\n        var placeholderCount = 0;\r\n        snippet.walk(function (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                placeholderCount += 1;\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        for (var _i = 0, incompletePlaceholders_1 = incompletePlaceholders; _i < incompletePlaceholders_1.length; _i++) {\r\n            var placeholder = incompletePlaceholders_1[_i];\r\n            var defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (defaultValues) {\r\n                var clone = new Placeholder(placeholder.index);\r\n                clone.transform = placeholder.transform;\r\n                for (var _a = 0, defaultValues_1 = defaultValues; _a < defaultValues_1.length; _a++) {\r\n                    var child = defaultValues_1[_a];\r\n                    clone.appendChild(child.clone());\r\n                }\r\n                snippet.replace(placeholder, [clone]);\r\n            }\r\n        }\r\n        if (!enforceFinalTabstop) {\r\n            enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\r\n        }\r\n        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\r\n            // the snippet uses placeholders but has no\r\n            // final tabstop defined -> insert at the end\r\n            snippet.appendChild(new Placeholder(0));\r\n        }\r\n        return snippet;\r\n    };\r\n    SnippetParser.prototype._accept = function (type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            var ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._backTo = function (token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._until = function (type) {\r\n        var start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* Backslash */) {\r\n                var nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* Dollar */\r\n                    && nextToken.type !== 4 /* CurlyClose */\r\n                    && nextToken.type !== 5 /* Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        var value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    };\r\n    SnippetParser.prototype._parse = function (marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    };\r\n    // \\$, \\\\, \\} -> just text\r\n    SnippetParser.prototype._parseEscaped = function (marker) {\r\n        var value;\r\n        if (value = this._accept(5 /* Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* Dollar */, true)\r\n                || this._accept(4 /* CurlyClose */, true)\r\n                || this._accept(5 /* Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    // $foo -> variable, $1 -> tabstop\r\n    SnippetParser.prototype._parseTabstopOrVariableName = function (parent) {\r\n        var value;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    };\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    SnippetParser.prototype._parseComplexPlaceholder = function (parent) {\r\n        var index;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (index = this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        var placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            var choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    };\r\n    SnippetParser.prototype._parseChoiceElement = function (parent) {\r\n        var token = this._token;\r\n        var values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\r\n                break;\r\n            }\r\n            var value = void 0;\r\n            if (value = this._accept(5 /* Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* Comma */, true)\r\n                    || this._accept(7 /* Pipe */, true)\r\n                    || this._accept(5 /* Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    };\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    SnippetParser.prototype._parseComplexVariable = function (parent) {\r\n        var name;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (name = this._accept(9 /* VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        var variable = new Variable(name);\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    };\r\n    SnippetParser.prototype._parseTransform = function (parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        var transform = new Transform();\r\n        var regexValue = '';\r\n        var regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            var escaped = void 0;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(6 /* Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            var escaped = void 0;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    };\r\n    SnippetParser.prototype._parseFormatString = function (parent) {\r\n        var token = this._token;\r\n        if (!this._accept(0 /* Dollar */)) {\r\n            return false;\r\n        }\r\n        var complex = false;\r\n        if (this._accept(3 /* CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        var index = this._accept(8 /* Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            var shorthand = this._accept(9 /* VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* Plus */)) {\r\n            // ${1:+<if>}\r\n            var ifValue = this._until(4 /* CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* Dash */)) {\r\n            // ${2:-<else>}\r\n            var elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            var ifValue = this._until(1 /* Colon */);\r\n            if (ifValue) {\r\n                var elseValue = this._until(4 /* CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            var elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._parseAnything = function (marker) {\r\n        if (this._token.type !== 14 /* EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return SnippetParser;\r\n}());\r\nexport { SnippetParser };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}