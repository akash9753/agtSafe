{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '#'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '`',\n    close: '`'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '`',\n    close: '`'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  ignoreCase: true,\n  tokenPostfix: '.shell',\n  brackets: [{\n    token: 'delimiter.bracket',\n    open: '{',\n    close: '}'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  }, {\n    token: 'delimiter.square',\n    open: '[',\n    close: ']'\n  }],\n  keywords: ['if', 'then', 'do', 'else', 'elif', 'while', 'until', 'for', 'in', 'esac', 'fi', 'fin', 'fil', 'done', 'exit', 'set', 'unset', 'export', 'function'],\n  builtins: ['ab', 'awk', 'bash', 'beep', 'cat', 'cc', 'cd', 'chown', 'chmod', 'chroot', 'clear', 'cp', 'curl', 'cut', 'diff', 'echo', 'find', 'gawk', 'gcc', 'get', 'git', 'grep', 'hg', 'kill', 'killall', 'ln', 'ls', 'make', 'mkdir', 'openssl', 'mv', 'nc', 'node', 'npm', 'ping', 'ps', 'restart', 'rm', 'rmdir', 'sed', 'service', 'sh', 'shopt', 'shred', 'source', 'sort', 'sleep', 'ssh', 'start', 'stop', 'su', 'sudo', 'svn', 'tee', 'telnet', 'top', 'touch', 'vi', 'vim', 'wall', 'wc', 'wget', 'who', 'write', 'yes', 'zsh'],\n  // we include these common regular expressions\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [{\n      include: '@whitespace'\n    }, [/[a-zA-Z]\\w*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@builtins': 'type.identifier',\n        '@default': ''\n      }\n    }], {\n      include: '@strings'\n    }, {\n      include: '@parameters'\n    }, {\n      include: '@heredoc'\n    }, [/[{}\\[\\]()]/, '@brackets'], [/-+\\w+/, 'attribute.name'], [/@symbols/, 'delimiter'], {\n      include: '@numbers'\n    }, [/[,;]/, 'delimiter']],\n    whitespace: [[/\\s+/, 'white'], [/(^#!.*$)/, 'metatag'], [/(^#.*$)/, 'comment']],\n    numbers: [[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'], [/\\d+/, 'number']],\n    // Recognize strings, including those broken across lines\n    strings: [[/'/, 'string', '@stringBody'], [/\"/, 'string', '@dblStringBody']],\n    stringBody: [[/'/, 'string', '@popall'], [/./, 'string']],\n    dblStringBody: [[/\"/, 'string', '@popall'], [/./, 'string']],\n    heredoc: [[/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, ['constants', 'white', 'string.heredoc.delimiter', 'string.heredoc', 'string.heredoc.delimiter']]],\n    parameters: [[/\\$\\d+/, 'variable.predefined'], [/\\$\\w+/, 'variable'], [/\\$[*@#?\\-$!0_]/, 'variable'], [/\\$'/, 'variable', '@parameterBodyQuote'], [/\\$\"/, 'variable', '@parameterBodyDoubleQuote'], [/\\$\\(/, 'variable', '@parameterBodyParen'], [/\\$\\{/, 'variable', '@parameterBodyCurlyBrace']],\n    parameterBodyQuote: [[/[^#:%*@\\-!_']+/, 'variable'], [/[#:%*@\\-!_]/, 'delimiter'], [/[']/, 'variable', '@pop']],\n    parameterBodyDoubleQuote: [[/[^#:%*@\\-!_\"]+/, 'variable'], [/[#:%*@\\-!_]/, 'delimiter'], [/[\"]/, 'variable', '@pop']],\n    parameterBodyParen: [[/[^#:%*@\\-!_)]+/, 'variable'], [/[#:%*@\\-!_]/, 'delimiter'], [/[)]/, 'variable', '@pop']],\n    parameterBodyCurlyBrace: [[/[^#:%*@\\-!_}]+/, 'variable'], [/[#:%*@\\-!_]/, 'delimiter'], [/[}]/, 'variable', '@pop']]\n  }\n};","map":{"version":3,"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","builtins","symbols","tokenizer","root","include","cases","whitespace","numbers","strings","stringBody","dblStringBody","heredoc","parameters","parameterBodyQuote","parameterBodyDoubleQuote","parameterBodyParen","parameterBodyCurlyBrace"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#',\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.shell',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n    ],\r\n    keywords: [\r\n        'if',\r\n        'then',\r\n        'do',\r\n        'else',\r\n        'elif',\r\n        'while',\r\n        'until',\r\n        'for',\r\n        'in',\r\n        'esac',\r\n        'fi',\r\n        'fin',\r\n        'fil',\r\n        'done',\r\n        'exit',\r\n        'set',\r\n        'unset',\r\n        'export',\r\n        'function',\r\n    ],\r\n    builtins: [\r\n        'ab',\r\n        'awk',\r\n        'bash',\r\n        'beep',\r\n        'cat',\r\n        'cc',\r\n        'cd',\r\n        'chown',\r\n        'chmod',\r\n        'chroot',\r\n        'clear',\r\n        'cp',\r\n        'curl',\r\n        'cut',\r\n        'diff',\r\n        'echo',\r\n        'find',\r\n        'gawk',\r\n        'gcc',\r\n        'get',\r\n        'git',\r\n        'grep',\r\n        'hg',\r\n        'kill',\r\n        'killall',\r\n        'ln',\r\n        'ls',\r\n        'make',\r\n        'mkdir',\r\n        'openssl',\r\n        'mv',\r\n        'nc',\r\n        'node',\r\n        'npm',\r\n        'ping',\r\n        'ps',\r\n        'restart',\r\n        'rm',\r\n        'rmdir',\r\n        'sed',\r\n        'service',\r\n        'sh',\r\n        'shopt',\r\n        'shred',\r\n        'source',\r\n        'sort',\r\n        'sleep',\r\n        'ssh',\r\n        'start',\r\n        'stop',\r\n        'su',\r\n        'sudo',\r\n        'svn',\r\n        'tee',\r\n        'telnet',\r\n        'top',\r\n        'touch',\r\n        'vi',\r\n        'vim',\r\n        'wall',\r\n        'wc',\r\n        'wget',\r\n        'who',\r\n        'write',\r\n        'yes',\r\n        'zsh',\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            [\r\n                /[a-zA-Z]\\w*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@builtins': 'type.identifier',\r\n                        '@default': ''\r\n                    },\r\n                },\r\n            ],\r\n            { include: '@strings' },\r\n            { include: '@parameters' },\r\n            { include: '@heredoc' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            [/-+\\w+/, 'attribute.name'],\r\n            [/@symbols/, 'delimiter'],\r\n            { include: '@numbers' },\r\n            [/[,;]/, 'delimiter'],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/(^#!.*$)/, 'metatag'],\r\n            [/(^#.*$)/, 'comment'],\r\n        ],\r\n        numbers: [\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n        ],\r\n        // Recognize strings, including those broken across lines\r\n        strings: [\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/'/, 'string', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        dblStringBody: [\r\n            [/\"/, 'string', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        heredoc: [\r\n            [/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, ['constants', 'white', 'string.heredoc.delimiter', 'string.heredoc', 'string.heredoc.delimiter']]\r\n        ],\r\n        parameters: [\r\n            [/\\$\\d+/, 'variable.predefined'],\r\n            [/\\$\\w+/, 'variable'],\r\n            [/\\$[*@#?\\-$!0_]/, 'variable'],\r\n            [/\\$'/, 'variable', '@parameterBodyQuote'],\r\n            [/\\$\"/, 'variable', '@parameterBodyDoubleQuote'],\r\n            [/\\$\\(/, 'variable', '@parameterBodyParen'],\r\n            [/\\$\\{/, 'variable', '@parameterBodyCurlyBrace'],\r\n        ],\r\n        parameterBodyQuote: [\r\n            [/[^#:%*@\\-!_']+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[']/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyDoubleQuote: [\r\n            [/[^#:%*@\\-!_\"]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[\"]/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyParen: [\r\n            [/[^#:%*@\\-!_)]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[)]/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyCurlyBrace: [\r\n            [/[^#:%*@\\-!_}]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[}]/, 'variable', '@pop'],\r\n        ],\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}