{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.cs',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  keywords: ['extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short', 'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double', 'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref', 'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked', 'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case', 'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto', 'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from', 'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending', 'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class', 'field', 'event', 'method', 'param', 'property', 'public', 'protected', 'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly', 'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove', 'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum', 'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof', 'when'],\n  namespaceFollows: ['namespace', 'using'],\n  parenFollows: ['if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'],\n  operators: ['=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<', '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  // escape sequences\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // identifiers and keywords\n    [/\\@?[a-zA-Z_]\\w*/, {\n      cases: {\n        '@namespaceFollows': {\n          token: 'keyword.$0',\n          next: '@namespace'\n        },\n        '@keywords': {\n          token: 'keyword.$0',\n          next: '@qualified'\n        },\n        '@default': {\n          token: 'identifier',\n          next: '@qualified'\n        }\n      }\n    }],\n    // whitespace\n    {\n      include: '@whitespace'\n    },\n    // delimiters and operators\n    [/}/, {\n      cases: {\n        '$S2==interpolatedstring': {\n          token: 'string.quote',\n          next: '@pop'\n        },\n        '$S2==litinterpstring': {\n          token: 'string.quote',\n          next: '@pop'\n        },\n        '@default': '@brackets'\n      }\n    }], [/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'delimiter',\n        '@default': ''\n      }\n    }],\n    // numbers\n    [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'], [/0[xX][0-9a-fA-F_]+/, 'number.hex'], [/0[bB][01_]+/, 'number.hex'], [/[0-9_]+/, 'number'],\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'],\n    // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"/, {\n      token: 'string.quote',\n      next: '@string'\n    }], [/\\$\\@\"/, {\n      token: 'string.quote',\n      next: '@litinterpstring'\n    }], [/\\@\"/, {\n      token: 'string.quote',\n      next: '@litstring'\n    }], [/\\$\"/, {\n      token: 'string.quote',\n      next: '@interpolatedstring'\n    }],\n    // characters\n    [/'[^\\\\']'/, 'string'], [/(')(@escapes)(')/, ['string', 'string.escape', 'string']], [/'/, 'string.invalid']],\n    qualified: [[/[a-zA-Z_][\\w]*/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': 'identifier'\n      }\n    }], [/\\./, 'delimiter'], ['', '', '@pop']],\n    namespace: [{\n      include: '@whitespace'\n    }, [/[A-Z]\\w*/, 'namespace'], [/[\\.=]/, 'delimiter'], ['', '', '@pop']],\n    comment: [[/[^\\/*]+/, 'comment'],\n    // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\n    ['\\\\*/', 'comment', '@pop'], [/[\\/*]/, 'comment']],\n    string: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    litstring: [[/[^\"]+/, 'string'], [/\"\"/, 'string.escape'], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    litinterpstring: [[/[^\"{]+/, 'string'], [/\"\"/, 'string.escape'], [/{{/, 'string.escape'], [/}}/, 'string.escape'], [/{/, {\n      token: 'string.quote',\n      next: 'root.litinterpstring'\n    }], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    interpolatedstring: [[/[^\\\\\"{]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/{{/, 'string.escape'], [/}}/, 'string.escape'], [/{/, {\n      token: 'string.quote',\n      next: 'root.interpolatedstring'\n    }], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    whitespace: [[/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'], [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'], [/[ \\t\\v\\f\\r\\n]+/, ''], [/\\/\\*/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']]\n  }\n};","map":{"version":3,"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","namespaceFollows","parenFollows","operators","symbols","escapes","tokenizer","root","cases","next","include","qualified","namespace","comment","string","litstring","litinterpstring","interpolatedstring","whitespace"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cs',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\r\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\r\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\r\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\r\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\r\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\r\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\r\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\r\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\r\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\r\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\r\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\r\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\r\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\r\n        'when'\r\n    ],\r\n    namespaceFollows: [\r\n        'namespace', 'using',\r\n    ],\r\n    parenFollows: [\r\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\r\n    ],\r\n    operators: [\r\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\r\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\r\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\r\n    ],\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // escape sequences\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\@?[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\r\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\r\n                        '@default': { token: 'identifier', next: '@qualified' }\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/}/, {\r\n                    cases: {\r\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\r\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\r\n                        '@default': '@brackets'\r\n                    }\r\n                }],\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\r\n            [/0[bB][01_]+/, 'number.hex'],\r\n            [/[0-9_]+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@string' }],\r\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\r\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\r\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        qualified: [\r\n            [/[a-zA-Z_][\\w]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            [/\\./, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        namespace: [\r\n            { include: '@whitespace' },\r\n            [/[A-Z]\\w*/, 'namespace'],\r\n            [/[\\.=]/, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\r\n            ['\\\\*/', 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litstring: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litinterpstring: [\r\n            [/[^\"{]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        interpolatedstring: [\r\n            [/[^\\\\\"{]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\r\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\r\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}