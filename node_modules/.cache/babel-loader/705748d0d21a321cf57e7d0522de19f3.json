{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nexport var createStringBuilder;\nif (typeof TextDecoder !== 'undefined') {\n  createStringBuilder = function createStringBuilder(capacity) {\n    return new StringBuilder(capacity);\n  };\n} else {\n  createStringBuilder = function createStringBuilder(capacity) {\n    return new CompatStringBuilder();\n  };\n}\nvar StringBuilder = /** @class */function () {\n  function StringBuilder(capacity) {\n    this._decoder = new TextDecoder('UTF-16LE');\n    this._capacity = capacity | 0;\n    this._buffer = new Uint16Array(this._capacity);\n    this._completedStrings = null;\n    this._bufferLength = 0;\n  }\n  StringBuilder.prototype.reset = function () {\n    this._completedStrings = null;\n    this._bufferLength = 0;\n  };\n  StringBuilder.prototype.build = function () {\n    if (this._completedStrings !== null) {\n      this._flushBuffer();\n      return this._completedStrings.join('');\n    }\n    return this._buildBuffer();\n  };\n  StringBuilder.prototype._buildBuffer = function () {\n    if (this._bufferLength === 0) {\n      return '';\n    }\n    var view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n    return this._decoder.decode(view);\n  };\n  StringBuilder.prototype._flushBuffer = function () {\n    var bufferString = this._buildBuffer();\n    this._bufferLength = 0;\n    if (this._completedStrings === null) {\n      this._completedStrings = [bufferString];\n    } else {\n      this._completedStrings[this._completedStrings.length] = bufferString;\n    }\n  };\n  StringBuilder.prototype.write1 = function (charCode) {\n    var remainingSpace = this._capacity - this._bufferLength;\n    if (remainingSpace <= 1) {\n      if (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n        this._flushBuffer();\n      }\n    }\n    this._buffer[this._bufferLength++] = charCode;\n  };\n  StringBuilder.prototype.appendASCII = function (charCode) {\n    if (this._bufferLength === this._capacity) {\n      // buffer is full\n      this._flushBuffer();\n    }\n    this._buffer[this._bufferLength++] = charCode;\n  };\n  StringBuilder.prototype.appendASCIIString = function (str) {\n    var strLen = str.length;\n    if (this._bufferLength + strLen >= this._capacity) {\n      // This string does not fit in the remaining buffer space\n      this._flushBuffer();\n      this._completedStrings[this._completedStrings.length] = str;\n      return;\n    }\n    for (var i = 0; i < strLen; i++) {\n      this._buffer[this._bufferLength++] = str.charCodeAt(i);\n    }\n  };\n  return StringBuilder;\n}();\nvar CompatStringBuilder = /** @class */function () {\n  function CompatStringBuilder() {\n    this._pieces = [];\n    this._piecesLen = 0;\n  }\n  CompatStringBuilder.prototype.reset = function () {\n    this._pieces = [];\n    this._piecesLen = 0;\n  };\n  CompatStringBuilder.prototype.build = function () {\n    return this._pieces.join('');\n  };\n  CompatStringBuilder.prototype.write1 = function (charCode) {\n    this._pieces[this._piecesLen++] = String.fromCharCode(charCode);\n  };\n  CompatStringBuilder.prototype.appendASCII = function (charCode) {\n    this._pieces[this._piecesLen++] = String.fromCharCode(charCode);\n  };\n  CompatStringBuilder.prototype.appendASCIIString = function (str) {\n    this._pieces[this._piecesLen++] = str;\n  };\n  return CompatStringBuilder;\n}();","map":{"version":3,"names":["strings","createStringBuilder","TextDecoder","capacity","StringBuilder","CompatStringBuilder","_decoder","_capacity","_buffer","Uint16Array","_completedStrings","_bufferLength","prototype","reset","build","_flushBuffer","join","_buildBuffer","view","buffer","decode","bufferString","length","write1","charCode","remainingSpace","isHighSurrogate","appendASCII","appendASCIIString","str","strLen","i","charCodeAt","_pieces","_piecesLen","String","fromCharCode"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/core/stringBuilder.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nexport var createStringBuilder;\r\nif (typeof TextDecoder !== 'undefined') {\r\n    createStringBuilder = function (capacity) { return new StringBuilder(capacity); };\r\n}\r\nelse {\r\n    createStringBuilder = function (capacity) { return new CompatStringBuilder(); };\r\n}\r\nvar StringBuilder = /** @class */ (function () {\r\n    function StringBuilder(capacity) {\r\n        this._decoder = new TextDecoder('UTF-16LE');\r\n        this._capacity = capacity | 0;\r\n        this._buffer = new Uint16Array(this._capacity);\r\n        this._completedStrings = null;\r\n        this._bufferLength = 0;\r\n    }\r\n    StringBuilder.prototype.reset = function () {\r\n        this._completedStrings = null;\r\n        this._bufferLength = 0;\r\n    };\r\n    StringBuilder.prototype.build = function () {\r\n        if (this._completedStrings !== null) {\r\n            this._flushBuffer();\r\n            return this._completedStrings.join('');\r\n        }\r\n        return this._buildBuffer();\r\n    };\r\n    StringBuilder.prototype._buildBuffer = function () {\r\n        if (this._bufferLength === 0) {\r\n            return '';\r\n        }\r\n        var view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\r\n        return this._decoder.decode(view);\r\n    };\r\n    StringBuilder.prototype._flushBuffer = function () {\r\n        var bufferString = this._buildBuffer();\r\n        this._bufferLength = 0;\r\n        if (this._completedStrings === null) {\r\n            this._completedStrings = [bufferString];\r\n        }\r\n        else {\r\n            this._completedStrings[this._completedStrings.length] = bufferString;\r\n        }\r\n    };\r\n    StringBuilder.prototype.write1 = function (charCode) {\r\n        var remainingSpace = this._capacity - this._bufferLength;\r\n        if (remainingSpace <= 1) {\r\n            if (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\r\n                this._flushBuffer();\r\n            }\r\n        }\r\n        this._buffer[this._bufferLength++] = charCode;\r\n    };\r\n    StringBuilder.prototype.appendASCII = function (charCode) {\r\n        if (this._bufferLength === this._capacity) {\r\n            // buffer is full\r\n            this._flushBuffer();\r\n        }\r\n        this._buffer[this._bufferLength++] = charCode;\r\n    };\r\n    StringBuilder.prototype.appendASCIIString = function (str) {\r\n        var strLen = str.length;\r\n        if (this._bufferLength + strLen >= this._capacity) {\r\n            // This string does not fit in the remaining buffer space\r\n            this._flushBuffer();\r\n            this._completedStrings[this._completedStrings.length] = str;\r\n            return;\r\n        }\r\n        for (var i = 0; i < strLen; i++) {\r\n            this._buffer[this._bufferLength++] = str.charCodeAt(i);\r\n        }\r\n    };\r\n    return StringBuilder;\r\n}());\r\nvar CompatStringBuilder = /** @class */ (function () {\r\n    function CompatStringBuilder() {\r\n        this._pieces = [];\r\n        this._piecesLen = 0;\r\n    }\r\n    CompatStringBuilder.prototype.reset = function () {\r\n        this._pieces = [];\r\n        this._piecesLen = 0;\r\n    };\r\n    CompatStringBuilder.prototype.build = function () {\r\n        return this._pieces.join('');\r\n    };\r\n    CompatStringBuilder.prototype.write1 = function (charCode) {\r\n        this._pieces[this._piecesLen++] = String.fromCharCode(charCode);\r\n    };\r\n    CompatStringBuilder.prototype.appendASCII = function (charCode) {\r\n        this._pieces[this._piecesLen++] = String.fromCharCode(charCode);\r\n    };\r\n    CompatStringBuilder.prototype.appendASCIIString = function (str) {\r\n        this._pieces[this._piecesLen++] = str;\r\n    };\r\n    return CompatStringBuilder;\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}