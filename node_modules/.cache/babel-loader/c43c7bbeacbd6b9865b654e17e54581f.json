{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as lessScanner from './lessScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js';\n/// <summary>\n/// A parser for LESS\n/// http://lesscss.org/\n/// </summary>\nvar LESSParser = /** @class */function (_super) {\n  __extends(LESSParser, _super);\n  function LESSParser() {\n    return _super.call(this, new lessScanner.LESSScanner()) || this;\n  }\n  LESSParser.prototype._parseStylesheetStatement = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseVariableDeclaration() || this._parsePlugin() || _super.prototype._parseStylesheetAtStatement.call(this, isNested);\n    }\n    return this._tryParseMixinDeclaration() || this._tryParseMixinReference() || this._parseFunction() || this._parseRuleset(true);\n  };\n  LESSParser.prototype._parseImport = function () {\n    if (!this.peekKeyword('@import') && !this.peekKeyword('@import-once') /* deprecated in less 1.4.1 */) {\n      return null;\n    }\n    var node = this.create(nodes.Import);\n    this.consumeToken();\n    // less 1.4.1: @import (css) \"lib\"\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (!this.accept(TokenType.Ident)) {\n        return this.finish(node, ParseError.IdentifierExpected, [TokenType.SemiColon]);\n      }\n      do {\n        if (!this.accept(TokenType.Comma)) {\n          break;\n        }\n      } while (this.accept(TokenType.Ident));\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.SemiColon]);\n      }\n    }\n    if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.URIOrStringExpected, [TokenType.SemiColon]);\n    }\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      node.setMedialist(this._parseMediaQueryList());\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parsePlugin = function () {\n    if (!this.peekKeyword('@plugin')) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.Plugin);\n    this.consumeToken(); // @import\n    if (!node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.StringLiteralExpected);\n    }\n    if (!this.accept(TokenType.SemiColon)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseMediaQuery = function (resyncStopToken) {\n    var node = _super.prototype._parseMediaQuery.call(this, resyncStopToken);\n    if (!node) {\n      var node_1 = this.create(nodes.MediaQuery);\n      if (node_1.addChild(this._parseVariable())) {\n        return this.finish(node_1);\n      }\n      return null;\n    }\n    return node;\n  };\n  LESSParser.prototype._parseMediaDeclaration = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    return this._tryParseRuleset(isNested) || this._tryToParseDeclaration() || this._tryParseMixinDeclaration() || this._tryParseMixinReference() || this._parseDetachedRuleSetMixin() || this._parseStylesheetStatement(isNested);\n  };\n  LESSParser.prototype._parseMediaFeatureName = function () {\n    return this._parseIdent() || this._parseVariable();\n  };\n  LESSParser.prototype._parseVariableDeclaration = function (panic) {\n    if (panic === void 0) {\n      panic = [];\n    }\n    var node = this.create(nodes.VariableDeclaration);\n    var mark = this.mark();\n    if (!node.setVariable(this._parseVariable(true))) {\n      return null;\n    }\n    if (this.accept(TokenType.Colon)) {\n      if (this.prevToken) {\n        node.colonPosition = this.prevToken.offset;\n      }\n      if (node.setValue(this._parseDetachedRuleSet())) {\n        node.needsSemicolon = false;\n      } else if (!node.setValue(this._parseExpr())) {\n        return this.finish(node, ParseError.VariableValueExpected, [], panic);\n      }\n      node.addChild(this._parsePrio());\n    } else {\n      this.restoreAtMark(mark);\n      return null; // at keyword, but no ':', not a variable declaration but some at keyword\n    }\n\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseDetachedRuleSet = function () {\n    var mark = this.mark();\n    // \"Anonymous mixin\" used in each() and possibly a generic type in the future\n    if (this.peekDelim('#') || this.peekDelim('.')) {\n      this.consumeToken();\n      if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n        var node = this.create(nodes.MixinDeclaration);\n        if (node.getParameters().addChild(this._parseMixinParameter())) {\n          while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n            if (this.peek(TokenType.ParenthesisR)) {\n              break;\n            }\n            if (!node.getParameters().addChild(this._parseMixinParameter())) {\n              this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n            }\n          }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n          this.restoreAtMark(mark);\n          return null;\n        }\n      } else {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n    if (!this.peek(TokenType.CurlyL)) {\n      return null;\n    }\n    var content = this.create(nodes.BodyDeclaration);\n    this._parseBody(content, this._parseDetachedRuleSetBody.bind(this));\n    return this.finish(content);\n  };\n  LESSParser.prototype._parseDetachedRuleSetBody = function () {\n    return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n  };\n  LESSParser.prototype._addLookupChildren = function (node) {\n    if (!node.addChild(this._parseLookupValue())) {\n      return false;\n    }\n    var expectsValue = false;\n    while (true) {\n      if (this.peek(TokenType.BracketL)) {\n        expectsValue = true;\n      }\n      if (!node.addChild(this._parseLookupValue())) {\n        break;\n      }\n      expectsValue = false;\n    }\n    return !expectsValue;\n  };\n  LESSParser.prototype._parseLookupValue = function () {\n    var node = this.create(nodes.Node);\n    var mark = this.mark();\n    if (!this.accept(TokenType.BracketL)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    if ((node.addChild(this._parseVariable(false, true)) || node.addChild(this._parsePropertyIdentifier())) && this.accept(TokenType.BracketR) || this.accept(TokenType.BracketR)) {\n      return node;\n    }\n    this.restoreAtMark(mark);\n    return null;\n  };\n  LESSParser.prototype._parseVariable = function (declaration, insideLookup) {\n    if (declaration === void 0) {\n      declaration = false;\n    }\n    if (insideLookup === void 0) {\n      insideLookup = false;\n    }\n    var isPropertyReference = !declaration && this.peekDelim('$');\n    if (!this.peekDelim('@') && !isPropertyReference && !this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n    var node = this.create(nodes.Variable);\n    var mark = this.mark();\n    while (this.acceptDelim('@') || !declaration && this.acceptDelim('$')) {\n      if (this.hasWhitespace()) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n    if (!this.accept(TokenType.AtKeyword) && !this.accept(TokenType.Ident)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    if (!insideLookup && this.peek(TokenType.BracketL)) {\n      if (!this._addLookupChildren(node)) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n    return node;\n  };\n  LESSParser.prototype._parseTerm = function () {\n    var term = _super.prototype._parseTerm.call(this);\n    if (term) {\n      return term;\n    }\n    term = this.create(nodes.Term);\n    if (term.setExpression(this._parseVariable()) || term.setExpression(this._parseEscaped()) || term.setExpression(this._tryParseMixinReference(false))) {\n      return this.finish(term);\n    }\n    return null;\n  };\n  LESSParser.prototype._parseEscaped = function () {\n    if (this.peek(TokenType.EscapedJavaScript) || this.peek(TokenType.BadEscapedJavaScript)) {\n      var node = this.createNode(nodes.NodeType.EscapedValue);\n      this.consumeToken();\n      return this.finish(node);\n    }\n    if (this.peekDelim('~')) {\n      var node = this.createNode(nodes.NodeType.EscapedValue);\n      this.consumeToken();\n      if (this.accept(TokenType.String) || this.accept(TokenType.EscapedJavaScript)) {\n        return this.finish(node);\n      } else {\n        return this.finish(node, ParseError.TermExpected);\n      }\n    }\n    return null;\n  };\n  LESSParser.prototype._parseOperator = function () {\n    var node = this._parseGuardOperator();\n    if (node) {\n      return node;\n    } else {\n      return _super.prototype._parseOperator.call(this);\n    }\n  };\n  LESSParser.prototype._parseGuardOperator = function () {\n    if (this.peekDelim('>')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      this.acceptDelim('=');\n      return node;\n    } else if (this.peekDelim('=')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      this.acceptDelim('<');\n      return node;\n    } else if (this.peekDelim('<')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      this.acceptDelim('=');\n      return node;\n    }\n    return null;\n  };\n  LESSParser.prototype._parseRuleSetDeclaration = function () {\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseKeyframe() || this._parseMedia(true) || this._parseImport() || this._parseSupports(true) // @supports\n      || this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n      || this._parseVariableDeclaration() // Variable declarations\n      || this._parseUnknownAtRule();\n    }\n    return this._tryParseMixinDeclaration() || this._tryParseRuleset(true) // nested ruleset\n    || this._tryParseMixinReference() // less mixin reference\n    || this._parseFunction() || this._parseExtend() // less extend declaration\n    || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as the last option\n  };\n\n  LESSParser.prototype._parseKeyframeIdent = function () {\n    return this._parseIdent([nodes.ReferenceType.Keyframe]) || this._parseVariable();\n  };\n  LESSParser.prototype._parseKeyframeSelector = function () {\n    return this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n    || _super.prototype._parseKeyframeSelector.call(this);\n  };\n  LESSParser.prototype._parseSimpleSelectorBody = function () {\n    return this._parseSelectorCombinator() || _super.prototype._parseSimpleSelectorBody.call(this);\n  };\n  LESSParser.prototype._parseSelector = function (isNested) {\n    // CSS Guards\n    var node = this.create(nodes.Selector);\n    var hasContent = false;\n    if (isNested) {\n      // nested selectors can start with a combinator\n      hasContent = node.addChild(this._parseCombinator());\n    }\n    while (node.addChild(this._parseSimpleSelector())) {\n      hasContent = true;\n      var mark = this.mark();\n      if (node.addChild(this._parseGuard()) && this.peek(TokenType.CurlyL)) {\n        break;\n      }\n      this.restoreAtMark(mark);\n      node.addChild(this._parseCombinator()); // optional\n    }\n\n    return hasContent ? this.finish(node) : null;\n  };\n  LESSParser.prototype._parseSelectorCombinator = function () {\n    if (this.peekDelim('&')) {\n      var node = this.createNode(nodes.NodeType.SelectorCombinator);\n      this.consumeToken();\n      while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n        //  support &-foo\n      }\n      return this.finish(node);\n    }\n    return null;\n  };\n  LESSParser.prototype._parseSelectorIdent = function () {\n    if (!this.peekInterpolatedIdent()) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.SelectorInterpolation);\n    var hasContent = this._acceptInterpolatedIdent(node);\n    return hasContent ? this.finish(node) : null;\n  };\n  LESSParser.prototype._parsePropertyIdentifier = function (inLookup) {\n    if (inLookup === void 0) {\n      inLookup = false;\n    }\n    var propertyRegex = /^[\\w-]+/;\n    if (!this.peekInterpolatedIdent() && !this.peekRegExp(this.token.type, propertyRegex)) {\n      return null;\n    }\n    var mark = this.mark();\n    var node = this.create(nodes.Identifier);\n    node.isCustomProperty = this.acceptDelim('-') && this.acceptDelim('-');\n    var childAdded = false;\n    if (!inLookup) {\n      if (node.isCustomProperty) {\n        childAdded = this._acceptInterpolatedIdent(node);\n      } else {\n        childAdded = this._acceptInterpolatedIdent(node, propertyRegex);\n      }\n    } else {\n      if (node.isCustomProperty) {\n        childAdded = node.addChild(this._parseIdent());\n      } else {\n        childAdded = node.addChild(this._parseRegexp(propertyRegex));\n      }\n    }\n    if (!childAdded) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    if (!inLookup && !this.hasWhitespace()) {\n      this.acceptDelim('+');\n      if (!this.hasWhitespace()) {\n        this.acceptIdent('_');\n      }\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype.peekInterpolatedIdent = function () {\n    return this.peek(TokenType.Ident) || this.peekDelim('@') || this.peekDelim('$') || this.peekDelim('-');\n  };\n  LESSParser.prototype._acceptInterpolatedIdent = function (node, identRegex) {\n    var _this = this;\n    var hasContent = false;\n    var indentInterpolation = function indentInterpolation() {\n      var pos = _this.mark();\n      if (_this.acceptDelim('-')) {\n        if (!_this.hasWhitespace()) {\n          _this.acceptDelim('-');\n        }\n        if (_this.hasWhitespace()) {\n          _this.restoreAtMark(pos);\n          return null;\n        }\n      }\n      return _this._parseInterpolation();\n    };\n    var accept = identRegex ? function () {\n      return _this.acceptRegexp(identRegex);\n    } : function () {\n      return _this.accept(TokenType.Ident);\n    };\n    while (accept() || node.addChild(this._parseInterpolation() || this.try(indentInterpolation))) {\n      hasContent = true;\n      if (this.hasWhitespace()) {\n        break;\n      }\n    }\n    return hasContent;\n  };\n  LESSParser.prototype._parseInterpolation = function () {\n    // @{name} Variable or\n    // ${name} Property\n    var mark = this.mark();\n    if (this.peekDelim('@') || this.peekDelim('$')) {\n      var node = this.createNode(nodes.NodeType.Interpolation);\n      this.consumeToken();\n      if (this.hasWhitespace() || !this.accept(TokenType.CurlyL)) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n      if (!node.addChild(this._parseIdent())) {\n        return this.finish(node, ParseError.IdentifierExpected);\n      }\n      if (!this.accept(TokenType.CurlyR)) {\n        return this.finish(node, ParseError.RightCurlyExpected);\n      }\n      return this.finish(node);\n    }\n    return null;\n  };\n  LESSParser.prototype._tryParseMixinDeclaration = function () {\n    var mark = this.mark();\n    var node = this.create(nodes.MixinDeclaration);\n    if (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(TokenType.ParenthesisL)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    if (node.getParameters().addChild(this._parseMixinParameter())) {\n      while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n        if (!node.getParameters().addChild(this._parseMixinParameter())) {\n          this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n        }\n      }\n    }\n    if (!this.accept(TokenType.ParenthesisR)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    node.setGuard(this._parseGuard());\n    if (!this.peek(TokenType.CurlyL)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    return this._parseBody(node, this._parseMixInBodyDeclaration.bind(this));\n  };\n  LESSParser.prototype._parseMixInBodyDeclaration = function () {\n    return this._parseFontFace() || this._parseRuleSetDeclaration();\n  };\n  LESSParser.prototype._parseMixinDeclarationIdentifier = function () {\n    var identifier;\n    if (this.peekDelim('#') || this.peekDelim('.')) {\n      identifier = this.create(nodes.Identifier);\n      this.consumeToken(); // # or .\n      if (this.hasWhitespace() || !identifier.addChild(this._parseIdent())) {\n        return null;\n      }\n    } else if (this.peek(TokenType.Hash)) {\n      identifier = this.create(nodes.Identifier);\n      this.consumeToken(); // TokenType.Hash\n    } else {\n      return null;\n    }\n    identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n    return this.finish(identifier);\n  };\n  LESSParser.prototype._parsePseudo = function () {\n    if (!this.peek(TokenType.Colon)) {\n      return null;\n    }\n    var mark = this.mark();\n    var node = this.create(nodes.ExtendsReference);\n    this.consumeToken(); // :\n    if (this.acceptIdent('extend')) {\n      return this._completeExtends(node);\n    }\n    this.restoreAtMark(mark);\n    return _super.prototype._parsePseudo.call(this);\n  };\n  LESSParser.prototype._parseExtend = function () {\n    if (!this.peekDelim('&')) {\n      return null;\n    }\n    var mark = this.mark();\n    var node = this.create(nodes.ExtendsReference);\n    this.consumeToken(); // &\n    if (this.hasWhitespace() || !this.accept(TokenType.Colon) || !this.acceptIdent('extend')) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    return this._completeExtends(node);\n  };\n  LESSParser.prototype._completeExtends = function (node) {\n    if (!this.accept(TokenType.ParenthesisL)) {\n      return this.finish(node, ParseError.LeftParenthesisExpected);\n    }\n    var selectors = node.getSelectors();\n    if (!selectors.addChild(this._parseSelector(true))) {\n      return this.finish(node, ParseError.SelectorExpected);\n    }\n    while (this.accept(TokenType.Comma)) {\n      if (!selectors.addChild(this._parseSelector(true))) {\n        return this.finish(node, ParseError.SelectorExpected);\n      }\n    }\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseDetachedRuleSetMixin = function () {\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n    var mark = this.mark();\n    var node = this.create(nodes.MixinReference);\n    if (node.addChild(this._parseVariable(true)) && (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL))) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._tryParseMixinReference = function (atRoot) {\n    if (atRoot === void 0) {\n      atRoot = true;\n    }\n    var mark = this.mark();\n    var node = this.create(nodes.MixinReference);\n    var identifier = this._parseMixinDeclarationIdentifier();\n    while (identifier) {\n      this.acceptDelim('>');\n      var nextId = this._parseMixinDeclarationIdentifier();\n      if (nextId) {\n        node.getNamespaces().addChild(identifier);\n        identifier = nextId;\n      } else {\n        break;\n      }\n    }\n    if (!node.setIdentifier(identifier)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    var hasArguments = false;\n    if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n      hasArguments = true;\n      if (node.getArguments().addChild(this._parseMixinArgument())) {\n        while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n          if (!node.getArguments().addChild(this._parseMixinArgument())) {\n            return this.finish(node, ParseError.ExpressionExpected);\n          }\n        }\n      }\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected);\n      }\n      identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n    } else {\n      identifier.referenceTypes = [nodes.ReferenceType.Mixin, nodes.ReferenceType.Rule];\n    }\n    if (this.peek(TokenType.BracketL)) {\n      if (!atRoot) {\n        this._addLookupChildren(node);\n      }\n    } else {\n      node.addChild(this._parsePrio());\n    }\n    if (!hasArguments && !this.peek(TokenType.SemiColon) && !this.peek(TokenType.CurlyR) && !this.peek(TokenType.EOF)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseMixinArgument = function () {\n    // [variableName ':'] expression | variableName '...'\n    var node = this.create(nodes.FunctionArgument);\n    var pos = this.mark();\n    var argument = this._parseVariable();\n    if (argument) {\n      if (!this.accept(TokenType.Colon)) {\n        this.restoreAtMark(pos);\n      } else {\n        node.setIdentifier(argument);\n      }\n    }\n    if (node.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {\n      return this.finish(node);\n    }\n    this.restoreAtMark(pos);\n    return null;\n  };\n  LESSParser.prototype._parseMixinParameter = function () {\n    var node = this.create(nodes.FunctionParameter);\n    // special rest variable: @rest...\n    if (this.peekKeyword('@rest')) {\n      var restNode = this.create(nodes.Node);\n      this.consumeToken();\n      if (!this.accept(lessScanner.Ellipsis)) {\n        return this.finish(node, ParseError.DotExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n      }\n      node.setIdentifier(this.finish(restNode));\n      return this.finish(node);\n    }\n    // special const args: ...\n    if (this.peek(lessScanner.Ellipsis)) {\n      var varargsNode = this.create(nodes.Node);\n      this.consumeToken();\n      node.setIdentifier(this.finish(varargsNode));\n      return this.finish(node);\n    }\n    var hasContent = false;\n    // default variable declaration: @param: 12 or @name\n    if (node.setIdentifier(this._parseVariable())) {\n      this.accept(TokenType.Colon);\n      hasContent = true;\n    }\n    if (!node.setDefaultValue(this._parseDetachedRuleSet() || this._parseExpr(true)) && !hasContent) {\n      return null;\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseGuard = function () {\n    if (!this.peekIdent('when')) {\n      return null;\n    }\n    var node = this.create(nodes.LessGuard);\n    this.consumeToken(); // when\n    node.isNegated = this.acceptIdent('not');\n    if (!node.getConditions().addChild(this._parseGuardCondition())) {\n      return this.finish(node, ParseError.ConditionExpected);\n    }\n    while (this.acceptIdent('and') || this.accept(TokenType.Comma)) {\n      if (!node.getConditions().addChild(this._parseGuardCondition())) {\n        return this.finish(node, ParseError.ConditionExpected);\n      }\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseGuardCondition = function () {\n    if (!this.peek(TokenType.ParenthesisL)) {\n      return null;\n    }\n    var node = this.create(nodes.GuardCondition);\n    this.consumeToken(); // ParenthesisL\n    if (!node.addChild(this._parseExpr())) {\n      // empty (?)\n    }\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseFunction = function () {\n    var pos = this.mark();\n    var node = this.create(nodes.Function);\n    if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n      return null;\n    }\n    if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    if (node.getArguments().addChild(this._parseMixinArgument())) {\n      while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n        if (!node.getArguments().addChild(this._parseMixinArgument())) {\n          return this.finish(node, ParseError.ExpressionExpected);\n        }\n      }\n    }\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  LESSParser.prototype._parseFunctionIdentifier = function () {\n    if (this.peekDelim('%')) {\n      var node = this.create(nodes.Identifier);\n      node.referenceTypes = [nodes.ReferenceType.Function];\n      this.consumeToken();\n      return this.finish(node);\n    }\n    return _super.prototype._parseFunctionIdentifier.call(this);\n  };\n  LESSParser.prototype._parseURLArgument = function () {\n    var pos = this.mark();\n    var node = _super.prototype._parseURLArgument.call(this);\n    if (!node || !this.peek(TokenType.ParenthesisR)) {\n      this.restoreAtMark(pos);\n      var node_2 = this.create(nodes.Node);\n      node_2.addChild(this._parseBinaryExpr());\n      return this.finish(node_2);\n    }\n    return node;\n  };\n  return LESSParser;\n}(cssParser.Parser);\nexport { LESSParser };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","lessScanner","TokenType","cssParser","nodes","ParseError","LESSParser","_super","call","LESSScanner","_parseStylesheetStatement","isNested","peek","AtKeyword","_parseVariableDeclaration","_parsePlugin","_parseStylesheetAtStatement","_tryParseMixinDeclaration","_tryParseMixinReference","_parseFunction","_parseRuleset","_parseImport","peekKeyword","node","Import","consumeToken","accept","ParenthesisL","Ident","finish","IdentifierExpected","SemiColon","Comma","ParenthesisR","RightParenthesisExpected","addChild","_parseURILiteral","_parseStringLiteral","URIOrStringExpected","EOF","setMedialist","_parseMediaQueryList","createNode","NodeType","Plugin","StringLiteralExpected","SemiColonExpected","_parseMediaQuery","resyncStopToken","node_1","MediaQuery","_parseVariable","_parseMediaDeclaration","_tryParseRuleset","_tryToParseDeclaration","_parseDetachedRuleSetMixin","_parseMediaFeatureName","_parseIdent","panic","VariableDeclaration","mark","setVariable","Colon","prevToken","colonPosition","offset","setValue","_parseDetachedRuleSet","needsSemicolon","_parseExpr","VariableValueExpected","_parsePrio","restoreAtMark","semicolonPosition","token","peekDelim","hasWhitespace","MixinDeclaration","getParameters","_parseMixinParameter","markError","CurlyL","content","BodyDeclaration","_parseBody","_parseDetachedRuleSetBody","bind","_tryParseKeyframeSelector","_parseRuleSetDeclaration","_addLookupChildren","_parseLookupValue","expectsValue","BracketL","Node","_parsePropertyIdentifier","BracketR","declaration","insideLookup","isPropertyReference","Variable","acceptDelim","_parseTerm","term","Term","setExpression","_parseEscaped","EscapedJavaScript","BadEscapedJavaScript","EscapedValue","String","TermExpected","_parseOperator","_parseGuardOperator","Operator","_parseKeyframe","_parseMedia","_parseSupports","_parseUnknownAtRule","_parseExtend","_parseKeyframeIdent","ReferenceType","Keyframe","_parseKeyframeSelector","_parseSimpleSelectorBody","_parseSelectorCombinator","_parseSelector","Selector","hasContent","_parseCombinator","_parseSimpleSelector","_parseGuard","SelectorCombinator","Num","Dimension","_parseSelectorIdent","peekInterpolatedIdent","SelectorInterpolation","_acceptInterpolatedIdent","inLookup","propertyRegex","peekRegExp","type","Identifier","isCustomProperty","childAdded","_parseRegexp","acceptIdent","identRegex","_this","indentInterpolation","pos","_parseInterpolation","acceptRegexp","try","Interpolation","CurlyR","RightCurlyExpected","setIdentifier","_parseMixinDeclarationIdentifier","setGuard","_parseMixInBodyDeclaration","_parseFontFace","identifier","Hash","referenceTypes","Mixin","_parsePseudo","ExtendsReference","_completeExtends","LeftParenthesisExpected","selectors","getSelectors","SelectorExpected","MixinReference","atRoot","nextId","getNamespaces","hasArguments","getArguments","_parseMixinArgument","ExpressionExpected","Rule","FunctionArgument","argument","FunctionParameter","restNode","Ellipsis","DotExpected","varargsNode","setDefaultValue","peekIdent","LessGuard","isNegated","getConditions","_parseGuardCondition","ConditionExpected","GuardCondition","Function","_parseFunctionIdentifier","_parseURLArgument","node_2","_parseBinaryExpr","Parser"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as lessScanner from './lessScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js';\n/// <summary>\n/// A parser for LESS\n/// http://lesscss.org/\n/// </summary>\nvar LESSParser = /** @class */ (function (_super) {\n    __extends(LESSParser, _super);\n    function LESSParser() {\n        return _super.call(this, new lessScanner.LESSScanner()) || this;\n    }\n    LESSParser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseVariableDeclaration()\n                || this._parsePlugin()\n                || _super.prototype._parseStylesheetAtStatement.call(this, isNested);\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseFunction()\n            || this._parseRuleset(true);\n    };\n    LESSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import') && !this.peekKeyword('@import-once') /* deprecated in less 1.4.1 */) {\n            return null;\n        }\n        var node = this.create(nodes.Import);\n        this.consumeToken();\n        // less 1.4.1: @import (css) \"lib\"\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (!this.accept(TokenType.Ident)) {\n                return this.finish(node, ParseError.IdentifierExpected, [TokenType.SemiColon]);\n            }\n            do {\n                if (!this.accept(TokenType.Comma)) {\n                    break;\n                }\n            } while (this.accept(TokenType.Ident));\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.SemiColon]);\n            }\n        }\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.URIOrStringExpected, [TokenType.SemiColon]);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parsePlugin = function () {\n        if (!this.peekKeyword('@plugin')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.Plugin);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.StringLiteralExpected);\n        }\n        if (!this.accept(TokenType.SemiColon)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMediaQuery = function (resyncStopToken) {\n        var node = _super.prototype._parseMediaQuery.call(this, resyncStopToken);\n        if (!node) {\n            var node_1 = this.create(nodes.MediaQuery);\n            if (node_1.addChild(this._parseVariable())) {\n                return this.finish(node_1);\n            }\n            return null;\n        }\n        return node;\n    };\n    LESSParser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._tryParseRuleset(isNested)\n            || this._tryToParseDeclaration()\n            || this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseDetachedRuleSetMixin()\n            || this._parseStylesheetStatement(isNested);\n    };\n    LESSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent() || this._parseVariable();\n    };\n    LESSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        var node = this.create(nodes.VariableDeclaration);\n        var mark = this.mark();\n        if (!node.setVariable(this._parseVariable(true))) {\n            return null;\n        }\n        if (this.accept(TokenType.Colon)) {\n            if (this.prevToken) {\n                node.colonPosition = this.prevToken.offset;\n            }\n            if (node.setValue(this._parseDetachedRuleSet())) {\n                node.needsSemicolon = false;\n            }\n            else if (!node.setValue(this._parseExpr())) {\n                return this.finish(node, ParseError.VariableValueExpected, [], panic);\n            }\n            node.addChild(this._parsePrio());\n        }\n        else {\n            this.restoreAtMark(mark);\n            return null; // at keyword, but no ':', not a variable declaration but some at keyword\n        }\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSet = function () {\n        var mark = this.mark();\n        // \"Anonymous mixin\" used in each() and possibly a generic type in the future\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n                var node = this.create(nodes.MixinDeclaration);\n                if (node.getParameters().addChild(this._parseMixinParameter())) {\n                    while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                        if (this.peek(TokenType.ParenthesisR)) {\n                            break;\n                        }\n                        if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                            this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n                        }\n                    }\n                }\n                if (!this.accept(TokenType.ParenthesisR)) {\n                    this.restoreAtMark(mark);\n                    return null;\n                }\n            }\n            else {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.peek(TokenType.CurlyL)) {\n            return null;\n        }\n        var content = this.create(nodes.BodyDeclaration);\n        this._parseBody(content, this._parseDetachedRuleSetBody.bind(this));\n        return this.finish(content);\n    };\n    LESSParser.prototype._parseDetachedRuleSetBody = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._addLookupChildren = function (node) {\n        if (!node.addChild(this._parseLookupValue())) {\n            return false;\n        }\n        var expectsValue = false;\n        while (true) {\n            if (this.peek(TokenType.BracketL)) {\n                expectsValue = true;\n            }\n            if (!node.addChild(this._parseLookupValue())) {\n                break;\n            }\n            expectsValue = false;\n        }\n        return !expectsValue;\n    };\n    LESSParser.prototype._parseLookupValue = function () {\n        var node = this.create(nodes.Node);\n        var mark = this.mark();\n        if (!this.accept(TokenType.BracketL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (((node.addChild(this._parseVariable(false, true)) ||\n            node.addChild(this._parsePropertyIdentifier())) &&\n            this.accept(TokenType.BracketR)) || this.accept(TokenType.BracketR)) {\n            return node;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    LESSParser.prototype._parseVariable = function (declaration, insideLookup) {\n        if (declaration === void 0) { declaration = false; }\n        if (insideLookup === void 0) { insideLookup = false; }\n        var isPropertyReference = !declaration && this.peekDelim('$');\n        if (!this.peekDelim('@') && !isPropertyReference && !this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var node = this.create(nodes.Variable);\n        var mark = this.mark();\n        while (this.acceptDelim('@') || (!declaration && this.acceptDelim('$'))) {\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.accept(TokenType.AtKeyword) && !this.accept(TokenType.Ident)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!insideLookup && this.peek(TokenType.BracketL)) {\n            if (!this._addLookupChildren(node)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        return node;\n    };\n    LESSParser.prototype._parseTerm = function () {\n        var term = _super.prototype._parseTerm.call(this);\n        if (term) {\n            return term;\n        }\n        term = this.create(nodes.Term);\n        if (term.setExpression(this._parseVariable()) ||\n            term.setExpression(this._parseEscaped()) ||\n            term.setExpression(this._tryParseMixinReference(false))) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseEscaped = function () {\n        if (this.peek(TokenType.EscapedJavaScript) ||\n            this.peek(TokenType.BadEscapedJavaScript)) {\n            var node = this.createNode(nodes.NodeType.EscapedValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        if (this.peekDelim('~')) {\n            var node = this.createNode(nodes.NodeType.EscapedValue);\n            this.consumeToken();\n            if (this.accept(TokenType.String) || this.accept(TokenType.EscapedJavaScript)) {\n                return this.finish(node);\n            }\n            else {\n                return this.finish(node, ParseError.TermExpected);\n            }\n        }\n        return null;\n    };\n    LESSParser.prototype._parseOperator = function () {\n        var node = this._parseGuardOperator();\n        if (node) {\n            return node;\n        }\n        else {\n            return _super.prototype._parseOperator.call(this);\n        }\n    };\n    LESSParser.prototype._parseGuardOperator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        else if (this.peekDelim('=')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            this.acceptDelim('<');\n            return node;\n        }\n        else if (this.peekDelim('<')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        return null;\n    };\n    LESSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseKeyframe()\n                || this._parseMedia(true)\n                || this._parseImport()\n                || this._parseSupports(true) // @supports\n                || this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n                || this._parseVariableDeclaration() // Variable declarations\n                || this._parseUnknownAtRule();\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseRuleset(true) // nested ruleset\n            || this._tryParseMixinReference() // less mixin reference\n            || this._parseFunction()\n            || this._parseExtend() // less extend declaration\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as the last option\n    };\n    LESSParser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([nodes.ReferenceType.Keyframe]) || this._parseVariable();\n    };\n    LESSParser.prototype._parseKeyframeSelector = function () {\n        return this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n            || _super.prototype._parseKeyframeSelector.call(this);\n    };\n    LESSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    LESSParser.prototype._parseSelector = function (isNested) {\n        // CSS Guards\n        var node = this.create(nodes.Selector);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            var mark = this.mark();\n            if (node.addChild(this._parseGuard()) && this.peek(TokenType.CurlyL)) {\n                break;\n            }\n            this.restoreAtMark(mark);\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(nodes.NodeType.SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseSelectorIdent = function () {\n        if (!this.peekInterpolatedIdent()) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.SelectorInterpolation);\n        var hasContent = this._acceptInterpolatedIdent(node);\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parsePropertyIdentifier = function (inLookup) {\n        if (inLookup === void 0) { inLookup = false; }\n        var propertyRegex = /^[\\w-]+/;\n        if (!this.peekInterpolatedIdent() && !this.peekRegExp(this.token.type, propertyRegex)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.Identifier);\n        node.isCustomProperty = this.acceptDelim('-') && this.acceptDelim('-');\n        var childAdded = false;\n        if (!inLookup) {\n            if (node.isCustomProperty) {\n                childAdded = this._acceptInterpolatedIdent(node);\n            }\n            else {\n                childAdded = this._acceptInterpolatedIdent(node, propertyRegex);\n            }\n        }\n        else {\n            if (node.isCustomProperty) {\n                childAdded = node.addChild(this._parseIdent());\n            }\n            else {\n                childAdded = node.addChild(this._parseRegexp(propertyRegex));\n            }\n        }\n        if (!childAdded) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!inLookup && !this.hasWhitespace()) {\n            this.acceptDelim('+');\n            if (!this.hasWhitespace()) {\n                this.acceptIdent('_');\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype.peekInterpolatedIdent = function () {\n        return this.peek(TokenType.Ident) ||\n            this.peekDelim('@') ||\n            this.peekDelim('$') ||\n            this.peekDelim('-');\n    };\n    LESSParser.prototype._acceptInterpolatedIdent = function (node, identRegex) {\n        var _this = this;\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        var accept = identRegex ?\n            function () { return _this.acceptRegexp(identRegex); } :\n            function () { return _this.accept(TokenType.Ident); };\n        while (accept() ||\n            node.addChild(this._parseInterpolation() ||\n                this.try(indentInterpolation))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent;\n    };\n    LESSParser.prototype._parseInterpolation = function () {\n        // @{name} Variable or\n        // ${name} Property\n        var mark = this.mark();\n        if (this.peekDelim('@') || this.peekDelim('$')) {\n            var node = this.createNode(nodes.NodeType.Interpolation);\n            this.consumeToken();\n            if (this.hasWhitespace() || !this.accept(TokenType.CurlyL)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return this.finish(node, ParseError.IdentifierExpected);\n            }\n            if (!this.accept(TokenType.CurlyR)) {\n                return this.finish(node, ParseError.RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._tryParseMixinDeclaration = function () {\n        var mark = this.mark();\n        var node = this.create(nodes.MixinDeclaration);\n        if (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(TokenType.ParenthesisL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (node.getParameters().addChild(this._parseMixinParameter())) {\n            while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                    this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        node.setGuard(this._parseGuard());\n        if (!this.peek(TokenType.CurlyL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._parseBody(node, this._parseMixInBodyDeclaration.bind(this));\n    };\n    LESSParser.prototype._parseMixInBodyDeclaration = function () {\n        return this._parseFontFace() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._parseMixinDeclarationIdentifier = function () {\n        var identifier;\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            identifier = this.create(nodes.Identifier);\n            this.consumeToken(); // # or .\n            if (this.hasWhitespace() || !identifier.addChild(this._parseIdent())) {\n                return null;\n            }\n        }\n        else if (this.peek(TokenType.Hash)) {\n            identifier = this.create(nodes.Identifier);\n            this.consumeToken(); // TokenType.Hash\n        }\n        else {\n            return null;\n        }\n        identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n        return this.finish(identifier);\n    };\n    LESSParser.prototype._parsePseudo = function () {\n        if (!this.peek(TokenType.Colon)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.ExtendsReference);\n        this.consumeToken(); // :\n        if (this.acceptIdent('extend')) {\n            return this._completeExtends(node);\n        }\n        this.restoreAtMark(mark);\n        return _super.prototype._parsePseudo.call(this);\n    };\n    LESSParser.prototype._parseExtend = function () {\n        if (!this.peekDelim('&')) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.ExtendsReference);\n        this.consumeToken(); // &\n        if (this.hasWhitespace() || !this.accept(TokenType.Colon) || !this.acceptIdent('extend')) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._completeExtends(node);\n    };\n    LESSParser.prototype._completeExtends = function (node) {\n        if (!this.accept(TokenType.ParenthesisL)) {\n            return this.finish(node, ParseError.LeftParenthesisExpected);\n        }\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(true))) {\n            return this.finish(node, ParseError.SelectorExpected);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!selectors.addChild(this._parseSelector(true))) {\n                return this.finish(node, ParseError.SelectorExpected);\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSetMixin = function () {\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.MixinReference);\n        if (node.addChild(this._parseVariable(true)) && (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL))) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._tryParseMixinReference = function (atRoot) {\n        if (atRoot === void 0) { atRoot = true; }\n        var mark = this.mark();\n        var node = this.create(nodes.MixinReference);\n        var identifier = this._parseMixinDeclarationIdentifier();\n        while (identifier) {\n            this.acceptDelim('>');\n            var nextId = this._parseMixinDeclarationIdentifier();\n            if (nextId) {\n                node.getNamespaces().addChild(identifier);\n                identifier = nextId;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node.setIdentifier(identifier)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        var hasArguments = false;\n        if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n            hasArguments = true;\n            if (node.getArguments().addChild(this._parseMixinArgument())) {\n                while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                        return this.finish(node, ParseError.ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected);\n            }\n            identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n        }\n        else {\n            identifier.referenceTypes = [nodes.ReferenceType.Mixin, nodes.ReferenceType.Rule];\n        }\n        if (this.peek(TokenType.BracketL)) {\n            if (!atRoot) {\n                this._addLookupChildren(node);\n            }\n        }\n        else {\n            node.addChild(this._parsePrio());\n        }\n        if (!hasArguments && !this.peek(TokenType.SemiColon) && !this.peek(TokenType.CurlyR) && !this.peek(TokenType.EOF)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMixinArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(nodes.FunctionArgument);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(TokenType.Colon)) {\n                this.restoreAtMark(pos);\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        this.restoreAtMark(pos);\n        return null;\n    };\n    LESSParser.prototype._parseMixinParameter = function () {\n        var node = this.create(nodes.FunctionParameter);\n        // special rest variable: @rest...\n        if (this.peekKeyword('@rest')) {\n            var restNode = this.create(nodes.Node);\n            this.consumeToken();\n            if (!this.accept(lessScanner.Ellipsis)) {\n                return this.finish(node, ParseError.DotExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n            }\n            node.setIdentifier(this.finish(restNode));\n            return this.finish(node);\n        }\n        // special const args: ...\n        if (this.peek(lessScanner.Ellipsis)) {\n            var varargsNode = this.create(nodes.Node);\n            this.consumeToken();\n            node.setIdentifier(this.finish(varargsNode));\n            return this.finish(node);\n        }\n        var hasContent = false;\n        // default variable declaration: @param: 12 or @name\n        if (node.setIdentifier(this._parseVariable())) {\n            this.accept(TokenType.Colon);\n            hasContent = true;\n        }\n        if (!node.setDefaultValue(this._parseDetachedRuleSet() || this._parseExpr(true)) && !hasContent) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuard = function () {\n        if (!this.peekIdent('when')) {\n            return null;\n        }\n        var node = this.create(nodes.LessGuard);\n        this.consumeToken(); // when\n        node.isNegated = this.acceptIdent('not');\n        if (!node.getConditions().addChild(this._parseGuardCondition())) {\n            return this.finish(node, ParseError.ConditionExpected);\n        }\n        while (this.acceptIdent('and') || this.accept(TokenType.Comma)) {\n            if (!node.getConditions().addChild(this._parseGuardCondition())) {\n                return this.finish(node, ParseError.ConditionExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuardCondition = function () {\n        if (!this.peek(TokenType.ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(nodes.GuardCondition);\n        this.consumeToken(); // ParenthesisL\n        if (!node.addChild(this._parseExpr())) {\n            // empty (?)\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(nodes.Function);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseMixinArgument())) {\n            while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                    return this.finish(node, ParseError.ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunctionIdentifier = function () {\n        if (this.peekDelim('%')) {\n            var node = this.create(nodes.Identifier);\n            node.referenceTypes = [nodes.ReferenceType.Function];\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseFunctionIdentifier.call(this);\n    };\n    LESSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(TokenType.ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_2 = this.create(nodes.Node);\n            node_2.addChild(this._parseBinaryExpr());\n            return this.finish(node_2);\n        }\n        return node;\n    };\n    return LESSParser;\n}(cssParser.Parser));\nexport { LESSParser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}