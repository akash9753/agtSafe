{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { startsWith } from '../../../base/common/strings.js';\nvar CodeActionKind = /** @class */function () {\n  function CodeActionKind(value) {\n    this.value = value;\n  }\n  CodeActionKind.prototype.equals = function (other) {\n    return this.value === other.value;\n  };\n  CodeActionKind.prototype.contains = function (other) {\n    return this.equals(other) || this.value === '' || startsWith(other.value, this.value + CodeActionKind.sep);\n  };\n  CodeActionKind.prototype.intersects = function (other) {\n    return this.contains(other) || other.contains(this);\n  };\n  CodeActionKind.prototype.append = function (part) {\n    return new CodeActionKind(this.value + CodeActionKind.sep + part);\n  };\n  CodeActionKind.sep = '.';\n  CodeActionKind.None = new CodeActionKind('@@none@@'); // Special code action that contains nothing\n  CodeActionKind.Empty = new CodeActionKind('');\n  CodeActionKind.QuickFix = new CodeActionKind('quickfix');\n  CodeActionKind.Refactor = new CodeActionKind('refactor');\n  CodeActionKind.Source = new CodeActionKind('source');\n  CodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\n  CodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\n  return CodeActionKind;\n}();\nexport { CodeActionKind };\nexport function mayIncludeActionsOfKind(filter, providedKind) {\n  // A provided kind may be a subset or superset of our filtered kind.\n  if (filter.include && !filter.include.intersects(providedKind)) {\n    return false;\n  }\n  if (filter.excludes) {\n    if (filter.excludes.some(function (exclude) {\n      return excludesAction(providedKind, exclude, filter.include);\n    })) {\n      return false;\n    }\n  }\n  // Don't return source actions unless they are explicitly requested\n  if (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\n    return false;\n  }\n  return true;\n}\nexport function filtersAction(filter, action) {\n  var actionKind = action.kind ? new CodeActionKind(action.kind) : undefined;\n  // Filter out actions by kind\n  if (filter.include) {\n    if (!actionKind || !filter.include.contains(actionKind)) {\n      return false;\n    }\n  }\n  if (filter.excludes) {\n    if (actionKind && filter.excludes.some(function (exclude) {\n      return excludesAction(actionKind, exclude, filter.include);\n    })) {\n      return false;\n    }\n  }\n  // Don't return source actions unless they are explicitly requested\n  if (!filter.includeSourceActions) {\n    if (actionKind && CodeActionKind.Source.contains(actionKind)) {\n      return false;\n    }\n  }\n  if (filter.onlyIncludePreferredActions) {\n    if (!action.isPreferred) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction excludesAction(providedKind, exclude, include) {\n  if (!exclude.contains(providedKind)) {\n    return false;\n  }\n  if (include && exclude.contains(include)) {\n    // The include is more specific, don't filter out\n    return false;\n  }\n  return true;\n}\nvar CodeActionCommandArgs = /** @class */function () {\n  function CodeActionCommandArgs(kind, apply, preferred) {\n    this.kind = kind;\n    this.apply = apply;\n    this.preferred = preferred;\n  }\n  CodeActionCommandArgs.fromUser = function (arg, defaults) {\n    if (!arg || typeof arg !== 'object') {\n      return new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\n    }\n    return new CodeActionCommandArgs(CodeActionCommandArgs.getKindFromUser(arg, defaults.kind), CodeActionCommandArgs.getApplyFromUser(arg, defaults.apply), CodeActionCommandArgs.getPreferredUser(arg));\n  };\n  CodeActionCommandArgs.getApplyFromUser = function (arg, defaultAutoApply) {\n    switch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\n      case 'first':\n        return \"first\" /* First */;\n      case 'never':\n        return \"never\" /* Never */;\n      case 'ifsingle':\n        return \"ifSingle\" /* IfSingle */;\n      default:\n        return defaultAutoApply;\n    }\n  };\n  CodeActionCommandArgs.getKindFromUser = function (arg, defaultKind) {\n    return typeof arg.kind === 'string' ? new CodeActionKind(arg.kind) : defaultKind;\n  };\n  CodeActionCommandArgs.getPreferredUser = function (arg) {\n    return typeof arg.preferred === 'boolean' ? arg.preferred : false;\n  };\n  return CodeActionCommandArgs;\n}();\nexport { CodeActionCommandArgs };","map":{"version":3,"names":["startsWith","CodeActionKind","value","prototype","equals","other","contains","sep","intersects","append","part","None","Empty","QuickFix","Refactor","Source","SourceOrganizeImports","SourceFixAll","mayIncludeActionsOfKind","filter","providedKind","include","excludes","some","exclude","excludesAction","includeSourceActions","filtersAction","action","actionKind","kind","undefined","onlyIncludePreferredActions","isPreferred","CodeActionCommandArgs","apply","preferred","fromUser","arg","defaults","getKindFromUser","getApplyFromUser","getPreferredUser","defaultAutoApply","toLowerCase","defaultKind"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/types.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { startsWith } from '../../../base/common/strings.js';\r\nvar CodeActionKind = /** @class */ (function () {\r\n    function CodeActionKind(value) {\r\n        this.value = value;\r\n    }\r\n    CodeActionKind.prototype.equals = function (other) {\r\n        return this.value === other.value;\r\n    };\r\n    CodeActionKind.prototype.contains = function (other) {\r\n        return this.equals(other) || this.value === '' || startsWith(other.value, this.value + CodeActionKind.sep);\r\n    };\r\n    CodeActionKind.prototype.intersects = function (other) {\r\n        return this.contains(other) || other.contains(this);\r\n    };\r\n    CodeActionKind.prototype.append = function (part) {\r\n        return new CodeActionKind(this.value + CodeActionKind.sep + part);\r\n    };\r\n    CodeActionKind.sep = '.';\r\n    CodeActionKind.None = new CodeActionKind('@@none@@'); // Special code action that contains nothing\r\n    CodeActionKind.Empty = new CodeActionKind('');\r\n    CodeActionKind.QuickFix = new CodeActionKind('quickfix');\r\n    CodeActionKind.Refactor = new CodeActionKind('refactor');\r\n    CodeActionKind.Source = new CodeActionKind('source');\r\n    CodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\r\n    CodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\r\n    return CodeActionKind;\r\n}());\r\nexport { CodeActionKind };\r\nexport function mayIncludeActionsOfKind(filter, providedKind) {\r\n    // A provided kind may be a subset or superset of our filtered kind.\r\n    if (filter.include && !filter.include.intersects(providedKind)) {\r\n        return false;\r\n    }\r\n    if (filter.excludes) {\r\n        if (filter.excludes.some(function (exclude) { return excludesAction(providedKind, exclude, filter.include); })) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport function filtersAction(filter, action) {\r\n    var actionKind = action.kind ? new CodeActionKind(action.kind) : undefined;\r\n    // Filter out actions by kind\r\n    if (filter.include) {\r\n        if (!actionKind || !filter.include.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.excludes) {\r\n        if (actionKind && filter.excludes.some(function (exclude) { return excludesAction(actionKind, exclude, filter.include); })) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions) {\r\n        if (actionKind && CodeActionKind.Source.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.onlyIncludePreferredActions) {\r\n        if (!action.isPreferred) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction excludesAction(providedKind, exclude, include) {\r\n    if (!exclude.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    if (include && exclude.contains(include)) {\r\n        // The include is more specific, don't filter out\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nvar CodeActionCommandArgs = /** @class */ (function () {\r\n    function CodeActionCommandArgs(kind, apply, preferred) {\r\n        this.kind = kind;\r\n        this.apply = apply;\r\n        this.preferred = preferred;\r\n    }\r\n    CodeActionCommandArgs.fromUser = function (arg, defaults) {\r\n        if (!arg || typeof arg !== 'object') {\r\n            return new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\r\n        }\r\n        return new CodeActionCommandArgs(CodeActionCommandArgs.getKindFromUser(arg, defaults.kind), CodeActionCommandArgs.getApplyFromUser(arg, defaults.apply), CodeActionCommandArgs.getPreferredUser(arg));\r\n    };\r\n    CodeActionCommandArgs.getApplyFromUser = function (arg, defaultAutoApply) {\r\n        switch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\r\n            case 'first': return \"first\" /* First */;\r\n            case 'never': return \"never\" /* Never */;\r\n            case 'ifsingle': return \"ifSingle\" /* IfSingle */;\r\n            default: return defaultAutoApply;\r\n        }\r\n    };\r\n    CodeActionCommandArgs.getKindFromUser = function (arg, defaultKind) {\r\n        return typeof arg.kind === 'string'\r\n            ? new CodeActionKind(arg.kind)\r\n            : defaultKind;\r\n    };\r\n    CodeActionCommandArgs.getPreferredUser = function (arg) {\r\n        return typeof arg.preferred === 'boolean'\r\n            ? arg.preferred\r\n            : false;\r\n    };\r\n    return CodeActionCommandArgs;\r\n}());\r\nexport { CodeActionCommandArgs };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}