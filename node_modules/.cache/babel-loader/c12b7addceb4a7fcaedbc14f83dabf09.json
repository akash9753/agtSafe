{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { repeat } from '../../../base/common/strings.js';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SnippetSession } from './snippetSession.js';\nvar _defaultOptions = {\n  overwriteBefore: 0,\n  overwriteAfter: 0,\n  undoStopBefore: true,\n  undoStopAfter: true,\n  adjustWhitespace: true,\n  clipboardText: undefined\n};\nvar SnippetController2 = /** @class */function () {\n  function SnippetController2(_editor, _logService, contextKeyService) {\n    this._editor = _editor;\n    this._logService = _logService;\n    this._snippetListener = new DisposableStore();\n    this._modelVersionId = -1;\n    this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\n    this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\n    this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\n  }\n  SnippetController2.get = function (editor) {\n    return editor.getContribution(SnippetController2.ID);\n  };\n  SnippetController2.prototype.dispose = function () {\n    this._inSnippet.reset();\n    this._hasPrevTabstop.reset();\n    this._hasNextTabstop.reset();\n    dispose(this._session);\n    this._snippetListener.dispose();\n  };\n  SnippetController2.prototype.insert = function (template, opts) {\n    // this is here to find out more about the yet-not-understood\n    // error that sometimes happens when we fail to inserted a nested\n    // snippet\n    try {\n      this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : __assign(__assign({}, _defaultOptions), opts));\n    } catch (e) {\n      this.cancel();\n      this._logService.error(e);\n      this._logService.error('snippet_error');\n      this._logService.error('insert_template=', template);\n      this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n    }\n  };\n  SnippetController2.prototype._doInsert = function (template, opts) {\n    var _this = this;\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    // don't listen while inserting the snippet\n    // as that is the inflight state causing cancelation\n    this._snippetListener.clear();\n    if (opts.undoStopBefore) {\n      this._editor.getModel().pushStackElement();\n    }\n    if (!this._session) {\n      this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n      this._session = new SnippetSession(this._editor, template, opts);\n      this._session.insert();\n    } else {\n      this._session.merge(template, opts);\n    }\n    if (opts.undoStopAfter) {\n      this._editor.getModel().pushStackElement();\n    }\n    this._updateState();\n    this._snippetListener.add(this._editor.onDidChangeModelContent(function (e) {\n      return e.isFlush && _this.cancel();\n    }));\n    this._snippetListener.add(this._editor.onDidChangeModel(function () {\n      return _this.cancel();\n    }));\n    this._snippetListener.add(this._editor.onDidChangeCursorSelection(function () {\n      return _this._updateState();\n    }));\n  };\n  SnippetController2.prototype._updateState = function () {\n    if (!this._session || !this._editor.hasModel()) {\n      // canceled in the meanwhile\n      return;\n    }\n    if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n      // undo until the 'before' state happened\n      // and makes use cancel snippet mode\n      return this.cancel();\n    }\n    if (!this._session.hasPlaceholder) {\n      // don't listen for selection changes and don't\n      // update context keys when the snippet is plain text\n      return this.cancel();\n    }\n    if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n      return this.cancel();\n    }\n    this._inSnippet.set(true);\n    this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n    this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n    this._handleChoice();\n  };\n  SnippetController2.prototype._handleChoice = function () {\n    var _this = this;\n    if (!this._session || !this._editor.hasModel()) {\n      this._currentChoice = undefined;\n      return;\n    }\n    var choice = this._session.choice;\n    if (!choice) {\n      this._currentChoice = undefined;\n      return;\n    }\n    if (this._currentChoice !== choice) {\n      this._currentChoice = choice;\n      this._editor.setSelections(this._editor.getSelections().map(function (s) {\n        return Selection.fromPositions(s.getStartPosition());\n      }));\n      var first_1 = choice.options[0];\n      showSimpleSuggestions(this._editor, choice.options.map(function (option, i) {\n        // let before = choice.options.slice(0, i);\n        // let after = choice.options.slice(i);\n        return {\n          kind: 13 /* Value */,\n          label: option.value,\n          insertText: option.value,\n          // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\n          // snippetType: 'textmate',\n          sortText: repeat('a', i + 1),\n          range: Range.fromPositions(_this._editor.getPosition(), _this._editor.getPosition().delta(0, first_1.value.length))\n        };\n      }));\n    }\n  };\n  SnippetController2.prototype.finish = function () {\n    while (this._inSnippet.get()) {\n      this.next();\n    }\n  };\n  SnippetController2.prototype.cancel = function (resetSelection) {\n    if (resetSelection === void 0) {\n      resetSelection = false;\n    }\n    this._inSnippet.reset();\n    this._hasPrevTabstop.reset();\n    this._hasNextTabstop.reset();\n    this._snippetListener.clear();\n    dispose(this._session);\n    this._session = undefined;\n    this._modelVersionId = -1;\n    if (resetSelection) {\n      // reset selection to the primary cursor when being asked\n      // for. this happens when explicitly cancelling snippet mode,\n      // e.g. when pressing ESC\n      this._editor.setSelections([this._editor.getSelection()]);\n    }\n  };\n  SnippetController2.prototype.prev = function () {\n    if (this._session) {\n      this._session.prev();\n    }\n    this._updateState();\n  };\n  SnippetController2.prototype.next = function () {\n    if (this._session) {\n      this._session.next();\n    }\n    this._updateState();\n  };\n  SnippetController2.prototype.isInSnippet = function () {\n    return Boolean(this._inSnippet.get());\n  };\n  SnippetController2.ID = 'snippetController2';\n  SnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false);\n  SnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false);\n  SnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false);\n  SnippetController2 = __decorate([__param(1, ILogService), __param(2, IContextKeyService)], SnippetController2);\n  return SnippetController2;\n}();\nexport { SnippetController2 };\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\nvar CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToNextSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n  handler: function handler(ctrl) {\n    return ctrl.next();\n  },\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 2 /* Tab */\n  }\n}));\n\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToPrevSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n  handler: function handler(ctrl) {\n    return ctrl.prev();\n  },\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 1024 /* Shift */ | 2 /* Tab */\n  }\n}));\n\nregisterEditorCommand(new CommandCtor({\n  id: 'leaveSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: function handler(ctrl) {\n    return ctrl.cancel(true);\n  },\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 9 /* Escape */,\n    secondary: [1024 /* Shift */ | 9 /* Escape */]\n  }\n}));\n\nregisterEditorCommand(new CommandCtor({\n  id: 'acceptSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: function handler(ctrl) {\n    return ctrl.finish();\n  }\n}));","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","__param","paramIndex","decorator","dispose","DisposableStore","repeat","EditorCommand","registerEditorCommand","registerEditorContribution","Range","Selection","EditorContextKeys","showSimpleSuggestions","ContextKeyExpr","IContextKeyService","RawContextKey","ILogService","SnippetSession","_defaultOptions","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","undefined","SnippetController2","_editor","_logService","contextKeyService","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","bindTo","_hasNextTabstop","HasNextTabstop","_hasPrevTabstop","HasPrevTabstop","get","editor","getContribution","ID","reset","_session","insert","template","opts","_doInsert","e","cancel","error","_logInfo","_this","hasModel","clear","getModel","pushStackElement","getAlternativeVersionId","merge","_updateState","add","onDidChangeModelContent","isFlush","onDidChangeModel","onDidChangeCursorSelection","hasPlaceholder","isAtLastPlaceholder","isSelectionWithinPlaceholders","set","isAtFirstPlaceholder","_handleChoice","_currentChoice","choice","setSelections","getSelections","map","fromPositions","getStartPosition","first_1","options","option","kind","label","value","insertText","sortText","range","getPosition","delta","finish","next","resetSelection","getSelection","prev","isInSnippet","Boolean","CommandCtor","bindToContribution","id","precondition","and","handler","ctrl","kbOpts","weight","kbExpr","editorTextFocus","primary","secondary"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { repeat } from '../../../base/common/strings.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nvar _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined\r\n};\r\nvar SnippetController2 = /** @class */ (function () {\r\n    function SnippetController2(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    SnippetController2.get = function (editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    };\r\n    SnippetController2.prototype.dispose = function () {\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        dispose(this._session);\r\n        this._snippetListener.dispose();\r\n    };\r\n    SnippetController2.prototype.insert = function (template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : __assign(__assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    };\r\n    SnippetController2.prototype._doInsert = function (template, opts) {\r\n        var _this = this;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(function (e) { return e.isFlush && _this.cancel(); }));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(function () { return _this.cancel(); }));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(function () { return _this._updateState(); }));\r\n    };\r\n    SnippetController2.prototype._updateState = function () {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    };\r\n    SnippetController2.prototype._handleChoice = function () {\r\n        var _this = this;\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        var choice = this._session.choice;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(function (s) { return Selection.fromPositions(s.getStartPosition()); }));\r\n            var first_1 = choice.options[0];\r\n            showSimpleSuggestions(this._editor, choice.options.map(function (option, i) {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: repeat('a', i + 1),\r\n                    range: Range.fromPositions(_this._editor.getPosition(), _this._editor.getPosition().delta(0, first_1.value.length))\r\n                };\r\n            }));\r\n        }\r\n    };\r\n    SnippetController2.prototype.finish = function () {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    };\r\n    SnippetController2.prototype.cancel = function (resetSelection) {\r\n        if (resetSelection === void 0) { resetSelection = false; }\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        dispose(this._session);\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    };\r\n    SnippetController2.prototype.prev = function () {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    };\r\n    SnippetController2.prototype.next = function () {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    };\r\n    SnippetController2.prototype.isInSnippet = function () {\r\n        return Boolean(this._inSnippet.get());\r\n    };\r\n    SnippetController2.ID = 'snippetController2';\r\n    SnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false);\r\n    SnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false);\r\n    SnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false);\r\n    SnippetController2 = __decorate([\r\n        __param(1, ILogService),\r\n        __param(2, IContextKeyService)\r\n    ], SnippetController2);\r\n    return SnippetController2;\r\n}());\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nvar CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: function (ctrl) { return ctrl.next(); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: function (ctrl) { return ctrl.prev(); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: function (ctrl) { return ctrl.cancel(true); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: function (ctrl) { return ctrl.finish(); },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}