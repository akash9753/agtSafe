{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: ';',\n    blockComment: ['#|', '|#']\n  },\n  brackets: [['(', ')'], ['{', '}'], ['[', ']']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  ignoreCase: true,\n  tokenPostfix: '.scheme',\n  brackets: [{\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }],\n  keywords: ['case', 'do', 'let', 'loop', 'if', 'else', 'when', 'cons', 'car', 'cdr', 'cond', 'lambda', 'lambda*', 'syntax-rules', 'format', 'set!', 'quote', 'eval', 'append', 'list', 'list?', 'member?', 'load'],\n  constants: ['#t', '#f'],\n  operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\n  tokenizer: {\n    root: [[/#[xXoObB][0-9a-fA-F]+/, 'number.hex'], [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'], [/(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/, ['keyword', 'white', 'variable']], {\n      include: '@whitespace'\n    }, {\n      include: '@strings'\n    }, [/[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@constants': 'constant',\n        '@operators': 'operators',\n        '@default': 'identifier'\n      }\n    }]],\n    comment: [[/[^\\|#]+/, 'comment'], [/#\\|/, 'comment', '@push'], [/\\|#/, 'comment', '@pop'], [/[\\|#]/, 'comment']],\n    whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/#\\|/, 'comment', '@comment'], [/;.*$/, 'comment']],\n    strings: [[/\"$/, 'string', '@popall'], [/\"(?=.)/, 'string', '@multiLineString']],\n    multiLineString: [[/[^\\\\\"]+$/, 'string', '@popall'], [/[^\\\\\"]+/, 'string'], [/\\\\./, 'string.escape'], [/\"/, 'string', '@popall'], [/\\\\$/, 'string']]\n  }\n};","map":{"version":3,"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","constants","operators","tokenizer","root","include","cases","comment","whitespace","strings","multiLineString"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: ';',\r\n        blockComment: ['#|', '|#'],\r\n    },\r\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.scheme',\r\n    brackets: [\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n    ],\r\n    keywords: [\r\n        'case',\r\n        'do',\r\n        'let',\r\n        'loop',\r\n        'if',\r\n        'else',\r\n        'when',\r\n        'cons',\r\n        'car',\r\n        'cdr',\r\n        'cond',\r\n        'lambda',\r\n        'lambda*',\r\n        'syntax-rules',\r\n        'format',\r\n        'set!',\r\n        'quote',\r\n        'eval',\r\n        'append',\r\n        'list',\r\n        'list?',\r\n        'member?',\r\n        'load',\r\n    ],\r\n    constants: ['#t', '#f'],\r\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\r\n    tokenizer: {\r\n        root: [\r\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\r\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\r\n            [\r\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\r\n                ['keyword', 'white', 'variable'],\r\n            ],\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@operators': 'operators',\r\n                        '@default': 'identifier',\r\n                    },\r\n                },\r\n            ],\r\n        ],\r\n        comment: [\r\n            [/[^\\|#]+/, 'comment'],\r\n            [/#\\|/, 'comment', '@push'],\r\n            [/\\|#/, 'comment', '@pop'],\r\n            [/[\\|#]/, 'comment'],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/#\\|/, 'comment', '@comment'],\r\n            [/;.*$/, 'comment'],\r\n        ],\r\n        strings: [\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"(?=.)/, 'string', '@multiLineString'],\r\n        ],\r\n        multiLineString: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"/, 'string', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ],\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}