{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Json from './../../jsonc-parser/main.js';\nimport { URI } from './../../vscode-uri/index.js';\nimport * as Strings from '../utils/strings.js';\nimport * as Parser from '../parser/jsonParser.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar FilePatternAssociation = /** @class */function () {\n  function FilePatternAssociation(pattern) {\n    try {\n      this.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n    } catch (e) {\n      // invalid pattern\n      this.patternRegExp = null;\n    }\n    this.schemas = [];\n  }\n  FilePatternAssociation.prototype.addSchema = function (id) {\n    this.schemas.push(id);\n  };\n  FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n    return this.patternRegExp && this.patternRegExp.test(fileName);\n  };\n  FilePatternAssociation.prototype.getSchemas = function () {\n    return this.schemas;\n  };\n  return FilePatternAssociation;\n}();\nvar SchemaHandle = /** @class */function () {\n  function SchemaHandle(service, url, unresolvedSchemaContent) {\n    this.service = service;\n    this.url = url;\n    this.dependencies = {};\n    if (unresolvedSchemaContent) {\n      this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n    }\n  }\n  SchemaHandle.prototype.getUnresolvedSchema = function () {\n    if (!this.unresolvedSchema) {\n      this.unresolvedSchema = this.service.loadSchema(this.url);\n    }\n    return this.unresolvedSchema;\n  };\n  SchemaHandle.prototype.getResolvedSchema = function () {\n    var _this = this;\n    if (!this.resolvedSchema) {\n      this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n        return _this.service.resolveSchemaContent(unresolved, _this.url, _this.dependencies);\n      });\n    }\n    return this.resolvedSchema;\n  };\n  SchemaHandle.prototype.clearSchema = function () {\n    this.resolvedSchema = null;\n    this.unresolvedSchema = null;\n    this.dependencies = {};\n  };\n  return SchemaHandle;\n}();\nvar UnresolvedSchema = /** @class */function () {\n  function UnresolvedSchema(schema, errors) {\n    if (errors === void 0) {\n      errors = [];\n    }\n    this.schema = schema;\n    this.errors = errors;\n  }\n  return UnresolvedSchema;\n}();\nexport { UnresolvedSchema };\nvar ResolvedSchema = /** @class */function () {\n  function ResolvedSchema(schema, errors) {\n    if (errors === void 0) {\n      errors = [];\n    }\n    this.schema = schema;\n    this.errors = errors;\n  }\n  ResolvedSchema.prototype.getSection = function (path) {\n    return Parser.asSchema(this.getSectionRecursive(path, this.schema));\n  };\n  ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n    if (!schema || typeof schema === 'boolean' || path.length === 0) {\n      return schema;\n    }\n    var next = path.shift();\n    if (schema.properties && typeof schema.properties[next]) {\n      return this.getSectionRecursive(path, schema.properties[next]);\n    } else if (schema.patternProperties) {\n      for (var _i = 0, _a = Object.keys(schema.patternProperties); _i < _a.length; _i++) {\n        var pattern = _a[_i];\n        var regex = new RegExp(pattern);\n        if (regex.test(next)) {\n          return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n        }\n      }\n    } else if (typeof schema.additionalProperties === 'object') {\n      return this.getSectionRecursive(path, schema.additionalProperties);\n    } else if (next.match('[0-9]+')) {\n      if (Array.isArray(schema.items)) {\n        var index = parseInt(next, 10);\n        if (!isNaN(index) && schema.items[index]) {\n          return this.getSectionRecursive(path, schema.items[index]);\n        }\n      } else if (schema.items) {\n        return this.getSectionRecursive(path, schema.items);\n      }\n    }\n    return null;\n  };\n  return ResolvedSchema;\n}();\nexport { ResolvedSchema };\nvar JSONSchemaService = /** @class */function () {\n  function JSONSchemaService(requestService, contextService, promiseConstructor) {\n    this.contextService = contextService;\n    this.requestService = requestService;\n    this.promiseConstructor = promiseConstructor || Promise;\n    this.callOnDispose = [];\n    this.contributionSchemas = {};\n    this.contributionAssociations = {};\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.filePatternAssociationById = {};\n    this.registeredSchemasIds = {};\n  }\n  JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n    return Object.keys(this.registeredSchemasIds).filter(function (id) {\n      var scheme = URI.parse(id).scheme;\n      return scheme !== 'schemaservice' && (!filter || filter(scheme));\n    });\n  };\n  Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n    get: function get() {\n      return this.promiseConstructor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  JSONSchemaService.prototype.dispose = function () {\n    while (this.callOnDispose.length > 0) {\n      this.callOnDispose.pop()();\n    }\n  };\n  JSONSchemaService.prototype.onResourceChange = function (uri) {\n    var _this = this;\n    var hasChanges = false;\n    uri = this.normalizeId(uri);\n    var toWalk = [uri];\n    var all = Object.keys(this.schemasById).map(function (key) {\n      return _this.schemasById[key];\n    });\n    while (toWalk.length) {\n      var curr = toWalk.pop();\n      for (var i = 0; i < all.length; i++) {\n        var handle = all[i];\n        if (handle && (handle.url === curr || handle.dependencies[curr])) {\n          if (handle.url !== curr) {\n            toWalk.push(handle.url);\n          }\n          handle.clearSchema();\n          all[i] = undefined;\n          hasChanges = true;\n        }\n      }\n    }\n    return hasChanges;\n  };\n  JSONSchemaService.prototype.normalizeId = function (id) {\n    // remove trailing '#', normalize drive capitalization\n    try {\n      return URI.parse(id).toString();\n    } catch (e) {\n      return id;\n    }\n  };\n  JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n    if (schemaContributions.schemas) {\n      var schemas = schemaContributions.schemas;\n      for (var id in schemas) {\n        var normalizedId = this.normalizeId(id);\n        this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n      }\n    }\n    if (schemaContributions.schemaAssociations) {\n      var schemaAssociations = schemaContributions.schemaAssociations;\n      for (var pattern in schemaAssociations) {\n        var associations = schemaAssociations[pattern];\n        this.contributionAssociations[pattern] = associations;\n        var fpa = this.getOrAddFilePatternAssociation(pattern);\n        for (var _i = 0, associations_1 = associations; _i < associations_1.length; _i++) {\n          var schemaId = associations_1[_i];\n          var id = this.normalizeId(schemaId);\n          fpa.addSchema(id);\n        }\n      }\n    }\n  };\n  JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n    var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n    this.schemasById[id] = schemaHandle;\n    return schemaHandle;\n  };\n  JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n    return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n  };\n  JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\n    var fpa = this.filePatternAssociationById[pattern];\n    if (!fpa) {\n      fpa = new FilePatternAssociation(pattern);\n      this.filePatternAssociationById[pattern] = fpa;\n      this.filePatternAssociations.push(fpa);\n    }\n    return fpa;\n  };\n  JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n    if (filePatterns === void 0) {\n      filePatterns = null;\n    }\n    var id = this.normalizeId(uri);\n    this.registeredSchemasIds[id] = true;\n    if (filePatterns) {\n      for (var _i = 0, filePatterns_1 = filePatterns; _i < filePatterns_1.length; _i++) {\n        var pattern = filePatterns_1[_i];\n        this.getOrAddFilePatternAssociation(pattern).addSchema(id);\n      }\n    }\n    return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n  };\n  JSONSchemaService.prototype.clearExternalSchemas = function () {\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.filePatternAssociationById = {};\n    this.registeredSchemasIds = {};\n    for (var id in this.contributionSchemas) {\n      this.schemasById[id] = this.contributionSchemas[id];\n      this.registeredSchemasIds[id] = true;\n    }\n    for (var pattern in this.contributionAssociations) {\n      var fpa = this.getOrAddFilePatternAssociation(pattern);\n      for (var _i = 0, _a = this.contributionAssociations[pattern]; _i < _a.length; _i++) {\n        var schemaId = _a[_i];\n        var id = this.normalizeId(schemaId);\n        fpa.addSchema(id);\n      }\n    }\n  };\n  JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n    var id = this.normalizeId(schemaId);\n    var schemaHandle = this.schemasById[id];\n    if (schemaHandle) {\n      return schemaHandle.getResolvedSchema();\n    }\n    return this.promise.resolve(null);\n  };\n  JSONSchemaService.prototype.loadSchema = function (url) {\n    if (!this.requestService) {\n      var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n      return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n    }\n    return this.requestService(url).then(function (content) {\n      if (!content) {\n        var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n        return new UnresolvedSchema({}, [errorMessage]);\n      }\n      var schemaContent = {};\n      var jsonErrors = [];\n      schemaContent = Json.parse(content, jsonErrors);\n      var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n      return new UnresolvedSchema(schemaContent, errors);\n    }, function (error) {\n      var errorMessage = error.toString();\n      var errorSplit = error.toString().split('Error: ');\n      if (errorSplit.length > 1) {\n        // more concise error message, URL and context are attached by caller anyways\n        errorMessage = errorSplit[1];\n      }\n      if (Strings.endsWith(errorMessage, '.')) {\n        errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n      }\n      return new UnresolvedSchema({}, [localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': {1}.', toDisplayString(url), errorMessage)]);\n    });\n  };\n  JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL, dependencies) {\n    var _this = this;\n    var resolveErrors = schemaToResolve.errors.slice(0);\n    var schema = schemaToResolve.schema;\n    if (schema.$schema) {\n      var id = this.normalizeId(schema.$schema);\n      if (id === 'http://json-schema.org/draft-03/schema') {\n        return this.promise.resolve(new ResolvedSchema({}, [localize('json.schema.draft03.notsupported', \"Draft-03 schemas are not supported.\")]));\n      } else if (id === 'https://json-schema.org/draft/2019-09/schema') {\n        schemaToResolve.errors.push(localize('json.schema.draft201909.notsupported', \"Draft 2019-09 schemas are not yet fully supported.\"));\n      }\n    }\n    var contextService = this.contextService;\n    var findSection = function findSection(schema, path) {\n      if (!path) {\n        return schema;\n      }\n      var current = schema;\n      if (path[0] === '/') {\n        path = path.substr(1);\n      }\n      path.split('/').some(function (part) {\n        current = current[part];\n        return !current;\n      });\n      return current;\n    };\n    var merge = function merge(target, sourceRoot, sourceURI, path) {\n      var section = findSection(sourceRoot, path);\n      if (section) {\n        for (var key in section) {\n          if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = section[key];\n          }\n        }\n      } else {\n        resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n      }\n    };\n    var resolveExternalLink = function resolveExternalLink(node, uri, linkPath, parentSchemaURL, parentSchemaDependencies) {\n      if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n        uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n      }\n      uri = _this.normalizeId(uri);\n      var referencedHandle = _this.getOrAddSchemaHandle(uri);\n      return referencedHandle.getUnresolvedSchema().then(function (unresolvedSchema) {\n        parentSchemaDependencies[uri] = true;\n        if (unresolvedSchema.errors.length) {\n          var loc = linkPath ? uri + '#' + linkPath : uri;\n          resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n        }\n        merge(node, unresolvedSchema.schema, uri, linkPath);\n        return resolveRefs(node, unresolvedSchema.schema, uri, referencedHandle.dependencies);\n      });\n    };\n    var resolveRefs = function resolveRefs(node, parentSchema, parentSchemaURL, parentSchemaDependencies) {\n      if (!node || typeof node !== 'object') {\n        return Promise.resolve(null);\n      }\n      var toWalk = [node];\n      var seen = [];\n      var openPromises = [];\n      var collectEntries = function collectEntries() {\n        var entries = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          entries[_i] = arguments[_i];\n        }\n        for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n          var entry = entries_1[_a];\n          if (typeof entry === 'object') {\n            toWalk.push(entry);\n          }\n        }\n      };\n      var collectMapEntries = function collectMapEntries() {\n        var maps = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          maps[_i] = arguments[_i];\n        }\n        for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n          var map = maps_1[_a];\n          if (typeof map === 'object') {\n            for (var key in map) {\n              var entry = map[key];\n              if (typeof entry === 'object') {\n                toWalk.push(entry);\n              }\n            }\n          }\n        }\n      };\n      var collectArrayEntries = function collectArrayEntries() {\n        var arrays = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          arrays[_i] = arguments[_i];\n        }\n        for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n          var array = arrays_1[_a];\n          if (Array.isArray(array)) {\n            for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n              var entry = array_1[_b];\n              if (typeof entry === 'object') {\n                toWalk.push(entry);\n              }\n            }\n          }\n        }\n      };\n      var handleRef = function handleRef(next) {\n        var seenRefs = [];\n        while (next.$ref) {\n          var ref = next.$ref;\n          var segments = ref.split('#', 2);\n          delete next.$ref;\n          if (segments[0].length > 0) {\n            openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL, parentSchemaDependencies));\n            return;\n          } else {\n            if (seenRefs.indexOf(ref) === -1) {\n              merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again, use seenRefs to avoid circle\n              seenRefs.push(ref);\n            }\n          }\n        }\n        collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else);\n        collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n        collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n      };\n      while (toWalk.length) {\n        var next = toWalk.pop();\n        if (seen.indexOf(next) >= 0) {\n          continue;\n        }\n        seen.push(next);\n        handleRef(next);\n      }\n      return _this.promise.all(openPromises);\n    };\n    return resolveRefs(schema, schema, schemaURL, dependencies).then(function (_) {\n      return new ResolvedSchema(schema, resolveErrors);\n    });\n  };\n  JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n    // first use $schema if present\n    if (document && document.root && document.root.type === 'object') {\n      var schemaProperties = document.root.properties.filter(function (p) {\n        return p.keyNode.value === '$schema' && p.valueNode && p.valueNode.type === 'string';\n      });\n      if (schemaProperties.length > 0) {\n        var schemeId = Parser.getNodeValue(schemaProperties[0].valueNode);\n        if (schemeId && Strings.startsWith(schemeId, '.') && this.contextService) {\n          schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n        }\n        if (schemeId) {\n          var id = this.normalizeId(schemeId);\n          return this.getOrAddSchemaHandle(id).getResolvedSchema();\n        }\n      }\n    }\n    var seen = Object.create(null);\n    var schemas = [];\n    for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n      var entry = _a[_i];\n      if (entry.matchesPattern(resource)) {\n        for (var _b = 0, _c = entry.getSchemas(); _b < _c.length; _b++) {\n          var schemaId = _c[_b];\n          if (!seen[schemaId]) {\n            schemas.push(schemaId);\n            seen[schemaId] = true;\n          }\n        }\n      }\n    }\n    if (schemas.length > 0) {\n      return this.createCombinedSchema(resource, schemas).getResolvedSchema();\n    }\n    return this.promise.resolve(null);\n  };\n  JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n    if (schemaIds.length === 1) {\n      return this.getOrAddSchemaHandle(schemaIds[0]);\n    } else {\n      var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n      var combinedSchema = {\n        allOf: schemaIds.map(function (schemaId) {\n          return {\n            $ref: schemaId\n          };\n        })\n      };\n      return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n    }\n  };\n  return JSONSchemaService;\n}();\nexport { JSONSchemaService };\nfunction toDisplayString(url) {\n  try {\n    var uri = URI.parse(url);\n    if (uri.scheme === 'file') {\n      return uri.fsPath;\n    }\n  } catch (e) {\n    // ignore\n  }\n  return url;\n}","map":{"version":3,"names":["Json","URI","Strings","Parser","nls","localize","loadMessageBundle","FilePatternAssociation","pattern","patternRegExp","RegExp","convertSimple2RegExpPattern","e","schemas","prototype","addSchema","id","push","matchesPattern","fileName","test","getSchemas","SchemaHandle","service","url","unresolvedSchemaContent","dependencies","unresolvedSchema","promise","resolve","UnresolvedSchema","getUnresolvedSchema","loadSchema","getResolvedSchema","_this","resolvedSchema","then","unresolved","resolveSchemaContent","clearSchema","schema","errors","ResolvedSchema","getSection","path","asSchema","getSectionRecursive","length","next","shift","properties","patternProperties","_i","_a","Object","keys","regex","additionalProperties","match","Array","isArray","items","index","parseInt","isNaN","JSONSchemaService","requestService","contextService","promiseConstructor","Promise","callOnDispose","contributionSchemas","contributionAssociations","schemasById","filePatternAssociations","filePatternAssociationById","registeredSchemasIds","getRegisteredSchemaIds","filter","scheme","parse","defineProperty","get","enumerable","configurable","dispose","pop","onResourceChange","uri","hasChanges","normalizeId","toWalk","all","map","key","curr","i","handle","undefined","toString","setSchemaContributions","schemaContributions","normalizedId","addSchemaHandle","schemaAssociations","associations","fpa","getOrAddFilePatternAssociation","associations_1","schemaId","schemaHandle","getOrAddSchemaHandle","registerExternalSchema","filePatterns","filePatterns_1","clearExternalSchemas","errorMessage","toDisplayString","content","schemaContent","jsonErrors","offset","error","errorSplit","split","endsWith","substr","schemaToResolve","schemaURL","resolveErrors","slice","$schema","findSection","current","some","part","merge","target","sourceRoot","sourceURI","section","hasOwnProperty","resolveExternalLink","node","linkPath","parentSchemaURL","parentSchemaDependencies","resolveRelativePath","referencedHandle","loc","resolveRefs","parentSchema","seen","openPromises","collectEntries","entries","arguments","entries_1","entry","collectMapEntries","maps","maps_1","collectArrayEntries","arrays","arrays_1","array","_b","array_1","handleRef","seenRefs","$ref","ref","segments","indexOf","not","contains","propertyNames","if","else","definitions","anyOf","allOf","oneOf","_","getSchemaForResource","resource","document","root","type","schemaProperties","p","keyNode","value","valueNode","schemeId","getNodeValue","startsWith","create","_c","createCombinedSchema","schemaIds","combinedSchemaId","encodeURIComponent","combinedSchema","fsPath"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Json from './../../jsonc-parser/main.js';\nimport { URI } from './../../vscode-uri/index.js';\nimport * as Strings from '../utils/strings.js';\nimport * as Parser from '../parser/jsonParser.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar FilePatternAssociation = /** @class */ (function () {\n    function FilePatternAssociation(pattern) {\n        try {\n            this.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n        }\n        catch (e) {\n            // invalid pattern\n            this.patternRegExp = null;\n        }\n        this.schemas = [];\n    }\n    FilePatternAssociation.prototype.addSchema = function (id) {\n        this.schemas.push(id);\n    };\n    FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n        return this.patternRegExp && this.patternRegExp.test(fileName);\n    };\n    FilePatternAssociation.prototype.getSchemas = function () {\n        return this.schemas;\n    };\n    return FilePatternAssociation;\n}());\nvar SchemaHandle = /** @class */ (function () {\n    function SchemaHandle(service, url, unresolvedSchemaContent) {\n        this.service = service;\n        this.url = url;\n        this.dependencies = {};\n        if (unresolvedSchemaContent) {\n            this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n        }\n    }\n    SchemaHandle.prototype.getUnresolvedSchema = function () {\n        if (!this.unresolvedSchema) {\n            this.unresolvedSchema = this.service.loadSchema(this.url);\n        }\n        return this.unresolvedSchema;\n    };\n    SchemaHandle.prototype.getResolvedSchema = function () {\n        var _this = this;\n        if (!this.resolvedSchema) {\n            this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n                return _this.service.resolveSchemaContent(unresolved, _this.url, _this.dependencies);\n            });\n        }\n        return this.resolvedSchema;\n    };\n    SchemaHandle.prototype.clearSchema = function () {\n        this.resolvedSchema = null;\n        this.unresolvedSchema = null;\n        this.dependencies = {};\n    };\n    return SchemaHandle;\n}());\nvar UnresolvedSchema = /** @class */ (function () {\n    function UnresolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    return UnresolvedSchema;\n}());\nexport { UnresolvedSchema };\nvar ResolvedSchema = /** @class */ (function () {\n    function ResolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    ResolvedSchema.prototype.getSection = function (path) {\n        return Parser.asSchema(this.getSectionRecursive(path, this.schema));\n    };\n    ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n        if (!schema || typeof schema === 'boolean' || path.length === 0) {\n            return schema;\n        }\n        var next = path.shift();\n        if (schema.properties && typeof schema.properties[next]) {\n            return this.getSectionRecursive(path, schema.properties[next]);\n        }\n        else if (schema.patternProperties) {\n            for (var _i = 0, _a = Object.keys(schema.patternProperties); _i < _a.length; _i++) {\n                var pattern = _a[_i];\n                var regex = new RegExp(pattern);\n                if (regex.test(next)) {\n                    return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n                }\n            }\n        }\n        else if (typeof schema.additionalProperties === 'object') {\n            return this.getSectionRecursive(path, schema.additionalProperties);\n        }\n        else if (next.match('[0-9]+')) {\n            if (Array.isArray(schema.items)) {\n                var index = parseInt(next, 10);\n                if (!isNaN(index) && schema.items[index]) {\n                    return this.getSectionRecursive(path, schema.items[index]);\n                }\n            }\n            else if (schema.items) {\n                return this.getSectionRecursive(path, schema.items);\n            }\n        }\n        return null;\n    };\n    return ResolvedSchema;\n}());\nexport { ResolvedSchema };\nvar JSONSchemaService = /** @class */ (function () {\n    function JSONSchemaService(requestService, contextService, promiseConstructor) {\n        this.contextService = contextService;\n        this.requestService = requestService;\n        this.promiseConstructor = promiseConstructor || Promise;\n        this.callOnDispose = [];\n        this.contributionSchemas = {};\n        this.contributionAssociations = {};\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n    }\n    JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n        return Object.keys(this.registeredSchemasIds).filter(function (id) {\n            var scheme = URI.parse(id).scheme;\n            return scheme !== 'schemaservice' && (!filter || filter(scheme));\n        });\n    };\n    Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n        get: function () {\n            return this.promiseConstructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JSONSchemaService.prototype.dispose = function () {\n        while (this.callOnDispose.length > 0) {\n            this.callOnDispose.pop()();\n        }\n    };\n    JSONSchemaService.prototype.onResourceChange = function (uri) {\n        var _this = this;\n        var hasChanges = false;\n        uri = this.normalizeId(uri);\n        var toWalk = [uri];\n        var all = Object.keys(this.schemasById).map(function (key) { return _this.schemasById[key]; });\n        while (toWalk.length) {\n            var curr = toWalk.pop();\n            for (var i = 0; i < all.length; i++) {\n                var handle = all[i];\n                if (handle && (handle.url === curr || handle.dependencies[curr])) {\n                    if (handle.url !== curr) {\n                        toWalk.push(handle.url);\n                    }\n                    handle.clearSchema();\n                    all[i] = undefined;\n                    hasChanges = true;\n                }\n            }\n        }\n        return hasChanges;\n    };\n    JSONSchemaService.prototype.normalizeId = function (id) {\n        // remove trailing '#', normalize drive capitalization\n        try {\n            return URI.parse(id).toString();\n        }\n        catch (e) {\n            return id;\n        }\n    };\n    JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n        if (schemaContributions.schemas) {\n            var schemas = schemaContributions.schemas;\n            for (var id in schemas) {\n                var normalizedId = this.normalizeId(id);\n                this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n            }\n        }\n        if (schemaContributions.schemaAssociations) {\n            var schemaAssociations = schemaContributions.schemaAssociations;\n            for (var pattern in schemaAssociations) {\n                var associations = schemaAssociations[pattern];\n                this.contributionAssociations[pattern] = associations;\n                var fpa = this.getOrAddFilePatternAssociation(pattern);\n                for (var _i = 0, associations_1 = associations; _i < associations_1.length; _i++) {\n                    var schemaId = associations_1[_i];\n                    var id = this.normalizeId(schemaId);\n                    fpa.addSchema(id);\n                }\n            }\n        }\n    };\n    JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n        var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n        this.schemasById[id] = schemaHandle;\n        return schemaHandle;\n    };\n    JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n        return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n    };\n    JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\n        var fpa = this.filePatternAssociationById[pattern];\n        if (!fpa) {\n            fpa = new FilePatternAssociation(pattern);\n            this.filePatternAssociationById[pattern] = fpa;\n            this.filePatternAssociations.push(fpa);\n        }\n        return fpa;\n    };\n    JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n        if (filePatterns === void 0) { filePatterns = null; }\n        var id = this.normalizeId(uri);\n        this.registeredSchemasIds[id] = true;\n        if (filePatterns) {\n            for (var _i = 0, filePatterns_1 = filePatterns; _i < filePatterns_1.length; _i++) {\n                var pattern = filePatterns_1[_i];\n                this.getOrAddFilePatternAssociation(pattern).addSchema(id);\n            }\n        }\n        return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n    };\n    JSONSchemaService.prototype.clearExternalSchemas = function () {\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n        for (var id in this.contributionSchemas) {\n            this.schemasById[id] = this.contributionSchemas[id];\n            this.registeredSchemasIds[id] = true;\n        }\n        for (var pattern in this.contributionAssociations) {\n            var fpa = this.getOrAddFilePatternAssociation(pattern);\n            for (var _i = 0, _a = this.contributionAssociations[pattern]; _i < _a.length; _i++) {\n                var schemaId = _a[_i];\n                var id = this.normalizeId(schemaId);\n                fpa.addSchema(id);\n            }\n        }\n    };\n    JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n        var id = this.normalizeId(schemaId);\n        var schemaHandle = this.schemasById[id];\n        if (schemaHandle) {\n            return schemaHandle.getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.loadSchema = function (url) {\n        if (!this.requestService) {\n            var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n            return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n        }\n        return this.requestService(url).then(function (content) {\n            if (!content) {\n                var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n                return new UnresolvedSchema({}, [errorMessage]);\n            }\n            var schemaContent = {};\n            var jsonErrors = [];\n            schemaContent = Json.parse(content, jsonErrors);\n            var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n            return new UnresolvedSchema(schemaContent, errors);\n        }, function (error) {\n            var errorMessage = error.toString();\n            var errorSplit = error.toString().split('Error: ');\n            if (errorSplit.length > 1) {\n                // more concise error message, URL and context are attached by caller anyways\n                errorMessage = errorSplit[1];\n            }\n            if (Strings.endsWith(errorMessage, '.')) {\n                errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n            }\n            return new UnresolvedSchema({}, [localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': {1}.', toDisplayString(url), errorMessage)]);\n        });\n    };\n    JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL, dependencies) {\n        var _this = this;\n        var resolveErrors = schemaToResolve.errors.slice(0);\n        var schema = schemaToResolve.schema;\n        if (schema.$schema) {\n            var id = this.normalizeId(schema.$schema);\n            if (id === 'http://json-schema.org/draft-03/schema') {\n                return this.promise.resolve(new ResolvedSchema({}, [localize('json.schema.draft03.notsupported', \"Draft-03 schemas are not supported.\")]));\n            }\n            else if (id === 'https://json-schema.org/draft/2019-09/schema') {\n                schemaToResolve.errors.push(localize('json.schema.draft201909.notsupported', \"Draft 2019-09 schemas are not yet fully supported.\"));\n            }\n        }\n        var contextService = this.contextService;\n        var findSection = function (schema, path) {\n            if (!path) {\n                return schema;\n            }\n            var current = schema;\n            if (path[0] === '/') {\n                path = path.substr(1);\n            }\n            path.split('/').some(function (part) {\n                current = current[part];\n                return !current;\n            });\n            return current;\n        };\n        var merge = function (target, sourceRoot, sourceURI, path) {\n            var section = findSection(sourceRoot, path);\n            if (section) {\n                for (var key in section) {\n                    if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                        target[key] = section[key];\n                    }\n                }\n            }\n            else {\n                resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n            }\n        };\n        var resolveExternalLink = function (node, uri, linkPath, parentSchemaURL, parentSchemaDependencies) {\n            if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n                uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n            }\n            uri = _this.normalizeId(uri);\n            var referencedHandle = _this.getOrAddSchemaHandle(uri);\n            return referencedHandle.getUnresolvedSchema().then(function (unresolvedSchema) {\n                parentSchemaDependencies[uri] = true;\n                if (unresolvedSchema.errors.length) {\n                    var loc = linkPath ? uri + '#' + linkPath : uri;\n                    resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n                }\n                merge(node, unresolvedSchema.schema, uri, linkPath);\n                return resolveRefs(node, unresolvedSchema.schema, uri, referencedHandle.dependencies);\n            });\n        };\n        var resolveRefs = function (node, parentSchema, parentSchemaURL, parentSchemaDependencies) {\n            if (!node || typeof node !== 'object') {\n                return Promise.resolve(null);\n            }\n            var toWalk = [node];\n            var seen = [];\n            var openPromises = [];\n            var collectEntries = function () {\n                var entries = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    entries[_i] = arguments[_i];\n                }\n                for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n                    var entry = entries_1[_a];\n                    if (typeof entry === 'object') {\n                        toWalk.push(entry);\n                    }\n                }\n            };\n            var collectMapEntries = function () {\n                var maps = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    maps[_i] = arguments[_i];\n                }\n                for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                    var map = maps_1[_a];\n                    if (typeof map === 'object') {\n                        for (var key in map) {\n                            var entry = map[key];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var collectArrayEntries = function () {\n                var arrays = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    arrays[_i] = arguments[_i];\n                }\n                for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n                    var array = arrays_1[_a];\n                    if (Array.isArray(array)) {\n                        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n                            var entry = array_1[_b];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var handleRef = function (next) {\n                var seenRefs = [];\n                while (next.$ref) {\n                    var ref = next.$ref;\n                    var segments = ref.split('#', 2);\n                    delete next.$ref;\n                    if (segments[0].length > 0) {\n                        openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL, parentSchemaDependencies));\n                        return;\n                    }\n                    else {\n                        if (seenRefs.indexOf(ref) === -1) {\n                            merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again, use seenRefs to avoid circle\n                            seenRefs.push(ref);\n                        }\n                    }\n                }\n                collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else);\n                collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n                collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n            };\n            while (toWalk.length) {\n                var next = toWalk.pop();\n                if (seen.indexOf(next) >= 0) {\n                    continue;\n                }\n                seen.push(next);\n                handleRef(next);\n            }\n            return _this.promise.all(openPromises);\n        };\n        return resolveRefs(schema, schema, schemaURL, dependencies).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\n    };\n    JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n        // first use $schema if present\n        if (document && document.root && document.root.type === 'object') {\n            var schemaProperties = document.root.properties.filter(function (p) { return (p.keyNode.value === '$schema') && p.valueNode && p.valueNode.type === 'string'; });\n            if (schemaProperties.length > 0) {\n                var schemeId = Parser.getNodeValue(schemaProperties[0].valueNode);\n                if (schemeId && Strings.startsWith(schemeId, '.') && this.contextService) {\n                    schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n                }\n                if (schemeId) {\n                    var id = this.normalizeId(schemeId);\n                    return this.getOrAddSchemaHandle(id).getResolvedSchema();\n                }\n            }\n        }\n        var seen = Object.create(null);\n        var schemas = [];\n        for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.matchesPattern(resource)) {\n                for (var _b = 0, _c = entry.getSchemas(); _b < _c.length; _b++) {\n                    var schemaId = _c[_b];\n                    if (!seen[schemaId]) {\n                        schemas.push(schemaId);\n                        seen[schemaId] = true;\n                    }\n                }\n            }\n        }\n        if (schemas.length > 0) {\n            return this.createCombinedSchema(resource, schemas).getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n        if (schemaIds.length === 1) {\n            return this.getOrAddSchemaHandle(schemaIds[0]);\n        }\n        else {\n            var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n            var combinedSchema = {\n                allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\n            };\n            return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n        }\n    };\n    return JSONSchemaService;\n}());\nexport { JSONSchemaService };\nfunction toDisplayString(url) {\n    try {\n        var uri = URI.parse(url);\n        if (uri.scheme === 'file') {\n            return uri.fsPath;\n        }\n    }\n    catch (e) {\n        // ignore\n    }\n    return url;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}