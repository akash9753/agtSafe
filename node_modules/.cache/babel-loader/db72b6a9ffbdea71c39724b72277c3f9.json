{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nvar MirrorTextModel = /** @class */function () {\n  function MirrorTextModel(uri, lines, eol, versionId) {\n    this._uri = uri;\n    this._lines = lines;\n    this._eol = eol;\n    this._versionId = versionId;\n    this._lineStarts = null;\n  }\n  MirrorTextModel.prototype.dispose = function () {\n    this._lines.length = 0;\n  };\n  MirrorTextModel.prototype.getText = function () {\n    return this._lines.join(this._eol);\n  };\n  MirrorTextModel.prototype.onEvents = function (e) {\n    if (e.eol && e.eol !== this._eol) {\n      this._eol = e.eol;\n      this._lineStarts = null;\n    }\n    // Update my lines\n    var changes = e.changes;\n    for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n      var change = changes_1[_i];\n      this._acceptDeleteRange(change.range);\n      this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n    }\n    this._versionId = e.versionId;\n  };\n  MirrorTextModel.prototype._ensureLineStarts = function () {\n    if (!this._lineStarts) {\n      var eolLength = this._eol.length;\n      var linesLength = this._lines.length;\n      var lineStartValues = new Uint32Array(linesLength);\n      for (var i = 0; i < linesLength; i++) {\n        lineStartValues[i] = this._lines[i].length + eolLength;\n      }\n      this._lineStarts = new PrefixSumComputer(lineStartValues);\n    }\n  };\n  /**\r\n   * All changes to a line's text go through this method\r\n   */\n  MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n    this._lines[lineIndex] = newValue;\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n    }\n  };\n  MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n    if (range.startLineNumber === range.endLineNumber) {\n      if (range.startColumn === range.endColumn) {\n        // Nothing to delete\n        return;\n      }\n      // Delete text on the affected line\n      this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n      return;\n    }\n    // Take remaining text on last line and append it to remaining text on first line\n    this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n    // Delete middle lines\n    this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n  };\n  MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n    if (insertText.length === 0) {\n      // Nothing to insert\n      return;\n    }\n    var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n    if (insertLines.length === 1) {\n      // Inserting text on one line\n      this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0] + this._lines[position.lineNumber - 1].substring(position.column - 1));\n      return;\n    }\n    // Append overflowing text from first line to the end of text to insert\n    insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n    // Delete overflowing text from first line and insert text on first line\n    this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0]);\n    // Insert new lines & store lengths\n    var newLengths = new Uint32Array(insertLines.length - 1);\n    for (var i = 1; i < insertLines.length; i++) {\n      this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n      newLengths[i - 1] = insertLines[i].length + this._eol.length;\n    }\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.insertValues(position.lineNumber, newLengths);\n    }\n  };\n  return MirrorTextModel;\n}();\nexport { MirrorTextModel };","map":{"version":3,"names":["Position","PrefixSumComputer","MirrorTextModel","uri","lines","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","prototype","dispose","length","getText","join","onEvents","e","changes","_i","changes_1","change","_acceptDeleteRange","range","_acceptInsertText","startLineNumber","startColumn","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","Uint32Array","i","_setLineText","lineIndex","newValue","changeValue","endLineNumber","endColumn","substring","splice","removeValues","position","insertText","insertLines","split","lineNumber","column","newLengths","insertValues"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from '../core/position.js';\r\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\r\nvar MirrorTextModel = /** @class */ (function () {\r\n    function MirrorTextModel(uri, lines, eol, versionId) {\r\n        this._uri = uri;\r\n        this._lines = lines;\r\n        this._eol = eol;\r\n        this._versionId = versionId;\r\n        this._lineStarts = null;\r\n    }\r\n    MirrorTextModel.prototype.dispose = function () {\r\n        this._lines.length = 0;\r\n    };\r\n    MirrorTextModel.prototype.getText = function () {\r\n        return this._lines.join(this._eol);\r\n    };\r\n    MirrorTextModel.prototype.onEvents = function (e) {\r\n        if (e.eol && e.eol !== this._eol) {\r\n            this._eol = e.eol;\r\n            this._lineStarts = null;\r\n        }\r\n        // Update my lines\r\n        var changes = e.changes;\r\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\r\n            var change = changes_1[_i];\r\n            this._acceptDeleteRange(change.range);\r\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\r\n        }\r\n        this._versionId = e.versionId;\r\n    };\r\n    MirrorTextModel.prototype._ensureLineStarts = function () {\r\n        if (!this._lineStarts) {\r\n            var eolLength = this._eol.length;\r\n            var linesLength = this._lines.length;\r\n            var lineStartValues = new Uint32Array(linesLength);\r\n            for (var i = 0; i < linesLength; i++) {\r\n                lineStartValues[i] = this._lines[i].length + eolLength;\r\n            }\r\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\r\n        }\r\n    };\r\n    /**\r\n     * All changes to a line's text go through this method\r\n     */\r\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\r\n        this._lines[lineIndex] = newValue;\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            if (range.startColumn === range.endColumn) {\r\n                // Nothing to delete\r\n                return;\r\n            }\r\n            // Delete text on the affected line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n            return;\r\n        }\r\n        // Take remaining text on last line and append it to remaining text on first line\r\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n        // Delete middle lines\r\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\r\n        if (insertText.length === 0) {\r\n            // Nothing to insert\r\n            return;\r\n        }\r\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\r\n        if (insertLines.length === 1) {\r\n            // Inserting text on one line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]\r\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n            return;\r\n        }\r\n        // Append overflowing text from first line to the end of text to insert\r\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n        // Delete overflowing text from first line and insert text on first line\r\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n            + insertLines[0]);\r\n        // Insert new lines & store lengths\r\n        var newLengths = new Uint32Array(insertLines.length - 1);\r\n        for (var i = 1; i < insertLines.length; i++) {\r\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n        }\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n        }\r\n    };\r\n    return MirrorTextModel;\r\n}());\r\nexport { MirrorTextModel };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}