{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CursorState } from './cursorCommon.js';\nimport { OneCursor } from './oneCursor.js';\nimport { Selection } from '../core/selection.js';\nvar CursorCollection = /** @class */function () {\n  function CursorCollection(context) {\n    this.context = context;\n    this.primaryCursor = new OneCursor(context);\n    this.secondaryCursors = [];\n    this.lastAddedCursorIndex = 0;\n  }\n  CursorCollection.prototype.dispose = function () {\n    this.primaryCursor.dispose(this.context);\n    this.killSecondaryCursors();\n  };\n  CursorCollection.prototype.startTrackingSelections = function () {\n    this.primaryCursor.startTrackingSelection(this.context);\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      this.secondaryCursors[i].startTrackingSelection(this.context);\n    }\n  };\n  CursorCollection.prototype.stopTrackingSelections = function () {\n    this.primaryCursor.stopTrackingSelection(this.context);\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      this.secondaryCursors[i].stopTrackingSelection(this.context);\n    }\n  };\n  CursorCollection.prototype.updateContext = function (context) {\n    this.context = context;\n  };\n  CursorCollection.prototype.ensureValidState = function () {\n    this.primaryCursor.ensureValidState(this.context);\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      this.secondaryCursors[i].ensureValidState(this.context);\n    }\n  };\n  CursorCollection.prototype.readSelectionFromMarkers = function () {\n    var result = [];\n    result[0] = this.primaryCursor.readSelectionFromMarkers(this.context);\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].readSelectionFromMarkers(this.context);\n    }\n    return result;\n  };\n  CursorCollection.prototype.getAll = function () {\n    var result = [];\n    result[0] = this.primaryCursor.asCursorState();\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].asCursorState();\n    }\n    return result;\n  };\n  CursorCollection.prototype.getViewPositions = function () {\n    var result = [];\n    result[0] = this.primaryCursor.viewState.position;\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].viewState.position;\n    }\n    return result;\n  };\n  CursorCollection.prototype.getSelections = function () {\n    var result = [];\n    result[0] = this.primaryCursor.modelState.selection;\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].modelState.selection;\n    }\n    return result;\n  };\n  CursorCollection.prototype.getViewSelections = function () {\n    var result = [];\n    result[0] = this.primaryCursor.viewState.selection;\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].viewState.selection;\n    }\n    return result;\n  };\n  CursorCollection.prototype.setSelections = function (selections) {\n    this.setStates(CursorState.fromModelSelections(selections));\n  };\n  CursorCollection.prototype.getPrimaryCursor = function () {\n    return this.primaryCursor.asCursorState();\n  };\n  CursorCollection.prototype.setStates = function (states) {\n    if (states === null) {\n      return;\n    }\n    this.primaryCursor.setState(this.context, states[0].modelState, states[0].viewState);\n    this._setSecondaryStates(states.slice(1));\n  };\n  /**\r\n   * Creates or disposes secondary cursors as necessary to match the number of `secondarySelections`.\r\n   */\n  CursorCollection.prototype._setSecondaryStates = function (secondaryStates) {\n    var secondaryCursorsLength = this.secondaryCursors.length;\n    var secondaryStatesLength = secondaryStates.length;\n    if (secondaryCursorsLength < secondaryStatesLength) {\n      var createCnt = secondaryStatesLength - secondaryCursorsLength;\n      for (var i = 0; i < createCnt; i++) {\n        this._addSecondaryCursor();\n      }\n    } else if (secondaryCursorsLength > secondaryStatesLength) {\n      var removeCnt = secondaryCursorsLength - secondaryStatesLength;\n      for (var i = 0; i < removeCnt; i++) {\n        this._removeSecondaryCursor(this.secondaryCursors.length - 1);\n      }\n    }\n    for (var i = 0; i < secondaryStatesLength; i++) {\n      this.secondaryCursors[i].setState(this.context, secondaryStates[i].modelState, secondaryStates[i].viewState);\n    }\n  };\n  CursorCollection.prototype.killSecondaryCursors = function () {\n    this._setSecondaryStates([]);\n  };\n  CursorCollection.prototype._addSecondaryCursor = function () {\n    this.secondaryCursors.push(new OneCursor(this.context));\n    this.lastAddedCursorIndex = this.secondaryCursors.length;\n  };\n  CursorCollection.prototype.getLastAddedCursorIndex = function () {\n    if (this.secondaryCursors.length === 0 || this.lastAddedCursorIndex === 0) {\n      return 0;\n    }\n    return this.lastAddedCursorIndex;\n  };\n  CursorCollection.prototype._removeSecondaryCursor = function (removeIndex) {\n    if (this.lastAddedCursorIndex >= removeIndex + 1) {\n      this.lastAddedCursorIndex--;\n    }\n    this.secondaryCursors[removeIndex].dispose(this.context);\n    this.secondaryCursors.splice(removeIndex, 1);\n  };\n  CursorCollection.prototype._getAll = function () {\n    var result = [];\n    result[0] = this.primaryCursor;\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i];\n    }\n    return result;\n  };\n  CursorCollection.prototype.normalize = function () {\n    if (this.secondaryCursors.length === 0) {\n      return;\n    }\n    var cursors = this._getAll();\n    var sortedCursors = [];\n    for (var i = 0, len = cursors.length; i < len; i++) {\n      sortedCursors.push({\n        index: i,\n        selection: cursors[i].modelState.selection\n      });\n    }\n    sortedCursors.sort(function (a, b) {\n      if (a.selection.startLineNumber === b.selection.startLineNumber) {\n        return a.selection.startColumn - b.selection.startColumn;\n      }\n      return a.selection.startLineNumber - b.selection.startLineNumber;\n    });\n    for (var sortedCursorIndex = 0; sortedCursorIndex < sortedCursors.length - 1; sortedCursorIndex++) {\n      var current = sortedCursors[sortedCursorIndex];\n      var next = sortedCursors[sortedCursorIndex + 1];\n      var currentSelection = current.selection;\n      var nextSelection = next.selection;\n      if (!this.context.config.multiCursorMergeOverlapping) {\n        continue;\n      }\n      var shouldMergeCursors = void 0;\n      if (nextSelection.isEmpty() || currentSelection.isEmpty()) {\n        // Merge touching cursors if one of them is collapsed\n        shouldMergeCursors = nextSelection.getStartPosition().isBeforeOrEqual(currentSelection.getEndPosition());\n      } else {\n        // Merge only overlapping cursors (i.e. allow touching ranges)\n        shouldMergeCursors = nextSelection.getStartPosition().isBefore(currentSelection.getEndPosition());\n      }\n      if (shouldMergeCursors) {\n        var winnerSortedCursorIndex = current.index < next.index ? sortedCursorIndex : sortedCursorIndex + 1;\n        var looserSortedCursorIndex = current.index < next.index ? sortedCursorIndex + 1 : sortedCursorIndex;\n        var looserIndex = sortedCursors[looserSortedCursorIndex].index;\n        var winnerIndex = sortedCursors[winnerSortedCursorIndex].index;\n        var looserSelection = sortedCursors[looserSortedCursorIndex].selection;\n        var winnerSelection = sortedCursors[winnerSortedCursorIndex].selection;\n        if (!looserSelection.equalsSelection(winnerSelection)) {\n          var resultingRange = looserSelection.plusRange(winnerSelection);\n          var looserSelectionIsLTR = looserSelection.selectionStartLineNumber === looserSelection.startLineNumber && looserSelection.selectionStartColumn === looserSelection.startColumn;\n          var winnerSelectionIsLTR = winnerSelection.selectionStartLineNumber === winnerSelection.startLineNumber && winnerSelection.selectionStartColumn === winnerSelection.startColumn;\n          // Give more importance to the last added cursor (think Ctrl-dragging + hitting another cursor)\n          var resultingSelectionIsLTR = void 0;\n          if (looserIndex === this.lastAddedCursorIndex) {\n            resultingSelectionIsLTR = looserSelectionIsLTR;\n            this.lastAddedCursorIndex = winnerIndex;\n          } else {\n            // Winner takes it all\n            resultingSelectionIsLTR = winnerSelectionIsLTR;\n          }\n          var resultingSelection = void 0;\n          if (resultingSelectionIsLTR) {\n            resultingSelection = new Selection(resultingRange.startLineNumber, resultingRange.startColumn, resultingRange.endLineNumber, resultingRange.endColumn);\n          } else {\n            resultingSelection = new Selection(resultingRange.endLineNumber, resultingRange.endColumn, resultingRange.startLineNumber, resultingRange.startColumn);\n          }\n          sortedCursors[winnerSortedCursorIndex].selection = resultingSelection;\n          var resultingState = CursorState.fromModelSelection(resultingSelection);\n          cursors[winnerIndex].setState(this.context, resultingState.modelState, resultingState.viewState);\n        }\n        for (var _i = 0, sortedCursors_1 = sortedCursors; _i < sortedCursors_1.length; _i++) {\n          var sortedCursor = sortedCursors_1[_i];\n          if (sortedCursor.index > looserIndex) {\n            sortedCursor.index--;\n          }\n        }\n        cursors.splice(looserIndex, 1);\n        sortedCursors.splice(looserSortedCursorIndex, 1);\n        this._removeSecondaryCursor(looserIndex - 1);\n        sortedCursorIndex--;\n      }\n    }\n  };\n  return CursorCollection;\n}();\nexport { CursorCollection };","map":{"version":3,"names":["CursorState","OneCursor","Selection","CursorCollection","context","primaryCursor","secondaryCursors","lastAddedCursorIndex","prototype","dispose","killSecondaryCursors","startTrackingSelections","startTrackingSelection","i","len","length","stopTrackingSelections","stopTrackingSelection","updateContext","ensureValidState","readSelectionFromMarkers","result","getAll","asCursorState","getViewPositions","viewState","position","getSelections","modelState","selection","getViewSelections","setSelections","selections","setStates","fromModelSelections","getPrimaryCursor","states","setState","_setSecondaryStates","slice","secondaryStates","secondaryCursorsLength","secondaryStatesLength","createCnt","_addSecondaryCursor","removeCnt","_removeSecondaryCursor","push","getLastAddedCursorIndex","removeIndex","splice","_getAll","normalize","cursors","sortedCursors","index","sort","a","b","startLineNumber","startColumn","sortedCursorIndex","current","next","currentSelection","nextSelection","config","multiCursorMergeOverlapping","shouldMergeCursors","isEmpty","getStartPosition","isBeforeOrEqual","getEndPosition","isBefore","winnerSortedCursorIndex","looserSortedCursorIndex","looserIndex","winnerIndex","looserSelection","winnerSelection","equalsSelection","resultingRange","plusRange","looserSelectionIsLTR","selectionStartLineNumber","selectionStartColumn","winnerSelectionIsLTR","resultingSelectionIsLTR","resultingSelection","endLineNumber","endColumn","resultingState","fromModelSelection","_i","sortedCursors_1","sortedCursor"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/controller/cursorCollection.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CursorState } from './cursorCommon.js';\r\nimport { OneCursor } from './oneCursor.js';\r\nimport { Selection } from '../core/selection.js';\r\nvar CursorCollection = /** @class */ (function () {\r\n    function CursorCollection(context) {\r\n        this.context = context;\r\n        this.primaryCursor = new OneCursor(context);\r\n        this.secondaryCursors = [];\r\n        this.lastAddedCursorIndex = 0;\r\n    }\r\n    CursorCollection.prototype.dispose = function () {\r\n        this.primaryCursor.dispose(this.context);\r\n        this.killSecondaryCursors();\r\n    };\r\n    CursorCollection.prototype.startTrackingSelections = function () {\r\n        this.primaryCursor.startTrackingSelection(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            this.secondaryCursors[i].startTrackingSelection(this.context);\r\n        }\r\n    };\r\n    CursorCollection.prototype.stopTrackingSelections = function () {\r\n        this.primaryCursor.stopTrackingSelection(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            this.secondaryCursors[i].stopTrackingSelection(this.context);\r\n        }\r\n    };\r\n    CursorCollection.prototype.updateContext = function (context) {\r\n        this.context = context;\r\n    };\r\n    CursorCollection.prototype.ensureValidState = function () {\r\n        this.primaryCursor.ensureValidState(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            this.secondaryCursors[i].ensureValidState(this.context);\r\n        }\r\n    };\r\n    CursorCollection.prototype.readSelectionFromMarkers = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.readSelectionFromMarkers(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].readSelectionFromMarkers(this.context);\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getAll = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.asCursorState();\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].asCursorState();\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getViewPositions = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.viewState.position;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].viewState.position;\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getSelections = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.modelState.selection;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].modelState.selection;\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getViewSelections = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.viewState.selection;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].viewState.selection;\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.setSelections = function (selections) {\r\n        this.setStates(CursorState.fromModelSelections(selections));\r\n    };\r\n    CursorCollection.prototype.getPrimaryCursor = function () {\r\n        return this.primaryCursor.asCursorState();\r\n    };\r\n    CursorCollection.prototype.setStates = function (states) {\r\n        if (states === null) {\r\n            return;\r\n        }\r\n        this.primaryCursor.setState(this.context, states[0].modelState, states[0].viewState);\r\n        this._setSecondaryStates(states.slice(1));\r\n    };\r\n    /**\r\n     * Creates or disposes secondary cursors as necessary to match the number of `secondarySelections`.\r\n     */\r\n    CursorCollection.prototype._setSecondaryStates = function (secondaryStates) {\r\n        var secondaryCursorsLength = this.secondaryCursors.length;\r\n        var secondaryStatesLength = secondaryStates.length;\r\n        if (secondaryCursorsLength < secondaryStatesLength) {\r\n            var createCnt = secondaryStatesLength - secondaryCursorsLength;\r\n            for (var i = 0; i < createCnt; i++) {\r\n                this._addSecondaryCursor();\r\n            }\r\n        }\r\n        else if (secondaryCursorsLength > secondaryStatesLength) {\r\n            var removeCnt = secondaryCursorsLength - secondaryStatesLength;\r\n            for (var i = 0; i < removeCnt; i++) {\r\n                this._removeSecondaryCursor(this.secondaryCursors.length - 1);\r\n            }\r\n        }\r\n        for (var i = 0; i < secondaryStatesLength; i++) {\r\n            this.secondaryCursors[i].setState(this.context, secondaryStates[i].modelState, secondaryStates[i].viewState);\r\n        }\r\n    };\r\n    CursorCollection.prototype.killSecondaryCursors = function () {\r\n        this._setSecondaryStates([]);\r\n    };\r\n    CursorCollection.prototype._addSecondaryCursor = function () {\r\n        this.secondaryCursors.push(new OneCursor(this.context));\r\n        this.lastAddedCursorIndex = this.secondaryCursors.length;\r\n    };\r\n    CursorCollection.prototype.getLastAddedCursorIndex = function () {\r\n        if (this.secondaryCursors.length === 0 || this.lastAddedCursorIndex === 0) {\r\n            return 0;\r\n        }\r\n        return this.lastAddedCursorIndex;\r\n    };\r\n    CursorCollection.prototype._removeSecondaryCursor = function (removeIndex) {\r\n        if (this.lastAddedCursorIndex >= removeIndex + 1) {\r\n            this.lastAddedCursorIndex--;\r\n        }\r\n        this.secondaryCursors[removeIndex].dispose(this.context);\r\n        this.secondaryCursors.splice(removeIndex, 1);\r\n    };\r\n    CursorCollection.prototype._getAll = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i];\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.normalize = function () {\r\n        if (this.secondaryCursors.length === 0) {\r\n            return;\r\n        }\r\n        var cursors = this._getAll();\r\n        var sortedCursors = [];\r\n        for (var i = 0, len = cursors.length; i < len; i++) {\r\n            sortedCursors.push({\r\n                index: i,\r\n                selection: cursors[i].modelState.selection,\r\n            });\r\n        }\r\n        sortedCursors.sort(function (a, b) {\r\n            if (a.selection.startLineNumber === b.selection.startLineNumber) {\r\n                return a.selection.startColumn - b.selection.startColumn;\r\n            }\r\n            return a.selection.startLineNumber - b.selection.startLineNumber;\r\n        });\r\n        for (var sortedCursorIndex = 0; sortedCursorIndex < sortedCursors.length - 1; sortedCursorIndex++) {\r\n            var current = sortedCursors[sortedCursorIndex];\r\n            var next = sortedCursors[sortedCursorIndex + 1];\r\n            var currentSelection = current.selection;\r\n            var nextSelection = next.selection;\r\n            if (!this.context.config.multiCursorMergeOverlapping) {\r\n                continue;\r\n            }\r\n            var shouldMergeCursors = void 0;\r\n            if (nextSelection.isEmpty() || currentSelection.isEmpty()) {\r\n                // Merge touching cursors if one of them is collapsed\r\n                shouldMergeCursors = nextSelection.getStartPosition().isBeforeOrEqual(currentSelection.getEndPosition());\r\n            }\r\n            else {\r\n                // Merge only overlapping cursors (i.e. allow touching ranges)\r\n                shouldMergeCursors = nextSelection.getStartPosition().isBefore(currentSelection.getEndPosition());\r\n            }\r\n            if (shouldMergeCursors) {\r\n                var winnerSortedCursorIndex = current.index < next.index ? sortedCursorIndex : sortedCursorIndex + 1;\r\n                var looserSortedCursorIndex = current.index < next.index ? sortedCursorIndex + 1 : sortedCursorIndex;\r\n                var looserIndex = sortedCursors[looserSortedCursorIndex].index;\r\n                var winnerIndex = sortedCursors[winnerSortedCursorIndex].index;\r\n                var looserSelection = sortedCursors[looserSortedCursorIndex].selection;\r\n                var winnerSelection = sortedCursors[winnerSortedCursorIndex].selection;\r\n                if (!looserSelection.equalsSelection(winnerSelection)) {\r\n                    var resultingRange = looserSelection.plusRange(winnerSelection);\r\n                    var looserSelectionIsLTR = (looserSelection.selectionStartLineNumber === looserSelection.startLineNumber && looserSelection.selectionStartColumn === looserSelection.startColumn);\r\n                    var winnerSelectionIsLTR = (winnerSelection.selectionStartLineNumber === winnerSelection.startLineNumber && winnerSelection.selectionStartColumn === winnerSelection.startColumn);\r\n                    // Give more importance to the last added cursor (think Ctrl-dragging + hitting another cursor)\r\n                    var resultingSelectionIsLTR = void 0;\r\n                    if (looserIndex === this.lastAddedCursorIndex) {\r\n                        resultingSelectionIsLTR = looserSelectionIsLTR;\r\n                        this.lastAddedCursorIndex = winnerIndex;\r\n                    }\r\n                    else {\r\n                        // Winner takes it all\r\n                        resultingSelectionIsLTR = winnerSelectionIsLTR;\r\n                    }\r\n                    var resultingSelection = void 0;\r\n                    if (resultingSelectionIsLTR) {\r\n                        resultingSelection = new Selection(resultingRange.startLineNumber, resultingRange.startColumn, resultingRange.endLineNumber, resultingRange.endColumn);\r\n                    }\r\n                    else {\r\n                        resultingSelection = new Selection(resultingRange.endLineNumber, resultingRange.endColumn, resultingRange.startLineNumber, resultingRange.startColumn);\r\n                    }\r\n                    sortedCursors[winnerSortedCursorIndex].selection = resultingSelection;\r\n                    var resultingState = CursorState.fromModelSelection(resultingSelection);\r\n                    cursors[winnerIndex].setState(this.context, resultingState.modelState, resultingState.viewState);\r\n                }\r\n                for (var _i = 0, sortedCursors_1 = sortedCursors; _i < sortedCursors_1.length; _i++) {\r\n                    var sortedCursor = sortedCursors_1[_i];\r\n                    if (sortedCursor.index > looserIndex) {\r\n                        sortedCursor.index--;\r\n                    }\r\n                }\r\n                cursors.splice(looserIndex, 1);\r\n                sortedCursors.splice(looserSortedCursorIndex, 1);\r\n                this._removeSecondaryCursor(looserIndex - 1);\r\n                sortedCursorIndex--;\r\n            }\r\n        }\r\n    };\r\n    return CursorCollection;\r\n}());\r\nexport { CursorCollection };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,SAAS,QAAQ,sBAAsB;AAChD,IAAIC,gBAAgB,GAAG,aAAe,YAAY;EAC9C,SAASA,gBAAgB,CAACC,OAAO,EAAE;IAC/B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,aAAa,GAAG,IAAIJ,SAAS,CAACG,OAAO,CAAC;IAC3C,IAAI,CAACE,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACC,oBAAoB,GAAG,CAAC;EACjC;EACAJ,gBAAgB,CAACK,SAAS,CAACC,OAAO,GAAG,YAAY;IAC7C,IAAI,CAACJ,aAAa,CAACI,OAAO,CAAC,IAAI,CAACL,OAAO,CAAC;IACxC,IAAI,CAACM,oBAAoB,EAAE;EAC/B,CAAC;EACDP,gBAAgB,CAACK,SAAS,CAACG,uBAAuB,GAAG,YAAY;IAC7D,IAAI,CAACN,aAAa,CAACO,sBAAsB,CAAC,IAAI,CAACR,OAAO,CAAC;IACvD,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9D,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACD,sBAAsB,CAAC,IAAI,CAACR,OAAO,CAAC;IACjE;EACJ,CAAC;EACDD,gBAAgB,CAACK,SAAS,CAACQ,sBAAsB,GAAG,YAAY;IAC5D,IAAI,CAACX,aAAa,CAACY,qBAAqB,CAAC,IAAI,CAACb,OAAO,CAAC;IACtD,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9D,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACI,qBAAqB,CAAC,IAAI,CAACb,OAAO,CAAC;IAChE;EACJ,CAAC;EACDD,gBAAgB,CAACK,SAAS,CAACU,aAAa,GAAG,UAAUd,OAAO,EAAE;IAC1D,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B,CAAC;EACDD,gBAAgB,CAACK,SAAS,CAACW,gBAAgB,GAAG,YAAY;IACtD,IAAI,CAACd,aAAa,CAACc,gBAAgB,CAAC,IAAI,CAACf,OAAO,CAAC;IACjD,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9D,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACM,gBAAgB,CAAC,IAAI,CAACf,OAAO,CAAC;IAC3D;EACJ,CAAC;EACDD,gBAAgB,CAACK,SAAS,CAACY,wBAAwB,GAAG,YAAY;IAC9D,IAAIC,MAAM,GAAG,EAAE;IACfA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,aAAa,CAACe,wBAAwB,CAAC,IAAI,CAAChB,OAAO,CAAC;IACrE,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9DQ,MAAM,CAACR,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACO,wBAAwB,CAAC,IAAI,CAAChB,OAAO,CAAC;IACnF;IACA,OAAOiB,MAAM;EACjB,CAAC;EACDlB,gBAAgB,CAACK,SAAS,CAACc,MAAM,GAAG,YAAY;IAC5C,IAAID,MAAM,GAAG,EAAE;IACfA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,aAAa,CAACkB,aAAa,EAAE;IAC9C,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9DQ,MAAM,CAACR,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACU,aAAa,EAAE;IAC5D;IACA,OAAOF,MAAM;EACjB,CAAC;EACDlB,gBAAgB,CAACK,SAAS,CAACgB,gBAAgB,GAAG,YAAY;IACtD,IAAIH,MAAM,GAAG,EAAE;IACfA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,aAAa,CAACoB,SAAS,CAACC,QAAQ;IACjD,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9DQ,MAAM,CAACR,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACY,SAAS,CAACC,QAAQ;IAC/D;IACA,OAAOL,MAAM;EACjB,CAAC;EACDlB,gBAAgB,CAACK,SAAS,CAACmB,aAAa,GAAG,YAAY;IACnD,IAAIN,MAAM,GAAG,EAAE;IACfA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,aAAa,CAACuB,UAAU,CAACC,SAAS;IACnD,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9DQ,MAAM,CAACR,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACe,UAAU,CAACC,SAAS;IACjE;IACA,OAAOR,MAAM;EACjB,CAAC;EACDlB,gBAAgB,CAACK,SAAS,CAACsB,iBAAiB,GAAG,YAAY;IACvD,IAAIT,MAAM,GAAG,EAAE;IACfA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,aAAa,CAACoB,SAAS,CAACI,SAAS;IAClD,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9DQ,MAAM,CAACR,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACY,SAAS,CAACI,SAAS;IAChE;IACA,OAAOR,MAAM;EACjB,CAAC;EACDlB,gBAAgB,CAACK,SAAS,CAACuB,aAAa,GAAG,UAAUC,UAAU,EAAE;IAC7D,IAAI,CAACC,SAAS,CAACjC,WAAW,CAACkC,mBAAmB,CAACF,UAAU,CAAC,CAAC;EAC/D,CAAC;EACD7B,gBAAgB,CAACK,SAAS,CAAC2B,gBAAgB,GAAG,YAAY;IACtD,OAAO,IAAI,CAAC9B,aAAa,CAACkB,aAAa,EAAE;EAC7C,CAAC;EACDpB,gBAAgB,CAACK,SAAS,CAACyB,SAAS,GAAG,UAAUG,MAAM,EAAE;IACrD,IAAIA,MAAM,KAAK,IAAI,EAAE;MACjB;IACJ;IACA,IAAI,CAAC/B,aAAa,CAACgC,QAAQ,CAAC,IAAI,CAACjC,OAAO,EAAEgC,MAAM,CAAC,CAAC,CAAC,CAACR,UAAU,EAAEQ,MAAM,CAAC,CAAC,CAAC,CAACX,SAAS,CAAC;IACpF,IAAI,CAACa,mBAAmB,CAACF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC;EACD;AACJ;AACA;EACIpC,gBAAgB,CAACK,SAAS,CAAC8B,mBAAmB,GAAG,UAAUE,eAAe,EAAE;IACxE,IAAIC,sBAAsB,GAAG,IAAI,CAACnC,gBAAgB,CAACS,MAAM;IACzD,IAAI2B,qBAAqB,GAAGF,eAAe,CAACzB,MAAM;IAClD,IAAI0B,sBAAsB,GAAGC,qBAAqB,EAAE;MAChD,IAAIC,SAAS,GAAGD,qBAAqB,GAAGD,sBAAsB;MAC9D,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,SAAS,EAAE9B,CAAC,EAAE,EAAE;QAChC,IAAI,CAAC+B,mBAAmB,EAAE;MAC9B;IACJ,CAAC,MACI,IAAIH,sBAAsB,GAAGC,qBAAqB,EAAE;MACrD,IAAIG,SAAS,GAAGJ,sBAAsB,GAAGC,qBAAqB;MAC9D,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,SAAS,EAAEhC,CAAC,EAAE,EAAE;QAChC,IAAI,CAACiC,sBAAsB,CAAC,IAAI,CAACxC,gBAAgB,CAACS,MAAM,GAAG,CAAC,CAAC;MACjE;IACJ;IACA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6B,qBAAqB,EAAE7B,CAAC,EAAE,EAAE;MAC5C,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC,CAACwB,QAAQ,CAAC,IAAI,CAACjC,OAAO,EAAEoC,eAAe,CAAC3B,CAAC,CAAC,CAACe,UAAU,EAAEY,eAAe,CAAC3B,CAAC,CAAC,CAACY,SAAS,CAAC;IAChH;EACJ,CAAC;EACDtB,gBAAgB,CAACK,SAAS,CAACE,oBAAoB,GAAG,YAAY;IAC1D,IAAI,CAAC4B,mBAAmB,CAAC,EAAE,CAAC;EAChC,CAAC;EACDnC,gBAAgB,CAACK,SAAS,CAACoC,mBAAmB,GAAG,YAAY;IACzD,IAAI,CAACtC,gBAAgB,CAACyC,IAAI,CAAC,IAAI9C,SAAS,CAAC,IAAI,CAACG,OAAO,CAAC,CAAC;IACvD,IAAI,CAACG,oBAAoB,GAAG,IAAI,CAACD,gBAAgB,CAACS,MAAM;EAC5D,CAAC;EACDZ,gBAAgB,CAACK,SAAS,CAACwC,uBAAuB,GAAG,YAAY;IAC7D,IAAI,IAAI,CAAC1C,gBAAgB,CAACS,MAAM,KAAK,CAAC,IAAI,IAAI,CAACR,oBAAoB,KAAK,CAAC,EAAE;MACvE,OAAO,CAAC;IACZ;IACA,OAAO,IAAI,CAACA,oBAAoB;EACpC,CAAC;EACDJ,gBAAgB,CAACK,SAAS,CAACsC,sBAAsB,GAAG,UAAUG,WAAW,EAAE;IACvE,IAAI,IAAI,CAAC1C,oBAAoB,IAAI0C,WAAW,GAAG,CAAC,EAAE;MAC9C,IAAI,CAAC1C,oBAAoB,EAAE;IAC/B;IACA,IAAI,CAACD,gBAAgB,CAAC2C,WAAW,CAAC,CAACxC,OAAO,CAAC,IAAI,CAACL,OAAO,CAAC;IACxD,IAAI,CAACE,gBAAgB,CAAC4C,MAAM,CAACD,WAAW,EAAE,CAAC,CAAC;EAChD,CAAC;EACD9C,gBAAgB,CAACK,SAAS,CAAC2C,OAAO,GAAG,YAAY;IAC7C,IAAI9B,MAAM,GAAG,EAAE;IACfA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,aAAa;IAC9B,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACR,gBAAgB,CAACS,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9DQ,MAAM,CAACR,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC;IAC5C;IACA,OAAOQ,MAAM;EACjB,CAAC;EACDlB,gBAAgB,CAACK,SAAS,CAAC4C,SAAS,GAAG,YAAY;IAC/C,IAAI,IAAI,CAAC9C,gBAAgB,CAACS,MAAM,KAAK,CAAC,EAAE;MACpC;IACJ;IACA,IAAIsC,OAAO,GAAG,IAAI,CAACF,OAAO,EAAE;IAC5B,IAAIG,aAAa,GAAG,EAAE;IACtB,KAAK,IAAIzC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGuC,OAAO,CAACtC,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAChDyC,aAAa,CAACP,IAAI,CAAC;QACfQ,KAAK,EAAE1C,CAAC;QACRgB,SAAS,EAAEwB,OAAO,CAACxC,CAAC,CAAC,CAACe,UAAU,CAACC;MACrC,CAAC,CAAC;IACN;IACAyB,aAAa,CAACE,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAC/B,IAAID,CAAC,CAAC5B,SAAS,CAAC8B,eAAe,KAAKD,CAAC,CAAC7B,SAAS,CAAC8B,eAAe,EAAE;QAC7D,OAAOF,CAAC,CAAC5B,SAAS,CAAC+B,WAAW,GAAGF,CAAC,CAAC7B,SAAS,CAAC+B,WAAW;MAC5D;MACA,OAAOH,CAAC,CAAC5B,SAAS,CAAC8B,eAAe,GAAGD,CAAC,CAAC7B,SAAS,CAAC8B,eAAe;IACpE,CAAC,CAAC;IACF,KAAK,IAAIE,iBAAiB,GAAG,CAAC,EAAEA,iBAAiB,GAAGP,aAAa,CAACvC,MAAM,GAAG,CAAC,EAAE8C,iBAAiB,EAAE,EAAE;MAC/F,IAAIC,OAAO,GAAGR,aAAa,CAACO,iBAAiB,CAAC;MAC9C,IAAIE,IAAI,GAAGT,aAAa,CAACO,iBAAiB,GAAG,CAAC,CAAC;MAC/C,IAAIG,gBAAgB,GAAGF,OAAO,CAACjC,SAAS;MACxC,IAAIoC,aAAa,GAAGF,IAAI,CAAClC,SAAS;MAClC,IAAI,CAAC,IAAI,CAACzB,OAAO,CAAC8D,MAAM,CAACC,2BAA2B,EAAE;QAClD;MACJ;MACA,IAAIC,kBAAkB,GAAG,KAAK,CAAC;MAC/B,IAAIH,aAAa,CAACI,OAAO,EAAE,IAAIL,gBAAgB,CAACK,OAAO,EAAE,EAAE;QACvD;QACAD,kBAAkB,GAAGH,aAAa,CAACK,gBAAgB,EAAE,CAACC,eAAe,CAACP,gBAAgB,CAACQ,cAAc,EAAE,CAAC;MAC5G,CAAC,MACI;QACD;QACAJ,kBAAkB,GAAGH,aAAa,CAACK,gBAAgB,EAAE,CAACG,QAAQ,CAACT,gBAAgB,CAACQ,cAAc,EAAE,CAAC;MACrG;MACA,IAAIJ,kBAAkB,EAAE;QACpB,IAAIM,uBAAuB,GAAGZ,OAAO,CAACP,KAAK,GAAGQ,IAAI,CAACR,KAAK,GAAGM,iBAAiB,GAAGA,iBAAiB,GAAG,CAAC;QACpG,IAAIc,uBAAuB,GAAGb,OAAO,CAACP,KAAK,GAAGQ,IAAI,CAACR,KAAK,GAAGM,iBAAiB,GAAG,CAAC,GAAGA,iBAAiB;QACpG,IAAIe,WAAW,GAAGtB,aAAa,CAACqB,uBAAuB,CAAC,CAACpB,KAAK;QAC9D,IAAIsB,WAAW,GAAGvB,aAAa,CAACoB,uBAAuB,CAAC,CAACnB,KAAK;QAC9D,IAAIuB,eAAe,GAAGxB,aAAa,CAACqB,uBAAuB,CAAC,CAAC9C,SAAS;QACtE,IAAIkD,eAAe,GAAGzB,aAAa,CAACoB,uBAAuB,CAAC,CAAC7C,SAAS;QACtE,IAAI,CAACiD,eAAe,CAACE,eAAe,CAACD,eAAe,CAAC,EAAE;UACnD,IAAIE,cAAc,GAAGH,eAAe,CAACI,SAAS,CAACH,eAAe,CAAC;UAC/D,IAAII,oBAAoB,GAAIL,eAAe,CAACM,wBAAwB,KAAKN,eAAe,CAACnB,eAAe,IAAImB,eAAe,CAACO,oBAAoB,KAAKP,eAAe,CAAClB,WAAY;UACjL,IAAI0B,oBAAoB,GAAIP,eAAe,CAACK,wBAAwB,KAAKL,eAAe,CAACpB,eAAe,IAAIoB,eAAe,CAACM,oBAAoB,KAAKN,eAAe,CAACnB,WAAY;UACjL;UACA,IAAI2B,uBAAuB,GAAG,KAAK,CAAC;UACpC,IAAIX,WAAW,KAAK,IAAI,CAACrE,oBAAoB,EAAE;YAC3CgF,uBAAuB,GAAGJ,oBAAoB;YAC9C,IAAI,CAAC5E,oBAAoB,GAAGsE,WAAW;UAC3C,CAAC,MACI;YACD;YACAU,uBAAuB,GAAGD,oBAAoB;UAClD;UACA,IAAIE,kBAAkB,GAAG,KAAK,CAAC;UAC/B,IAAID,uBAAuB,EAAE;YACzBC,kBAAkB,GAAG,IAAItF,SAAS,CAAC+E,cAAc,CAACtB,eAAe,EAAEsB,cAAc,CAACrB,WAAW,EAAEqB,cAAc,CAACQ,aAAa,EAAER,cAAc,CAACS,SAAS,CAAC;UAC1J,CAAC,MACI;YACDF,kBAAkB,GAAG,IAAItF,SAAS,CAAC+E,cAAc,CAACQ,aAAa,EAAER,cAAc,CAACS,SAAS,EAAET,cAAc,CAACtB,eAAe,EAAEsB,cAAc,CAACrB,WAAW,CAAC;UAC1J;UACAN,aAAa,CAACoB,uBAAuB,CAAC,CAAC7C,SAAS,GAAG2D,kBAAkB;UACrE,IAAIG,cAAc,GAAG3F,WAAW,CAAC4F,kBAAkB,CAACJ,kBAAkB,CAAC;UACvEnC,OAAO,CAACwB,WAAW,CAAC,CAACxC,QAAQ,CAAC,IAAI,CAACjC,OAAO,EAAEuF,cAAc,CAAC/D,UAAU,EAAE+D,cAAc,CAAClE,SAAS,CAAC;QACpG;QACA,KAAK,IAAIoE,EAAE,GAAG,CAAC,EAAEC,eAAe,GAAGxC,aAAa,EAAEuC,EAAE,GAAGC,eAAe,CAAC/E,MAAM,EAAE8E,EAAE,EAAE,EAAE;UACjF,IAAIE,YAAY,GAAGD,eAAe,CAACD,EAAE,CAAC;UACtC,IAAIE,YAAY,CAACxC,KAAK,GAAGqB,WAAW,EAAE;YAClCmB,YAAY,CAACxC,KAAK,EAAE;UACxB;QACJ;QACAF,OAAO,CAACH,MAAM,CAAC0B,WAAW,EAAE,CAAC,CAAC;QAC9BtB,aAAa,CAACJ,MAAM,CAACyB,uBAAuB,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC7B,sBAAsB,CAAC8B,WAAW,GAAG,CAAC,CAAC;QAC5Cf,iBAAiB,EAAE;MACvB;IACJ;EACJ,CAAC;EACD,OAAO1D,gBAAgB;AAC3B,CAAC,EAAG;AACJ,SAASA,gBAAgB"},"metadata":{},"sourceType":"module"}