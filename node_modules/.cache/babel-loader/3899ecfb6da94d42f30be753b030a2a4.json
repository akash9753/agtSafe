{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { LanguageIdentifier } from '../modes.js';\nimport { LanguageConfigurationRegistry } from './languageConfigurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\n// Define extension point ids\nexport var Extensions = {\n  ModesRegistry: 'editor.modesRegistry'\n};\nvar EditorModesRegistry = /** @class */function () {\n  function EditorModesRegistry() {\n    this._onDidChangeLanguages = new Emitter();\n    this.onDidChangeLanguages = this._onDidChangeLanguages.event;\n    this._languages = [];\n    this._dynamicLanguages = [];\n  }\n  // --- languages\n  EditorModesRegistry.prototype.registerLanguage = function (def) {\n    this._languages.push(def);\n    this._onDidChangeLanguages.fire(undefined);\n  };\n  EditorModesRegistry.prototype.getLanguages = function () {\n    return [].concat(this._languages).concat(this._dynamicLanguages);\n  };\n  return EditorModesRegistry;\n}();\nexport { EditorModesRegistry };\nexport var ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\nexport var PLAINTEXT_MODE_ID = 'plaintext';\nexport var PLAINTEXT_LANGUAGE_IDENTIFIER = new LanguageIdentifier(PLAINTEXT_MODE_ID, 1 /* PlainText */);\nModesRegistry.registerLanguage({\n  id: PLAINTEXT_MODE_ID,\n  extensions: ['.txt', '.gitignore'],\n  aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n  mimetypes: ['text/plain']\n});\nLanguageConfigurationRegistry.register(PLAINTEXT_LANGUAGE_IDENTIFIER, {\n  brackets: [['(', ')'], ['[', ']'], ['{', '}']],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\\"',\n    close: '\\\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '`',\n    close: '`'\n  }],\n  folding: {\n    offSide: true\n  }\n});","map":{"version":3,"names":["nls","Emitter","LanguageIdentifier","LanguageConfigurationRegistry","Registry","Extensions","ModesRegistry","EditorModesRegistry","_onDidChangeLanguages","onDidChangeLanguages","event","_languages","_dynamicLanguages","prototype","registerLanguage","def","push","fire","undefined","getLanguages","concat","add","PLAINTEXT_MODE_ID","PLAINTEXT_LANGUAGE_IDENTIFIER","id","extensions","aliases","localize","mimetypes","register","brackets","surroundingPairs","open","close","folding","offSide"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/modes/modesRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { LanguageIdentifier } from '../modes.js';\r\nimport { LanguageConfigurationRegistry } from './languageConfigurationRegistry.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\n// Define extension point ids\r\nexport var Extensions = {\r\n    ModesRegistry: 'editor.modesRegistry'\r\n};\r\nvar EditorModesRegistry = /** @class */ (function () {\r\n    function EditorModesRegistry() {\r\n        this._onDidChangeLanguages = new Emitter();\r\n        this.onDidChangeLanguages = this._onDidChangeLanguages.event;\r\n        this._languages = [];\r\n        this._dynamicLanguages = [];\r\n    }\r\n    // --- languages\r\n    EditorModesRegistry.prototype.registerLanguage = function (def) {\r\n        this._languages.push(def);\r\n        this._onDidChangeLanguages.fire(undefined);\r\n    };\r\n    EditorModesRegistry.prototype.getLanguages = function () {\r\n        return [].concat(this._languages).concat(this._dynamicLanguages);\r\n    };\r\n    return EditorModesRegistry;\r\n}());\r\nexport { EditorModesRegistry };\r\nexport var ModesRegistry = new EditorModesRegistry();\r\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\r\nexport var PLAINTEXT_MODE_ID = 'plaintext';\r\nexport var PLAINTEXT_LANGUAGE_IDENTIFIER = new LanguageIdentifier(PLAINTEXT_MODE_ID, 1 /* PlainText */);\r\nModesRegistry.registerLanguage({\r\n    id: PLAINTEXT_MODE_ID,\r\n    extensions: ['.txt', '.gitignore'],\r\n    aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\r\n    mimetypes: ['text/plain']\r\n});\r\nLanguageConfigurationRegistry.register(PLAINTEXT_LANGUAGE_IDENTIFIER, {\r\n    brackets: [\r\n        ['(', ')'],\r\n        ['[', ']'],\r\n        ['{', '}'],\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\\"', close: '\\\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n});\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,6BAA6B,QAAQ,oCAAoC;AAClF,SAASC,QAAQ,QAAQ,+CAA+C;AACxE;AACA,OAAO,IAAIC,UAAU,GAAG;EACpBC,aAAa,EAAE;AACnB,CAAC;AACD,IAAIC,mBAAmB,GAAG,aAAe,YAAY;EACjD,SAASA,mBAAmB,GAAG;IAC3B,IAAI,CAACC,qBAAqB,GAAG,IAAIP,OAAO,EAAE;IAC1C,IAAI,CAACQ,oBAAoB,GAAG,IAAI,CAACD,qBAAqB,CAACE,KAAK;IAC5D,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,iBAAiB,GAAG,EAAE;EAC/B;EACA;EACAL,mBAAmB,CAACM,SAAS,CAACC,gBAAgB,GAAG,UAAUC,GAAG,EAAE;IAC5D,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACD,GAAG,CAAC;IACzB,IAAI,CAACP,qBAAqB,CAACS,IAAI,CAACC,SAAS,CAAC;EAC9C,CAAC;EACDX,mBAAmB,CAACM,SAAS,CAACM,YAAY,GAAG,YAAY;IACrD,OAAO,EAAE,CAACC,MAAM,CAAC,IAAI,CAACT,UAAU,CAAC,CAACS,MAAM,CAAC,IAAI,CAACR,iBAAiB,CAAC;EACpE,CAAC;EACD,OAAOL,mBAAmB;AAC9B,CAAC,EAAG;AACJ,SAASA,mBAAmB;AAC5B,OAAO,IAAID,aAAa,GAAG,IAAIC,mBAAmB,EAAE;AACpDH,QAAQ,CAACiB,GAAG,CAAChB,UAAU,CAACC,aAAa,EAAEA,aAAa,CAAC;AACrD,OAAO,IAAIgB,iBAAiB,GAAG,WAAW;AAC1C,OAAO,IAAIC,6BAA6B,GAAG,IAAIrB,kBAAkB,CAACoB,iBAAiB,EAAE,CAAC,CAAC,gBAAgB;AACvGhB,aAAa,CAACQ,gBAAgB,CAAC;EAC3BU,EAAE,EAAEF,iBAAiB;EACrBG,UAAU,EAAE,CAAC,MAAM,EAAE,YAAY,CAAC;EAClCC,OAAO,EAAE,CAAC1B,GAAG,CAAC2B,QAAQ,CAAC,iBAAiB,EAAE,YAAY,CAAC,EAAE,MAAM,CAAC;EAChEC,SAAS,EAAE,CAAC,YAAY;AAC5B,CAAC,CAAC;AACFzB,6BAA6B,CAAC0B,QAAQ,CAACN,6BAA6B,EAAE;EAClEO,QAAQ,EAAE,CACN,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,CACb;EACDC,gBAAgB,EAAE,CACd;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EAC3B;IAAED,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EAC3B;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC5B;EACDC,OAAO,EAAE;IACLC,OAAO,EAAE;EACb;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}