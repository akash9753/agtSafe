{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nvar ReplaceCommand = /** @class */function () {\n  function ReplaceCommand(range, text, insertsAutoWhitespace) {\n    if (insertsAutoWhitespace === void 0) {\n      insertsAutoWhitespace = false;\n    }\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  ReplaceCommand.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n  ReplaceCommand.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\n  };\n  return ReplaceCommand;\n}();\nexport { ReplaceCommand };\nvar ReplaceCommandThatSelectsText = /** @class */function () {\n  function ReplaceCommandThatSelectsText(range, text) {\n    this._range = range;\n    this._text = text;\n  }\n  ReplaceCommandThatSelectsText.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n  ReplaceCommandThatSelectsText.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\n  };\n  return ReplaceCommandThatSelectsText;\n}();\nexport { ReplaceCommandThatSelectsText };\nvar ReplaceCommandWithoutChangingPosition = /** @class */function () {\n  function ReplaceCommandWithoutChangingPosition(range, text, insertsAutoWhitespace) {\n    if (insertsAutoWhitespace === void 0) {\n      insertsAutoWhitespace = false;\n    }\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  ReplaceCommandWithoutChangingPosition.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n  ReplaceCommandWithoutChangingPosition.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\n  };\n  return ReplaceCommandWithoutChangingPosition;\n}();\nexport { ReplaceCommandWithoutChangingPosition };\nvar ReplaceCommandWithOffsetCursorState = /** @class */function () {\n  function ReplaceCommandWithOffsetCursorState(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace) {\n    if (insertsAutoWhitespace === void 0) {\n      insertsAutoWhitespace = false;\n    }\n    this._range = range;\n    this._text = text;\n    this._columnDeltaOffset = columnDeltaOffset;\n    this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  ReplaceCommandWithOffsetCursorState.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n  ReplaceCommandWithOffsetCursorState.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\n  };\n  return ReplaceCommandWithOffsetCursorState;\n}();\nexport { ReplaceCommandWithOffsetCursorState };\nvar ReplaceCommandThatPreservesSelection = /** @class */function () {\n  function ReplaceCommandThatPreservesSelection(editRange, text, initialSelection, forceMoveMarkers) {\n    if (forceMoveMarkers === void 0) {\n      forceMoveMarkers = false;\n    }\n    this._range = editRange;\n    this._text = text;\n    this._initialSelection = initialSelection;\n    this._forceMoveMarkers = forceMoveMarkers;\n    this._selectionId = null;\n  }\n  ReplaceCommandThatPreservesSelection.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n    this._selectionId = builder.trackSelection(this._initialSelection);\n  };\n  ReplaceCommandThatPreservesSelection.prototype.computeCursorState = function (model, helper) {\n    return helper.getTrackedSelection(this._selectionId);\n  };\n  return ReplaceCommandThatPreservesSelection;\n}();\nexport { ReplaceCommandThatPreservesSelection };","map":{"version":3,"names":["Selection","ReplaceCommand","range","text","insertsAutoWhitespace","_range","_text","prototype","getEditOperations","model","builder","addTrackedEditOperation","computeCursorState","helper","inverseEditOperations","getInverseEditOperations","srcRange","endLineNumber","endColumn","ReplaceCommandThatSelectsText","startLineNumber","startColumn","ReplaceCommandWithoutChangingPosition","ReplaceCommandWithOffsetCursorState","lineNumberDeltaOffset","columnDeltaOffset","_columnDeltaOffset","_lineNumberDeltaOffset","ReplaceCommandThatPreservesSelection","editRange","initialSelection","forceMoveMarkers","_initialSelection","_forceMoveMarkers","_selectionId","trackSelection","getTrackedSelection"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/commands/replaceCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../core/selection.js';\r\nvar ReplaceCommand = /** @class */ (function () {\r\n    function ReplaceCommand(range, text, insertsAutoWhitespace) {\r\n        if (insertsAutoWhitespace === void 0) { insertsAutoWhitespace = false; }\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    ReplaceCommand.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommand.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    };\r\n    return ReplaceCommand;\r\n}());\r\nexport { ReplaceCommand };\r\nvar ReplaceCommandThatSelectsText = /** @class */ (function () {\r\n    function ReplaceCommandThatSelectsText(range, text) {\r\n        this._range = range;\r\n        this._text = text;\r\n    }\r\n    ReplaceCommandThatSelectsText.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommandThatSelectsText.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    };\r\n    return ReplaceCommandThatSelectsText;\r\n}());\r\nexport { ReplaceCommandThatSelectsText };\r\nvar ReplaceCommandWithoutChangingPosition = /** @class */ (function () {\r\n    function ReplaceCommandWithoutChangingPosition(range, text, insertsAutoWhitespace) {\r\n        if (insertsAutoWhitespace === void 0) { insertsAutoWhitespace = false; }\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    ReplaceCommandWithoutChangingPosition.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommandWithoutChangingPosition.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\r\n    };\r\n    return ReplaceCommandWithoutChangingPosition;\r\n}());\r\nexport { ReplaceCommandWithoutChangingPosition };\r\nvar ReplaceCommandWithOffsetCursorState = /** @class */ (function () {\r\n    function ReplaceCommandWithOffsetCursorState(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace) {\r\n        if (insertsAutoWhitespace === void 0) { insertsAutoWhitespace = false; }\r\n        this._range = range;\r\n        this._text = text;\r\n        this._columnDeltaOffset = columnDeltaOffset;\r\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    ReplaceCommandWithOffsetCursorState.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommandWithOffsetCursorState.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\r\n    };\r\n    return ReplaceCommandWithOffsetCursorState;\r\n}());\r\nexport { ReplaceCommandWithOffsetCursorState };\r\nvar ReplaceCommandThatPreservesSelection = /** @class */ (function () {\r\n    function ReplaceCommandThatPreservesSelection(editRange, text, initialSelection, forceMoveMarkers) {\r\n        if (forceMoveMarkers === void 0) { forceMoveMarkers = false; }\r\n        this._range = editRange;\r\n        this._text = text;\r\n        this._initialSelection = initialSelection;\r\n        this._forceMoveMarkers = forceMoveMarkers;\r\n        this._selectionId = null;\r\n    }\r\n    ReplaceCommandThatPreservesSelection.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\r\n        this._selectionId = builder.trackSelection(this._initialSelection);\r\n    };\r\n    ReplaceCommandThatPreservesSelection.prototype.computeCursorState = function (model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    };\r\n    return ReplaceCommandThatPreservesSelection;\r\n}());\r\nexport { ReplaceCommandThatPreservesSelection };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}