{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as Json from './../../jsonc-parser/main.js';\nimport { isNumber, equals, isBoolean, isString, isDefined } from '../utils/objects.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar formats = {\n  'color-hex': {\n    errorMessage: localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.'),\n    pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/\n  },\n  'date-time': {\n    errorMessage: localize('dateTimeFormatWarning', 'String is not a RFC3339 date-time.'),\n    pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i\n  },\n  'date': {\n    errorMessage: localize('dateFormatWarning', 'String is not a RFC3339 date.'),\n    pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i\n  },\n  'time': {\n    errorMessage: localize('timeFormatWarning', 'String is not a RFC3339 time.'),\n    pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i\n  },\n  'email': {\n    errorMessage: localize('emailFormatWarning', 'String is not an e-mail address.'),\n    pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  }\n};\nvar ASTNodeImpl = /** @class */function () {\n  function ASTNodeImpl(parent, offset, length) {\n    this.offset = offset;\n    this.length = length;\n    this.parent = parent;\n  }\n  Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n    get: function get() {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ASTNodeImpl.prototype.toString = function () {\n    return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n  };\n  return ASTNodeImpl;\n}();\nexport { ASTNodeImpl };\nvar NullASTNodeImpl = /** @class */function (_super) {\n  __extends(NullASTNodeImpl, _super);\n  function NullASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n    _this.type = 'null';\n    _this.value = null;\n    return _this;\n  }\n  return NullASTNodeImpl;\n}(ASTNodeImpl);\nexport { NullASTNodeImpl };\nvar BooleanASTNodeImpl = /** @class */function (_super) {\n  __extends(BooleanASTNodeImpl, _super);\n  function BooleanASTNodeImpl(parent, boolValue, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n    _this.type = 'boolean';\n    _this.value = boolValue;\n    return _this;\n  }\n  return BooleanASTNodeImpl;\n}(ASTNodeImpl);\nexport { BooleanASTNodeImpl };\nvar ArrayASTNodeImpl = /** @class */function (_super) {\n  __extends(ArrayASTNodeImpl, _super);\n  function ArrayASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n    _this.type = 'array';\n    _this.items = [];\n    return _this;\n  }\n  Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n    get: function get() {\n      return this.items;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ArrayASTNodeImpl;\n}(ASTNodeImpl);\nexport { ArrayASTNodeImpl };\nvar NumberASTNodeImpl = /** @class */function (_super) {\n  __extends(NumberASTNodeImpl, _super);\n  function NumberASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n    _this.type = 'number';\n    _this.isInteger = true;\n    _this.value = Number.NaN;\n    return _this;\n  }\n  return NumberASTNodeImpl;\n}(ASTNodeImpl);\nexport { NumberASTNodeImpl };\nvar StringASTNodeImpl = /** @class */function (_super) {\n  __extends(StringASTNodeImpl, _super);\n  function StringASTNodeImpl(parent, offset, length) {\n    var _this = _super.call(this, parent, offset, length) || this;\n    _this.type = 'string';\n    _this.value = '';\n    return _this;\n  }\n  return StringASTNodeImpl;\n}(ASTNodeImpl);\nexport { StringASTNodeImpl };\nvar PropertyASTNodeImpl = /** @class */function (_super) {\n  __extends(PropertyASTNodeImpl, _super);\n  function PropertyASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n    _this.type = 'property';\n    _this.colonOffset = -1;\n    return _this;\n  }\n  Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n    get: function get() {\n      return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PropertyASTNodeImpl;\n}(ASTNodeImpl);\nexport { PropertyASTNodeImpl };\nvar ObjectASTNodeImpl = /** @class */function (_super) {\n  __extends(ObjectASTNodeImpl, _super);\n  function ObjectASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n    _this.type = 'object';\n    _this.properties = [];\n    return _this;\n  }\n  Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n    get: function get() {\n      return this.properties;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ObjectASTNodeImpl;\n}(ASTNodeImpl);\nexport { ObjectASTNodeImpl };\nexport function asSchema(schema) {\n  if (isBoolean(schema)) {\n    return schema ? {} : {\n      \"not\": {}\n    };\n  }\n  return schema;\n}\nexport var EnumMatch;\n(function (EnumMatch) {\n  EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n  EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar SchemaCollector = /** @class */function () {\n  function SchemaCollector(focusOffset, exclude) {\n    if (focusOffset === void 0) {\n      focusOffset = -1;\n    }\n    if (exclude === void 0) {\n      exclude = null;\n    }\n    this.focusOffset = focusOffset;\n    this.exclude = exclude;\n    this.schemas = [];\n  }\n  SchemaCollector.prototype.add = function (schema) {\n    this.schemas.push(schema);\n  };\n  SchemaCollector.prototype.merge = function (other) {\n    var _a;\n    (_a = this.schemas).push.apply(_a, other.schemas);\n  };\n  SchemaCollector.prototype.include = function (node) {\n    return (this.focusOffset === -1 || contains(node, this.focusOffset)) && node !== this.exclude;\n  };\n  SchemaCollector.prototype.newSub = function () {\n    return new SchemaCollector(-1, this.exclude);\n  };\n  return SchemaCollector;\n}();\nvar NoOpSchemaCollector = /** @class */function () {\n  function NoOpSchemaCollector() {}\n  Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n    get: function get() {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  NoOpSchemaCollector.prototype.add = function (schema) {};\n  NoOpSchemaCollector.prototype.merge = function (other) {};\n  NoOpSchemaCollector.prototype.include = function (node) {\n    return true;\n  };\n  NoOpSchemaCollector.prototype.newSub = function () {\n    return this;\n  };\n  NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n  return NoOpSchemaCollector;\n}();\nvar ValidationResult = /** @class */function () {\n  function ValidationResult() {\n    this.problems = [];\n    this.propertiesMatches = 0;\n    this.propertiesValueMatches = 0;\n    this.primaryValueMatches = 0;\n    this.enumValueMatch = false;\n    this.enumValues = null;\n  }\n  ValidationResult.prototype.hasProblems = function () {\n    return !!this.problems.length;\n  };\n  ValidationResult.prototype.mergeAll = function (validationResults) {\n    for (var _i = 0, validationResults_1 = validationResults; _i < validationResults_1.length; _i++) {\n      var validationResult = validationResults_1[_i];\n      this.merge(validationResult);\n    }\n  };\n  ValidationResult.prototype.merge = function (validationResult) {\n    this.problems = this.problems.concat(validationResult.problems);\n  };\n  ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n    if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n      this.enumValues = this.enumValues.concat(validationResult.enumValues);\n      for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n        var error = _a[_i];\n        if (error.code === ErrorCode.EnumValueMismatch) {\n          error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) {\n            return JSON.stringify(v);\n          }).join(', '));\n        }\n      }\n    }\n  };\n  ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n    this.merge(propertyValidationResult);\n    this.propertiesMatches++;\n    if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n      this.propertiesValueMatches++;\n    }\n    if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n      this.primaryValueMatches++;\n    }\n  };\n  ValidationResult.prototype.compare = function (other) {\n    var hasProblems = this.hasProblems();\n    if (hasProblems !== other.hasProblems()) {\n      return hasProblems ? -1 : 1;\n    }\n    if (this.enumValueMatch !== other.enumValueMatch) {\n      return other.enumValueMatch ? -1 : 1;\n    }\n    if (this.primaryValueMatches !== other.primaryValueMatches) {\n      return this.primaryValueMatches - other.primaryValueMatches;\n    }\n    if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n      return this.propertiesValueMatches - other.propertiesValueMatches;\n    }\n    return this.propertiesMatches - other.propertiesMatches;\n  };\n  return ValidationResult;\n}();\nexport { ValidationResult };\nexport function newJSONDocument(root, diagnostics) {\n  if (diagnostics === void 0) {\n    diagnostics = [];\n  }\n  return new JSONDocument(root, diagnostics, []);\n}\nexport function getNodeValue(node) {\n  return Json.getNodeValue(node);\n}\nexport function getNodePath(node) {\n  return Json.getNodePath(node);\n}\nexport function contains(node, offset, includeRightBound) {\n  if (includeRightBound === void 0) {\n    includeRightBound = false;\n  }\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nvar JSONDocument = /** @class */function () {\n  function JSONDocument(root, syntaxErrors, comments) {\n    if (syntaxErrors === void 0) {\n      syntaxErrors = [];\n    }\n    if (comments === void 0) {\n      comments = [];\n    }\n    this.root = root;\n    this.syntaxErrors = syntaxErrors;\n    this.comments = comments;\n  }\n  JSONDocument.prototype.getNodeFromOffset = function (offset, includeRightBound) {\n    if (includeRightBound === void 0) {\n      includeRightBound = false;\n    }\n    if (this.root) {\n      return Json.findNodeAtOffset(this.root, offset, includeRightBound);\n    }\n    return void 0;\n  };\n  JSONDocument.prototype.visit = function (visitor) {\n    if (this.root) {\n      var doVisit_1 = function doVisit_1(node) {\n        var ctn = visitor(node);\n        var children = node.children;\n        if (Array.isArray(children)) {\n          for (var i = 0; i < children.length && ctn; i++) {\n            ctn = doVisit_1(children[i]);\n          }\n        }\n        return ctn;\n      };\n      doVisit_1(this.root);\n    }\n  };\n  JSONDocument.prototype.validate = function (textDocument, schema) {\n    if (this.root && schema) {\n      var validationResult = new ValidationResult();\n      validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n      return validationResult.problems.map(function (p) {\n        var range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n        return Diagnostic.create(range, p.message, p.severity, p.code);\n      });\n    }\n    return null;\n  };\n  JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n    if (focusOffset === void 0) {\n      focusOffset = -1;\n    }\n    if (exclude === void 0) {\n      exclude = null;\n    }\n    var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n    if (this.root && schema) {\n      validate(this.root, schema, new ValidationResult(), matchingSchemas);\n    }\n    return matchingSchemas.schemas;\n  };\n  return JSONDocument;\n}();\nexport { JSONDocument };\nfunction validate(node, schema, validationResult, matchingSchemas) {\n  if (!node || !matchingSchemas.include(node)) {\n    return;\n  }\n  switch (node.type) {\n    case 'object':\n      _validateObjectNode(node, schema, validationResult, matchingSchemas);\n      break;\n    case 'array':\n      _validateArrayNode(node, schema, validationResult, matchingSchemas);\n      break;\n    case 'string':\n      _validateStringNode(node, schema, validationResult, matchingSchemas);\n      break;\n    case 'number':\n      _validateNumberNode(node, schema, validationResult, matchingSchemas);\n      break;\n    case 'property':\n      return validate(node.valueNode, schema, validationResult, matchingSchemas);\n  }\n  _validateNode();\n  matchingSchemas.add({\n    node: node,\n    schema: schema\n  });\n  function _validateNode() {\n    function matchesType(type) {\n      return node.type === type || type === 'integer' && node.type === 'number' && node.isInteger;\n    }\n    if (Array.isArray(schema.type)) {\n      if (!schema.type.some(matchesType)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n        });\n      }\n    } else if (schema.type) {\n      if (!matchesType(schema.type)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n        });\n      }\n    }\n    if (Array.isArray(schema.allOf)) {\n      for (var _i = 0, _a = schema.allOf; _i < _a.length; _i++) {\n        var subSchemaRef = _a[_i];\n        validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n      }\n    }\n    var notSchema = asSchema(schema.not);\n    if (notSchema) {\n      var subValidationResult = new ValidationResult();\n      var subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, notSchema, subValidationResult, subMatchingSchemas);\n      if (!subValidationResult.hasProblems()) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n        });\n      }\n      for (var _b = 0, _c = subMatchingSchemas.schemas; _b < _c.length; _b++) {\n        var ms = _c[_b];\n        ms.inverted = !ms.inverted;\n        matchingSchemas.add(ms);\n      }\n    }\n    var testAlternatives = function testAlternatives(alternatives, maxOneMatch) {\n      var matches = [];\n      // remember the best match that is used for error messages\n      var bestMatch = null;\n      for (var _i = 0, alternatives_1 = alternatives; _i < alternatives_1.length; _i++) {\n        var subSchemaRef = alternatives_1[_i];\n        var subSchema = asSchema(subSchemaRef);\n        var subValidationResult = new ValidationResult();\n        var subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, subSchema, subValidationResult, subMatchingSchemas);\n        if (!subValidationResult.hasProblems()) {\n          matches.push(subSchema);\n        }\n        if (!bestMatch) {\n          bestMatch = {\n            schema: subSchema,\n            validationResult: subValidationResult,\n            matchingSchemas: subMatchingSchemas\n          };\n        } else {\n          if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n            // no errors, both are equally good matches\n            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n          } else {\n            var compareResult = subValidationResult.compare(bestMatch.validationResult);\n            if (compareResult > 0) {\n              // our node is the best matching so far\n              bestMatch = {\n                schema: subSchema,\n                validationResult: subValidationResult,\n                matchingSchemas: subMatchingSchemas\n              };\n            } else if (compareResult === 0) {\n              // there's already a best matching but we are as good\n              bestMatch.matchingSchemas.merge(subMatchingSchemas);\n              bestMatch.validationResult.mergeEnumValues(subValidationResult);\n            }\n          }\n        }\n      }\n      if (matches.length > 1 && maxOneMatch) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: 1\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n        });\n      }\n      if (bestMatch !== null) {\n        validationResult.merge(bestMatch.validationResult);\n        validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n        validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n        matchingSchemas.merge(bestMatch.matchingSchemas);\n      }\n      return matches.length;\n    };\n    if (Array.isArray(schema.anyOf)) {\n      testAlternatives(schema.anyOf, false);\n    }\n    if (Array.isArray(schema.oneOf)) {\n      testAlternatives(schema.oneOf, true);\n    }\n    var testBranch = function testBranch(schema) {\n      var subValidationResult = new ValidationResult();\n      var subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, asSchema(schema), subValidationResult, subMatchingSchemas);\n      validationResult.merge(subValidationResult);\n      validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n      validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n      matchingSchemas.merge(subMatchingSchemas);\n    };\n    var testCondition = function testCondition(ifSchema, thenSchema, elseSchema) {\n      var subSchema = asSchema(ifSchema);\n      var subValidationResult = new ValidationResult();\n      var subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, subSchema, subValidationResult, subMatchingSchemas);\n      matchingSchemas.merge(subMatchingSchemas);\n      if (!subValidationResult.hasProblems()) {\n        if (thenSchema) {\n          testBranch(thenSchema);\n        }\n      } else if (elseSchema) {\n        testBranch(elseSchema);\n      }\n    };\n    var ifSchema = asSchema(schema.if);\n    if (ifSchema) {\n      testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n    }\n    if (Array.isArray(schema.enum)) {\n      var val = getNodeValue(node);\n      var enumValueMatch = false;\n      for (var _d = 0, _e = schema.enum; _d < _e.length; _d++) {\n        var e = _e[_d];\n        if (equals(val, e)) {\n          enumValueMatch = true;\n          break;\n        }\n      }\n      validationResult.enumValues = schema.enum;\n      validationResult.enumValueMatch = enumValueMatch;\n      if (!enumValueMatch) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) {\n            return JSON.stringify(v);\n          }).join(', '))\n        });\n      }\n    }\n    if (isDefined(schema.const)) {\n      var val = getNodeValue(node);\n      if (!equals(val, schema.const)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n        });\n        validationResult.enumValueMatch = false;\n      } else {\n        validationResult.enumValueMatch = true;\n      }\n      validationResult.enumValues = [schema.const];\n    }\n    if (schema.deprecationMessage && node.parent) {\n      validationResult.problems.push({\n        location: {\n          offset: node.parent.offset,\n          length: node.parent.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: schema.deprecationMessage\n      });\n    }\n  }\n  function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n    var val = node.value;\n    if (isNumber(schema.multipleOf)) {\n      if (val % schema.multipleOf !== 0) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n        });\n      }\n    }\n    function getExclusiveLimit(limit, exclusive) {\n      if (isNumber(exclusive)) {\n        return exclusive;\n      }\n      if (isBoolean(exclusive) && exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    function getLimit(limit, exclusive) {\n      if (!isBoolean(exclusive) || !exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n      });\n    }\n    var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n      });\n    }\n    var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(minimum) && val < minimum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n      });\n    }\n    var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(maximum) && val > maximum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n      });\n    }\n  }\n  function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n    if (isNumber(schema.minLength) && node.value.length < schema.minLength) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n      });\n    }\n    if (isNumber(schema.maxLength) && node.value.length > schema.maxLength) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n      });\n    }\n    if (isString(schema.pattern)) {\n      var regex = new RegExp(schema.pattern);\n      if (!regex.test(node.value)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n        });\n      }\n    }\n    if (schema.format) {\n      switch (schema.format) {\n        case 'uri':\n        case 'uri-reference':\n          {\n            var errorMessage = void 0;\n            if (!node.value) {\n              errorMessage = localize('uriEmpty', 'URI expected.');\n            } else {\n              var match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node.value);\n              if (!match) {\n                errorMessage = localize('uriMissing', 'URI is expected.');\n              } else if (!match[2] && schema.format === 'uri') {\n                errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n              }\n            }\n            if (errorMessage) {\n              validationResult.problems.push({\n                location: {\n                  offset: node.offset,\n                  length: node.length\n                },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n              });\n            }\n          }\n          break;\n        case 'color-hex':\n        case 'date-time':\n        case 'date':\n        case 'time':\n        case 'email':\n          var format = formats[schema.format];\n          if (!node.value || !format.pattern.exec(node.value)) {\n            validationResult.problems.push({\n              location: {\n                offset: node.offset,\n                length: node.length\n              },\n              severity: DiagnosticSeverity.Warning,\n              message: schema.patternErrorMessage || schema.errorMessage || format.errorMessage\n            });\n          }\n        default:\n      }\n    }\n  }\n  function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n    if (Array.isArray(schema.items)) {\n      var subSchemas = schema.items;\n      for (var index = 0; index < subSchemas.length; index++) {\n        var subSchemaRef = subSchemas[index];\n        var subSchema = asSchema(subSchemaRef);\n        var itemValidationResult = new ValidationResult();\n        var item = node.items[index];\n        if (item) {\n          validate(item, subSchema, itemValidationResult, matchingSchemas);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        } else if (node.items.length >= subSchemas.length) {\n          validationResult.propertiesValueMatches++;\n        }\n      }\n      if (node.items.length > subSchemas.length) {\n        if (typeof schema.additionalItems === 'object') {\n          for (var i = subSchemas.length; i < node.items.length; i++) {\n            var itemValidationResult = new ValidationResult();\n            validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n            validationResult.mergePropertyMatch(itemValidationResult);\n          }\n        } else if (schema.additionalItems === false) {\n          validationResult.problems.push({\n            location: {\n              offset: node.offset,\n              length: node.length\n            },\n            severity: DiagnosticSeverity.Warning,\n            message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas.length)\n          });\n        }\n      }\n    } else {\n      var itemSchema = asSchema(schema.items);\n      if (itemSchema) {\n        for (var _i = 0, _a = node.items; _i < _a.length; _i++) {\n          var item = _a[_i];\n          var itemValidationResult = new ValidationResult();\n          validate(item, itemSchema, itemValidationResult, matchingSchemas);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        }\n      }\n    }\n    var containsSchema = asSchema(schema.contains);\n    if (containsSchema) {\n      var doesContain = node.items.some(function (item) {\n        var itemValidationResult = new ValidationResult();\n        validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n        return !itemValidationResult.hasProblems();\n      });\n      if (!doesContain) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.')\n        });\n      }\n    }\n    if (isNumber(schema.minItems) && node.items.length < schema.minItems) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n      });\n    }\n    if (isNumber(schema.maxItems) && node.items.length > schema.maxItems) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.maxItems)\n      });\n    }\n    if (schema.uniqueItems === true) {\n      var values_1 = getNodeValue(node);\n      var duplicates = values_1.some(function (value, index) {\n        return index !== values_1.lastIndexOf(value);\n      });\n      if (duplicates) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n        });\n      }\n    }\n  }\n  function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n    var seenKeys = Object.create(null);\n    var unprocessedProperties = [];\n    for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n      var propertyNode = _a[_i];\n      var key = propertyNode.keyNode.value;\n      seenKeys[key] = propertyNode.valueNode;\n      unprocessedProperties.push(key);\n    }\n    if (Array.isArray(schema.required)) {\n      for (var _b = 0, _c = schema.required; _b < _c.length; _b++) {\n        var propertyName = _c[_b];\n        if (!seenKeys[propertyName]) {\n          var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n          var location = keyNode ? {\n            offset: keyNode.offset,\n            length: keyNode.length\n          } : {\n            offset: node.offset,\n            length: 1\n          };\n          validationResult.problems.push({\n            location: location,\n            severity: DiagnosticSeverity.Warning,\n            message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n          });\n        }\n      }\n    }\n    var propertyProcessed = function propertyProcessed(prop) {\n      var index = unprocessedProperties.indexOf(prop);\n      while (index >= 0) {\n        unprocessedProperties.splice(index, 1);\n        index = unprocessedProperties.indexOf(prop);\n      }\n    };\n    if (schema.properties) {\n      for (var _d = 0, _e = Object.keys(schema.properties); _d < _e.length; _d++) {\n        var propertyName = _e[_d];\n        propertyProcessed(propertyName);\n        var propertySchema = schema.properties[propertyName];\n        var child = seenKeys[propertyName];\n        if (child) {\n          if (isBoolean(propertySchema)) {\n            if (!propertySchema) {\n              var propertyNode = child.parent;\n              validationResult.problems.push({\n                location: {\n                  offset: propertyNode.keyNode.offset,\n                  length: propertyNode.keyNode.length\n                },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n              });\n            } else {\n              validationResult.propertiesMatches++;\n              validationResult.propertiesValueMatches++;\n            }\n          } else {\n            var propertyValidationResult = new ValidationResult();\n            validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    if (schema.patternProperties) {\n      for (var _f = 0, _g = Object.keys(schema.patternProperties); _f < _g.length; _f++) {\n        var propertyPattern = _g[_f];\n        var regex = new RegExp(propertyPattern);\n        for (var _h = 0, _j = unprocessedProperties.slice(0); _h < _j.length; _h++) {\n          var propertyName = _j[_h];\n          if (regex.test(propertyName)) {\n            propertyProcessed(propertyName);\n            var child = seenKeys[propertyName];\n            if (child) {\n              var propertySchema = schema.patternProperties[propertyPattern];\n              if (isBoolean(propertySchema)) {\n                if (!propertySchema) {\n                  var propertyNode = child.parent;\n                  validationResult.problems.push({\n                    location: {\n                      offset: propertyNode.keyNode.offset,\n                      length: propertyNode.keyNode.length\n                    },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                  });\n                } else {\n                  validationResult.propertiesMatches++;\n                  validationResult.propertiesValueMatches++;\n                }\n              } else {\n                var propertyValidationResult = new ValidationResult();\n                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                validationResult.mergePropertyMatch(propertyValidationResult);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (typeof schema.additionalProperties === 'object') {\n      for (var _k = 0, unprocessedProperties_1 = unprocessedProperties; _k < unprocessedProperties_1.length; _k++) {\n        var propertyName = unprocessedProperties_1[_k];\n        var child = seenKeys[propertyName];\n        if (child) {\n          var propertyValidationResult = new ValidationResult();\n          validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n          validationResult.mergePropertyMatch(propertyValidationResult);\n        }\n      }\n    } else if (schema.additionalProperties === false) {\n      if (unprocessedProperties.length > 0) {\n        for (var _l = 0, unprocessedProperties_2 = unprocessedProperties; _l < unprocessedProperties_2.length; _l++) {\n          var propertyName = unprocessedProperties_2[_l];\n          var child = seenKeys[propertyName];\n          if (child) {\n            var propertyNode = child.parent;\n            validationResult.problems.push({\n              location: {\n                offset: propertyNode.keyNode.offset,\n                length: propertyNode.keyNode.length\n              },\n              severity: DiagnosticSeverity.Warning,\n              message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n            });\n          }\n        }\n      }\n    }\n    if (isNumber(schema.maxProperties)) {\n      if (node.properties.length > schema.maxProperties) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n        });\n      }\n    }\n    if (isNumber(schema.minProperties)) {\n      if (node.properties.length < schema.minProperties) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n        });\n      }\n    }\n    if (schema.dependencies) {\n      for (var _m = 0, _o = Object.keys(schema.dependencies); _m < _o.length; _m++) {\n        var key = _o[_m];\n        var prop = seenKeys[key];\n        if (prop) {\n          var propertyDep = schema.dependencies[key];\n          if (Array.isArray(propertyDep)) {\n            for (var _p = 0, propertyDep_1 = propertyDep; _p < propertyDep_1.length; _p++) {\n              var requiredProp = propertyDep_1[_p];\n              if (!seenKeys[requiredProp]) {\n                validationResult.problems.push({\n                  location: {\n                    offset: node.offset,\n                    length: node.length\n                  },\n                  severity: DiagnosticSeverity.Warning,\n                  message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                });\n              } else {\n                validationResult.propertiesValueMatches++;\n              }\n            }\n          } else {\n            var propertySchema = asSchema(propertyDep);\n            if (propertySchema) {\n              var propertyValidationResult = new ValidationResult();\n              validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n              validationResult.mergePropertyMatch(propertyValidationResult);\n            }\n          }\n        }\n      }\n    }\n    var propertyNames = asSchema(schema.propertyNames);\n    if (propertyNames) {\n      for (var _q = 0, _r = node.properties; _q < _r.length; _q++) {\n        var f = _r[_q];\n        var key = f.keyNode;\n        if (key) {\n          validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n        }\n      }\n    }\n  }\n}\nexport function parse(textDocument, config) {\n  var problems = [];\n  var lastProblemOffset = -1;\n  var text = textDocument.getText();\n  var scanner = Json.createScanner(text, false);\n  var commentRanges = config && config.collectComments ? [] : void 0;\n  function _scanNext() {\n    while (true) {\n      var token_1 = scanner.scan();\n      _checkScanError();\n      switch (token_1) {\n        case 12 /* LineCommentTrivia */:\n        case 13 /* BlockCommentTrivia */:\n          if (Array.isArray(commentRanges)) {\n            commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n          }\n          break;\n        case 15 /* Trivia */:\n        case 14 /* LineBreakTrivia */:\n          break;\n        default:\n          return token_1;\n      }\n    }\n  }\n  function _accept(token) {\n    if (scanner.getToken() === token) {\n      _scanNext();\n      return true;\n    }\n    return false;\n  }\n  function _errorAtRange(message, code, startOffset, endOffset, severity) {\n    if (severity === void 0) {\n      severity = DiagnosticSeverity.Error;\n    }\n    if (problems.length === 0 || startOffset !== lastProblemOffset) {\n      var range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n      problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n      lastProblemOffset = startOffset;\n    }\n  }\n  function _error(message, code, node, skipUntilAfter, skipUntil) {\n    if (node === void 0) {\n      node = null;\n    }\n    if (skipUntilAfter === void 0) {\n      skipUntilAfter = [];\n    }\n    if (skipUntil === void 0) {\n      skipUntil = [];\n    }\n    var start = scanner.getTokenOffset();\n    var end = scanner.getTokenOffset() + scanner.getTokenLength();\n    if (start === end && start > 0) {\n      start--;\n      while (start > 0 && /\\s/.test(text.charAt(start))) {\n        start--;\n      }\n      end = start + 1;\n    }\n    _errorAtRange(message, code, start, end);\n    if (node) {\n      _finalize(node, false);\n    }\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      var token_2 = scanner.getToken();\n      while (token_2 !== 17 /* EOF */) {\n        if (skipUntilAfter.indexOf(token_2) !== -1) {\n          _scanNext();\n          break;\n        } else if (skipUntil.indexOf(token_2) !== -1) {\n          break;\n        }\n        token_2 = _scanNext();\n      }\n    }\n    return node;\n  }\n  function _checkScanError() {\n    switch (scanner.getTokenError()) {\n      case 4 /* InvalidUnicode */:\n        _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n        return true;\n      case 5 /* InvalidEscapeCharacter */:\n        _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n        return true;\n      case 3 /* UnexpectedEndOfNumber */:\n        _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n        return true;\n      case 1 /* UnexpectedEndOfComment */:\n        _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n        return true;\n      case 2 /* UnexpectedEndOfString */:\n        _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n        return true;\n      case 6 /* InvalidCharacter */:\n        _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n        return true;\n    }\n    return false;\n  }\n  function _finalize(node, scanNext) {\n    node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n    if (scanNext) {\n      _scanNext();\n    }\n    return node;\n  }\n  function _parseArray(parent) {\n    if (scanner.getToken() !== 3 /* OpenBracketToken */) {\n      return null;\n    }\n    var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n    _scanNext(); // consume OpenBracketToken\n    var count = 0;\n    var needsComma = false;\n    while (scanner.getToken() !== 4 /* CloseBracketToken */ && scanner.getToken() !== 17 /* EOF */) {\n      if (scanner.getToken() === 5 /* CommaToken */) {\n        if (!needsComma) {\n          _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n        }\n        var commaOffset = scanner.getTokenOffset();\n        _scanNext(); // consume comma\n        if (scanner.getToken() === 4 /* CloseBracketToken */) {\n          if (needsComma) {\n            _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n      }\n      var item = _parseValue(node, count++);\n      if (!item) {\n        _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, null, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n      } else {\n        node.items.push(item);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 4 /* CloseBracketToken */) {\n      return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  function _parseProperty(parent, keysSeen) {\n    var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset());\n    var key = _parseString(node);\n    if (!key) {\n      if (scanner.getToken() === 16 /* Unknown */) {\n        // give a more helpful error message\n        _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n        var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n        keyNode.value = scanner.getTokenValue();\n        key = keyNode;\n        _scanNext(); // consume Unknown\n      } else {\n        return null;\n      }\n    }\n    node.keyNode = key;\n    var seen = keysSeen[key.value];\n    if (seen) {\n      _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n      if (typeof seen === 'object') {\n        _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n      }\n      keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n    } else {\n      keysSeen[key.value] = node;\n    }\n    if (scanner.getToken() === 6 /* ColonToken */) {\n      node.colonOffset = scanner.getTokenOffset();\n      _scanNext(); // consume ColonToken\n    } else {\n      _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n      if (scanner.getToken() === 10 /* StringLiteral */ && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n        node.length = key.length;\n        return node;\n      }\n    }\n    var value = _parseValue(node, key.value);\n    if (!value) {\n      return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n    }\n\n    node.valueNode = value;\n    node.length = value.offset + value.length - node.offset;\n    return node;\n  }\n  function _parseObject(parent) {\n    if (scanner.getToken() !== 1 /* OpenBraceToken */) {\n      return null;\n    }\n    var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n    var keysSeen = Object.create(null);\n    _scanNext(); // consume OpenBraceToken\n    var needsComma = false;\n    while (scanner.getToken() !== 2 /* CloseBraceToken */ && scanner.getToken() !== 17 /* EOF */) {\n      if (scanner.getToken() === 5 /* CommaToken */) {\n        if (!needsComma) {\n          _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n        }\n        var commaOffset = scanner.getTokenOffset();\n        _scanNext(); // consume comma\n        if (scanner.getToken() === 2 /* CloseBraceToken */) {\n          if (needsComma) {\n            _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n      }\n      var property = _parseProperty(node, keysSeen);\n      if (!property) {\n        _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, null, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n      } else {\n        node.properties.push(property);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 2 /* CloseBraceToken */) {\n      return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  function _parseString(parent) {\n    if (scanner.getToken() !== 10 /* StringLiteral */) {\n      return null;\n    }\n    var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n    node.value = scanner.getTokenValue();\n    return _finalize(node, true);\n  }\n  function _parseNumber(parent) {\n    if (scanner.getToken() !== 11 /* NumericLiteral */) {\n      return null;\n    }\n    var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n    if (scanner.getTokenError() === 0 /* None */) {\n      var tokenValue = scanner.getTokenValue();\n      try {\n        var numberValue = JSON.parse(tokenValue);\n        if (!isNumber(numberValue)) {\n          return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n        }\n        node.value = numberValue;\n      } catch (e) {\n        return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n      }\n      node.isInteger = tokenValue.indexOf('.') === -1;\n    }\n    return _finalize(node, true);\n  }\n  function _parseLiteral(parent) {\n    var node;\n    switch (scanner.getToken()) {\n      case 7 /* NullKeyword */:\n        return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n      case 8 /* TrueKeyword */:\n        return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n      case 9 /* FalseKeyword */:\n        return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n      default:\n        return null;\n    }\n  }\n  function _parseValue(parent, name) {\n    return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n  }\n  var _root = null;\n  var token = _scanNext();\n  if (token !== 17 /* EOF */) {\n    _root = _parseValue(null, null);\n    if (!_root) {\n      _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n    } else if (scanner.getToken() !== 17 /* EOF */) {\n      _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n    }\n  }\n  return new JSONDocument(_root, problems, commentRanges);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Json","isNumber","equals","isBoolean","isString","isDefined","ErrorCode","Diagnostic","DiagnosticSeverity","Range","nls","localize","loadMessageBundle","formats","errorMessage","pattern","ASTNodeImpl","parent","offset","length","defineProperty","get","enumerable","configurable","toString","type","NullASTNodeImpl","_super","_this","call","value","BooleanASTNodeImpl","boolValue","ArrayASTNodeImpl","items","NumberASTNodeImpl","isInteger","Number","NaN","StringASTNodeImpl","PropertyASTNodeImpl","colonOffset","valueNode","keyNode","ObjectASTNodeImpl","properties","asSchema","schema","EnumMatch","SchemaCollector","focusOffset","exclude","schemas","add","push","merge","other","_a","apply","include","node","contains","newSub","NoOpSchemaCollector","instance","ValidationResult","problems","propertiesMatches","propertiesValueMatches","primaryValueMatches","enumValueMatch","enumValues","hasProblems","mergeAll","validationResults","_i","validationResults_1","validationResult","concat","mergeEnumValues","error","code","EnumValueMismatch","message","map","v","JSON","stringify","join","mergePropertyMatch","propertyValidationResult","compare","newJSONDocument","root","diagnostics","JSONDocument","getNodeValue","getNodePath","includeRightBound","syntaxErrors","comments","getNodeFromOffset","findNodeAtOffset","visit","visitor","doVisit_1","ctn","children","isArray","i","validate","textDocument","range","positionAt","location","severity","getMatchingSchemas","matchingSchemas","_validateObjectNode","_validateArrayNode","_validateStringNode","_validateNumberNode","_validateNode","matchesType","some","Warning","allOf","subSchemaRef","notSchema","not","subValidationResult","subMatchingSchemas","_b","_c","ms","inverted","testAlternatives","alternatives","maxOneMatch","matches","bestMatch","alternatives_1","subSchema","compareResult","anyOf","oneOf","testBranch","testCondition","ifSchema","thenSchema","elseSchema","if","then","else","enum","val","_d","_e","e","const","deprecationMessage","multipleOf","getExclusiveLimit","limit","exclusive","getLimit","exclusiveMinimum","minimum","exclusiveMaximum","maximum","minLength","maxLength","regex","RegExp","test","patternErrorMessage","format","match","exec","subSchemas","index","itemValidationResult","item","additionalItems","itemSchema","containsSchema","doesContain","minItems","maxItems","uniqueItems","values_1","duplicates","lastIndexOf","seenKeys","unprocessedProperties","propertyNode","key","required","propertyName","propertyProcessed","prop","indexOf","splice","keys","propertySchema","child","patternProperties","_f","_g","propertyPattern","_h","_j","slice","additionalProperties","_k","unprocessedProperties_1","_l","unprocessedProperties_2","maxProperties","minProperties","dependencies","_m","_o","propertyDep","_p","propertyDep_1","requiredProp","propertyNames","_q","_r","f","parse","config","lastProblemOffset","text","getText","scanner","createScanner","commentRanges","collectComments","_scanNext","token_1","scan","_checkScanError","getTokenOffset","getTokenLength","_accept","token","getToken","_errorAtRange","startOffset","endOffset","Error","languageId","_error","skipUntilAfter","skipUntil","start","end","charAt","_finalize","token_2","getTokenError","InvalidUnicode","InvalidEscapeCharacter","UnexpectedEndOfNumber","UnexpectedEndOfComment","UnexpectedEndOfString","InvalidCharacter","scanNext","_parseArray","count","needsComma","ValueExpected","commaOffset","TrailingComma","CommaExpected","_parseValue","CommaOrCloseBacketExpected","_parseProperty","keysSeen","_parseString","Undefined","getTokenValue","seen","DuplicateKey","ColonExpected","line","_parseObject","PropertyExpected","property","CommaOrCloseBraceExpected","_parseNumber","tokenValue","numberValue","_parseLiteral","name","_root"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as Json from './../../jsonc-parser/main.js';\nimport { isNumber, equals, isBoolean, isString, isDefined } from '../utils/objects.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar formats = {\n    'color-hex': { errorMessage: localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.'), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n    'date-time': { errorMessage: localize('dateTimeFormatWarning', 'String is not a RFC3339 date-time.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'date': { errorMessage: localize('dateFormatWarning', 'String is not a RFC3339 date.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n    'time': { errorMessage: localize('timeFormatWarning', 'String is not a RFC3339 time.'), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'email': { errorMessage: localize('emailFormatWarning', 'String is not an e-mail address.'), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ }\n};\nvar ASTNodeImpl = /** @class */ (function () {\n    function ASTNodeImpl(parent, offset, length) {\n        this.offset = offset;\n        this.length = length;\n        this.parent = parent;\n    }\n    Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ASTNodeImpl.prototype.toString = function () {\n        return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n    };\n    return ASTNodeImpl;\n}());\nexport { ASTNodeImpl };\nvar NullASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NullASTNodeImpl, _super);\n    function NullASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'null';\n        _this.value = null;\n        return _this;\n    }\n    return NullASTNodeImpl;\n}(ASTNodeImpl));\nexport { NullASTNodeImpl };\nvar BooleanASTNodeImpl = /** @class */ (function (_super) {\n    __extends(BooleanASTNodeImpl, _super);\n    function BooleanASTNodeImpl(parent, boolValue, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'boolean';\n        _this.value = boolValue;\n        return _this;\n    }\n    return BooleanASTNodeImpl;\n}(ASTNodeImpl));\nexport { BooleanASTNodeImpl };\nvar ArrayASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ArrayASTNodeImpl, _super);\n    function ArrayASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'array';\n        _this.items = [];\n        return _this;\n    }\n    Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArrayASTNodeImpl;\n}(ASTNodeImpl));\nexport { ArrayASTNodeImpl };\nvar NumberASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NumberASTNodeImpl, _super);\n    function NumberASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'number';\n        _this.isInteger = true;\n        _this.value = Number.NaN;\n        return _this;\n    }\n    return NumberASTNodeImpl;\n}(ASTNodeImpl));\nexport { NumberASTNodeImpl };\nvar StringASTNodeImpl = /** @class */ (function (_super) {\n    __extends(StringASTNodeImpl, _super);\n    function StringASTNodeImpl(parent, offset, length) {\n        var _this = _super.call(this, parent, offset, length) || this;\n        _this.type = 'string';\n        _this.value = '';\n        return _this;\n    }\n    return StringASTNodeImpl;\n}(ASTNodeImpl));\nexport { StringASTNodeImpl };\nvar PropertyASTNodeImpl = /** @class */ (function (_super) {\n    __extends(PropertyASTNodeImpl, _super);\n    function PropertyASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'property';\n        _this.colonOffset = -1;\n        return _this;\n    }\n    Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PropertyASTNodeImpl;\n}(ASTNodeImpl));\nexport { PropertyASTNodeImpl };\nvar ObjectASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ObjectASTNodeImpl, _super);\n    function ObjectASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'object';\n        _this.properties = [];\n        return _this;\n    }\n    Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ObjectASTNodeImpl;\n}(ASTNodeImpl));\nexport { ObjectASTNodeImpl };\nexport function asSchema(schema) {\n    if (isBoolean(schema)) {\n        return schema ? {} : { \"not\": {} };\n    }\n    return schema;\n}\nexport var EnumMatch;\n(function (EnumMatch) {\n    EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n    EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar SchemaCollector = /** @class */ (function () {\n    function SchemaCollector(focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        this.focusOffset = focusOffset;\n        this.exclude = exclude;\n        this.schemas = [];\n    }\n    SchemaCollector.prototype.add = function (schema) {\n        this.schemas.push(schema);\n    };\n    SchemaCollector.prototype.merge = function (other) {\n        var _a;\n        (_a = this.schemas).push.apply(_a, other.schemas);\n    };\n    SchemaCollector.prototype.include = function (node) {\n        return (this.focusOffset === -1 || contains(node, this.focusOffset)) && (node !== this.exclude);\n    };\n    SchemaCollector.prototype.newSub = function () {\n        return new SchemaCollector(-1, this.exclude);\n    };\n    return SchemaCollector;\n}());\nvar NoOpSchemaCollector = /** @class */ (function () {\n    function NoOpSchemaCollector() {\n    }\n    Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    NoOpSchemaCollector.prototype.add = function (schema) { };\n    NoOpSchemaCollector.prototype.merge = function (other) { };\n    NoOpSchemaCollector.prototype.include = function (node) { return true; };\n    NoOpSchemaCollector.prototype.newSub = function () { return this; };\n    NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n    return NoOpSchemaCollector;\n}());\nvar ValidationResult = /** @class */ (function () {\n    function ValidationResult() {\n        this.problems = [];\n        this.propertiesMatches = 0;\n        this.propertiesValueMatches = 0;\n        this.primaryValueMatches = 0;\n        this.enumValueMatch = false;\n        this.enumValues = null;\n    }\n    ValidationResult.prototype.hasProblems = function () {\n        return !!this.problems.length;\n    };\n    ValidationResult.prototype.mergeAll = function (validationResults) {\n        for (var _i = 0, validationResults_1 = validationResults; _i < validationResults_1.length; _i++) {\n            var validationResult = validationResults_1[_i];\n            this.merge(validationResult);\n        }\n    };\n    ValidationResult.prototype.merge = function (validationResult) {\n        this.problems = this.problems.concat(validationResult.problems);\n    };\n    ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n        if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n            this.enumValues = this.enumValues.concat(validationResult.enumValues);\n            for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n                var error = _a[_i];\n                if (error.code === ErrorCode.EnumValueMismatch) {\n                    error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) { return JSON.stringify(v); }).join(', '));\n                }\n            }\n        }\n    };\n    ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n        this.merge(propertyValidationResult);\n        this.propertiesMatches++;\n        if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n            this.propertiesValueMatches++;\n        }\n        if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n            this.primaryValueMatches++;\n        }\n    };\n    ValidationResult.prototype.compare = function (other) {\n        var hasProblems = this.hasProblems();\n        if (hasProblems !== other.hasProblems()) {\n            return hasProblems ? -1 : 1;\n        }\n        if (this.enumValueMatch !== other.enumValueMatch) {\n            return other.enumValueMatch ? -1 : 1;\n        }\n        if (this.primaryValueMatches !== other.primaryValueMatches) {\n            return this.primaryValueMatches - other.primaryValueMatches;\n        }\n        if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n            return this.propertiesValueMatches - other.propertiesValueMatches;\n        }\n        return this.propertiesMatches - other.propertiesMatches;\n    };\n    return ValidationResult;\n}());\nexport { ValidationResult };\nexport function newJSONDocument(root, diagnostics) {\n    if (diagnostics === void 0) { diagnostics = []; }\n    return new JSONDocument(root, diagnostics, []);\n}\nexport function getNodeValue(node) {\n    return Json.getNodeValue(node);\n}\nexport function getNodePath(node) {\n    return Json.getNodePath(node);\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return offset >= node.offset && offset < (node.offset + node.length) || includeRightBound && offset === (node.offset + node.length);\n}\nvar JSONDocument = /** @class */ (function () {\n    function JSONDocument(root, syntaxErrors, comments) {\n        if (syntaxErrors === void 0) { syntaxErrors = []; }\n        if (comments === void 0) { comments = []; }\n        this.root = root;\n        this.syntaxErrors = syntaxErrors;\n        this.comments = comments;\n    }\n    JSONDocument.prototype.getNodeFromOffset = function (offset, includeRightBound) {\n        if (includeRightBound === void 0) { includeRightBound = false; }\n        if (this.root) {\n            return Json.findNodeAtOffset(this.root, offset, includeRightBound);\n        }\n        return void 0;\n    };\n    JSONDocument.prototype.visit = function (visitor) {\n        if (this.root) {\n            var doVisit_1 = function (node) {\n                var ctn = visitor(node);\n                var children = node.children;\n                if (Array.isArray(children)) {\n                    for (var i = 0; i < children.length && ctn; i++) {\n                        ctn = doVisit_1(children[i]);\n                    }\n                }\n                return ctn;\n            };\n            doVisit_1(this.root);\n        }\n    };\n    JSONDocument.prototype.validate = function (textDocument, schema) {\n        if (this.root && schema) {\n            var validationResult = new ValidationResult();\n            validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n            return validationResult.problems.map(function (p) {\n                var range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n                return Diagnostic.create(range, p.message, p.severity, p.code);\n            });\n        }\n        return null;\n    };\n    JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n        if (this.root && schema) {\n            validate(this.root, schema, new ValidationResult(), matchingSchemas);\n        }\n        return matchingSchemas.schemas;\n    };\n    return JSONDocument;\n}());\nexport { JSONDocument };\nfunction validate(node, schema, validationResult, matchingSchemas) {\n    if (!node || !matchingSchemas.include(node)) {\n        return;\n    }\n    switch (node.type) {\n        case 'object':\n            _validateObjectNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'array':\n            _validateArrayNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'string':\n            _validateStringNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'number':\n            _validateNumberNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'property':\n            return validate(node.valueNode, schema, validationResult, matchingSchemas);\n    }\n    _validateNode();\n    matchingSchemas.add({ node: node, schema: schema });\n    function _validateNode() {\n        function matchesType(type) {\n            return node.type === type || (type === 'integer' && node.type === 'number' && node.isInteger);\n        }\n        if (Array.isArray(schema.type)) {\n            if (!schema.type.some(matchesType)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n                });\n            }\n        }\n        else if (schema.type) {\n            if (!matchesType(schema.type)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n                });\n            }\n        }\n        if (Array.isArray(schema.allOf)) {\n            for (var _i = 0, _a = schema.allOf; _i < _a.length; _i++) {\n                var subSchemaRef = _a[_i];\n                validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n            }\n        }\n        var notSchema = asSchema(schema.not);\n        if (notSchema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, notSchema, subValidationResult, subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n                });\n            }\n            for (var _b = 0, _c = subMatchingSchemas.schemas; _b < _c.length; _b++) {\n                var ms = _c[_b];\n                ms.inverted = !ms.inverted;\n                matchingSchemas.add(ms);\n            }\n        }\n        var testAlternatives = function (alternatives, maxOneMatch) {\n            var matches = [];\n            // remember the best match that is used for error messages\n            var bestMatch = null;\n            for (var _i = 0, alternatives_1 = alternatives; _i < alternatives_1.length; _i++) {\n                var subSchemaRef = alternatives_1[_i];\n                var subSchema = asSchema(subSchemaRef);\n                var subValidationResult = new ValidationResult();\n                var subMatchingSchemas = matchingSchemas.newSub();\n                validate(node, subSchema, subValidationResult, subMatchingSchemas);\n                if (!subValidationResult.hasProblems()) {\n                    matches.push(subSchema);\n                }\n                if (!bestMatch) {\n                    bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                }\n                else {\n                    if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n                        // no errors, both are equally good matches\n                        bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                        bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n                        bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n                    }\n                    else {\n                        var compareResult = subValidationResult.compare(bestMatch.validationResult);\n                        if (compareResult > 0) {\n                            // our node is the best matching so far\n                            bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                        }\n                        else if (compareResult === 0) {\n                            // there's already a best matching but we are as good\n                            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                            bestMatch.validationResult.mergeEnumValues(subValidationResult);\n                        }\n                    }\n                }\n            }\n            if (matches.length > 1 && maxOneMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: 1 },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n                });\n            }\n            if (bestMatch !== null) {\n                validationResult.merge(bestMatch.validationResult);\n                validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n                validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n                matchingSchemas.merge(bestMatch.matchingSchemas);\n            }\n            return matches.length;\n        };\n        if (Array.isArray(schema.anyOf)) {\n            testAlternatives(schema.anyOf, false);\n        }\n        if (Array.isArray(schema.oneOf)) {\n            testAlternatives(schema.oneOf, true);\n        }\n        var testBranch = function (schema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, asSchema(schema), subValidationResult, subMatchingSchemas);\n            validationResult.merge(subValidationResult);\n            validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            matchingSchemas.merge(subMatchingSchemas);\n        };\n        var testCondition = function (ifSchema, thenSchema, elseSchema) {\n            var subSchema = asSchema(ifSchema);\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, subSchema, subValidationResult, subMatchingSchemas);\n            matchingSchemas.merge(subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                if (thenSchema) {\n                    testBranch(thenSchema);\n                }\n            }\n            else if (elseSchema) {\n                testBranch(elseSchema);\n            }\n        };\n        var ifSchema = asSchema(schema.if);\n        if (ifSchema) {\n            testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n        }\n        if (Array.isArray(schema.enum)) {\n            var val = getNodeValue(node);\n            var enumValueMatch = false;\n            for (var _d = 0, _e = schema.enum; _d < _e.length; _d++) {\n                var e = _e[_d];\n                if (equals(val, e)) {\n                    enumValueMatch = true;\n                    break;\n                }\n            }\n            validationResult.enumValues = schema.enum;\n            validationResult.enumValueMatch = enumValueMatch;\n            if (!enumValueMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) { return JSON.stringify(v); }).join(', '))\n                });\n            }\n        }\n        if (isDefined(schema.const)) {\n            var val = getNodeValue(node);\n            if (!equals(val, schema.const)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n                });\n                validationResult.enumValueMatch = false;\n            }\n            else {\n                validationResult.enumValueMatch = true;\n            }\n            validationResult.enumValues = [schema.const];\n        }\n        if (schema.deprecationMessage && node.parent) {\n            validationResult.problems.push({\n                location: { offset: node.parent.offset, length: node.parent.length },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.deprecationMessage\n            });\n        }\n    }\n    function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n        var val = node.value;\n        if (isNumber(schema.multipleOf)) {\n            if (val % schema.multipleOf !== 0) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n                });\n            }\n        }\n        function getExclusiveLimit(limit, exclusive) {\n            if (isNumber(exclusive)) {\n                return exclusive;\n            }\n            if (isBoolean(exclusive) && exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        function getLimit(limit, exclusive) {\n            if (!isBoolean(exclusive) || !exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n            });\n        }\n        var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n            });\n        }\n        var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(minimum) && val < minimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n            });\n        }\n        var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(maximum) && val > maximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n            });\n        }\n    }\n    function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n        if (isNumber(schema.minLength) && node.value.length < schema.minLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n            });\n        }\n        if (isNumber(schema.maxLength) && node.value.length > schema.maxLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n            });\n        }\n        if (isString(schema.pattern)) {\n            var regex = new RegExp(schema.pattern);\n            if (!regex.test(node.value)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n                });\n            }\n        }\n        if (schema.format) {\n            switch (schema.format) {\n                case 'uri':\n                case 'uri-reference':\n                    {\n                        var errorMessage = void 0;\n                        if (!node.value) {\n                            errorMessage = localize('uriEmpty', 'URI expected.');\n                        }\n                        else {\n                            var match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node.value);\n                            if (!match) {\n                                errorMessage = localize('uriMissing', 'URI is expected.');\n                            }\n                            else if (!match[2] && schema.format === 'uri') {\n                                errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n                            }\n                        }\n                        if (errorMessage) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n                            });\n                        }\n                    }\n                    break;\n                case 'color-hex':\n                case 'date-time':\n                case 'date':\n                case 'time':\n                case 'email':\n                    var format = formats[schema.format];\n                    if (!node.value || !format.pattern.exec(node.value)) {\n                        validationResult.problems.push({\n                            location: { offset: node.offset, length: node.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.patternErrorMessage || schema.errorMessage || format.errorMessage\n                        });\n                    }\n                default:\n            }\n        }\n    }\n    function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n        if (Array.isArray(schema.items)) {\n            var subSchemas = schema.items;\n            for (var index = 0; index < subSchemas.length; index++) {\n                var subSchemaRef = subSchemas[index];\n                var subSchema = asSchema(subSchemaRef);\n                var itemValidationResult = new ValidationResult();\n                var item = node.items[index];\n                if (item) {\n                    validate(item, subSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n                else if (node.items.length >= subSchemas.length) {\n                    validationResult.propertiesValueMatches++;\n                }\n            }\n            if (node.items.length > subSchemas.length) {\n                if (typeof schema.additionalItems === 'object') {\n                    for (var i = subSchemas.length; i < node.items.length; i++) {\n                        var itemValidationResult = new ValidationResult();\n                        validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(itemValidationResult);\n                    }\n                }\n                else if (schema.additionalItems === false) {\n                    validationResult.problems.push({\n                        location: { offset: node.offset, length: node.length },\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas.length)\n                    });\n                }\n            }\n        }\n        else {\n            var itemSchema = asSchema(schema.items);\n            if (itemSchema) {\n                for (var _i = 0, _a = node.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    var itemValidationResult = new ValidationResult();\n                    validate(item, itemSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n            }\n        }\n        var containsSchema = asSchema(schema.contains);\n        if (containsSchema) {\n            var doesContain = node.items.some(function (item) {\n                var itemValidationResult = new ValidationResult();\n                validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n                return !itemValidationResult.hasProblems();\n            });\n            if (!doesContain) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.')\n                });\n            }\n        }\n        if (isNumber(schema.minItems) && node.items.length < schema.minItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n            });\n        }\n        if (isNumber(schema.maxItems) && node.items.length > schema.maxItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.maxItems)\n            });\n        }\n        if (schema.uniqueItems === true) {\n            var values_1 = getNodeValue(node);\n            var duplicates = values_1.some(function (value, index) {\n                return index !== values_1.lastIndexOf(value);\n            });\n            if (duplicates) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n                });\n            }\n        }\n    }\n    function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n        var seenKeys = Object.create(null);\n        var unprocessedProperties = [];\n        for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n            var propertyNode = _a[_i];\n            var key = propertyNode.keyNode.value;\n            seenKeys[key] = propertyNode.valueNode;\n            unprocessedProperties.push(key);\n        }\n        if (Array.isArray(schema.required)) {\n            for (var _b = 0, _c = schema.required; _b < _c.length; _b++) {\n                var propertyName = _c[_b];\n                if (!seenKeys[propertyName]) {\n                    var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n                    var location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node.offset, length: 1 };\n                    validationResult.problems.push({\n                        location: location,\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n                    });\n                }\n            }\n        }\n        var propertyProcessed = function (prop) {\n            var index = unprocessedProperties.indexOf(prop);\n            while (index >= 0) {\n                unprocessedProperties.splice(index, 1);\n                index = unprocessedProperties.indexOf(prop);\n            }\n        };\n        if (schema.properties) {\n            for (var _d = 0, _e = Object.keys(schema.properties); _d < _e.length; _d++) {\n                var propertyName = _e[_d];\n                propertyProcessed(propertyName);\n                var propertySchema = schema.properties[propertyName];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    if (isBoolean(propertySchema)) {\n                        if (!propertySchema) {\n                            var propertyNode = child.parent;\n                            validationResult.problems.push({\n                                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                            });\n                        }\n                        else {\n                            validationResult.propertiesMatches++;\n                            validationResult.propertiesValueMatches++;\n                        }\n                    }\n                    else {\n                        var propertyValidationResult = new ValidationResult();\n                        validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(propertyValidationResult);\n                    }\n                }\n            }\n        }\n        if (schema.patternProperties) {\n            for (var _f = 0, _g = Object.keys(schema.patternProperties); _f < _g.length; _f++) {\n                var propertyPattern = _g[_f];\n                var regex = new RegExp(propertyPattern);\n                for (var _h = 0, _j = unprocessedProperties.slice(0); _h < _j.length; _h++) {\n                    var propertyName = _j[_h];\n                    if (regex.test(propertyName)) {\n                        propertyProcessed(propertyName);\n                        var child = seenKeys[propertyName];\n                        if (child) {\n                            var propertySchema = schema.patternProperties[propertyPattern];\n                            if (isBoolean(propertySchema)) {\n                                if (!propertySchema) {\n                                    var propertyNode = child.parent;\n                                    validationResult.problems.push({\n                                        location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                        severity: DiagnosticSeverity.Warning,\n                                        message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                                    });\n                                }\n                                else {\n                                    validationResult.propertiesMatches++;\n                                    validationResult.propertiesValueMatches++;\n                                }\n                            }\n                            else {\n                                var propertyValidationResult = new ValidationResult();\n                                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                                validationResult.mergePropertyMatch(propertyValidationResult);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            for (var _k = 0, unprocessedProperties_1 = unprocessedProperties; _k < unprocessedProperties_1.length; _k++) {\n                var propertyName = unprocessedProperties_1[_k];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    var propertyValidationResult = new ValidationResult();\n                    validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n            }\n        }\n        else if (schema.additionalProperties === false) {\n            if (unprocessedProperties.length > 0) {\n                for (var _l = 0, unprocessedProperties_2 = unprocessedProperties; _l < unprocessedProperties_2.length; _l++) {\n                    var propertyName = unprocessedProperties_2[_l];\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyNode = child.parent;\n                        validationResult.problems.push({\n                            location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                        });\n                    }\n                }\n            }\n        }\n        if (isNumber(schema.maxProperties)) {\n            if (node.properties.length > schema.maxProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n                });\n            }\n        }\n        if (isNumber(schema.minProperties)) {\n            if (node.properties.length < schema.minProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n                });\n            }\n        }\n        if (schema.dependencies) {\n            for (var _m = 0, _o = Object.keys(schema.dependencies); _m < _o.length; _m++) {\n                var key = _o[_m];\n                var prop = seenKeys[key];\n                if (prop) {\n                    var propertyDep = schema.dependencies[key];\n                    if (Array.isArray(propertyDep)) {\n                        for (var _p = 0, propertyDep_1 = propertyDep; _p < propertyDep_1.length; _p++) {\n                            var requiredProp = propertyDep_1[_p];\n                            if (!seenKeys[requiredProp]) {\n                                validationResult.problems.push({\n                                    location: { offset: node.offset, length: node.length },\n                                    severity: DiagnosticSeverity.Warning,\n                                    message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                                });\n                            }\n                            else {\n                                validationResult.propertiesValueMatches++;\n                            }\n                        }\n                    }\n                    else {\n                        var propertySchema = asSchema(propertyDep);\n                        if (propertySchema) {\n                            var propertyValidationResult = new ValidationResult();\n                            validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n                            validationResult.mergePropertyMatch(propertyValidationResult);\n                        }\n                    }\n                }\n            }\n        }\n        var propertyNames = asSchema(schema.propertyNames);\n        if (propertyNames) {\n            for (var _q = 0, _r = node.properties; _q < _r.length; _q++) {\n                var f = _r[_q];\n                var key = f.keyNode;\n                if (key) {\n                    validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n                }\n            }\n        }\n    }\n}\nexport function parse(textDocument, config) {\n    var problems = [];\n    var lastProblemOffset = -1;\n    var text = textDocument.getText();\n    var scanner = Json.createScanner(text, false);\n    var commentRanges = config && config.collectComments ? [] : void 0;\n    function _scanNext() {\n        while (true) {\n            var token_1 = scanner.scan();\n            _checkScanError();\n            switch (token_1) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (Array.isArray(commentRanges)) {\n                        commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n                    }\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token_1;\n            }\n        }\n    }\n    function _accept(token) {\n        if (scanner.getToken() === token) {\n            _scanNext();\n            return true;\n        }\n        return false;\n    }\n    function _errorAtRange(message, code, startOffset, endOffset, severity) {\n        if (severity === void 0) { severity = DiagnosticSeverity.Error; }\n        if (problems.length === 0 || startOffset !== lastProblemOffset) {\n            var range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n            problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n            lastProblemOffset = startOffset;\n        }\n    }\n    function _error(message, code, node, skipUntilAfter, skipUntil) {\n        if (node === void 0) { node = null; }\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        var start = scanner.getTokenOffset();\n        var end = scanner.getTokenOffset() + scanner.getTokenLength();\n        if (start === end && start > 0) {\n            start--;\n            while (start > 0 && /\\s/.test(text.charAt(start))) {\n                start--;\n            }\n            end = start + 1;\n        }\n        _errorAtRange(message, code, start, end);\n        if (node) {\n            _finalize(node, false);\n        }\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token_2 = scanner.getToken();\n            while (token_2 !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token_2) !== -1) {\n                    _scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token_2) !== -1) {\n                    break;\n                }\n                token_2 = _scanNext();\n            }\n        }\n        return node;\n    }\n    function _checkScanError() {\n        switch (scanner.getTokenError()) {\n            case 4 /* InvalidUnicode */:\n                _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n                return true;\n            case 5 /* InvalidEscapeCharacter */:\n                _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n                return true;\n            case 3 /* UnexpectedEndOfNumber */:\n                _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n                return true;\n            case 1 /* UnexpectedEndOfComment */:\n                _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n                return true;\n            case 2 /* UnexpectedEndOfString */:\n                _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n                return true;\n            case 6 /* InvalidCharacter */:\n                _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n                return true;\n        }\n        return false;\n    }\n    function _finalize(node, scanNext) {\n        node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n        if (scanNext) {\n            _scanNext();\n        }\n        return node;\n    }\n    function _parseArray(parent) {\n        if (scanner.getToken() !== 3 /* OpenBracketToken */) {\n            return null;\n        }\n        var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n        _scanNext(); // consume OpenBracketToken\n        var count = 0;\n        var needsComma = false;\n        while (scanner.getToken() !== 4 /* CloseBracketToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 4 /* CloseBracketToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var item = _parseValue(node, count++);\n            if (!item) {\n                _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, null, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.items.push(item);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 4 /* CloseBracketToken */) {\n            return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseProperty(parent, keysSeen) {\n        var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset());\n        var key = _parseString(node);\n        if (!key) {\n            if (scanner.getToken() === 16 /* Unknown */) {\n                // give a more helpful error message\n                _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n                var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n                keyNode.value = scanner.getTokenValue();\n                key = keyNode;\n                _scanNext(); // consume Unknown\n            }\n            else {\n                return null;\n            }\n        }\n        node.keyNode = key;\n        var seen = keysSeen[key.value];\n        if (seen) {\n            _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n            if (typeof seen === 'object') {\n                _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n            }\n            keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n        }\n        else {\n            keysSeen[key.value] = node;\n        }\n        if (scanner.getToken() === 6 /* ColonToken */) {\n            node.colonOffset = scanner.getTokenOffset();\n            _scanNext(); // consume ColonToken\n        }\n        else {\n            _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n            if (scanner.getToken() === 10 /* StringLiteral */ && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n                node.length = key.length;\n                return node;\n            }\n        }\n        var value = _parseValue(node, key.value);\n        if (!value) {\n            return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        node.valueNode = value;\n        node.length = value.offset + value.length - node.offset;\n        return node;\n    }\n    function _parseObject(parent) {\n        if (scanner.getToken() !== 1 /* OpenBraceToken */) {\n            return null;\n        }\n        var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n        var keysSeen = Object.create(null);\n        _scanNext(); // consume OpenBraceToken\n        var needsComma = false;\n        while (scanner.getToken() !== 2 /* CloseBraceToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 2 /* CloseBraceToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var property = _parseProperty(node, keysSeen);\n            if (!property) {\n                _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, null, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.properties.push(property);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 2 /* CloseBraceToken */) {\n            return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseString(parent) {\n        if (scanner.getToken() !== 10 /* StringLiteral */) {\n            return null;\n        }\n        var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n        node.value = scanner.getTokenValue();\n        return _finalize(node, true);\n    }\n    function _parseNumber(parent) {\n        if (scanner.getToken() !== 11 /* NumericLiteral */) {\n            return null;\n        }\n        var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n        if (scanner.getTokenError() === 0 /* None */) {\n            var tokenValue = scanner.getTokenValue();\n            try {\n                var numberValue = JSON.parse(tokenValue);\n                if (!isNumber(numberValue)) {\n                    return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n                }\n                node.value = numberValue;\n            }\n            catch (e) {\n                return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n            }\n            node.isInteger = tokenValue.indexOf('.') === -1;\n        }\n        return _finalize(node, true);\n    }\n    function _parseLiteral(parent) {\n        var node;\n        switch (scanner.getToken()) {\n            case 7 /* NullKeyword */:\n                return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n            case 8 /* TrueKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n            case 9 /* FalseKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n            default:\n                return null;\n        }\n    }\n    function _parseValue(parent, name) {\n        return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n    }\n    var _root = null;\n    var token = _scanNext();\n    if (token !== 17 /* EOF */) {\n        _root = _parseValue(null, null);\n        if (!_root) {\n            _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n        }\n        else if (scanner.getToken() !== 17 /* EOF */) {\n            _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n        }\n    }\n    return new JSONDocument(_root, problems, commentRanges);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}