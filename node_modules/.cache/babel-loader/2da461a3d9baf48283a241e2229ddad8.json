{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/range.js';\n/**\r\n * Returns the intersection between a ranged group and a range.\r\n * Returns `[]` if the intersection is empty.\r\n */\nexport function groupIntersect(range, groups) {\n  var result = [];\n  for (var _i = 0, groups_1 = groups; _i < groups_1.length; _i++) {\n    var r = groups_1[_i];\n    if (range.start >= r.range.end) {\n      continue;\n    }\n    if (range.end < r.range.start) {\n      break;\n    }\n    var intersection = Range.intersect(range, r.range);\n    if (Range.isEmpty(intersection)) {\n      continue;\n    }\n    result.push({\n      range: intersection,\n      size: r.size\n    });\n  }\n  return result;\n}\n/**\r\n * Shifts a range by that `much`.\r\n */\nexport function shift(_a, much) {\n  var start = _a.start,\n    end = _a.end;\n  return {\n    start: start + much,\n    end: end + much\n  };\n}\n/**\r\n * Consolidates a collection of ranged groups.\r\n *\r\n * Consolidation is the process of merging consecutive ranged groups\r\n * that share the same `size`.\r\n */\nexport function consolidate(groups) {\n  var result = [];\n  var previousGroup = null;\n  for (var _i = 0, groups_2 = groups; _i < groups_2.length; _i++) {\n    var group = groups_2[_i];\n    var start = group.range.start;\n    var end = group.range.end;\n    var size = group.size;\n    if (previousGroup && size === previousGroup.size) {\n      previousGroup.range.end = end;\n      continue;\n    }\n    previousGroup = {\n      range: {\n        start: start,\n        end: end\n      },\n      size: size\n    };\n    result.push(previousGroup);\n  }\n  return result;\n}\n/**\r\n * Concatenates several collections of ranged groups into a single\r\n * collection.\r\n */\nfunction concat() {\n  var groups = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    groups[_i] = arguments[_i];\n  }\n  return consolidate(groups.reduce(function (r, g) {\n    return r.concat(g);\n  }, []));\n}\nvar RangeMap = /** @class */function () {\n  function RangeMap() {\n    this.groups = [];\n    this._size = 0;\n  }\n  RangeMap.prototype.splice = function (index, deleteCount, items) {\n    if (items === void 0) {\n      items = [];\n    }\n    var diff = items.length - deleteCount;\n    var before = groupIntersect({\n      start: 0,\n      end: index\n    }, this.groups);\n    var after = groupIntersect({\n      start: index + deleteCount,\n      end: Number.POSITIVE_INFINITY\n    }, this.groups).map(function (g) {\n      return {\n        range: shift(g.range, diff),\n        size: g.size\n      };\n    });\n    var middle = items.map(function (item, i) {\n      return {\n        range: {\n          start: index + i,\n          end: index + i + 1\n        },\n        size: item.size\n      };\n    });\n    this.groups = concat(before, middle, after);\n    this._size = this.groups.reduce(function (t, g) {\n      return t + g.size * (g.range.end - g.range.start);\n    }, 0);\n  };\n  Object.defineProperty(RangeMap.prototype, \"count\", {\n    /**\r\n     * Returns the number of items in the range map.\r\n     */\n    get: function get() {\n      var len = this.groups.length;\n      if (!len) {\n        return 0;\n      }\n      return this.groups[len - 1].range.end;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RangeMap.prototype, \"size\", {\n    /**\r\n     * Returns the sum of the sizes of all items in the range map.\r\n     */\n    get: function get() {\n      return this._size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns the index of the item at the given position.\r\n   */\n  RangeMap.prototype.indexAt = function (position) {\n    if (position < 0) {\n      return -1;\n    }\n    var index = 0;\n    var size = 0;\n    for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n      var group = _a[_i];\n      var count = group.range.end - group.range.start;\n      var newSize = size + count * group.size;\n      if (position < newSize) {\n        return index + Math.floor((position - size) / group.size);\n      }\n      index += count;\n      size = newSize;\n    }\n    return index;\n  };\n  /**\r\n   * Returns the index of the item right after the item at the\r\n   * index of the given position.\r\n   */\n  RangeMap.prototype.indexAfter = function (position) {\n    return Math.min(this.indexAt(position) + 1, this.count);\n  };\n  /**\r\n   * Returns the start position of the item at the given index.\r\n   */\n  RangeMap.prototype.positionAt = function (index) {\n    if (index < 0) {\n      return -1;\n    }\n    var position = 0;\n    var count = 0;\n    for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n      var group = _a[_i];\n      var groupCount = group.range.end - group.range.start;\n      var newCount = count + groupCount;\n      if (index < newCount) {\n        return position + (index - count) * group.size;\n      }\n      position += groupCount * group.size;\n      count = newCount;\n    }\n    return -1;\n  };\n  return RangeMap;\n}();\nexport { RangeMap };","map":{"version":3,"names":["Range","groupIntersect","range","groups","result","_i","groups_1","length","r","start","end","intersection","intersect","isEmpty","push","size","shift","_a","much","consolidate","previousGroup","groups_2","group","concat","arguments","reduce","g","RangeMap","_size","prototype","splice","index","deleteCount","items","diff","before","after","Number","POSITIVE_INFINITY","map","middle","item","i","t","Object","defineProperty","get","len","enumerable","configurable","indexAt","position","count","newSize","Math","floor","indexAfter","min","positionAt","groupCount","newCount"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/browser/ui/list/rangeMap.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../../common/range.js';\r\n/**\r\n * Returns the intersection between a ranged group and a range.\r\n * Returns `[]` if the intersection is empty.\r\n */\r\nexport function groupIntersect(range, groups) {\r\n    var result = [];\r\n    for (var _i = 0, groups_1 = groups; _i < groups_1.length; _i++) {\r\n        var r = groups_1[_i];\r\n        if (range.start >= r.range.end) {\r\n            continue;\r\n        }\r\n        if (range.end < r.range.start) {\r\n            break;\r\n        }\r\n        var intersection = Range.intersect(range, r.range);\r\n        if (Range.isEmpty(intersection)) {\r\n            continue;\r\n        }\r\n        result.push({\r\n            range: intersection,\r\n            size: r.size\r\n        });\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Shifts a range by that `much`.\r\n */\r\nexport function shift(_a, much) {\r\n    var start = _a.start, end = _a.end;\r\n    return { start: start + much, end: end + much };\r\n}\r\n/**\r\n * Consolidates a collection of ranged groups.\r\n *\r\n * Consolidation is the process of merging consecutive ranged groups\r\n * that share the same `size`.\r\n */\r\nexport function consolidate(groups) {\r\n    var result = [];\r\n    var previousGroup = null;\r\n    for (var _i = 0, groups_2 = groups; _i < groups_2.length; _i++) {\r\n        var group = groups_2[_i];\r\n        var start = group.range.start;\r\n        var end = group.range.end;\r\n        var size = group.size;\r\n        if (previousGroup && size === previousGroup.size) {\r\n            previousGroup.range.end = end;\r\n            continue;\r\n        }\r\n        previousGroup = { range: { start: start, end: end }, size: size };\r\n        result.push(previousGroup);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Concatenates several collections of ranged groups into a single\r\n * collection.\r\n */\r\nfunction concat() {\r\n    var groups = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        groups[_i] = arguments[_i];\r\n    }\r\n    return consolidate(groups.reduce(function (r, g) { return r.concat(g); }, []));\r\n}\r\nvar RangeMap = /** @class */ (function () {\r\n    function RangeMap() {\r\n        this.groups = [];\r\n        this._size = 0;\r\n    }\r\n    RangeMap.prototype.splice = function (index, deleteCount, items) {\r\n        if (items === void 0) { items = []; }\r\n        var diff = items.length - deleteCount;\r\n        var before = groupIntersect({ start: 0, end: index }, this.groups);\r\n        var after = groupIntersect({ start: index + deleteCount, end: Number.POSITIVE_INFINITY }, this.groups)\r\n            .map(function (g) { return ({ range: shift(g.range, diff), size: g.size }); });\r\n        var middle = items.map(function (item, i) { return ({\r\n            range: { start: index + i, end: index + i + 1 },\r\n            size: item.size\r\n        }); });\r\n        this.groups = concat(before, middle, after);\r\n        this._size = this.groups.reduce(function (t, g) { return t + (g.size * (g.range.end - g.range.start)); }, 0);\r\n    };\r\n    Object.defineProperty(RangeMap.prototype, \"count\", {\r\n        /**\r\n         * Returns the number of items in the range map.\r\n         */\r\n        get: function () {\r\n            var len = this.groups.length;\r\n            if (!len) {\r\n                return 0;\r\n            }\r\n            return this.groups[len - 1].range.end;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RangeMap.prototype, \"size\", {\r\n        /**\r\n         * Returns the sum of the sizes of all items in the range map.\r\n         */\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the index of the item at the given position.\r\n     */\r\n    RangeMap.prototype.indexAt = function (position) {\r\n        if (position < 0) {\r\n            return -1;\r\n        }\r\n        var index = 0;\r\n        var size = 0;\r\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\r\n            var group = _a[_i];\r\n            var count = group.range.end - group.range.start;\r\n            var newSize = size + (count * group.size);\r\n            if (position < newSize) {\r\n                return index + Math.floor((position - size) / group.size);\r\n            }\r\n            index += count;\r\n            size = newSize;\r\n        }\r\n        return index;\r\n    };\r\n    /**\r\n     * Returns the index of the item right after the item at the\r\n     * index of the given position.\r\n     */\r\n    RangeMap.prototype.indexAfter = function (position) {\r\n        return Math.min(this.indexAt(position) + 1, this.count);\r\n    };\r\n    /**\r\n     * Returns the start position of the item at the given index.\r\n     */\r\n    RangeMap.prototype.positionAt = function (index) {\r\n        if (index < 0) {\r\n            return -1;\r\n        }\r\n        var position = 0;\r\n        var count = 0;\r\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\r\n            var group = _a[_i];\r\n            var groupCount = group.range.end - group.range.start;\r\n            var newCount = count + groupCount;\r\n            if (index < newCount) {\r\n                return position + ((index - count) * group.size);\r\n            }\r\n            position += groupCount * group.size;\r\n            count = newCount;\r\n        }\r\n        return -1;\r\n    };\r\n    return RangeMap;\r\n}());\r\nexport { RangeMap };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,0BAA0B;AAChD;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC1C,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,QAAQ,GAAGH,MAAM,EAAEE,EAAE,GAAGC,QAAQ,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC5D,IAAIG,CAAC,GAAGF,QAAQ,CAACD,EAAE,CAAC;IACpB,IAAIH,KAAK,CAACO,KAAK,IAAID,CAAC,CAACN,KAAK,CAACQ,GAAG,EAAE;MAC5B;IACJ;IACA,IAAIR,KAAK,CAACQ,GAAG,GAAGF,CAAC,CAACN,KAAK,CAACO,KAAK,EAAE;MAC3B;IACJ;IACA,IAAIE,YAAY,GAAGX,KAAK,CAACY,SAAS,CAACV,KAAK,EAAEM,CAAC,CAACN,KAAK,CAAC;IAClD,IAAIF,KAAK,CAACa,OAAO,CAACF,YAAY,CAAC,EAAE;MAC7B;IACJ;IACAP,MAAM,CAACU,IAAI,CAAC;MACRZ,KAAK,EAAES,YAAY;MACnBI,IAAI,EAAEP,CAAC,CAACO;IACZ,CAAC,CAAC;EACN;EACA,OAAOX,MAAM;AACjB;AACA;AACA;AACA;AACA,OAAO,SAASY,KAAK,CAACC,EAAE,EAAEC,IAAI,EAAE;EAC5B,IAAIT,KAAK,GAAGQ,EAAE,CAACR,KAAK;IAAEC,GAAG,GAAGO,EAAE,CAACP,GAAG;EAClC,OAAO;IAAED,KAAK,EAAEA,KAAK,GAAGS,IAAI;IAAER,GAAG,EAAEA,GAAG,GAAGQ;EAAK,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAW,CAAChB,MAAM,EAAE;EAChC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIgB,aAAa,GAAG,IAAI;EACxB,KAAK,IAAIf,EAAE,GAAG,CAAC,EAAEgB,QAAQ,GAAGlB,MAAM,EAAEE,EAAE,GAAGgB,QAAQ,CAACd,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC5D,IAAIiB,KAAK,GAAGD,QAAQ,CAAChB,EAAE,CAAC;IACxB,IAAII,KAAK,GAAGa,KAAK,CAACpB,KAAK,CAACO,KAAK;IAC7B,IAAIC,GAAG,GAAGY,KAAK,CAACpB,KAAK,CAACQ,GAAG;IACzB,IAAIK,IAAI,GAAGO,KAAK,CAACP,IAAI;IACrB,IAAIK,aAAa,IAAIL,IAAI,KAAKK,aAAa,CAACL,IAAI,EAAE;MAC9CK,aAAa,CAAClB,KAAK,CAACQ,GAAG,GAAGA,GAAG;MAC7B;IACJ;IACAU,aAAa,GAAG;MAAElB,KAAK,EAAE;QAAEO,KAAK,EAAEA,KAAK;QAAEC,GAAG,EAAEA;MAAI,CAAC;MAAEK,IAAI,EAAEA;IAAK,CAAC;IACjEX,MAAM,CAACU,IAAI,CAACM,aAAa,CAAC;EAC9B;EACA,OAAOhB,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,SAASmB,MAAM,GAAG;EACd,IAAIpB,MAAM,GAAG,EAAE;EACf,KAAK,IAAIE,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGmB,SAAS,CAACjB,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC1CF,MAAM,CAACE,EAAE,CAAC,GAAGmB,SAAS,CAACnB,EAAE,CAAC;EAC9B;EACA,OAAOc,WAAW,CAAChB,MAAM,CAACsB,MAAM,CAAC,UAAUjB,CAAC,EAAEkB,CAAC,EAAE;IAAE,OAAOlB,CAAC,CAACe,MAAM,CAACG,CAAC,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAClF;AACA,IAAIC,QAAQ,GAAG,aAAe,YAAY;EACtC,SAASA,QAAQ,GAAG;IAChB,IAAI,CAACxB,MAAM,GAAG,EAAE;IAChB,IAAI,CAACyB,KAAK,GAAG,CAAC;EAClB;EACAD,QAAQ,CAACE,SAAS,CAACC,MAAM,GAAG,UAAUC,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAE;IAC7D,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;MAAEA,KAAK,GAAG,EAAE;IAAE;IACpC,IAAIC,IAAI,GAAGD,KAAK,CAAC1B,MAAM,GAAGyB,WAAW;IACrC,IAAIG,MAAM,GAAGlC,cAAc,CAAC;MAAEQ,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAEqB;IAAM,CAAC,EAAE,IAAI,CAAC5B,MAAM,CAAC;IAClE,IAAIiC,KAAK,GAAGnC,cAAc,CAAC;MAAEQ,KAAK,EAAEsB,KAAK,GAAGC,WAAW;MAAEtB,GAAG,EAAE2B,MAAM,CAACC;IAAkB,CAAC,EAAE,IAAI,CAACnC,MAAM,CAAC,CACjGoC,GAAG,CAAC,UAAUb,CAAC,EAAE;MAAE,OAAQ;QAAExB,KAAK,EAAEc,KAAK,CAACU,CAAC,CAACxB,KAAK,EAAEgC,IAAI,CAAC;QAAEnB,IAAI,EAAEW,CAAC,CAACX;MAAK,CAAC;IAAG,CAAC,CAAC;IAClF,IAAIyB,MAAM,GAAGP,KAAK,CAACM,GAAG,CAAC,UAAUE,IAAI,EAAEC,CAAC,EAAE;MAAE,OAAQ;QAChDxC,KAAK,EAAE;UAAEO,KAAK,EAAEsB,KAAK,GAAGW,CAAC;UAAEhC,GAAG,EAAEqB,KAAK,GAAGW,CAAC,GAAG;QAAE,CAAC;QAC/C3B,IAAI,EAAE0B,IAAI,CAAC1B;MACf,CAAC;IAAG,CAAC,CAAC;IACN,IAAI,CAACZ,MAAM,GAAGoB,MAAM,CAACY,MAAM,EAAEK,MAAM,EAAEJ,KAAK,CAAC;IAC3C,IAAI,CAACR,KAAK,GAAG,IAAI,CAACzB,MAAM,CAACsB,MAAM,CAAC,UAAUkB,CAAC,EAAEjB,CAAC,EAAE;MAAE,OAAOiB,CAAC,GAAIjB,CAAC,CAACX,IAAI,IAAIW,CAAC,CAACxB,KAAK,CAACQ,GAAG,GAAGgB,CAAC,CAACxB,KAAK,CAACO,KAAK,CAAE;IAAE,CAAC,EAAE,CAAC,CAAC;EAChH,CAAC;EACDmC,MAAM,CAACC,cAAc,CAAClB,QAAQ,CAACE,SAAS,EAAE,OAAO,EAAE;IAC/C;AACR;AACA;IACQiB,GAAG,EAAE,eAAY;MACb,IAAIC,GAAG,GAAG,IAAI,CAAC5C,MAAM,CAACI,MAAM;MAC5B,IAAI,CAACwC,GAAG,EAAE;QACN,OAAO,CAAC;MACZ;MACA,OAAO,IAAI,CAAC5C,MAAM,CAAC4C,GAAG,GAAG,CAAC,CAAC,CAAC7C,KAAK,CAACQ,GAAG;IACzC,CAAC;IACDsC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFL,MAAM,CAACC,cAAc,CAAClB,QAAQ,CAACE,SAAS,EAAE,MAAM,EAAE;IAC9C;AACR;AACA;IACQiB,GAAG,EAAE,eAAY;MACb,OAAO,IAAI,CAAClB,KAAK;IACrB,CAAC;IACDoB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;EACItB,QAAQ,CAACE,SAAS,CAACqB,OAAO,GAAG,UAAUC,QAAQ,EAAE;IAC7C,IAAIA,QAAQ,GAAG,CAAC,EAAE;MACd,OAAO,CAAC,CAAC;IACb;IACA,IAAIpB,KAAK,GAAG,CAAC;IACb,IAAIhB,IAAI,GAAG,CAAC;IACZ,KAAK,IAAIV,EAAE,GAAG,CAAC,EAAEY,EAAE,GAAG,IAAI,CAACd,MAAM,EAAEE,EAAE,GAAGY,EAAE,CAACV,MAAM,EAAEF,EAAE,EAAE,EAAE;MACrD,IAAIiB,KAAK,GAAGL,EAAE,CAACZ,EAAE,CAAC;MAClB,IAAI+C,KAAK,GAAG9B,KAAK,CAACpB,KAAK,CAACQ,GAAG,GAAGY,KAAK,CAACpB,KAAK,CAACO,KAAK;MAC/C,IAAI4C,OAAO,GAAGtC,IAAI,GAAIqC,KAAK,GAAG9B,KAAK,CAACP,IAAK;MACzC,IAAIoC,QAAQ,GAAGE,OAAO,EAAE;QACpB,OAAOtB,KAAK,GAAGuB,IAAI,CAACC,KAAK,CAAC,CAACJ,QAAQ,GAAGpC,IAAI,IAAIO,KAAK,CAACP,IAAI,CAAC;MAC7D;MACAgB,KAAK,IAAIqB,KAAK;MACdrC,IAAI,GAAGsC,OAAO;IAClB;IACA,OAAOtB,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;EACIJ,QAAQ,CAACE,SAAS,CAAC2B,UAAU,GAAG,UAAUL,QAAQ,EAAE;IAChD,OAAOG,IAAI,CAACG,GAAG,CAAC,IAAI,CAACP,OAAO,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAACC,KAAK,CAAC;EAC3D,CAAC;EACD;AACJ;AACA;EACIzB,QAAQ,CAACE,SAAS,CAAC6B,UAAU,GAAG,UAAU3B,KAAK,EAAE;IAC7C,IAAIA,KAAK,GAAG,CAAC,EAAE;MACX,OAAO,CAAC,CAAC;IACb;IACA,IAAIoB,QAAQ,GAAG,CAAC;IAChB,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,IAAI/C,EAAE,GAAG,CAAC,EAAEY,EAAE,GAAG,IAAI,CAACd,MAAM,EAAEE,EAAE,GAAGY,EAAE,CAACV,MAAM,EAAEF,EAAE,EAAE,EAAE;MACrD,IAAIiB,KAAK,GAAGL,EAAE,CAACZ,EAAE,CAAC;MAClB,IAAIsD,UAAU,GAAGrC,KAAK,CAACpB,KAAK,CAACQ,GAAG,GAAGY,KAAK,CAACpB,KAAK,CAACO,KAAK;MACpD,IAAImD,QAAQ,GAAGR,KAAK,GAAGO,UAAU;MACjC,IAAI5B,KAAK,GAAG6B,QAAQ,EAAE;QAClB,OAAOT,QAAQ,GAAI,CAACpB,KAAK,GAAGqB,KAAK,IAAI9B,KAAK,CAACP,IAAK;MACpD;MACAoC,QAAQ,IAAIQ,UAAU,GAAGrC,KAAK,CAACP,IAAI;MACnCqC,KAAK,GAAGQ,QAAQ;IACpB;IACA,OAAO,CAAC,CAAC;EACb,CAAC;EACD,OAAOjC,QAAQ;AACnB,CAAC,EAAG;AACJ,SAASA,QAAQ"},"metadata":{},"sourceType":"module"}