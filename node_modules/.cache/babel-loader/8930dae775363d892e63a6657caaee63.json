{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Range } from '../../common/core/range.js';\nvar SortLinesCommand = /** @class */function () {\n  function SortLinesCommand(selection, descending) {\n    this.selection = selection;\n    this.descending = descending;\n    this.selectionId = null;\n  }\n  SortLinesCommand.getCollator = function () {\n    if (!SortLinesCommand._COLLATOR) {\n      SortLinesCommand._COLLATOR = new Intl.Collator();\n    }\n    return SortLinesCommand._COLLATOR;\n  };\n  SortLinesCommand.prototype.getEditOperations = function (model, builder) {\n    var op = sortLines(model, this.selection, this.descending);\n    if (op) {\n      builder.addEditOperation(op.range, op.text);\n    }\n    this.selectionId = builder.trackSelection(this.selection);\n  };\n  SortLinesCommand.prototype.computeCursorState = function (model, helper) {\n    return helper.getTrackedSelection(this.selectionId);\n  };\n  SortLinesCommand.canRun = function (model, selection, descending) {\n    if (model === null) {\n      return false;\n    }\n    var data = getSortData(model, selection, descending);\n    if (!data) {\n      return false;\n    }\n    for (var i = 0, len = data.before.length; i < len; i++) {\n      if (data.before[i] !== data.after[i]) {\n        return true;\n      }\n    }\n    return false;\n  };\n  SortLinesCommand._COLLATOR = null;\n  return SortLinesCommand;\n}();\nexport { SortLinesCommand };\nfunction getSortData(model, selection, descending) {\n  var startLineNumber = selection.startLineNumber;\n  var endLineNumber = selection.endLineNumber;\n  if (selection.endColumn === 1) {\n    endLineNumber--;\n  }\n  // Nothing to sort if user didn't select anything.\n  if (startLineNumber >= endLineNumber) {\n    return null;\n  }\n  var linesToSort = [];\n  // Get the contents of the selection to be sorted.\n  for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n    linesToSort.push(model.getLineContent(lineNumber));\n  }\n  var sorted = linesToSort.slice(0);\n  sorted.sort(SortLinesCommand.getCollator().compare);\n  // If descending, reverse the order.\n  if (descending === true) {\n    sorted = sorted.reverse();\n  }\n  return {\n    startLineNumber: startLineNumber,\n    endLineNumber: endLineNumber,\n    before: linesToSort,\n    after: sorted\n  };\n}\n/**\r\n * Generate commands for sorting lines on a model.\r\n */\nfunction sortLines(model, selection, descending) {\n  var data = getSortData(model, selection, descending);\n  if (!data) {\n    return null;\n  }\n  return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}","map":{"version":3,"names":["EditOperation","Range","SortLinesCommand","selection","descending","selectionId","getCollator","_COLLATOR","Intl","Collator","prototype","getEditOperations","model","builder","op","sortLines","addEditOperation","range","text","trackSelection","computeCursorState","helper","getTrackedSelection","canRun","data","getSortData","i","len","before","length","after","startLineNumber","endLineNumber","endColumn","linesToSort","lineNumber","push","getLineContent","sorted","slice","sort","compare","reverse","replace","getLineMaxColumn","join"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/sortLinesCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nvar SortLinesCommand = /** @class */ (function () {\r\n    function SortLinesCommand(selection, descending) {\r\n        this.selection = selection;\r\n        this.descending = descending;\r\n        this.selectionId = null;\r\n    }\r\n    SortLinesCommand.getCollator = function () {\r\n        if (!SortLinesCommand._COLLATOR) {\r\n            SortLinesCommand._COLLATOR = new Intl.Collator();\r\n        }\r\n        return SortLinesCommand._COLLATOR;\r\n    };\r\n    SortLinesCommand.prototype.getEditOperations = function (model, builder) {\r\n        var op = sortLines(model, this.selection, this.descending);\r\n        if (op) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n    };\r\n    SortLinesCommand.prototype.computeCursorState = function (model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    };\r\n    SortLinesCommand.canRun = function (model, selection, descending) {\r\n        if (model === null) {\r\n            return false;\r\n        }\r\n        var data = getSortData(model, selection, descending);\r\n        if (!data) {\r\n            return false;\r\n        }\r\n        for (var i = 0, len = data.before.length; i < len; i++) {\r\n            if (data.before[i] !== data.after[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SortLinesCommand._COLLATOR = null;\r\n    return SortLinesCommand;\r\n}());\r\nexport { SortLinesCommand };\r\nfunction getSortData(model, selection, descending) {\r\n    var startLineNumber = selection.startLineNumber;\r\n    var endLineNumber = selection.endLineNumber;\r\n    if (selection.endColumn === 1) {\r\n        endLineNumber--;\r\n    }\r\n    // Nothing to sort if user didn't select anything.\r\n    if (startLineNumber >= endLineNumber) {\r\n        return null;\r\n    }\r\n    var linesToSort = [];\r\n    // Get the contents of the selection to be sorted.\r\n    for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        linesToSort.push(model.getLineContent(lineNumber));\r\n    }\r\n    var sorted = linesToSort.slice(0);\r\n    sorted.sort(SortLinesCommand.getCollator().compare);\r\n    // If descending, reverse the order.\r\n    if (descending === true) {\r\n        sorted = sorted.reverse();\r\n    }\r\n    return {\r\n        startLineNumber: startLineNumber,\r\n        endLineNumber: endLineNumber,\r\n        before: linesToSort,\r\n        after: sorted\r\n    };\r\n}\r\n/**\r\n * Generate commands for sorting lines on a model.\r\n */\r\nfunction sortLines(model, selection, descending) {\r\n    var data = getSortData(model, selection, descending);\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}