{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Dashboard\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Breadcrumb, Icon, Modal, Form, Dropdown, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Box from '../../components/utility/box';\nimport Button from '../../components/uielements/button';\nimport LayoutWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport moment from 'moment-timezone';\nimport ContentHolder from '../../components/utility/contentHolder';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport ReactTable from '../Utility/reactTable';\nimport { getProjectRole } from '../Utility/sharedUtility';\nimport { stringSorter } from \"../Utility/htmlUtility\";\nimport { CallServerPost, errorModal, showProgress, hideProgress, validJSON, dynamicModal, checkPermission, PostCallWithZone, errorModalCallback, successModalCallback } from '../Utility/sharedUtility';\nimport authAction from '../../redux/auth/actions';\n//import { workflowActionButton, afterEsignVerfied } from '../Study/WorkFlowBtn';\nimport ConfirmWithEsign from '../Study/confirmationWithEsign';\nimport CommentModal from '../TreeView/comments.js';\nimport Notifications from './Notifications';\nimport TreeView from '../TreeView';\nimport { setHeader } from '../Topbar/Topbar';\nimport createHistory from 'history/createBrowserHistory';\nimport { WorkflowDropdown } from './../Study/workflowDropdown';\nimport { ActivityWorkspace } from '../Study/ActivityWorkspace';\nimport { NOTYETCONFIGURED } from '../Utility/appConstants';\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    padding: \"0px !important\",\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 17\n  }\n});\nvar logout = authAction.logout;\nvar rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap'\n};\nvar colStyle = {\n  height: 200,\n  marginBottom: 8\n};\nvar box = {\n  borderColor: \"#ddd\",\n  borderRadius: \"5px\",\n  border: \"1px solid rgb(221, 221, 221)\",\n  background: \"#fff\",\n  padding: \"10px\",\n  marginBottom: 10\n};\nvar gutter = 8;\nvar mainDivStyles = {\n  width: '100%',\n  height: '100%'\n};\nvar centerDivStyles = {\n  textAlign: 'center',\n  marginTop: 50,\n  fontSize: 30\n};\nvar margin = {\n  margin: '0 5px 5px 0'\n};\nvar userRole;\nvar thisObj = \"\";\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n  var _super = _createSuper(Dashboard);\n  function Dashboard(props) {\n    var _this;\n    _classCallCheck(this, Dashboard);\n    _this = _super.call(this, props);\n    _this.getList = function () {\n      var projectRole = getProjectRole();\n      showProgress();\n      CallServerPost('Study/GetStudyListForDashBoard ', {\n        UserID: projectRole.userProfile.userID,\n        ProjectID: projectRole.project.ProjectID,\n        RoleID: projectRole.role.RoleID\n      }).then(function (response) {\n        var _this2 = this;\n        //console.log(response);\n        if (response.value !== null) {\n          var resObj = response.value;\n          var datas = [];\n          var StudyList = resObj.StudyList,\n            StudyWorkflow = resObj.StudyWorkflow,\n            WorkflowActivityStatusTransition = resObj.WorkflowActivityStatusTransition,\n            ActivityWorkflowByProject = resObj.ActivityWorkflowByProject;\n\n          //get studyWorkFlow for the study \n\n          var permissions = thisObj.props.permissions;\n          var _loop = function _loop() {\n            var study = StudyList[i];\n            var studyid = study.studyID;\n            var studyWorkFlow = StudyWorkflow.find(function (wrkFlo) {\n              return wrkFlo.studyID === studyid;\n            });\n            if (!studyWorkFlow) {\n              return \"continue\";\n            }\n            var standardName = study.standardText; //to pass standardName to workspace\n            var studyLocked = StudyList[i].locked;\n            var studyName = StudyList[i].studyName;\n            var workflowActivityStatusID = StudyList[i].workflowActivityStatusID;\n            var directoryName = StudyList[i].projectText + \"_\" + StudyList[i].studyName;\n            var projectInActive = StudyList[i].projectStatusID = 5 ? false : true;\n\n            //Filter Activity Workflow By Study\n            // Variable ActivityWorkflowByProject contains all WFS by project\n            var ActivityWorkStatusflowByStudy = ActivityWorkflowByProject.filter(function (wf) {\n              return wf.studyID === studyid;\n            });\n            //Get the current WF status\n            var status = {\n              Annotation: NOTYETCONFIGURED,\n              Mapping: NOTYETCONFIGURED,\n              Program: NOTYETCONFIGURED,\n              Define: NOTYETCONFIGURED\n            };\n            ActivityWorkStatusflowByStudy.map(function (wfs) {\n              switch (wfs.workflowActivityID) {\n                //Annotation\n                case 2:\n                  status.Annotation = wfs.studyText;\n                  return;\n                //Transformation\n                case 3:\n                  status.Mapping = wfs.studyText;\n                  status.Program = wfs.studyText;\n                  return;\n                //Define\n                case 4:\n                  status.Define = wfs.studyText;\n                  return;\n              }\n            });\n            var workspcaePermission = permissions.StudyWorkSpace;\n            var workspaceMenu = /*#__PURE__*/React.createElement(Menu, {\n              onClick: function onClick(e) {\n                status[e.key] !== NOTYETCONFIGURED && thisObj.workspace(study, ActivityWorkStatusflowByStudy, e.key);\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }\n            }, study.annotationRequired && checkPermission(workspcaePermission, ['Annotation']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Annotation\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"file-text\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 45\n              }\n            }), \"Annotation - \", status.Annotation), study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Mapping\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"code\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 45\n              }\n            }), \"Mapping -  \", status.Mapping), study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Program\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"file-done\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 45\n              }\n            }), \"Output Generation -  \", status.Mapping), study.defineRequired && checkPermission(workspcaePermission, ['Define']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Define\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"read\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 45\n              }\n            }), \"Define XML -  \", status.Define));\n            var studyWorkSpaceCell = checkPermission(permissions, ['StudyWorkSpace']) >= 1 ? /*#__PURE__*/React.createElement(Dropdown, {\n              overlay: workspaceMenu,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              size: \"small\",\n              shape: \"round\",\n              style: margin,\n              name: StudyList[i].studyName + \"_StudyWorkSpace\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fas fa-external-link-alt\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 41\n              }\n            }))) : null;\n\n            //Get Workflow Column actions\n            //const { updateWorkFlow, fnToViewComment } = thisObj;\n            //Paremeters\n            //Study\n            //StudyWorkflow,\n            //WorkflowActivityStatusTransition\n            //Fn for both workflow onchange and comment click\n            var parameters = {\n              study: study,\n              permissions: thisObj.props.permissions,\n              isProjectInActive: projectInActive,\n              studyWorkFlow: studyWorkFlow,\n              WorkflowActivityStatusTransition: WorkflowActivityStatusTransition,\n              fnForWorkflow: thisObj.beforeUpdateTheWorkFlow,\n              fnForComment: thisObj.fnToViewComment,\n              MappingStatus: status.Mapping,\n              ActivityWorkStatusflowByStudy: ActivityWorkStatusflowByStudy\n            };\n            var workflowCell = WorkflowDropdown(parameters);\n            datas.push({\n              key: StudyList[i].studyID,\n              workSpace: studyWorkSpaceCell,\n              studyName: StudyList[i].studyName,\n              sponsorName: StudyList[i].sponsorName,\n              // needs to done properly, temporary hardcoding\n              activityName: studyWorkFlow.workflowActivityID == 2 ? \"Annotation\" : studyWorkFlow.workflowActivityID == 3 ? \"Transformation\" : studyWorkFlow.workflowActivityID == 4 ? \"Define XML\" : \"\",\n              workflowActivityStatusText: StudyList[i].workflowActivityStatusText,\n              actions: workflowCell\n            });\n          };\n          for (var i = 0; i < StudyList.length; i++) {\n            var _ret = _loop();\n            if (_ret === \"continue\") continue;\n          }\n          thisObj.setState({\n            studyList: StudyList,\n            datas: datas,\n            dataSource: datas,\n            loading: false,\n            esign: false\n          });\n        } else {\n          thisObj.setState({\n            studyList: [],\n            dataSource: [],\n            loading: false\n          });\n        }\n        hideProgress();\n      }).catch(function (error) {\n        return hideProgress();\n      });\n    };\n    _this.workspace = function (study, ActivityWorkFlowStatus, ActivityName) {\n      //Is project active or inactive\n      var projectStatus = study.isProjectInActive;\n      //Session storage\n      sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\n      sessionStorage.setItem(\"standard\", study.standardName);\n      sessionStorage.setItem(\"projectStudyLockStatus\", projectStatus || study.locked);\n      sessionStorage.setItem(\"workflowActivityStatusID\", study.workflowActivityStatusID);\n      var permissions = _this.props.permissions;\n      var projectStudyLockStatus = projectStatus ? true : study.locked ? true : false;\n      try {\n        //Loader\n        showProgress();\n        CallServerPost('ActivityConfiguration/GetActivityConfigurationDetailsByStudyID', {\n          FormName: \"Study\",\n          ActionName: \"Create\",\n          ProjectID: study.projectID,\n          StudyID: study.studyID\n        }).then(function (res) {\n          if (res.status === 1) {\n            var ActivityConfigList = res.value.ActivityConfigList;\n            var ActivityWorkSpace = new ActivityWorkspace(ActivityName);\n            ActivityWorkSpace.history = thisObj.props.history;\n            ActivityWorkSpace.data = {\n              study: study,\n              by: \"manual\",\n              from: \"Project\",\n              projectInActive: projectStatus,\n              allActivityDetails: ActivityConfigList,\n              ActivityWorkFlowStatus: ActivityWorkFlowStatus,\n              permissions: permissions.StudyWorkSpace[ActivityName],\n              projectStudyLockStatus: projectStudyLockStatus\n            };\n\n            //Here functionn will fire\n            ActivityWorkSpace.GoToActivityWorkspace();\n\n            //set topbar header\n            setHeader();\n            //end\n          } else {\n            hideProgress();\n          }\n        });\n      } catch (e) {\n        hideProgress();\n      }\n    };\n    _this.beforeUpdateTheWorkFlow = function (targetStatusID, study, studyWorkFlow, availableWorkflows) {\n      //studyWorkFlow parameter means current workflow of study\n      //Current study workflowActivityID, workflowActivityStatusID\n      var workflowActivityID = studyWorkFlow.workflowActivityID,\n        workflowActivityStatusID = studyWorkFlow.workflowActivityStatusID;\n\n      //Workflow going to change to\n      //Get workflowActivityStatusTransitionID\n      //wrkflo.sourceStatusID means workflowActivityStatusID\n      var changedWorkflowToUpdate = availableWorkflows.find(function (wrkflo) {\n        return wrkflo.targetStatusID === targetStatusID;\n      });\n      var data = {\n        studyID: study.studyID,\n        projectID: study.projectID,\n        workflowActivityID: workflowActivityID,\n        //targetStatusID means selected Workflow workflowActivityStatusID\n        workflowActivityStatusID: targetStatusID,\n        changeReason: changedWorkflowToUpdate.targetStatusText,\n        workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID\n      };\n      dynamicModal({\n        title: \"Confirmation\",\n        icon: \"exclamation-circle\",\n        msg: \"Do you want to change the status?\",\n        onOk: function onOk() {\n          if (changedWorkflowToUpdate.eSignRequired) {\n            showProgress();\n            thisObj.setState({\n              esign: true,\n              workFlowDataToUpdate: data,\n              esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\n            });\n            hideProgress();\n          } else {\n            thisObj.updateWorkFlow(data);\n          }\n        },\n        onCancel: function onCancel() {\n          new Promise(function (res, rej) {\n            thisObj.setState({\n              esign: false,\n              dataSource: []\n            }, res());\n          }).then(function () {\n            thisObj.setState({\n              dataSource: thisObj.state.datas\n            });\n          });\n        }\n      });\n    };\n    _this.afterEsignVerfied = function () {\n      var workFlowDataToUpdate = thisObj.state.workFlowDataToUpdate;\n      thisObj.updateWorkFlow(workFlowDataToUpdate);\n    };\n    _this.esignText = function (WorkFlow) {\n      var text = {\n        AnnotationReviewCompleted: \"I have reviewed this annotated document.\",\n        TransformationReviewCompleted: \"I have reviewed the mapping logic and verified the transformed output.\",\n        DefineGenerationReviewCompleted: \"I have reviewed generated define XML.\",\n        StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\"\n      };\n      return text[WorkFlow];\n    };\n    _this.updateWorkFlow = function (data) {\n      var projectRole = getProjectRole();\n      var zones = moment.tz.guess();\n      var timezone = moment.tz(zones).zoneAbbr();\n      var updatedBy = projectRole.userProfile.userID;\n      data.TimeZone = timezone;\n      data.UpdatedBy = updatedBy;\n      showProgress();\n      PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(function (response) {\n        hideProgress();\n        if (response.status == 1) {\n          thisObj.setState({\n            esign: false,\n            dataSource: []\n          });\n          successModalCallback(response.message, function () {\n            return thisObj.getList(thisObj.props);\n          });\n        } else {\n          thisObj.setState({\n            esign: false\n          });\n          errorModalCallback(response.message, function () {\n            new Promise(function (res, rej) {\n              thisObj.setState({\n                esign: false,\n                dataSource: []\n              }, res());\n            }).then(function () {\n              thisObj.setState({\n                dataSource: thisObj.state.datas\n              });\n            });\n          });\n        }\n      });\n    };\n    _this.cancelEsign = function (studyID) {\n      new Promise(function (res, rej) {\n        thisObj.setState({\n          esign: false,\n          dataSource: []\n        }, res());\n      }).then(function () {\n        thisObj.setState({\n          dataSource: thisObj.state.datas\n        });\n      });\n    };\n    _this.cancelPop = function () {\n      thisObj.setState({\n        esign: false,\n        commentFlag: false\n      });\n    };\n    _this.fnToViewComment = function (study) {\n      // let currentStudy = JSON.parse(study);\n      thisObj.setState({\n        studyID: study.studyID,\n        projectID: study.projectID,\n        commentFlag: true,\n        studyName: study.studyName\n      });\n    };\n    _this.studyActions = function (study, projectStatus, studyStatus, standardName, workflowActivityStatusID) {\n      sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\n      sessionStorage.setItem(\"standard\", standardName);\n      sessionStorage.setItem(\"projectStudyLockStatus\", projectStatus || studyStatus);\n      var role = sessionStorage.getItem(\"role\");\n      var roleID = validJSON(role).RoleID;\n      //showHeader\n      setHeader();\n      //end\n      if (workflowActivityStatusID != 2 && workflowActivityStatusID != 6 && workflowActivityStatusID != 10) {\n        thisObj.setState({\n          study: study,\n          projectStudyLockStatus: projectStatus ? true : studyStatus ? true : false,\n          standardName: standardName,\n          workflowActivityStatusID: workflowActivityStatusID,\n          TreeViewVisble: true\n        });\n      } else {\n        errorModal(\"Please update the Workflow Activity Status!\");\n      }\n    };\n    _this.studyActionss = function (study) {\n      sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\n      sessionStorage.setItem(\"standard\", \"SDTM\");\n      _this.props.history.push({\n        pathname: '/trans/treeview',\n        state: {\n          projectInActive: false\n        }\n      });\n    };\n    _this.fnTreeViewCancel = function () {\n      //set topbar header\n      sessionStorage.removeItem(\"studyDetails\");\n      setHeader();\n      //end\n      _this.setState({\n        TreeViewVisble: !_this.state.TreeViewVisble\n      });\n    };\n    var _projectRole = getProjectRole();\n    var _workflowActivityStatusID, _projectStudyLockStatus, _standardName;\n\n    //following line is for open selected study popup when from workspace\n    var locationState = props.history.location ? props.history.location.state : {};\n    var isOpenSelectedStudy = locationState ? locationState.openSelectedStudy : false;\n    if (isOpenSelectedStudy && locationState) {\n      var selStudy = JSON.parse(sessionStorage.studyDetails);\n      if (selStudy && typeof selStudy === \"object\") {\n        var studyLocked = selStudy.locked;\n        var projectInActive = selStudy.projectStatusID = 5 ? false : true;\n        _projectStudyLockStatus = projectInActive ? true : selStudy.studyStatus ? true : false;\n        _standardName = sessionStorage.getItem(\"standard\");\n        _workflowActivityStatusID = selStudy.workflowActivityStatusID;\n      }\n    }\n    _this.state = {\n      esign: false,\n      datasource: [],\n      userRole: _projectRole.role.RoleName,\n      commentFlag: false,\n      permissions: props.permissions,\n      studyID: -1,\n      projectID: -1,\n      esignText: \"\",\n      studyList: [],\n      TreeViewVisble: isOpenSelectedStudy,\n      workflowActivityStatusID: _workflowActivityStatusID,\n      projectStudyLockStatus: _projectStudyLockStatus,\n      standardName: _standardName,\n      studyName: \"\"\n    };\n    thisObj = _assertThisInitialized(_this);\n    thisObj.getList();\n    if (!isOpenSelectedStudy) {\n      setHeader(false);\n    }\n    return _this;\n  }\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var history = createHistory();\n      if (history.location.state && history.location.state.openSelectedStudy) {\n        var state = _objectSpread({}, history.location.state);\n        delete state.openSelectedStudy;\n        history.replace(_objectSpread(_objectSpread({}, history.location), {}, {\n          state: state\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var roleID = JSON.parse(sessionStorage.role).RoleID;\n      var _this$state = this.state,\n        study = _this$state.study,\n        workflowActivityStatusID = _this$state.workflowActivityStatusID,\n        projectStudyLockStatus = _this$state.projectStudyLockStatus,\n        standardName = _this$state.standardName,\n        TreeViewVisble = _this$state.TreeViewVisble,\n        studyList = _this$state.studyList,\n        esign = _this$state.esign,\n        esignText = _this$state.esignText,\n        userRole = _this$state.userRole,\n        dataSource = _this$state.dataSource,\n        commentFlag = _this$state.commentFlag,\n        permissions = _this$state.permissions,\n        projectID = _this$state.projectID,\n        studyID = _this$state.studyID,\n        studyName = _this$state.studyName;\n      var columns = [{\n        title: 'Work Space',\n        dataIndex: 'workSpace',\n        key: 'workSpace',\n        width: 50\n      }, {\n        title: 'Study Name',\n        dataIndex: 'studyName',\n        key: 'studyName',\n        width: 75,\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'studyName');\n        }\n      }, {\n        title: 'Sponsor Name',\n        dataIndex: 'sponsorName',\n        key: 'sponsorName',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'sponsorName');\n        },\n        width: 75\n      }, {\n        title: 'Activity Name',\n        dataIndex: 'activityName',\n        key: 'activityName',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'activityName');\n        },\n        width: 75\n      }, {\n        title: 'Activity Status',\n        dataIndex: 'workflowActivityStatusText',\n        key: 'workflowActivityStatusText',\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'workflowActivityStatusText');\n        },\n        width: 85\n      }, {\n        title: 'Workflow Activity Status',\n        dataIndex: 'actions',\n        key: 'actions',\n        width: 100\n      }];\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: '-30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Notifications, {\n        studyList: studyList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 40\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        span: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 17\n        }\n      }, this.state.actionName != \"Version\" && this.state.actionName != \"Reload\" && /*#__PURE__*/React.createElement(ReactTable, {\n        searchText: \"\",\n        columns: columns,\n        dataSource: this.state.dataSource\n        //addAction={(isProjectInActive) ? null : this.addStudy}\n        ,\n        scroll: {\n          y: \"calc(100vh - 213px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 33\n        }\n      }, this.state.commentFlag && /*#__PURE__*/React.createElement(Modal, {\n        visible: this.state.commentFlag,\n        maskClosable: false,\n        style: {\n          top: 20,\n          height: 'calc(100vh - 120px)'\n        },\n        title: this.state.studyName + \" - Comment\",\n        width: \"85%\",\n        onCancel: this.cancelPop,\n        footer: null,\n        ref: \"modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 67\n        }\n      }, /*#__PURE__*/React.createElement(CommentModal, {\n        permissions: permissions,\n        isProjectInActive: false,\n        projectID: this.state.projectID,\n        studyID: this.state.studyID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 41\n        }\n      }))), TreeViewVisble && /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(TreeView, {\n        from: \"Dashboard\",\n        study: study,\n        visible: true,\n        projectStudyLockStatus: projectStudyLockStatus,\n        projectInActive: this.props.isProjectInActive,\n        standardName: standardName,\n        history: this.props.history,\n        workflowActivityStatusID: workflowActivityStatusID,\n        TreeView: TreeView,\n        permissions: permissions.StudyWorkSpace,\n        cancel: this.fnTreeViewCancel,\n        updateWhenAnnotationView: this.updateWhenAnnotationView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 41\n        }\n      })), esign && /*#__PURE__*/React.createElement(ConfirmWithEsign, {\n        esignText: esignText,\n        studyPage: this,\n        cancelEsign: this.cancelEsign,\n        visible: esign,\n        onSubmit: this.afterEsignVerfied,\n        defaultValue: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 25\n        }\n      })));\n    }\n  }]);\n  return Dashboard;\n}(Component);\nexport default connect(null, {\n  logout: logout\n})(Dashboard);","map":{"version":3,"names":["React","Component","connect","Row","Col","Breadcrumb","Icon","Modal","Form","Dropdown","Menu","Link","Box","Button","LayoutWrapper","LayoutContent","moment","ContentHolder","IntlMessages","ReactTable","getProjectRole","stringSorter","CallServerPost","errorModal","showProgress","hideProgress","validJSON","dynamicModal","checkPermission","PostCallWithZone","errorModalCallback","successModalCallback","authAction","ConfirmWithEsign","CommentModal","Notifications","TreeView","setHeader","createHistory","WorkflowDropdown","ActivityWorkspace","NOTYETCONFIGURED","antIcon","padding","fontSize","color","logout","rowStyle","width","display","flexFlow","colStyle","height","marginBottom","box","borderColor","borderRadius","border","background","gutter","mainDivStyles","centerDivStyles","textAlign","marginTop","margin","userRole","thisObj","Dashboard","props","getList","projectRole","UserID","userProfile","userID","ProjectID","project","RoleID","role","then","response","value","resObj","datas","StudyList","StudyWorkflow","WorkflowActivityStatusTransition","ActivityWorkflowByProject","permissions","study","i","studyid","studyID","studyWorkFlow","find","wrkFlo","standardName","standardText","studyLocked","locked","studyName","workflowActivityStatusID","directoryName","projectText","projectInActive","projectStatusID","ActivityWorkStatusflowByStudy","filter","wf","status","Annotation","Mapping","Program","Define","map","wfs","workflowActivityID","studyText","workspcaePermission","StudyWorkSpace","workspaceMenu","e","key","workspace","annotationRequired","mappingRequried","defineRequired","studyWorkSpaceCell","parameters","isProjectInActive","fnForWorkflow","beforeUpdateTheWorkFlow","fnForComment","fnToViewComment","MappingStatus","workflowCell","push","workSpace","sponsorName","activityName","workflowActivityStatusText","actions","length","setState","studyList","dataSource","loading","esign","catch","error","ActivityWorkFlowStatus","ActivityName","projectStatus","sessionStorage","setItem","JSON","stringify","projectStudyLockStatus","FormName","ActionName","projectID","StudyID","res","ActivityConfigList","ActivityWorkSpace","history","data","by","from","allActivityDetails","GoToActivityWorkspace","targetStatusID","availableWorkflows","changedWorkflowToUpdate","wrkflo","changeReason","targetStatusText","workflowActivityStatusTransitionID","title","icon","msg","onOk","eSignRequired","workFlowDataToUpdate","esignText","replace","updateWorkFlow","onCancel","Promise","rej","state","afterEsignVerfied","WorkFlow","text","AnnotationReviewCompleted","TransformationReviewCompleted","DefineGenerationReviewCompleted","StudyCompleted","zones","tz","guess","timezone","zoneAbbr","updatedBy","TimeZone","UpdatedBy","message","cancelEsign","cancelPop","commentFlag","studyActions","studyStatus","getItem","roleID","TreeViewVisble","studyActionss","pathname","fnTreeViewCancel","removeItem","locationState","location","isOpenSelectedStudy","openSelectedStudy","selStudy","parse","studyDetails","datasource","RoleName","columns","dataIndex","sorter","a","b","actionName","y","top","updateWhenAnnotationView"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Dashboard/dashboard.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Breadcrumb, Icon, Modal, Form, Dropdown,Menu} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Box from '../../components/utility/box';\r\nimport Button from '../../components/uielements/button';\r\nimport LayoutWrapper from '../../components/utility/layoutWrapper';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport moment from 'moment-timezone';\r\nimport ContentHolder from '../../components/utility/contentHolder';\r\nimport IntlMessages from '../../components/utility/intlMessages';\r\nimport ReactTable from '../Utility/reactTable';\r\nimport { getProjectRole } from '../Utility/sharedUtility';\r\nimport { stringSorter } from \"../Utility/htmlUtility\";\r\nimport {\r\n    CallServerPost,\r\n    errorModal,\r\n    showProgress,\r\n    hideProgress,\r\n    validJSON,\r\n    dynamicModal,\r\n    checkPermission,\r\n    PostCallWithZone,\r\n    errorModalCallback,\r\n    successModalCallback\r\n} from '../Utility/sharedUtility';\r\nimport authAction from '../../redux/auth/actions';\r\n//import { workflowActionButton, afterEsignVerfied } from '../Study/WorkFlowBtn';\r\nimport ConfirmWithEsign from '../Study/confirmationWithEsign';\r\nimport CommentModal from '../TreeView/comments.js'\r\nimport Notifications from './Notifications';\r\nimport TreeView from '../TreeView';\r\nimport { setHeader } from '../Topbar/Topbar';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport { WorkflowDropdown } from './../Study/workflowDropdown';\r\nimport { ActivityWorkspace } from '../Study/ActivityWorkspace';\r\n\r\nimport { NOTYETCONFIGURED } from '../Utility/appConstants';\r\nconst antIcon = <Icon type=\"loading\" style={{ padding:\"0px !important\",fontSize: 24, color: '#17242c' }} spin />;\r\nconst { logout } = authAction;\r\n\r\nconst rowStyle = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'row wrap',\n\n};\nconst colStyle = {\n    height: 200,\n    marginBottom:8\n};\nconst box = {\n    borderColor: \"#ddd\",\r\n    borderRadius: \"5px\",\r\n    border: \"1px solid rgb(221, 221, 221)\",\r\n    background: \"#fff\",\n    padding: \"10px\",\n    marginBottom:10,\n}\nconst gutter = 8;\nconst mainDivStyles = {\r\n    width: '100%',\r\n    height: '100%'\r\n};\r\nconst centerDivStyles = {\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    fontSize:30\r\n};\r\nconst margin = {\n    margin: '0 5px 5px 0'\n};\r\nvar userRole;\r\nvar thisObj = \"\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const projectRole = getProjectRole();\r\n\r\n        var workflowActivityStatusID, projectStudyLockStatus, standardName;\r\n\r\n        //following line is for open selected study popup when from workspace\r\n        let locationState = props.history.location ? props.history.location.state : {};\r\n        let isOpenSelectedStudy = locationState ? locationState.openSelectedStudy : false;\r\n\r\n        if (isOpenSelectedStudy && locationState)\r\n        {\r\n            let selStudy = JSON.parse(sessionStorage.studyDetails);\r\n            if (selStudy && typeof selStudy === \"object\") {\r\n                const studyLocked = selStudy.locked;\r\n                const projectInActive = selStudy.projectStatusID = 5 ? false : true;\r\n\r\n                projectStudyLockStatus = projectInActive ? true : (selStudy.studyStatus ? true : false);\r\n                standardName = sessionStorage.getItem(\"standard\");\r\n                workflowActivityStatusID = selStudy.workflowActivityStatusID;\r\n            }\r\n        }\r\n\r\n        this.state =\r\n        {\r\n            esign:false,\r\n            datasource: [],\r\n            userRole: projectRole.role.RoleName,\r\n            commentFlag: false,\r\n            permissions: props.permissions,\r\n            studyID: -1,\r\n            projectID: -1,\r\n            esignText: \"\",\r\n            studyList: [],\r\n            TreeViewVisble: isOpenSelectedStudy,\r\n            workflowActivityStatusID: workflowActivityStatusID,\r\n            projectStudyLockStatus: projectStudyLockStatus,\r\n            standardName: standardName,\r\n            studyName:\"\"\r\n\r\n        };\r\n        thisObj = this;\r\n        thisObj.getList();\r\n\r\n        if (!isOpenSelectedStudy)\r\n        {\r\n            setHeader(false);\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        const history = createHistory();\r\n        if (history.location.state && history.location.state.openSelectedStudy) {\r\n            let state = { ...history.location.state };\r\n            delete state.openSelectedStudy;\r\n            history.replace({ ...history.location, state });\r\n        }\r\n\r\n    }\r\n    getList = () => {\r\n        const projectRole = getProjectRole();\r\n        showProgress();\r\n\r\n        CallServerPost('Study/GetStudyListForDashBoard ', { UserID: projectRole.userProfile.userID, ProjectID: projectRole.project.ProjectID, RoleID: projectRole.role.RoleID })\r\n            .then(\r\n                function (response) {\r\n                    //console.log(response);\r\n                    if (response.value !== null) {\r\n                        const resObj = response.value\r\n                        var datas = [];\r\n                        const {\r\n                            StudyList,\r\n                            StudyWorkflow,\r\n                            WorkflowActivityStatusTransition,\r\n                            ActivityWorkflowByProject\r\n                        } = resObj;\r\n\r\n                        //get studyWorkFlow for the study \r\n\r\n                        const permissions = thisObj.props.permissions;\r\n\r\n                        for (var i = 0; i < StudyList.length; i++) {\r\n\r\n                            const study = StudyList[i];\r\n                            const studyid = study.studyID;\r\n                            const studyWorkFlow = StudyWorkflow.find(wrkFlo => wrkFlo.studyID === studyid);\r\n\r\n                            if (!studyWorkFlow) {\r\n                                continue;\r\n                            }\r\n\r\n\r\n                            const standardName = study.standardText;  //to pass standardName to workspace\r\n                            const studyLocked = StudyList[i].locked;\r\n                            const studyName = StudyList[i].studyName;\r\n                            const workflowActivityStatusID = StudyList[i].workflowActivityStatusID;\r\n                            const directoryName = StudyList[i].projectText + \"_\" + StudyList[i].studyName;\r\n                            const projectInActive = StudyList[i].projectStatusID = 5 ? false : true;\r\n\r\n                            //Filter Activity Workflow By Study\r\n                            // Variable ActivityWorkflowByProject contains all WFS by project\r\n                            const ActivityWorkStatusflowByStudy = ActivityWorkflowByProject.filter(wf => wf.studyID === studyid);\r\n                            //Get the current WF status\r\n                            let status =\r\n                            {\r\n                                Annotation: NOTYETCONFIGURED,\r\n                                Mapping: NOTYETCONFIGURED,\r\n                                Program: NOTYETCONFIGURED,\r\n                                Define: NOTYETCONFIGURED\r\n                            }\r\n\r\n                            ActivityWorkStatusflowByStudy.map(wfs => {\r\n                                switch (wfs.workflowActivityID) {\r\n                                    //Annotation\r\n                                    case 2:\r\n                                        status.Annotation = wfs.studyText;\r\n                                        return;\r\n                                    //Transformation\r\n                                    case 3:\r\n                                        status.Mapping = wfs.studyText;\r\n                                        status.Program = wfs.studyText;\r\n                                        return;\r\n                                    //Define\r\n                                    case 4:\r\n                                        status.Define = wfs.studyText;\r\n                                        return;\r\n                                }\r\n                            });\r\n\r\n                            let workspcaePermission = permissions.StudyWorkSpace;\r\n\r\n                            const workspaceMenu = (\r\n                                <Menu onClick={(e) => {\r\n                                    status[e.key] !== NOTYETCONFIGURED &&\r\n                                        thisObj.workspace(study, ActivityWorkStatusflowByStudy, e.key);\r\n                                }}>\r\n                                    {\r\n                                        study.annotationRequired && checkPermission(workspcaePermission, ['Annotation']) >= 1  &&\r\n                                        <Menu.Item key=\"Annotation\">\r\n                                            <Icon type=\"file-text\" />\r\n                                            Annotation - {status.Annotation}\r\n                                        </Menu.Item>\r\n                                    }\r\n                                    {\r\n                                        study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 &&\r\n                                        <Menu.Item key=\"Mapping\">\r\n                                            <Icon type=\"code\" />\r\n                                                Mapping -  {status.Mapping}\r\n                                        </Menu.Item>\r\n                                    }\r\n                                    {\r\n                                        study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 &&\r\n                                        <Menu.Item key=\"Program\">\r\n                                            <Icon type=\"file-done\" />\r\n                                                Output Generation -  {status.Mapping}\r\n                                        </Menu.Item>\r\n                                    }\r\n                                    {\r\n                                        study.defineRequired &&  checkPermission(workspcaePermission, ['Define']) >= 1 &&\r\n                                        <Menu.Item key=\"Define\">\r\n                                            <Icon type=\"read\" />\r\n                                            Define XML -  {status.Define}\r\n                                        </Menu.Item>\r\n                                    }\r\n                                </Menu>\r\n\r\n                            );\r\n\r\n                            const studyWorkSpaceCell = checkPermission(permissions, ['StudyWorkSpace']) >= 1 ?\r\n                                <Dropdown overlay={workspaceMenu}>\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        shape=\"round\"\r\n                                        style={margin}\r\n                                        name={StudyList[i].studyName + \"_StudyWorkSpace\"}\r\n                                    >\r\n                                        <i className=\"fas fa-external-link-alt\" />\r\n                                    </Button>\r\n                                </Dropdown> : null;\r\n                                                    \r\n\r\n    \r\n\r\n                            //Get Workflow Column actions\r\n                            //const { updateWorkFlow, fnToViewComment } = thisObj;\r\n                            //Paremeters\r\n                            //Study\r\n                            //StudyWorkflow,\r\n                            //WorkflowActivityStatusTransition\r\n                            //Fn for both workflow onchange and comment click\r\n                            let parameters = {\r\n                                study: study,\r\n                                permissions: thisObj.props.permissions,\r\n                                isProjectInActive: projectInActive,\r\n                                studyWorkFlow: studyWorkFlow,\r\n                                WorkflowActivityStatusTransition: WorkflowActivityStatusTransition,\r\n                                fnForWorkflow: thisObj.beforeUpdateTheWorkFlow,\r\n                                fnForComment: thisObj.fnToViewComment,\r\n                                MappingStatus: status.Mapping,\r\n                                ActivityWorkStatusflowByStudy: ActivityWorkStatusflowByStudy\r\n                            };\r\n\r\n                            const workflowCell = WorkflowDropdown(parameters);\r\n\r\n                            datas.push({\r\n                                key: StudyList[i].studyID,\r\n                                workSpace: studyWorkSpaceCell,\r\n                                studyName: StudyList[i].studyName,\r\n                                sponsorName: StudyList[i].sponsorName,\r\n                                // needs to done properly, temporary hardcoding\r\n                                activityName: studyWorkFlow.workflowActivityID == 2 ? \"Annotation\" : studyWorkFlow.workflowActivityID == 3 ? \"Transformation\" : studyWorkFlow.workflowActivityID == 4 ? \"Define XML\" : \"\",\r\n                                workflowActivityStatusText: StudyList[i].workflowActivityStatusText,\r\n                                actions: workflowCell\r\n                            });\r\n                        }\r\n\r\n                        thisObj.setState({\r\n                            studyList: StudyList,\r\n                            datas: datas,\r\n                            dataSource: datas,\r\n                            loading: false, esign: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        thisObj.setState({ studyList: [], dataSource: [], loading: false });\r\n                    }\r\n                    hideProgress();\r\n\r\n                }).catch(error => hideProgress());\r\n    }\r\n\r\n    //open workspace pop\r\n    workspace = (study, ActivityWorkFlowStatus, ActivityName) => {\r\n        //Is project active or inactive\r\n        let projectStatus = study.isProjectInActive;\r\n        //Session storage\r\n        sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\r\n        sessionStorage.setItem(\"standard\", study.standardName);\r\n        sessionStorage.setItem(\"projectStudyLockStatus\", projectStatus || study.locked);\r\n        sessionStorage.setItem(\"workflowActivityStatusID\", study.workflowActivityStatusID);\r\n        const permissions = this.props.permissions;\r\n\r\n        let projectStudyLockStatus = projectStatus ? true : (study.locked ? true : false);\r\n        try {\r\n            //Loader\r\n            showProgress();\r\n            CallServerPost('ActivityConfiguration/GetActivityConfigurationDetailsByStudyID',\r\n                {\r\n                    FormName: \"Study\",\r\n                    ActionName: \"Create\",\r\n                    ProjectID: study.projectID,\r\n                    StudyID: study.studyID,\r\n                })\r\n                .then(function (res) {\r\n                    if (res.status === 1) {\r\n                        let { ActivityConfigList } = res.value;\r\n\r\n                        let ActivityWorkSpace = new ActivityWorkspace(ActivityName);\r\n                        ActivityWorkSpace.history = thisObj.props.history;\r\n\r\n                        ActivityWorkSpace.data =\r\n                        {\r\n                            study: study,\r\n                            by: \"manual\",\r\n                            from: \"Project\",\r\n                            projectInActive: projectStatus,\r\n                            allActivityDetails: ActivityConfigList,\r\n                            ActivityWorkFlowStatus: ActivityWorkFlowStatus,\r\n                            permissions: permissions.StudyWorkSpace[ActivityName],\r\n                            projectStudyLockStatus: projectStudyLockStatus\r\n                        }\r\n\r\n                        //Here functionn will fire\r\n                        ActivityWorkSpace.GoToActivityWorkspace();\r\n\r\n                        //set topbar header\r\n                        setHeader();\r\n                        //end\r\n                    }\r\n                    else {\r\n                        hideProgress();\r\n                    }\r\n                });\r\n        }\r\n        catch (e) {\r\n            hideProgress();\r\n        }\r\n    }\r\n\r\n    //workflow staus update Start\r\n    //Before update\r\n    beforeUpdateTheWorkFlow = (targetStatusID, study, studyWorkFlow, availableWorkflows) => {\r\n        //studyWorkFlow parameter means current workflow of study\r\n        //Current study workflowActivityID, workflowActivityStatusID\r\n        let { workflowActivityID, workflowActivityStatusID } = studyWorkFlow;\r\n\r\n        //Workflow going to change to\r\n        //Get workflowActivityStatusTransitionID\r\n        //wrkflo.sourceStatusID means workflowActivityStatusID\r\n        let changedWorkflowToUpdate = availableWorkflows.find(wrkflo => wrkflo.targetStatusID === targetStatusID);\r\n\r\n\r\n        let data =\r\n        {\r\n            studyID: study.studyID,\r\n            projectID: study.projectID,\r\n            workflowActivityID: workflowActivityID,\r\n            //targetStatusID means selected Workflow workflowActivityStatusID\r\n            workflowActivityStatusID: targetStatusID,\r\n            changeReason: changedWorkflowToUpdate.targetStatusText,\r\n            workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID\r\n        }\r\n        dynamicModal({\r\n            title: \"Confirmation\",\r\n            icon: \"exclamation-circle\",\r\n            msg: \"Do you want to change the status?\",\r\n            onOk: () => {\r\n                if (changedWorkflowToUpdate.eSignRequired) {\r\n                    showProgress();\r\n                    thisObj.setState({\r\n                        esign: true,\r\n                        workFlowDataToUpdate: data,\r\n                        esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\r\n                    })\r\n                    hideProgress();\r\n\r\n                } else {\r\n                    thisObj.updateWorkFlow(data);\r\n                }\r\n            },\r\n            onCancel: () =>\r\n            {\r\n                new Promise((res, rej) => {\r\n                    thisObj.setState({ esign: false, dataSource: [] }, res());\r\n                }).then(() => {\r\n                    thisObj.setState({ dataSource: thisObj.state.datas });\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //After Esifn verify\r\n    afterEsignVerfied = () => {\r\n        let { workFlowDataToUpdate } = thisObj.state;\r\n        thisObj.updateWorkFlow(workFlowDataToUpdate);\r\n    }\r\n\r\n    //Get Manual Esign text\r\n    esignText = (WorkFlow) => {\r\n        let text =\r\n        {\r\n            AnnotationReviewCompleted: \"I have reviewed this annotated document.\",\r\n            TransformationReviewCompleted: \"I have reviewed the mapping logic and verified the transformed output.\",\r\n            DefineGenerationReviewCompleted: \"I have reviewed generated define XML.\",\r\n            StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\",\r\n        }\r\n        return text[WorkFlow];\r\n    }\r\n\r\n\r\n    //Final\r\n    updateWorkFlow = (data) => {\r\n\r\n        const projectRole = getProjectRole();\r\n        const zones = moment.tz.guess();\r\n        const timezone = moment.tz(zones).zoneAbbr();\r\n        let updatedBy = projectRole.userProfile.userID;\r\n        data.TimeZone = timezone;\r\n        data.UpdatedBy = updatedBy;\r\n\r\n        showProgress();\r\n        PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(\r\n            function (response) {\r\n                hideProgress();\r\n                if (response.status == 1) {\r\n                    thisObj.setState({ esign: false, dataSource:[]});\r\n                    successModalCallback(response.message, () => thisObj.getList(thisObj.props));\r\n                }\r\n                else {\r\n                    thisObj.setState({ esign: false });\r\n                    errorModalCallback(response.message, () => {\r\n                        new Promise((res, rej) => {\r\n                            thisObj.setState({ esign: false, dataSource: [] }, res());\r\n                        }).then(() => {\r\n                            thisObj.setState({ dataSource: thisObj.state.datas });\r\n                        });\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    cancelEsign = (studyID) => {\r\n        new Promise((res, rej) => {\r\n            thisObj.setState({ esign: false, dataSource: [] }, res());\r\n        }).then(() => {\r\n            thisObj.setState({ dataSource: thisObj.state.datas });\r\n        });\r\n    }\r\n    //End\r\n    cancelPop = () => {\r\n        thisObj.setState({ esign: false, commentFlag: false});\r\n    }\r\n    fnToViewComment = (study) => {\r\n        // let currentStudy = JSON.parse(study);\r\n        thisObj.setState({ studyID: study.studyID, projectID: study.projectID, commentFlag: true, studyName: study.studyName });\r\n    }\r\n\r\n    studyActions = (study, projectStatus, studyStatus, standardName, workflowActivityStatusID) =>\r\n    {\r\n        sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\r\n        sessionStorage.setItem(\"standard\", standardName);\r\n        sessionStorage.setItem(\"projectStudyLockStatus\", projectStatus || studyStatus);\r\n        let role = sessionStorage.getItem(\"role\");\r\n        let roleID = validJSON(role).RoleID;\r\n        //showHeader\r\n        setHeader();\r\n        //end\r\n        if (workflowActivityStatusID != 2 && workflowActivityStatusID != 6 && workflowActivityStatusID != 10) {\r\n  \r\n            thisObj.setState({\r\n                study: study,\r\n                projectStudyLockStatus: projectStatus ? true : (studyStatus ? true : false),\r\n                standardName: standardName,\r\n                workflowActivityStatusID: workflowActivityStatusID,\r\n                TreeViewVisble: true\r\n            });\r\n        }\r\n        else\r\n        {\r\n            errorModal(\"Please update the Workflow Activity Status!\");\r\n        }\r\n    }\r\n\r\n    studyActionss = (study) => {\r\n        sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\r\n        sessionStorage.setItem(\"standard\", \"SDTM\");\r\n        this.props.history.push({\r\n            pathname: '/trans/treeview',\r\n            state: {\r\n                projectInActive: false,\r\n            }\r\n        }\r\n        );    }\r\n\r\n//        validateRoleWithStatusID = () => {\r\n//    let roleID = JSON.parse(sessionStorage.role).RoleID;\r\n\r\n//    //return id's are workflow statusID\r\n//        switch (roleID) {\r\n\r\n//        //Data Annotator\r\n//            case 5:                \r\n//                return [2,3]; \r\n//        //Annotation Reviwer\r\n//            case 6:\r\n//                return [4];\r\n//        //Mapping Programmer\r\n//        case 7:            \r\n//                return [6,7];\r\n//        //Mapping Reviewer\r\n//        case 8:\r\n//                return [8, 10];\r\n//        // Data Analyst\r\n//        case 9:        \r\n//                return [12,13,14];\r\n//        default:\r\n//            return [-1];\r\n\r\n//    }\r\n//}\r\n\r\n    fnTreeViewCancel = () => {\r\n        //set topbar header\r\n         sessionStorage.removeItem(\"studyDetails\")\r\n         setHeader();\r\n        //end\r\n        this.setState({ TreeViewVisble: !this.state.TreeViewVisble });\r\n\r\n    }\r\n    render() {\r\n        let roleID = JSON.parse(sessionStorage.role).RoleID;\r\n        const { study, workflowActivityStatusID, projectStudyLockStatus, standardName, TreeViewVisble, studyList, esign, esignText, userRole, dataSource, commentFlag, permissions, projectID, studyID, studyName } = this.state;\r\n        \r\n        const columns = [{\r\n            title: 'Work Space',\r\n            dataIndex: 'workSpace',\r\n            key: 'workSpace',\r\n            width: 50,\r\n        },\r\n            {\r\n            title: 'Study Name',\r\n            dataIndex: 'studyName',\r\n            key: 'studyName',\r\n            width: 75,\r\n            sorter: (a, b) => stringSorter(a, b, 'studyName'),\r\n        },\r\n        {\r\n            title: 'Sponsor Name',\r\n            dataIndex: 'sponsorName',\r\n            key: 'sponsorName',\r\n            sorter: (a, b) => stringSorter(a, b, 'sponsorName'),\r\n            width: 75,\r\n\r\n            },\r\n            {\r\n                title: 'Activity Name',\r\n                dataIndex: 'activityName',\r\n                key: 'activityName',\r\n                sorter: (a, b) => stringSorter(a, b, 'activityName'),\r\n                width: 75,\r\n\r\n            },\r\n            {\r\n                title: 'Activity Status',\r\n                dataIndex: 'workflowActivityStatusText',\r\n                key: 'workflowActivityStatusText',\r\n                sorter: (a, b) => stringSorter(a, b, 'workflowActivityStatusText'),\r\n                width: 85,\r\n\r\n            },{\r\n            title: 'Workflow Activity Status',\r\n            dataIndex: 'actions',\r\n            key: 'actions',\r\n            width: 100,\r\n\r\n\r\n            }];\r\n\r\n        return (        \r\n\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <div style={{ padding: '-30px' }}>\r\n\r\n                        <Col span={24}><Notifications studyList={studyList} /></Col>\r\n\r\n                        </div>\r\n                    </Col>\r\n                <Col span={18}>\r\n                            {\r\n\r\n                                (this.state.actionName != \"Version\" && this.state.actionName != \"Reload\") &&\r\n                                <ReactTable\r\n                                    searchText=\"\"\r\n                                    columns={columns}\r\n                                    dataSource={this.state.dataSource}\r\n                                    //addAction={(isProjectInActive) ? null : this.addStudy}\r\n                                    scroll={{ y: \"calc(100vh - 213px)\" }}\r\n                                />\r\n                            }\r\n                                <Form>\r\n                                    {\r\n                                        this.state.commentFlag && <Modal\r\n                                            visible={this.state.commentFlag}\r\n                                            maskClosable={false}\r\n                                            style={{ top: 20, height: 'calc(100vh - 120px)' }}\r\n                                            title={this.state.studyName + \" - Comment\"}\r\n                                            width='85%'\r\n                                            onCancel={this.cancelPop}\r\n                                            footer={null}\r\n                                            ref=\"modal\"\r\n                                        >\r\n\r\n                                        <CommentModal permissions={permissions} isProjectInActive={false} projectID={this.state.projectID} studyID={this.state.studyID} />\r\n                                        </Modal>\r\n                                    }\r\n                            \r\n                    </Form>\r\n                                {(TreeViewVisble) && <Form>\r\n                                    \r\n\r\n                                        <TreeView\r\n                                            from={\"Dashboard\"}\r\n                                            study={study}\r\n                                            visible={true}\r\n                                            projectStudyLockStatus={projectStudyLockStatus}\r\n                                            projectInActive={this.props.isProjectInActive}\r\n                                            standardName={standardName}\r\n                                            history={this.props.history}\r\n                                            workflowActivityStatusID={workflowActivityStatusID}\r\n                                            TreeView={TreeView}\r\n                                            permissions={permissions.StudyWorkSpace}\r\n                                            cancel={this.fnTreeViewCancel}\r\n                                            updateWhenAnnotationView={this.updateWhenAnnotationView}\r\n                                        />\r\n                                \r\n\r\n                                        </Form>\r\n                    }\r\n                    {esign &&\r\n                        <ConfirmWithEsign\r\n                            esignText={esignText}\r\n                            studyPage={this}\r\n                            cancelEsign={this.cancelEsign}\r\n                            visible={esign}\r\n                            onSubmit={this.afterEsignVerfied} defaultValue={\"\"} />\r\n                    }\r\n\r\n                        \r\n                     </Col>\r\n                </Row>                \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { logout })(Dashboard);"],"mappings":"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"},"metadata":{},"sourceType":"module"}