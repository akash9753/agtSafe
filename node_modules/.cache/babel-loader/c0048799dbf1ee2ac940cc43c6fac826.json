{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\nrequire(\"core-js/modules/es.symbol.description\");\nrequire(\"core-js/modules/es.symbol.iterator\");\nrequire(\"core-js/modules/es.array.concat\");\nrequire(\"core-js/modules/es.array.includes\");\nrequire(\"core-js/modules/es.array.iterator\");\nrequire(\"core-js/modules/es.object.to-string\");\nrequire(\"core-js/modules/es.object.values\");\nrequire(\"core-js/modules/es.regexp.to-string\");\nrequire(\"core-js/modules/es.string.includes\");\nrequire(\"core-js/modules/es.string.iterator\");\nrequire(\"core-js/modules/web.dom-collections.for-each\");\nrequire(\"core-js/modules/web.dom-collections.iterator\");\nexports.__esModule = true;\nexports.default = void 0;\nvar _element = require(\"./../../../helpers/dom/element\");\nvar _border = _interopRequireDefault(require(\"./border\"));\nvar _coords = _interopRequireDefault(require(\"./cell/coords\"));\nvar _range = _interopRequireDefault(require(\"./cell/range\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @class Selection\n */\nvar Selection = /*#__PURE__*/\nfunction () {\n  /**\n   * @param {Object} settings\n   * @param {CellRange} cellRange\n   */\n  function Selection(settings, cellRange) {\n    _classCallCheck(this, Selection);\n    this.settings = settings;\n    this.cellRange = cellRange || null;\n    this.instanceBorders = {};\n    this.classNames = [this.settings.className];\n    this.classNameGenerator = this.linearClassNameGenerator(this.settings.className, this.settings.layerLevel);\n  }\n  /**\n   * Each Walkontable clone requires it's own border for every selection. This method creates and returns selection\n   * borders per instance\n   *\n   * @param {Walkontable} wotInstance\n   * @returns {Border}\n   */\n\n  _createClass(Selection, [{\n    key: \"getBorder\",\n    value: function getBorder(wotInstance) {\n      if (!this.instanceBorders[wotInstance.guid]) {\n        this.instanceBorders[wotInstance.guid] = new _border.default(wotInstance, this.settings);\n      }\n      return this.instanceBorders[wotInstance.guid];\n    }\n    /**\n     * Checks if selection is empty\n     *\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.cellRange === null;\n    }\n    /**\n     * Adds a cell coords to the selection\n     *\n     * @param {CellCoords} coords\n     */\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      if (this.isEmpty()) {\n        this.cellRange = new _range.default(coords);\n      } else {\n        this.cellRange.expand(coords);\n      }\n      return this;\n    }\n    /**\n     * If selection range from or to property equals oldCoords, replace it with newCoords. Return boolean\n     * information about success\n     *\n     * @param {CellCoords} oldCoords\n     * @param {CellCoords} newCoords\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"replace\",\n    value: function replace(oldCoords, newCoords) {\n      if (!this.isEmpty()) {\n        if (this.cellRange.from.isEqual(oldCoords)) {\n          this.cellRange.from = newCoords;\n          return true;\n        }\n        if (this.cellRange.to.isEqual(oldCoords)) {\n          this.cellRange.to = newCoords;\n          return true;\n        }\n      }\n      return false;\n    }\n    /**\n     * Clears selection\n     *\n     * @returns {Selection}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cellRange = null;\n      return this;\n    }\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`\n     */\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var topLeft = this.cellRange.getTopLeftCorner();\n      var bottomRight = this.cellRange.getBottomRightCorner();\n      return [topLeft.row, topLeft.col, bottomRight.row, bottomRight.col];\n    }\n    /**\n     * Adds class name to cell element at given coords\n     *\n     * @param {Walkontable} wotInstance Walkontable instance\n     * @param {Number} sourceRow Cell row coord\n     * @param {Number} sourceColumn Cell column coord\n     * @param {String} className Class name\n     * @param {Boolean} [markIntersections=false] If `true`, linear className generator will be used to add CSS classes\n     *                                            in a continuous way.\n     * @returns {Selection}\n     */\n  }, {\n    key: \"addClassAtCoords\",\n    value: function addClassAtCoords(wotInstance, sourceRow, sourceColumn, className) {\n      var markIntersections = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var TD = wotInstance.wtTable.getCell(new _coords.default(sourceRow, sourceColumn));\n      if (_typeof(TD) === 'object') {\n        var cellClassName = className;\n        if (markIntersections) {\n          cellClassName = this.classNameGenerator(TD);\n          if (!this.classNames.includes(cellClassName)) {\n            this.classNames.push(cellClassName);\n          }\n        }\n        (0, _element.addClass)(TD, cellClassName);\n      }\n      return this;\n    }\n    /**\n     * Generate helper for calculating classNames based on previously added base className.\n     * The generated className is always generated as a continuation of the previous className. For example, when\n     * the currently checked element has 'area-2' className the generated new className will be 'area-3'. When\n     * the element doesn't have any classNames than the base className will be returned ('area');\n     *\n     * @param {String} baseClassName Base className to be used.\n     * @param {Number} layerLevelOwner Layer level which the instance of the Selection belongs to.\n     * @return {Function}\n     */\n  }, {\n    key: \"linearClassNameGenerator\",\n    value: function linearClassNameGenerator(baseClassName, layerLevelOwner) {\n      // TODO: Make this recursive function Proper Tail Calls (TCO/PTC) friendly.\n      return function calcClassName(element) {\n        var previousIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n        if (layerLevelOwner === 0 || previousIndex === 0) {\n          return baseClassName;\n        }\n        var index = previousIndex >= 0 ? previousIndex : layerLevelOwner;\n        var className = baseClassName;\n        index -= 1;\n        var previousClassName = index === 0 ? baseClassName : \"\".concat(baseClassName, \"-\").concat(index);\n        if ((0, _element.hasClass)(element, previousClassName)) {\n          var currentLayer = index + 1;\n          className = \"\".concat(baseClassName, \"-\").concat(currentLayer);\n        } else {\n          className = calcClassName(element, index);\n        }\n        return className;\n      };\n    }\n    /**\n     * @param wotInstance\n     */\n  }, {\n    key: \"draw\",\n    value: function draw(wotInstance) {\n      if (this.isEmpty()) {\n        if (this.settings.border) {\n          this.getBorder(wotInstance).disappear();\n        }\n        return;\n      }\n      var renderedRows = wotInstance.wtTable.getRenderedRowsCount();\n      var renderedColumns = wotInstance.wtTable.getRenderedColumnsCount();\n      var corners = this.getCorners();\n      var _corners = _slicedToArray(corners, 4),\n        topRow = _corners[0],\n        topColumn = _corners[1],\n        bottomRow = _corners[2],\n        bottomColumn = _corners[3];\n      for (var column = 0; column < renderedColumns; column += 1) {\n        var sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column);\n        if (sourceCol >= topColumn && sourceCol <= bottomColumn) {\n          var TH = wotInstance.wtTable.getColumnHeader(sourceCol);\n          if (TH) {\n            var newClasses = [];\n            if (this.settings.highlightHeaderClassName) {\n              newClasses.push(this.settings.highlightHeaderClassName);\n            }\n            if (this.settings.highlightColumnClassName) {\n              newClasses.push(this.settings.highlightColumnClassName);\n            }\n            (0, _element.addClass)(TH, newClasses);\n          }\n        }\n      }\n      for (var row = 0; row < renderedRows; row += 1) {\n        var sourceRow = wotInstance.wtTable.rowFilter.renderedToSource(row);\n        if (sourceRow >= topRow && sourceRow <= bottomRow) {\n          var _TH = wotInstance.wtTable.getRowHeader(sourceRow);\n          if (_TH) {\n            var _newClasses = [];\n            if (this.settings.highlightHeaderClassName) {\n              _newClasses.push(this.settings.highlightHeaderClassName);\n            }\n            if (this.settings.highlightRowClassName) {\n              _newClasses.push(this.settings.highlightRowClassName);\n            }\n            (0, _element.addClass)(_TH, _newClasses);\n          }\n        }\n        for (var _column = 0; _column < renderedColumns; _column += 1) {\n          var _sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(_column);\n          if (sourceRow >= topRow && sourceRow <= bottomRow && _sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n            // selected cell\n            if (this.settings.className) {\n              this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.className, this.settings.markIntersections);\n            }\n          } else if (sourceRow >= topRow && sourceRow <= bottomRow) {\n            // selection is in this row\n            if (this.settings.highlightRowClassName) {\n              this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.highlightRowClassName);\n            }\n          } else if (_sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n            // selection is in this column\n            if (this.settings.highlightColumnClassName) {\n              this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.highlightColumnClassName);\n            }\n          }\n          var additionalSelectionClass = wotInstance.getSetting('onAfterDrawSelection', sourceRow, _sourceCol, corners, this.settings.layerLevel);\n          if (typeof additionalSelectionClass === 'string') {\n            this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, additionalSelectionClass);\n          }\n        }\n      }\n      wotInstance.getSetting('onBeforeDrawBorders', corners, this.settings.className);\n      if (this.settings.border) {\n        // warning! border.appear modifies corners!\n        this.getBorder(wotInstance).appear(corners);\n      }\n    }\n    /**\n     * Cleans up all the DOM state related to a Selection instance. Call this prior to deleting a Selection instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      Object.values(this.instanceBorders).forEach(function (border) {\n        return border.destroy();\n      });\n    }\n  }]);\n  return Selection;\n}();\nvar _default = Selection;\nexports.default = _default;","map":{"version":3,"names":["require","exports","__esModule","default","_element","_border","_interopRequireDefault","_coords","_range","obj","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_typeof","constructor","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","Selection","settings","cellRange","instanceBorders","classNames","className","classNameGenerator","linearClassNameGenerator","layerLevel","getBorder","wotInstance","guid","isEmpty","add","coords","expand","replace","oldCoords","newCoords","from","isEqual","to","clear","getCorners","topLeft","getTopLeftCorner","bottomRight","getBottomRightCorner","row","col","addClassAtCoords","sourceRow","sourceColumn","markIntersections","arguments","TD","wtTable","getCell","cellClassName","includes","addClass","baseClassName","layerLevelOwner","calcClassName","element","previousIndex","index","previousClassName","concat","hasClass","currentLayer","draw","border","disappear","renderedRows","getRenderedRowsCount","renderedColumns","getRenderedColumnsCount","corners","_corners","topRow","topColumn","bottomRow","bottomColumn","column","sourceCol","columnFilter","renderedToSource","TH","getColumnHeader","newClasses","highlightHeaderClassName","highlightColumnClassName","rowFilter","_TH","getRowHeader","_newClasses","highlightRowClassName","_column","_sourceCol","additionalSelectionClass","getSetting","appear","destroy","values","forEach","_default"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/handsontable/commonjs/3rdparty/walkontable/src/selection.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.object.values\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _element = require(\"./../../../helpers/dom/element\");\n\nvar _border = _interopRequireDefault(require(\"./border\"));\n\nvar _coords = _interopRequireDefault(require(\"./cell/coords\"));\n\nvar _range = _interopRequireDefault(require(\"./cell/range\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @class Selection\n */\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Object} settings\n   * @param {CellRange} cellRange\n   */\n  function Selection(settings, cellRange) {\n    _classCallCheck(this, Selection);\n\n    this.settings = settings;\n    this.cellRange = cellRange || null;\n    this.instanceBorders = {};\n    this.classNames = [this.settings.className];\n    this.classNameGenerator = this.linearClassNameGenerator(this.settings.className, this.settings.layerLevel);\n  }\n  /**\n   * Each Walkontable clone requires it's own border for every selection. This method creates and returns selection\n   * borders per instance\n   *\n   * @param {Walkontable} wotInstance\n   * @returns {Border}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"getBorder\",\n    value: function getBorder(wotInstance) {\n      if (!this.instanceBorders[wotInstance.guid]) {\n        this.instanceBorders[wotInstance.guid] = new _border.default(wotInstance, this.settings);\n      }\n\n      return this.instanceBorders[wotInstance.guid];\n    }\n    /**\n     * Checks if selection is empty\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.cellRange === null;\n    }\n    /**\n     * Adds a cell coords to the selection\n     *\n     * @param {CellCoords} coords\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      if (this.isEmpty()) {\n        this.cellRange = new _range.default(coords);\n      } else {\n        this.cellRange.expand(coords);\n      }\n\n      return this;\n    }\n    /**\n     * If selection range from or to property equals oldCoords, replace it with newCoords. Return boolean\n     * information about success\n     *\n     * @param {CellCoords} oldCoords\n     * @param {CellCoords} newCoords\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"replace\",\n    value: function replace(oldCoords, newCoords) {\n      if (!this.isEmpty()) {\n        if (this.cellRange.from.isEqual(oldCoords)) {\n          this.cellRange.from = newCoords;\n          return true;\n        }\n\n        if (this.cellRange.to.isEqual(oldCoords)) {\n          this.cellRange.to = newCoords;\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Clears selection\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cellRange = null;\n      return this;\n    }\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`\n     */\n\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var topLeft = this.cellRange.getTopLeftCorner();\n      var bottomRight = this.cellRange.getBottomRightCorner();\n      return [topLeft.row, topLeft.col, bottomRight.row, bottomRight.col];\n    }\n    /**\n     * Adds class name to cell element at given coords\n     *\n     * @param {Walkontable} wotInstance Walkontable instance\n     * @param {Number} sourceRow Cell row coord\n     * @param {Number} sourceColumn Cell column coord\n     * @param {String} className Class name\n     * @param {Boolean} [markIntersections=false] If `true`, linear className generator will be used to add CSS classes\n     *                                            in a continuous way.\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"addClassAtCoords\",\n    value: function addClassAtCoords(wotInstance, sourceRow, sourceColumn, className) {\n      var markIntersections = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var TD = wotInstance.wtTable.getCell(new _coords.default(sourceRow, sourceColumn));\n\n      if (_typeof(TD) === 'object') {\n        var cellClassName = className;\n\n        if (markIntersections) {\n          cellClassName = this.classNameGenerator(TD);\n\n          if (!this.classNames.includes(cellClassName)) {\n            this.classNames.push(cellClassName);\n          }\n        }\n\n        (0, _element.addClass)(TD, cellClassName);\n      }\n\n      return this;\n    }\n    /**\n     * Generate helper for calculating classNames based on previously added base className.\n     * The generated className is always generated as a continuation of the previous className. For example, when\n     * the currently checked element has 'area-2' className the generated new className will be 'area-3'. When\n     * the element doesn't have any classNames than the base className will be returned ('area');\n     *\n     * @param {String} baseClassName Base className to be used.\n     * @param {Number} layerLevelOwner Layer level which the instance of the Selection belongs to.\n     * @return {Function}\n     */\n\n  }, {\n    key: \"linearClassNameGenerator\",\n    value: function linearClassNameGenerator(baseClassName, layerLevelOwner) {\n      // TODO: Make this recursive function Proper Tail Calls (TCO/PTC) friendly.\n      return function calcClassName(element) {\n        var previousIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n        if (layerLevelOwner === 0 || previousIndex === 0) {\n          return baseClassName;\n        }\n\n        var index = previousIndex >= 0 ? previousIndex : layerLevelOwner;\n        var className = baseClassName;\n        index -= 1;\n        var previousClassName = index === 0 ? baseClassName : \"\".concat(baseClassName, \"-\").concat(index);\n\n        if ((0, _element.hasClass)(element, previousClassName)) {\n          var currentLayer = index + 1;\n          className = \"\".concat(baseClassName, \"-\").concat(currentLayer);\n        } else {\n          className = calcClassName(element, index);\n        }\n\n        return className;\n      };\n    }\n    /**\n     * @param wotInstance\n     */\n\n  }, {\n    key: \"draw\",\n    value: function draw(wotInstance) {\n      if (this.isEmpty()) {\n        if (this.settings.border) {\n          this.getBorder(wotInstance).disappear();\n        }\n\n        return;\n      }\n\n      var renderedRows = wotInstance.wtTable.getRenderedRowsCount();\n      var renderedColumns = wotInstance.wtTable.getRenderedColumnsCount();\n      var corners = this.getCorners();\n\n      var _corners = _slicedToArray(corners, 4),\n          topRow = _corners[0],\n          topColumn = _corners[1],\n          bottomRow = _corners[2],\n          bottomColumn = _corners[3];\n\n      for (var column = 0; column < renderedColumns; column += 1) {\n        var sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column);\n\n        if (sourceCol >= topColumn && sourceCol <= bottomColumn) {\n          var TH = wotInstance.wtTable.getColumnHeader(sourceCol);\n\n          if (TH) {\n            var newClasses = [];\n\n            if (this.settings.highlightHeaderClassName) {\n              newClasses.push(this.settings.highlightHeaderClassName);\n            }\n\n            if (this.settings.highlightColumnClassName) {\n              newClasses.push(this.settings.highlightColumnClassName);\n            }\n\n            (0, _element.addClass)(TH, newClasses);\n          }\n        }\n      }\n\n      for (var row = 0; row < renderedRows; row += 1) {\n        var sourceRow = wotInstance.wtTable.rowFilter.renderedToSource(row);\n\n        if (sourceRow >= topRow && sourceRow <= bottomRow) {\n          var _TH = wotInstance.wtTable.getRowHeader(sourceRow);\n\n          if (_TH) {\n            var _newClasses = [];\n\n            if (this.settings.highlightHeaderClassName) {\n              _newClasses.push(this.settings.highlightHeaderClassName);\n            }\n\n            if (this.settings.highlightRowClassName) {\n              _newClasses.push(this.settings.highlightRowClassName);\n            }\n\n            (0, _element.addClass)(_TH, _newClasses);\n          }\n        }\n\n        for (var _column = 0; _column < renderedColumns; _column += 1) {\n          var _sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(_column);\n\n          if (sourceRow >= topRow && sourceRow <= bottomRow && _sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n            // selected cell\n            if (this.settings.className) {\n              this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.className, this.settings.markIntersections);\n            }\n          } else if (sourceRow >= topRow && sourceRow <= bottomRow) {\n            // selection is in this row\n            if (this.settings.highlightRowClassName) {\n              this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.highlightRowClassName);\n            }\n          } else if (_sourceCol >= topColumn && _sourceCol <= bottomColumn) {\n            // selection is in this column\n            if (this.settings.highlightColumnClassName) {\n              this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, this.settings.highlightColumnClassName);\n            }\n          }\n\n          var additionalSelectionClass = wotInstance.getSetting('onAfterDrawSelection', sourceRow, _sourceCol, corners, this.settings.layerLevel);\n\n          if (typeof additionalSelectionClass === 'string') {\n            this.addClassAtCoords(wotInstance, sourceRow, _sourceCol, additionalSelectionClass);\n          }\n        }\n      }\n\n      wotInstance.getSetting('onBeforeDrawBorders', corners, this.settings.className);\n\n      if (this.settings.border) {\n        // warning! border.appear modifies corners!\n        this.getBorder(wotInstance).appear(corners);\n      }\n    }\n    /**\n     * Cleans up all the DOM state related to a Selection instance. Call this prior to deleting a Selection instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      Object.values(this.instanceBorders).forEach(function (border) {\n        return border.destroy();\n      });\n    }\n  }]);\n\n  return Selection;\n}();\n\nvar _default = Selection;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}