{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { CSSCompletion } from './cssCompletion.js';\nimport { CompletionItemKind, InsertTextFormat, TextEdit } from '../cssLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar LESSCompletion = /** @class */function (_super) {\n  __extends(LESSCompletion, _super);\n  function LESSCompletion(clientCapabilities) {\n    return _super.call(this, '@', clientCapabilities) || this;\n  }\n  LESSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n    for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n      var p = proposals_1[_i];\n      var item = {\n        label: p.name,\n        detail: p.example,\n        documentation: p.description,\n        textEdit: TextEdit.replace(this.getCompletionRange(existingNode), p.name + '($0)'),\n        insertTextFormat: InsertTextFormat.Snippet,\n        kind: CompletionItemKind.Function\n      };\n      if (sortToEnd) {\n        item.sortText = 'z';\n      }\n      result.items.push(item);\n    }\n    return result;\n  };\n  LESSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n    var functions = LESSCompletion.builtInProposals;\n    if (entry) {\n      functions = functions.filter(function (f) {\n        return !f.type || !entry.restrictions || entry.restrictions.indexOf(f.type) !== -1;\n      });\n    }\n    this.createFunctionProposals(functions, existingNode, true, result);\n    return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n  };\n  LESSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n    this.createFunctionProposals(LESSCompletion.colorProposals, existingNode, false, result);\n    return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n  };\n  LESSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n    this.getCompletionsForSelector(null, true, result);\n    return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n  };\n  LESSCompletion.builtInProposals = [\n  // Boolean functions\n  {\n    'name': 'if',\n    'example': 'if(condition, trueValue [, falseValue]);',\n    'description': localize('less.builtin.if', 'returns one of two values depending on a condition.')\n  }, {\n    'name': 'boolean',\n    'example': 'boolean(condition);',\n    'description': localize('less.builtin.boolean', '\"store\" a boolean test for later evaluation in a guard or if().')\n  },\n  // List functions\n  {\n    'name': 'length',\n    'example': 'length(@list);',\n    'description': localize('less.builtin.length', 'returns the number of elements in a value list')\n  }, {\n    'name': 'extract',\n    'example': 'extract(@list, index);',\n    'description': localize('less.builtin.extract', 'returns a value at the specified position in the list')\n  }, {\n    'name': 'range',\n    'example': 'range([start, ] end [, step]);',\n    'description': localize('less.builtin.range', 'generate a list spanning a range of values')\n  }, {\n    'name': 'each',\n    'example': 'each(@list, ruleset);',\n    'description': localize('less.builtin.each', 'bind the evaluation of a ruleset to each member of a list.')\n  },\n  // Other built-ins\n  {\n    'name': 'escape',\n    'example': 'escape(@string);',\n    'description': localize('less.builtin.escape', 'URL encodes a string')\n  }, {\n    'name': 'e',\n    'example': 'e(@string);',\n    'description': localize('less.builtin.e', 'escape string content')\n  }, {\n    'name': 'replace',\n    'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n    'description': localize('less.builtin.replace', 'string replace')\n  }, {\n    'name': 'unit',\n    'example': 'unit(@dimension, [@unit: \\'\\']);',\n    'description': localize('less.builtin.unit', 'remove or change the unit of a dimension')\n  }, {\n    'name': 'color',\n    'example': 'color(@string);',\n    'description': localize('less.builtin.color', 'parses a string to a color'),\n    'type': 'color'\n  }, {\n    'name': 'convert',\n    'example': 'convert(@value, unit);',\n    'description': localize('less.builtin.convert', 'converts numbers from one type into another')\n  }, {\n    'name': 'data-uri',\n    'example': 'data-uri([mimetype,] url);',\n    'description': localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`'),\n    'type': 'url'\n  }, {\n    'name': 'abs',\n    'description': localize('less.builtin.abs', 'absolute value of a number'),\n    'example': 'abs(number);'\n  }, {\n    'name': 'acos',\n    'description': localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n    'example': 'acos(number);'\n  }, {\n    'name': 'asin',\n    'description': localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n    'example': 'asin(number);'\n  }, {\n    'name': 'ceil',\n    'example': 'ceil(@number);',\n    'description': localize('less.builtin.ceil', 'rounds up to an integer')\n  }, {\n    'name': 'cos',\n    'description': localize('less.builtin.cos', 'cosine function'),\n    'example': 'cos(number);'\n  }, {\n    'name': 'floor',\n    'description': localize('less.builtin.floor', 'rounds down to an integer'),\n    'example': 'floor(@number);'\n  }, {\n    'name': 'percentage',\n    'description': localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n    'example': 'percentage(@number);',\n    'type': 'percentage'\n  }, {\n    'name': 'round',\n    'description': localize('less.builtin.round', 'rounds a number to a number of places'),\n    'example': 'round(number, [places: 0]);'\n  }, {\n    'name': 'sqrt',\n    'description': localize('less.builtin.sqrt', 'calculates square root of a number'),\n    'example': 'sqrt(number);'\n  }, {\n    'name': 'sin',\n    'description': localize('less.builtin.sin', 'sine function'),\n    'example': 'sin(number);'\n  }, {\n    'name': 'tan',\n    'description': localize('less.builtin.tan', 'tangent function'),\n    'example': 'tan(number);'\n  }, {\n    'name': 'atan',\n    'description': localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n    'example': 'atan(number);'\n  }, {\n    'name': 'pi',\n    'description': localize('less.builtin.pi', 'returns pi'),\n    'example': 'pi();'\n  }, {\n    'name': 'pow',\n    'description': localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n    'example': 'pow(@base, @exponent);'\n  }, {\n    'name': 'mod',\n    'description': localize('less.builtin.mod', 'first argument modulus second argument'),\n    'example': 'mod(number, number);'\n  }, {\n    'name': 'min',\n    'description': localize('less.builtin.min', 'returns the lowest of one or more values'),\n    'example': 'min(@x, @y);'\n  }, {\n    'name': 'max',\n    'description': localize('less.builtin.max', 'returns the lowest of one or more values'),\n    'example': 'max(@x, @y);'\n  }];\n  LESSCompletion.colorProposals = [{\n    'name': 'argb',\n    'example': 'argb(@color);',\n    'description': localize('less.builtin.argb', 'creates a #AARRGGBB')\n  }, {\n    'name': 'hsl',\n    'example': 'hsl(@hue, @saturation, @lightness);',\n    'description': localize('less.builtin.hsl', 'creates a color')\n  }, {\n    'name': 'hsla',\n    'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n    'description': localize('less.builtin.hsla', 'creates a color')\n  }, {\n    'name': 'hsv',\n    'example': 'hsv(@hue, @saturation, @value);',\n    'description': localize('less.builtin.hsv', 'creates a color')\n  }, {\n    'name': 'hsva',\n    'example': 'hsva(@hue, @saturation, @value, @alpha);',\n    'description': localize('less.builtin.hsva', 'creates a color')\n  }, {\n    'name': 'hue',\n    'example': 'hue(@color);',\n    'description': localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n  }, {\n    'name': 'saturation',\n    'example': 'saturation(@color);',\n    'description': localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n  }, {\n    'name': 'lightness',\n    'example': 'lightness(@color);',\n    'description': localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n  }, {\n    'name': 'hsvhue',\n    'example': 'hsvhue(@color);',\n    'description': localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n  }, {\n    'name': 'hsvsaturation',\n    'example': 'hsvsaturation(@color);',\n    'description': localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n  }, {\n    'name': 'hsvvalue',\n    'example': 'hsvvalue(@color);',\n    'description': localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n  }, {\n    'name': 'red',\n    'example': 'red(@color);',\n    'description': localize('less.builtin.red', 'returns the `red` channel of `@color`')\n  }, {\n    'name': 'green',\n    'example': 'green(@color);',\n    'description': localize('less.builtin.green', 'returns the `green` channel of `@color`')\n  }, {\n    'name': 'blue',\n    'example': 'blue(@color);',\n    'description': localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n  }, {\n    'name': 'alpha',\n    'example': 'alpha(@color);',\n    'description': localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n  }, {\n    'name': 'luma',\n    'example': 'luma(@color);',\n    'description': localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n  }, {\n    'name': 'saturate',\n    'example': 'saturate(@color, 10%);',\n    'description': localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n  }, {\n    'name': 'desaturate',\n    'example': 'desaturate(@color, 10%);',\n    'description': localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n  }, {\n    'name': 'lighten',\n    'example': 'lighten(@color, 10%);',\n    'description': localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n  }, {\n    'name': 'darken',\n    'example': 'darken(@color, 10%);',\n    'description': localize('less.builtin.darken', 'return `@color` 10% points darker')\n  }, {\n    'name': 'fadein',\n    'example': 'fadein(@color, 10%);',\n    'description': localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n  }, {\n    'name': 'fadeout',\n    'example': 'fadeout(@color, 10%);',\n    'description': localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n  }, {\n    'name': 'fade',\n    'example': 'fade(@color, 50%);',\n    'description': localize('less.builtin.fade', 'return `@color` with 50% transparency')\n  }, {\n    'name': 'spin',\n    'example': 'spin(@color, 10);',\n    'description': localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n  }, {\n    'name': 'mix',\n    'example': 'mix(@color1, @color2, [@weight: 50%]);',\n    'description': localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n  }, {\n    'name': 'greyscale',\n    'example': 'greyscale(@color);',\n    'description': localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color')\n  }, {\n    'name': 'contrast',\n    'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n    'description': localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n  }, {\n    'name': 'multiply',\n    'example': 'multiply(@color1, @color2);'\n  }, {\n    'name': 'screen',\n    'example': 'screen(@color1, @color2);'\n  }, {\n    'name': 'overlay',\n    'example': 'overlay(@color1, @color2);'\n  }, {\n    'name': 'softlight',\n    'example': 'softlight(@color1, @color2);'\n  }, {\n    'name': 'hardlight',\n    'example': 'hardlight(@color1, @color2);'\n  }, {\n    'name': 'difference',\n    'example': 'difference(@color1, @color2);'\n  }, {\n    'name': 'exclusion',\n    'example': 'exclusion(@color1, @color2);'\n  }, {\n    'name': 'average',\n    'example': 'average(@color1, @color2);'\n  }, {\n    'name': 'negation',\n    'example': 'negation(@color1, @color2);'\n  }];\n  return LESSCompletion;\n}(CSSCompletion);\nexport { LESSCompletion };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","CSSCompletion","CompletionItemKind","InsertTextFormat","TextEdit","nls","localize","loadMessageBundle","LESSCompletion","_super","clientCapabilities","call","createFunctionProposals","proposals","existingNode","sortToEnd","result","_i","proposals_1","length","item","label","name","detail","example","documentation","description","textEdit","replace","getCompletionRange","insertTextFormat","Snippet","kind","Function","sortText","items","push","getTermProposals","entry","functions","builtInProposals","filter","f","type","restrictions","indexOf","getColorProposals","colorProposals","getCompletionsForDeclarationProperty","declaration","getCompletionsForSelector"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CSSCompletion } from './cssCompletion.js';\nimport { CompletionItemKind, InsertTextFormat, TextEdit } from '../cssLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar LESSCompletion = /** @class */ (function (_super) {\n    __extends(LESSCompletion, _super);\n    function LESSCompletion(clientCapabilities) {\n        return _super.call(this, '@', clientCapabilities) || this;\n    }\n    LESSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var item = {\n                label: p.name,\n                detail: p.example,\n                documentation: p.description,\n                textEdit: TextEdit.replace(this.getCompletionRange(existingNode), p.name + '($0)'),\n                insertTextFormat: InsertTextFormat.Snippet,\n                kind: CompletionItemKind.Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    LESSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = LESSCompletion.builtInProposals;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || !entry.restrictions || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(LESSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    LESSCompletion.builtInProposals = [\n        // Boolean functions\n        {\n            'name': 'if',\n            'example': 'if(condition, trueValue [, falseValue]);',\n            'description': localize('less.builtin.if', 'returns one of two values depending on a condition.')\n        },\n        {\n            'name': 'boolean',\n            'example': 'boolean(condition);',\n            'description': localize('less.builtin.boolean', '\"store\" a boolean test for later evaluation in a guard or if().')\n        },\n        // List functions\n        {\n            'name': 'length',\n            'example': 'length(@list);',\n            'description': localize('less.builtin.length', 'returns the number of elements in a value list')\n        },\n        {\n            'name': 'extract',\n            'example': 'extract(@list, index);',\n            'description': localize('less.builtin.extract', 'returns a value at the specified position in the list')\n        },\n        {\n            'name': 'range',\n            'example': 'range([start, ] end [, step]);',\n            'description': localize('less.builtin.range', 'generate a list spanning a range of values')\n        },\n        {\n            'name': 'each',\n            'example': 'each(@list, ruleset);',\n            'description': localize('less.builtin.each', 'bind the evaluation of a ruleset to each member of a list.')\n        },\n        // Other built-ins\n        {\n            'name': 'escape',\n            'example': 'escape(@string);',\n            'description': localize('less.builtin.escape', 'URL encodes a string')\n        },\n        {\n            'name': 'e',\n            'example': 'e(@string);',\n            'description': localize('less.builtin.e', 'escape string content')\n        },\n        {\n            'name': 'replace',\n            'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n            'description': localize('less.builtin.replace', 'string replace')\n        },\n        {\n            'name': 'unit',\n            'example': 'unit(@dimension, [@unit: \\'\\']);',\n            'description': localize('less.builtin.unit', 'remove or change the unit of a dimension')\n        },\n        {\n            'name': 'color',\n            'example': 'color(@string);',\n            'description': localize('less.builtin.color', 'parses a string to a color'),\n            'type': 'color'\n        },\n        {\n            'name': 'convert',\n            'example': 'convert(@value, unit);',\n            'description': localize('less.builtin.convert', 'converts numbers from one type into another')\n        },\n        {\n            'name': 'data-uri',\n            'example': 'data-uri([mimetype,] url);',\n            'description': localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`'),\n            'type': 'url'\n        },\n        {\n            'name': 'abs',\n            'description': localize('less.builtin.abs', 'absolute value of a number'),\n            'example': 'abs(number);'\n        },\n        {\n            'name': 'acos',\n            'description': localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n            'example': 'acos(number);'\n        },\n        {\n            'name': 'asin',\n            'description': localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n            'example': 'asin(number);'\n        },\n        {\n            'name': 'ceil',\n            'example': 'ceil(@number);',\n            'description': localize('less.builtin.ceil', 'rounds up to an integer')\n        },\n        {\n            'name': 'cos',\n            'description': localize('less.builtin.cos', 'cosine function'),\n            'example': 'cos(number);'\n        },\n        {\n            'name': 'floor',\n            'description': localize('less.builtin.floor', 'rounds down to an integer'),\n            'example': 'floor(@number);'\n        },\n        {\n            'name': 'percentage',\n            'description': localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n            'example': 'percentage(@number);',\n            'type': 'percentage'\n        },\n        {\n            'name': 'round',\n            'description': localize('less.builtin.round', 'rounds a number to a number of places'),\n            'example': 'round(number, [places: 0]);'\n        },\n        {\n            'name': 'sqrt',\n            'description': localize('less.builtin.sqrt', 'calculates square root of a number'),\n            'example': 'sqrt(number);'\n        },\n        {\n            'name': 'sin',\n            'description': localize('less.builtin.sin', 'sine function'),\n            'example': 'sin(number);'\n        },\n        {\n            'name': 'tan',\n            'description': localize('less.builtin.tan', 'tangent function'),\n            'example': 'tan(number);'\n        },\n        {\n            'name': 'atan',\n            'description': localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n            'example': 'atan(number);'\n        },\n        {\n            'name': 'pi',\n            'description': localize('less.builtin.pi', 'returns pi'),\n            'example': 'pi();'\n        },\n        {\n            'name': 'pow',\n            'description': localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n            'example': 'pow(@base, @exponent);'\n        },\n        {\n            'name': 'mod',\n            'description': localize('less.builtin.mod', 'first argument modulus second argument'),\n            'example': 'mod(number, number);'\n        },\n        {\n            'name': 'min',\n            'description': localize('less.builtin.min', 'returns the lowest of one or more values'),\n            'example': 'min(@x, @y);'\n        },\n        {\n            'name': 'max',\n            'description': localize('less.builtin.max', 'returns the lowest of one or more values'),\n            'example': 'max(@x, @y);'\n        }\n    ];\n    LESSCompletion.colorProposals = [\n        {\n            'name': 'argb',\n            'example': 'argb(@color);',\n            'description': localize('less.builtin.argb', 'creates a #AARRGGBB')\n        },\n        {\n            'name': 'hsl',\n            'example': 'hsl(@hue, @saturation, @lightness);',\n            'description': localize('less.builtin.hsl', 'creates a color')\n        },\n        {\n            'name': 'hsla',\n            'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n            'description': localize('less.builtin.hsla', 'creates a color')\n        },\n        {\n            'name': 'hsv',\n            'example': 'hsv(@hue, @saturation, @value);',\n            'description': localize('less.builtin.hsv', 'creates a color')\n        },\n        {\n            'name': 'hsva',\n            'example': 'hsva(@hue, @saturation, @value, @alpha);',\n            'description': localize('less.builtin.hsva', 'creates a color')\n        },\n        {\n            'name': 'hue',\n            'example': 'hue(@color);',\n            'description': localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'saturation',\n            'example': 'saturation(@color);',\n            'description': localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'lightness',\n            'example': 'lightness(@color);',\n            'description': localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'hsvhue',\n            'example': 'hsvhue(@color);',\n            'description': localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvsaturation',\n            'example': 'hsvsaturation(@color);',\n            'description': localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvvalue',\n            'example': 'hsvvalue(@color);',\n            'description': localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'red',\n            'example': 'red(@color);',\n            'description': localize('less.builtin.red', 'returns the `red` channel of `@color`')\n        },\n        {\n            'name': 'green',\n            'example': 'green(@color);',\n            'description': localize('less.builtin.green', 'returns the `green` channel of `@color`')\n        },\n        {\n            'name': 'blue',\n            'example': 'blue(@color);',\n            'description': localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n        },\n        {\n            'name': 'alpha',\n            'example': 'alpha(@color);',\n            'description': localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n        },\n        {\n            'name': 'luma',\n            'example': 'luma(@color);',\n            'description': localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n        },\n        {\n            'name': 'saturate',\n            'example': 'saturate(@color, 10%);',\n            'description': localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n        },\n        {\n            'name': 'desaturate',\n            'example': 'desaturate(@color, 10%);',\n            'description': localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n        },\n        {\n            'name': 'lighten',\n            'example': 'lighten(@color, 10%);',\n            'description': localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n        },\n        {\n            'name': 'darken',\n            'example': 'darken(@color, 10%);',\n            'description': localize('less.builtin.darken', 'return `@color` 10% points darker')\n        },\n        {\n            'name': 'fadein',\n            'example': 'fadein(@color, 10%);',\n            'description': localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n        },\n        {\n            'name': 'fadeout',\n            'example': 'fadeout(@color, 10%);',\n            'description': localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n        },\n        {\n            'name': 'fade',\n            'example': 'fade(@color, 50%);',\n            'description': localize('less.builtin.fade', 'return `@color` with 50% transparency')\n        },\n        {\n            'name': 'spin',\n            'example': 'spin(@color, 10);',\n            'description': localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n        },\n        {\n            'name': 'mix',\n            'example': 'mix(@color1, @color2, [@weight: 50%]);',\n            'description': localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n        },\n        {\n            'name': 'greyscale',\n            'example': 'greyscale(@color);',\n            'description': localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color'),\n        },\n        {\n            'name': 'contrast',\n            'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n            'description': localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n        },\n        {\n            'name': 'multiply',\n            'example': 'multiply(@color1, @color2);'\n        },\n        {\n            'name': 'screen',\n            'example': 'screen(@color1, @color2);'\n        },\n        {\n            'name': 'overlay',\n            'example': 'overlay(@color1, @color2);'\n        },\n        {\n            'name': 'softlight',\n            'example': 'softlight(@color1, @color2);'\n        },\n        {\n            'name': 'hardlight',\n            'example': 'hardlight(@color1, @color2);'\n        },\n        {\n            'name': 'difference',\n            'example': 'difference(@color1, @color2);'\n        },\n        {\n            'name': 'exclusion',\n            'example': 'exclusion(@color1, @color2);'\n        },\n        {\n            'name': 'average',\n            'example': 'average(@color1, @color2);'\n        },\n        {\n            'name': 'negation',\n            'example': 'negation(@color1, @color2);'\n        }\n    ];\n    return LESSCompletion;\n}(CSSCompletion));\nexport { LESSCompletion };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}