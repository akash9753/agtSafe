{"ast":null,"code":"/*!---------------------------------------------------------------------------------------------\r\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '`',\n    close: '`'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '`',\n    close: '`'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.swift',\n  // TODO(owensd): Support the full range of unicode valid identifiers.\n  identifier: /[a-zA-Z_][\\w$]*/,\n  // TODO(owensd): Support the @availability macro properly.\n  attributes: ['@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged', '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'],\n  accessmodifiers: ['public', 'private', 'internal'],\n  keywords: ['__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch', 'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType', 'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix', 'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator', 'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public', 'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch', 'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'],\n  symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n  // Moved . to operatorstart so it can be a delimiter\n  operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n  operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n  operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n  // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [{\n      include: '@whitespace'\n    }, {\n      include: '@comment'\n    }, {\n      include: '@attribute'\n    }, {\n      include: '@literal'\n    }, {\n      include: '@keyword'\n    }, {\n      include: '@invokedmethod'\n    }, {\n      include: '@symbol'\n    }],\n    whitespace: [[/\\s+/, 'white'], [/\"\"\"/, 'string.quote', '@endDblDocString']],\n    endDblDocString: [[/[^\"]+/, 'string'], [/\\\\\"/, 'string'], [/\"\"\"/, 'string.quote', '@popall'], [/\"/, 'string']],\n    symbol: [[/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/[.]/, 'delimiter'], [/@operators/, 'operator'], [/@symbols/, 'operator']],\n    comment: [[/\\/\\/\\/.*$/, 'comment.doc'], [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'], [/\\/\\/.*$/, 'comment'], [/\\/\\*/, 'comment', '@commentbody']],\n    commentdocbody: [[/\\/\\*/, 'comment', '@commentbody'], [/\\*\\//, 'comment.doc', '@pop'], [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'], [/./, 'comment.doc']],\n    commentbody: [[/\\/\\*/, 'comment', '@commentbody'], [/\\*\\//, 'comment', '@pop'], [/./, 'comment']],\n    attribute: [[/\\@@identifier/, {\n      cases: {\n        '@attributes': 'keyword.control',\n        '@default': ''\n      }\n    }]],\n    literal: [[/\"/, {\n      token: 'string.quote',\n      next: '@stringlit'\n    }], [/0[b]([01]_?)+/, 'number.binary'], [/0[o]([0-7]_?)+/, 'number.octal'], [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'], [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'], [/(\\d_?)+/, 'number']],\n    stringlit: [[/\\\\\\(/, {\n      token: 'operator',\n      next: '@interpolatedexpression'\n    }], [/@escapes/, 'string'], [/\\\\./, 'string.escape.invalid'], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }], [/./, 'string']],\n    interpolatedexpression: [[/\\(/, {\n      token: 'operator',\n      next: '@interpolatedexpression'\n    }], [/\\)/, {\n      token: 'operator',\n      next: '@pop'\n    }], {\n      include: '@literal'\n    }, {\n      include: '@keyword'\n    }, {\n      include: '@symbol'\n    }],\n    keyword: [[/`/, {\n      token: 'operator',\n      next: '@escapedkeyword'\n    }], [/@identifier/, {\n      cases: {\n        '@keywords': 'keyword',\n        '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\n        '@default': 'identifier'\n      }\n    }]],\n    escapedkeyword: [[/`/, {\n      token: 'operator',\n      next: '@pop'\n    }], [/./, 'identifier']],\n    //\t\tsymbol: [\n    //\t\t\t[ /@symbols/, 'operator' ],\n    //\t\t\t[ /@operators/, 'operator' ]\n    //\t\t],\n    invokedmethod: [[/([.])(@identifier)/, {\n      cases: {\n        '$2': ['delimeter', 'type.identifier'],\n        '@default': ''\n      }\n    }]]\n  }\n};","map":{"version":3,"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","whitespace","endDblDocString","symbol","comment","commentdocbody","commentbody","attribute","cases","literal","token","next","stringlit","interpolatedexpression","keyword","escapedkeyword","invokedmethod"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js"],"sourcesContent":["/*!---------------------------------------------------------------------------------------------\r\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.swift',\r\n    // TODO(owensd): Support the full range of unicode valid identifiers.\r\n    identifier: /[a-zA-Z_][\\w$]*/,\r\n    // TODO(owensd): Support the @availability macro properly.\r\n    attributes: [\r\n        '@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged',\r\n        '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'\r\n    ],\r\n    accessmodifiers: ['public', 'private', 'internal'],\r\n    keywords: [\r\n        '__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch',\r\n        'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType',\r\n        'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix',\r\n        'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator',\r\n        'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public',\r\n        'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch',\r\n        'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'\r\n    ],\r\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\r\n    // Moved . to operatorstart so it can be a delimiter\r\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\r\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\r\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\r\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            { include: '@attribute' },\r\n            { include: '@literal' },\r\n            { include: '@keyword' },\r\n            { include: '@invokedmethod' },\r\n            { include: '@symbol' },\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/\"\"\"/, 'string.quote', '@endDblDocString']\r\n        ],\r\n        endDblDocString: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\\\\\"/, 'string'],\r\n            [/\"\"\"/, 'string.quote', '@popall'],\r\n            [/\"/, 'string']\r\n        ],\r\n        symbol: [\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/[.]/, 'delimiter'],\r\n            [/@operators/, 'operator'],\r\n            [/@symbols/, 'operator']\r\n        ],\r\n        comment: [\r\n            [/\\/\\/\\/.*$/, 'comment.doc'],\r\n            [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@commentbody']\r\n        ],\r\n        commentdocbody: [\r\n            [/\\/\\*/, 'comment', '@commentbody'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'],\r\n            [/./, 'comment.doc']\r\n        ],\r\n        commentbody: [\r\n            [/\\/\\*/, 'comment', '@commentbody'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/./, 'comment']\r\n        ],\r\n        attribute: [\r\n            [/\\@@identifier/, {\r\n                    cases: {\r\n                        '@attributes': 'keyword.control',\r\n                        '@default': ''\r\n                    }\r\n                }]\r\n        ],\r\n        literal: [\r\n            [/\"/, { token: 'string.quote', next: '@stringlit' }],\r\n            [/0[b]([01]_?)+/, 'number.binary'],\r\n            [/0[o]([0-7]_?)+/, 'number.octal'],\r\n            [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'],\r\n            [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'],\r\n            [/(\\d_?)+/, 'number']\r\n        ],\r\n        stringlit: [\r\n            [/\\\\\\(/, { token: 'operator', next: '@interpolatedexpression' }],\r\n            [/@escapes/, 'string'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }],\r\n            [/./, 'string']\r\n        ],\r\n        interpolatedexpression: [\r\n            [/\\(/, { token: 'operator', next: '@interpolatedexpression' }],\r\n            [/\\)/, { token: 'operator', next: '@pop' }],\r\n            { include: '@literal' },\r\n            { include: '@keyword' },\r\n            { include: '@symbol' }\r\n        ],\r\n        keyword: [\r\n            [/`/, { token: 'operator', next: '@escapedkeyword' }],\r\n            [/@identifier/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword', '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }]\r\n        ],\r\n        escapedkeyword: [\r\n            [/`/, { token: 'operator', next: '@pop' }],\r\n            [/./, 'identifier']\r\n        ],\r\n        //\t\tsymbol: [\r\n        //\t\t\t[ /@symbols/, 'operator' ],\r\n        //\t\t\t[ /@operators/, 'operator' ]\r\n        //\t\t],\r\n        invokedmethod: [\r\n            [/([.])(@identifier)/, {\r\n                    cases: {\r\n                        '$2': ['delimeter', 'type.identifier'],\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ]\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}