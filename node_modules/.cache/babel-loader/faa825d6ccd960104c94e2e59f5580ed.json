{"ast":null,"code":"//import React, { Component } from 'react';\n////import { Document, Page, pdfjs } from 'react-pdf/dist/entry.webpack';\n\n//const highlightPattern = (text, pattern) => {\n//    const splitText = text.split(pattern);\n\n//    if (splitText.length <= 1) {\n//        return text;\n//    }\n\n//    const matches = text.match(pattern);\n\n//    return splitText.reduce((arr, element, index) => (matches[index] ? [\n//        ...arr,\n//        element,\n//        <mark>\n//            {matches[index]}\n//        </mark>,\n//    ] : [...arr, element]), []);\n//};\n\n//export default class ProtocolDocumentModalContent extends Component {\n//    constructor(props) {\n//        super(props);\n//        this.state = {\n//            numPages: null,\n//            pageNumber: 1,\n//            searchText: ''\n//        };\n//    }\n//    onDocumentLoadSuccess = ({ numPages }) => {\n//        this.setState({ numPages });\n//    }    \n//    changePage = (offset) => {\n//        const thisObj = this;\n//        thisObj.setState({\n//            pageNumber: thisObj.state.pageNumber + offset\n//        });\n//    }\n//    previousPage = () => this.changePage(-1);\n//    nextPage = () => this.changePage(1);\n//    makeTextRenderer = searchText => textItem => highlightPattern(textItem.str, searchText);\n\n//    onChange = event => this.setState({ searchText: event.target.value });\n//    getCurrPagNum = (e) => {\n//        const thisObj = this;\n//        var page = parseInt(e.target.value);\n//        if (page >= 1 && page <= thisObj.state.numPages) {\n//            thisObj.setState({\n//                pageNumber: page\n//            });\n//        } else {\n//            thisObj.setState({\n//                pageNumber: \"\"\n//            });\n//        }\n//    }\n\n//    render() {\n//        const { pageNumber, numPages, searchText } = this.state;\n//        var fileName = this.props.fileName;\n\n//        return (\n//            <div>\n//                <nav style={{ marginBottom: '15px' }}>\n//                    <button style={{ marginRight: '10px' }} disabled={pageNumber <= 1} onClick={this.previousPage} >\n//                        <i className=\"fas fa-step-backward\" ></i>\n//                    </button>\n//                    <button style={{ marginRight: '10px' }} disabled={pageNumber >= numPages} onClick={this.nextPage} >\n//                        <i className=\"fas fa-step-forward\" ></i>\n//                    </button>\n//                    <input style={{ width: '60px' }} type=\"text\" id=\"currPgNum\" value={pageNumber} onChange={this.getCurrPagNum} />\n//                    <span> / {numPages}</span>\n//                    <div style={{float: 'right'}}>\n//                        <label htmlFor=\"search\">Search:</label>\n//                        <input type=\"search\" id=\"search\" value={searchText} onChange={this.onChange} />\n//                    </div>\n//                </nav>    \n//                    <Document\n//                        file={window.location.origin + '/Annotation/' + fileName} onLoadSuccess={this.onDocumentLoadSuccess} renderInteractiveForms={true}>\n//                    <div style={{ height: 'calc(100vh - 205px)', overflow: 'auto' }}>    \n//                        <Page pageNumber={pageNumber} customTextRenderer={this.makeTextRenderer(searchText)} />\n//                    </div>\n//                   </Document>                    \n\n//                <p>\n//                    Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}\n//                </p>\n//            </div>\n//        );\n\n//    }\n//}","map":{"version":3,"names":[],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/TreeView/ProtocolDocumentModalContent.js"],"sourcesContent":["//import React, { Component } from 'react';\r\n////import { Document, Page, pdfjs } from 'react-pdf/dist/entry.webpack';\r\n\r\n//const highlightPattern = (text, pattern) => {\r\n//    const splitText = text.split(pattern);\r\n\r\n//    if (splitText.length <= 1) {\r\n//        return text;\r\n//    }\r\n\r\n//    const matches = text.match(pattern);\r\n\r\n//    return splitText.reduce((arr, element, index) => (matches[index] ? [\r\n//        ...arr,\r\n//        element,\r\n//        <mark>\r\n//            {matches[index]}\r\n//        </mark>,\r\n//    ] : [...arr, element]), []);\r\n//};\r\n\r\n//export default class ProtocolDocumentModalContent extends Component {\n//    constructor(props) {\n//        super(props);\n//        this.state = {\n//            numPages: null,\r\n//            pageNumber: 1,\r\n//            searchText: ''\r\n//        };\n//    }\r\n//    onDocumentLoadSuccess = ({ numPages }) => {\r\n//        this.setState({ numPages });\r\n//    }    \r\n//    changePage = (offset) => {\r\n//        const thisObj = this;\r\n//        thisObj.setState({\r\n//            pageNumber: thisObj.state.pageNumber + offset\r\n//        });\r\n//    }\r\n//    previousPage = () => this.changePage(-1);\r\n//    nextPage = () => this.changePage(1);\r\n//    makeTextRenderer = searchText => textItem => highlightPattern(textItem.str, searchText);\r\n\r\n//    onChange = event => this.setState({ searchText: event.target.value });\r\n//    getCurrPagNum = (e) => {\r\n//        const thisObj = this;\r\n//        var page = parseInt(e.target.value);\r\n//        if (page >= 1 && page <= thisObj.state.numPages) {\r\n//            thisObj.setState({\r\n//                pageNumber: page\r\n//            });\r\n//        } else {\r\n//            thisObj.setState({\r\n//                pageNumber: \"\"\r\n//            });\r\n//        }\r\n//    }\r\n\r\n//    render() {\r\n//        const { pageNumber, numPages, searchText } = this.state;\r\n//        var fileName = this.props.fileName;\r\n        \r\n//        return (\r\n//            <div>\r\n//                <nav style={{ marginBottom: '15px' }}>\r\n//                    <button style={{ marginRight: '10px' }} disabled={pageNumber <= 1} onClick={this.previousPage} >\r\n//                        <i className=\"fas fa-step-backward\" ></i>\r\n//                    </button>\r\n//                    <button style={{ marginRight: '10px' }} disabled={pageNumber >= numPages} onClick={this.nextPage} >\r\n//                        <i className=\"fas fa-step-forward\" ></i>\r\n//                    </button>\r\n//                    <input style={{ width: '60px' }} type=\"text\" id=\"currPgNum\" value={pageNumber} onChange={this.getCurrPagNum} />\r\n//                    <span> / {numPages}</span>\r\n//                    <div style={{float: 'right'}}>\r\n//                        <label htmlFor=\"search\">Search:</label>\r\n//                        <input type=\"search\" id=\"search\" value={searchText} onChange={this.onChange} />\r\n//                    </div>\r\n//                </nav>    \r\n//                    <Document\r\n//                        file={window.location.origin + '/Annotation/' + fileName} onLoadSuccess={this.onDocumentLoadSuccess} renderInteractiveForms={true}>\r\n//                    <div style={{ height: 'calc(100vh - 205px)', overflow: 'auto' }}>    \r\n//                        <Page pageNumber={pageNumber} customTextRenderer={this.makeTextRenderer(searchText)} />\r\n//                    </div>\r\n//                   </Document>                    \r\n                \r\n//                <p>\r\n//                    Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}\r\n//                </p>\r\n//            </div>\r\n//        );\n\n//    }\n//}"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module"}