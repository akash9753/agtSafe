{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Project\\\\datasetConfig.js\";\nimport React, { Component } from 'react';\nimport { Tree, List, Icon } from 'antd';\nimport { validJSON, showProgress, hideProgress, CallServerPost, errorModal, errorModalCallback, successModalCallback, successModal, PostCallWithZone, DownloadFileWithPostData, checkPermission, getProjectRole } from '../Utility/sharedUtility';\nimport { string } from 'prop-types';\nimport { ContactsWrapper } from '../../styles/JsStyles/projects.style';\nimport { ContactListWrapper } from '../../styles/JsStyles/projectList.style';\nimport './datasetConfig.css';\nvar TreeNode = Tree.TreeNode;\nvar tabStyle = {\n  height: \"calc(100vh - 160px)\",\n  overflowY: \"scroll\"\n};\nvar DatasetConfig = /*#__PURE__*/function (_Component) {\n  _inherits(DatasetConfig, _Component);\n  var _super = _createSuper(DatasetConfig);\n  function DatasetConfig() {\n    var _this;\n    _classCallCheck(this, DatasetConfig);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      expandedKeys: [],\n      autoExpandParent: true,\n      checkedKeys: [],\n      selectedKeys: [],\n      domainListData: [],\n      active: false,\n      cdiscDataStdDomainMetadataID: -1\n    };\n    _this.getList = function (props) {\n      showProgress();\n      var thisObj = _assertThisInitialized(_this);\n      CallServerPost('CDISCDataStdVariableMetadata/GetStdVarMetaForProject', {\n        ProjectID: _this.props.project.projectID\n      }).then(function (response) {\n        //console.log(response)\n        if (response.status == 1) {\n          var resObj = response.value;\n          var datasetArr = Array.from(new Set(resObj.map(function (a) {\n            return a.domain;\n          }))).map(function (domain) {\n            return resObj.find(function (a) {\n              return a.domain === domain;\n            });\n          });\n          //const tObj = datasetArr.map(inObj => {\n          //    return {\n          //        title: inObj.domain,\n          //        key: inObj.cdiscDataStdDomainMetadataID,\n          //    }\n          //})\n\n          thisObj.setState({\n            domainListData: datasetArr\n          });\n        }\n        hideProgress();\n      }).catch(function (error) {\n        hideProgress();\n      });\n    };\n    _this.listAllDomains = function (domain) {\n      var activeClass = _this.state.active && domain.cdiscDataStdDomainMetadataID == _this.state.cdiscDataStdDomainMetadataID ? 'active' : '';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoSingleContact \".concat(activeClass),\n        key: domain.cdiscDataStdDomainMetadataID,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoNoteBGColor\",\n        style: {},\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoNoteText\",\n        key: domain.cdiscDataStdDomainMetadataID,\n        onClick: function onClick() {},\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        name: domain.domain + \"_List\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, domain.domain), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"isoNoteCreatedDate\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, domain.domain)));\n    };\n    return _this;\n  }\n  _createClass(DatasetConfig, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var domainListData = this.state.domainListData;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: tabStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ContactsWrapper, {\n        className: \"domainList isomorphicContacts\",\n        style: {\n          padding: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactListBar\",\n        style: {\n          width: \"100%\",\n          background: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ContactListWrapper, {\n        className: \"isoContactListWrapper\",\n        style: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"isoContactList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, domainListData.map(function (domainR) {\n        return _this2.listAllDomains(domainR);\n      }))))));\n    }\n  }]);\n  return DatasetConfig;\n}(Component);\nexport { DatasetConfig as default };","map":{"version":3,"names":["React","Component","Tree","List","Icon","validJSON","showProgress","hideProgress","CallServerPost","errorModal","errorModalCallback","successModalCallback","successModal","PostCallWithZone","DownloadFileWithPostData","checkPermission","getProjectRole","string","ContactsWrapper","ContactListWrapper","TreeNode","tabStyle","height","overflowY","DatasetConfig","state","expandedKeys","autoExpandParent","checkedKeys","selectedKeys","domainListData","active","cdiscDataStdDomainMetadataID","getList","props","thisObj","ProjectID","project","projectID","then","response","status","resObj","value","datasetArr","Array","from","Set","map","a","domain","find","setState","catch","error","listAllDomains","activeClass","padding","width","background","domainR"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Project/datasetConfig.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Tree, List, Icon } from 'antd';\r\nimport {\r\n    validJSON,\r\n    showProgress,\r\n    hideProgress,\r\n    CallServerPost,\r\n    errorModal,\r\n    errorModalCallback,\r\n    successModalCallback,\r\n    successModal,\r\n    PostCallWithZone,\r\n    DownloadFileWithPostData,\r\n    checkPermission,\r\n    getProjectRole\r\n} from '../Utility/sharedUtility';\r\nimport { string } from 'prop-types';\r\nimport { ContactsWrapper } from '../../styles/JsStyles/projects.style';\r\nimport { ContactListWrapper } from '../../styles/JsStyles/projectList.style';\r\nimport './datasetConfig.css';\r\nconst { TreeNode } = Tree;\r\n\r\n\r\nconst tabStyle = { height: \"calc(100vh - 160px)\", overflowY: \"scroll\" };\r\nexport default class DatasetConfig extends Component {\r\n    state = {\r\n        expandedKeys: [],\r\n        autoExpandParent: true,\r\n        checkedKeys: [],\r\n        selectedKeys: [],\r\n        domainListData: [],\r\n        active: false,\r\n        cdiscDataStdDomainMetadataID: -1\r\n    };\r\n    componentDidMount() {\r\n        this.getList();\r\n    }\r\n    getList = (props) => {\r\n        showProgress();\r\n        const thisObj = this;\r\n        CallServerPost('CDISCDataStdVariableMetadata/GetStdVarMetaForProject',\r\n            {\r\n                ProjectID: this.props.project.projectID\r\n            })\r\n            .then(function (response) {\r\n                //console.log(response)\r\n                if (response.status == 1) {\r\n                    const resObj = response.value;\r\n                    const datasetArr = Array.from(new Set(resObj.map(a => a.domain)))\r\n                        .map(domain => {\r\n                            return resObj.find(a => a.domain === domain)\r\n                        })\r\n                    //const tObj = datasetArr.map(inObj => {\r\n                    //    return {\r\n                    //        title: inObj.domain,\r\n                    //        key: inObj.cdiscDataStdDomainMetadataID,\r\n                    //    }\r\n                    //})\r\n\r\n                    thisObj.setState({\r\n                        domainListData: datasetArr\r\n                    });\r\n                }\r\n                hideProgress();\r\n            }).catch(error => {\r\n                hideProgress();\r\n            });\r\n    }\r\n\r\n\r\n    listAllDomains = (domain) => {\r\n\r\n        const activeClass = (this.state.active && domain.cdiscDataStdDomainMetadataID == this.state.cdiscDataStdDomainMetadataID ? ('active') : (''));\r\n\r\n        return (\r\n\r\n            <div className={`isoSingleContact ${activeClass}`} key={domain.cdiscDataStdDomainMetadataID}>\r\n                <div className=\"isoNoteBGColor\" style={{}}>\r\n                </div>\r\n                <div className=\"isoNoteText\"\r\n                    key={domain.cdiscDataStdDomainMetadataID}\r\n                    onClick={() => { }}\r\n                >\r\n                    <h3 name={domain.domain + \"_List\"}>{domain.domain}</h3>\r\n\r\n                    <span className=\"isoNoteCreatedDate\">\r\n                        {domain.domain}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        const { domainListData } = this.state;\r\n        return (\r\n            <div style={tabStyle}>\r\n                <ContactsWrapper\r\n                    className=\"domainList isomorphicContacts\"\r\n                    style={{ padding: 0 }}\r\n                >\r\n                    <div className=\"isoContactListBar\" style={{ width: \"100%\", background: \"#fff\" }}>\r\n                        <ContactListWrapper className=\"isoContactListWrapper\" style={{}}>\r\n                            <div className=\"isoContactList\">\r\n                                {domainListData.map(domainR => this.listAllDomains(domainR))}\r\n                            </div>\r\n                        </ContactListWrapper>\r\n                    </div>\r\n                </ContactsWrapper>\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}