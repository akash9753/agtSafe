{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport './textAreaHandler.css';\nimport * as nls from '../../../nls.js';\nimport * as browser from '../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Configuration } from '../config/configuration.js';\nimport { CopyOptions, TextAreaInput } from './textAreaInput.js';\nimport { PagedScreenReaderStrategy, TextAreaState } from './textAreaState.js';\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../viewParts/margin/margin.js';\nimport { EditorOptions } from '../../common/config/editorOptions.js';\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport * as viewEvents from '../../common/view/viewEvents.js';\nvar VisibleTextAreaData = /** @class */function () {\n  function VisibleTextAreaData(top, left, width) {\n    this.top = top;\n    this.left = left;\n    this.width = width;\n  }\n  VisibleTextAreaData.prototype.setWidth = function (width) {\n    return new VisibleTextAreaData(this.top, this.left, width);\n  };\n  return VisibleTextAreaData;\n}();\nvar canUseZeroSizeTextarea = browser.isEdgeOrIE || browser.isFirefox;\nvar TextAreaHandler = /** @class */function (_super) {\n  __extends(TextAreaHandler, _super);\n  function TextAreaHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context) || this;\n    // --- end view API\n    _this._primaryCursorPosition = new Position(1, 1);\n    _this._primaryCursorVisibleRange = null;\n    _this._viewController = viewController;\n    _this._viewHelper = viewHelper;\n    _this._scrollLeft = 0;\n    _this._scrollTop = 0;\n    var options = _this._context.configuration.options;\n    var layoutInfo = options.get(107 /* layoutInfo */);\n    _this._setAccessibilityOptions(options);\n    _this._contentLeft = layoutInfo.contentLeft;\n    _this._contentWidth = layoutInfo.contentWidth;\n    _this._contentHeight = layoutInfo.height;\n    _this._fontInfo = options.get(34 /* fontInfo */);\n    _this._lineHeight = options.get(49 /* lineHeight */);\n    _this._emptySelectionClipboard = options.get(25 /* emptySelectionClipboard */);\n    _this._copyWithSyntaxHighlighting = options.get(15 /* copyWithSyntaxHighlighting */);\n    _this._visibleTextArea = null;\n    _this._selections = [new Selection(1, 1, 1, 1)];\n    _this._modelSelections = [new Selection(1, 1, 1, 1)];\n    _this._lastRenderPosition = null;\n    // Text Area (The focus will always be in the textarea when the cursor is blinking)\n    _this.textArea = createFastDomNode(document.createElement('textarea'));\n    PartFingerprints.write(_this.textArea, 6 /* TextArea */);\n    _this.textArea.setClassName('inputarea');\n    _this.textArea.setAttribute('wrap', 'off');\n    _this.textArea.setAttribute('autocorrect', 'off');\n    _this.textArea.setAttribute('autocapitalize', 'off');\n    _this.textArea.setAttribute('autocomplete', 'off');\n    _this.textArea.setAttribute('spellcheck', 'false');\n    _this.textArea.setAttribute('aria-label', _this._getAriaLabel(options));\n    _this.textArea.setAttribute('role', 'textbox');\n    _this.textArea.setAttribute('aria-multiline', 'true');\n    _this.textArea.setAttribute('aria-haspopup', 'false');\n    _this.textArea.setAttribute('aria-autocomplete', 'both');\n    if (platform.isWeb && options.get(68 /* readOnly */)) {\n      _this.textArea.setAttribute('readonly', 'true');\n    }\n    _this.textAreaCover = createFastDomNode(document.createElement('div'));\n    _this.textAreaCover.setPosition('absolute');\n    var simpleModel = {\n      getLineCount: function getLineCount() {\n        return _this._context.model.getLineCount();\n      },\n      getLineMaxColumn: function getLineMaxColumn(lineNumber) {\n        return _this._context.model.getLineMaxColumn(lineNumber);\n      },\n      getValueInRange: function getValueInRange(range, eol) {\n        return _this._context.model.getValueInRange(range, eol);\n      }\n    };\n    var textAreaInputHost = {\n      getDataToCopy: function getDataToCopy(generateHTML) {\n        var rawTextToCopy = _this._context.model.getPlainTextToCopy(_this._modelSelections, _this._emptySelectionClipboard, platform.isWindows);\n        var newLineCharacter = _this._context.model.getEOL();\n        var isFromEmptySelection = _this._emptySelectionClipboard && _this._modelSelections.length === 1 && _this._modelSelections[0].isEmpty();\n        var multicursorText = Array.isArray(rawTextToCopy) ? rawTextToCopy : null;\n        var text = Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy;\n        var html = undefined;\n        var mode = null;\n        if (generateHTML) {\n          if (CopyOptions.forceCopyWithSyntaxHighlighting || _this._copyWithSyntaxHighlighting && text.length < 65536) {\n            var richText = _this._context.model.getRichTextToCopy(_this._modelSelections, _this._emptySelectionClipboard);\n            if (richText) {\n              html = richText.html;\n              mode = richText.mode;\n            }\n          }\n        }\n        return {\n          isFromEmptySelection: isFromEmptySelection,\n          multicursorText: multicursorText,\n          text: text,\n          html: html,\n          mode: mode\n        };\n      },\n      getScreenReaderContent: function getScreenReaderContent(currentState) {\n        if (browser.isIPad) {\n          // Do not place anything in the textarea for the iPad\n          return TextAreaState.EMPTY;\n        }\n        if (_this._accessibilitySupport === 1 /* Disabled */) {\n          // We know for a fact that a screen reader is not attached\n          // On OSX, we write the character before the cursor to allow for \"long-press\" composition\n          // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n          if (platform.isMacintosh) {\n            var selection = _this._selections[0];\n            if (selection.isEmpty()) {\n              var position = selection.getStartPosition();\n              var textBefore = _this._getWordBeforePosition(position);\n              if (textBefore.length === 0) {\n                textBefore = _this._getCharacterBeforePosition(position);\n              }\n              if (textBefore.length > 0) {\n                return new TextAreaState(textBefore, textBefore.length, textBefore.length, position, position);\n              }\n            }\n          }\n          return TextAreaState.EMPTY;\n        }\n        return PagedScreenReaderStrategy.fromEditorSelection(currentState, simpleModel, _this._selections[0], _this._accessibilityPageSize, _this._accessibilitySupport === 0 /* Unknown */);\n      },\n\n      deduceModelPosition: function deduceModelPosition(viewAnchorPosition, deltaOffset, lineFeedCnt) {\n        return _this._context.model.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n      }\n    };\n    _this._textAreaInput = _this._register(new TextAreaInput(textAreaInputHost, _this.textArea));\n    _this._register(_this._textAreaInput.onKeyDown(function (e) {\n      _this._viewController.emitKeyDown(e);\n    }));\n    _this._register(_this._textAreaInput.onKeyUp(function (e) {\n      _this._viewController.emitKeyUp(e);\n    }));\n    _this._register(_this._textAreaInput.onPaste(function (e) {\n      var pasteOnNewLine = false;\n      var multicursorText = null;\n      var mode = null;\n      if (e.metadata) {\n        pasteOnNewLine = _this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection;\n        multicursorText = typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null;\n        mode = e.metadata.mode;\n      }\n      _this._viewController.paste('keyboard', e.text, pasteOnNewLine, multicursorText, mode);\n    }));\n    _this._register(_this._textAreaInput.onCut(function () {\n      _this._viewController.cut('keyboard');\n    }));\n    _this._register(_this._textAreaInput.onType(function (e) {\n      if (e.replaceCharCnt) {\n        _this._viewController.replacePreviousChar('keyboard', e.text, e.replaceCharCnt);\n      } else {\n        _this._viewController.type('keyboard', e.text);\n      }\n    }));\n    _this._register(_this._textAreaInput.onSelectionChangeRequest(function (modelSelection) {\n      _this._viewController.setSelection('keyboard', modelSelection);\n    }));\n    _this._register(_this._textAreaInput.onCompositionStart(function () {\n      var lineNumber = _this._selections[0].startLineNumber;\n      var column = _this._selections[0].startColumn;\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('keyboard', new Range(lineNumber, column, lineNumber, column), 0 /* Simple */, true, 1 /* Immediate */));\n      // Find range pixel position\n      var visibleRange = _this._viewHelper.visibleRangeForPositionRelativeToEditor(lineNumber, column);\n      if (visibleRange) {\n        _this._visibleTextArea = new VisibleTextAreaData(_this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber), visibleRange.left, canUseZeroSizeTextarea ? 0 : 1);\n        _this._render();\n      }\n      // Show the textarea\n      _this.textArea.setClassName('inputarea ime-input');\n      _this._viewController.compositionStart('keyboard');\n    }));\n    _this._register(_this._textAreaInput.onCompositionUpdate(function (e) {\n      if (browser.isEdgeOrIE) {\n        // Due to isEdgeOrIE (where the textarea was not cleared initially)\n        // we cannot assume the text consists only of the composited text\n        _this._visibleTextArea = _this._visibleTextArea.setWidth(0);\n      } else {\n        // adjust width by its size\n        _this._visibleTextArea = _this._visibleTextArea.setWidth(measureText(e.data, _this._fontInfo));\n      }\n      _this._render();\n    }));\n    _this._register(_this._textAreaInput.onCompositionEnd(function () {\n      _this._visibleTextArea = null;\n      _this._render();\n      _this.textArea.setClassName('inputarea');\n      _this._viewController.compositionEnd('keyboard');\n    }));\n    _this._register(_this._textAreaInput.onFocus(function () {\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(true));\n    }));\n    _this._register(_this._textAreaInput.onBlur(function () {\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(false));\n    }));\n    return _this;\n  }\n  TextAreaHandler.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n  };\n  TextAreaHandler.prototype._getWordBeforePosition = function (position) {\n    var lineContent = this._context.model.getLineContent(position.lineNumber);\n    var wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(96 /* wordSeparators */));\n    var column = position.column;\n    var distance = 0;\n    while (column > 1) {\n      var charCode = lineContent.charCodeAt(column - 2);\n      var charClass = wordSeparators.get(charCode);\n      if (charClass !== 0 /* Regular */ || distance > 50) {\n        return lineContent.substring(column - 1, position.column - 1);\n      }\n      distance++;\n      column--;\n    }\n    return lineContent.substring(0, position.column - 1);\n  };\n  TextAreaHandler.prototype._getCharacterBeforePosition = function (position) {\n    if (position.column > 1) {\n      var lineContent = this._context.model.getLineContent(position.lineNumber);\n      var charBefore = lineContent.charAt(position.column - 2);\n      if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n        return charBefore;\n      }\n    }\n    return '';\n  };\n  TextAreaHandler.prototype._getAriaLabel = function (options) {\n    var accessibilitySupport = options.get(2 /* accessibilitySupport */);\n    if (accessibilitySupport === 1 /* Disabled */) {\n      return nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press Alt+F1 for options.\");\n    }\n    return options.get(4 /* ariaLabel */);\n  };\n\n  TextAreaHandler.prototype._setAccessibilityOptions = function (options) {\n    this._accessibilitySupport = options.get(2 /* accessibilitySupport */);\n    var accessibilityPageSize = options.get(3 /* accessibilityPageSize */);\n    if (this._accessibilitySupport === 2 /* Enabled */ && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n      // If a screen reader is attached and the default value is not set we shuold automatically increase the page size to 160 for a better experience\n      // If we put more than 160 lines the nvda can not handle this https://github.com/microsoft/vscode/issues/89717\n      this._accessibilityPageSize = 160;\n    } else {\n      this._accessibilityPageSize = accessibilityPageSize;\n    }\n  };\n  // --- begin event handlers\n  TextAreaHandler.prototype.onConfigurationChanged = function (e) {\n    var options = this._context.configuration.options;\n    var layoutInfo = options.get(107 /* layoutInfo */);\n    this._setAccessibilityOptions(options);\n    this._contentLeft = layoutInfo.contentLeft;\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentHeight = layoutInfo.height;\n    this._fontInfo = options.get(34 /* fontInfo */);\n    this._lineHeight = options.get(49 /* lineHeight */);\n    this._emptySelectionClipboard = options.get(25 /* emptySelectionClipboard */);\n    this._copyWithSyntaxHighlighting = options.get(15 /* copyWithSyntaxHighlighting */);\n    this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n    if (platform.isWeb && e.hasChanged(68 /* readOnly */)) {\n      if (options.get(68 /* readOnly */)) {\n        this.textArea.setAttribute('readonly', 'true');\n      } else {\n        this.textArea.removeAttribute('readonly');\n      }\n    }\n    if (e.hasChanged(2 /* accessibilitySupport */)) {\n      this._textAreaInput.writeScreenReaderContent('strategy changed');\n    }\n    return true;\n  };\n  TextAreaHandler.prototype.onCursorStateChanged = function (e) {\n    this._selections = e.selections.slice(0);\n    this._modelSelections = e.modelSelections.slice(0);\n    this._textAreaInput.writeScreenReaderContent('selection changed');\n    return true;\n  };\n  TextAreaHandler.prototype.onDecorationsChanged = function (e) {\n    // true for inline decorations that can end up relayouting text\n    return true;\n  };\n  TextAreaHandler.prototype.onFlushed = function (e) {\n    return true;\n  };\n  TextAreaHandler.prototype.onLinesChanged = function (e) {\n    return true;\n  };\n  TextAreaHandler.prototype.onLinesDeleted = function (e) {\n    return true;\n  };\n  TextAreaHandler.prototype.onLinesInserted = function (e) {\n    return true;\n  };\n  TextAreaHandler.prototype.onScrollChanged = function (e) {\n    this._scrollLeft = e.scrollLeft;\n    this._scrollTop = e.scrollTop;\n    return true;\n  };\n  TextAreaHandler.prototype.onZonesChanged = function (e) {\n    return true;\n  };\n  // --- end event handlers\n  // --- begin view API\n  TextAreaHandler.prototype.isFocused = function () {\n    return this._textAreaInput.isFocused();\n  };\n  TextAreaHandler.prototype.focusTextArea = function () {\n    this._textAreaInput.focusTextArea();\n  };\n  TextAreaHandler.prototype.getLastRenderData = function () {\n    return this._lastRenderPosition;\n  };\n  TextAreaHandler.prototype.setAriaOptions = function (options) {\n    if (options.activeDescendant) {\n      this.textArea.setAttribute('aria-haspopup', 'true');\n      this.textArea.setAttribute('aria-autocomplete', 'list');\n      this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n    } else {\n      this.textArea.setAttribute('aria-haspopup', 'false');\n      this.textArea.setAttribute('aria-autocomplete', 'both');\n      this.textArea.removeAttribute('aria-activedescendant');\n    }\n  };\n  TextAreaHandler.prototype.prepareRender = function (ctx) {\n    this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n    this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n  };\n  TextAreaHandler.prototype.render = function (ctx) {\n    this._textAreaInput.writeScreenReaderContent('render');\n    this._render();\n  };\n  TextAreaHandler.prototype._render = function () {\n    if (this._visibleTextArea) {\n      // The text area is visible for composition reasons\n      this._renderInsideEditor(null, this._visibleTextArea.top - this._scrollTop, this._contentLeft + this._visibleTextArea.left - this._scrollLeft, this._visibleTextArea.width, this._lineHeight);\n      return;\n    }\n    if (!this._primaryCursorVisibleRange) {\n      // The primary cursor is outside the viewport => place textarea to the top left\n      this._renderAtTopLeft();\n      return;\n    }\n    var left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n    if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n      // cursor is outside the viewport\n      this._renderAtTopLeft();\n      return;\n    }\n    var top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n    if (top < 0 || top > this._contentHeight) {\n      // cursor is outside the viewport\n      this._renderAtTopLeft();\n      return;\n    }\n    // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n    if (platform.isMacintosh) {\n      // For the popup emoji input, we will make the text area as high as the line height\n      // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n      this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, this._lineHeight);\n      return;\n    }\n    this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, canUseZeroSizeTextarea ? 0 : 1);\n  };\n  TextAreaHandler.prototype._renderInsideEditor = function (renderedPosition, top, left, width, height) {\n    this._lastRenderPosition = renderedPosition;\n    var ta = this.textArea;\n    var tac = this.textAreaCover;\n    Configuration.applyFontInfo(ta, this._fontInfo);\n    ta.setTop(top);\n    ta.setLeft(left);\n    ta.setWidth(width);\n    ta.setHeight(height);\n    tac.setTop(0);\n    tac.setLeft(0);\n    tac.setWidth(0);\n    tac.setHeight(0);\n  };\n  TextAreaHandler.prototype._renderAtTopLeft = function () {\n    this._lastRenderPosition = null;\n    var ta = this.textArea;\n    var tac = this.textAreaCover;\n    Configuration.applyFontInfo(ta, this._fontInfo);\n    ta.setTop(0);\n    ta.setLeft(0);\n    tac.setTop(0);\n    tac.setLeft(0);\n    if (canUseZeroSizeTextarea) {\n      ta.setWidth(0);\n      ta.setHeight(0);\n      tac.setWidth(0);\n      tac.setHeight(0);\n      return;\n    }\n    // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n    // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n    ta.setWidth(1);\n    ta.setHeight(1);\n    tac.setWidth(1);\n    tac.setHeight(1);\n    var options = this._context.configuration.options;\n    if (options.get(40 /* glyphMargin */)) {\n      tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n    } else {\n      if (options.get(50 /* lineNumbers */).renderType !== 0 /* Off */) {\n        tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n      } else {\n        tac.setClassName('monaco-editor-background textAreaCover');\n      }\n    }\n  };\n  return TextAreaHandler;\n}(ViewPart);\nexport { TextAreaHandler };\nfunction measureText(text, fontInfo) {\n  // adjust width by its size\n  var canvasElem = document.createElement('canvas');\n  var context = canvasElem.getContext('2d');\n  context.font = createFontString(fontInfo);\n  var metrics = context.measureText(text);\n  if (browser.isFirefox) {\n    return metrics.width + 2; // +2 for Japanese...\n  } else {\n    return metrics.width;\n  }\n}\nfunction createFontString(bareFontInfo) {\n  return doCreateFontString('normal', bareFontInfo.fontWeight, bareFontInfo.fontSize, bareFontInfo.lineHeight, bareFontInfo.fontFamily);\n}\nfunction doCreateFontString(fontStyle, fontWeight, fontSize, lineHeight, fontFamily) {\n  // The full font syntax is:\n  // style | variant | weight | stretch | size/line-height | fontFamily\n  // (https://developer.mozilla.org/en-US/docs/Web/CSS/font)\n  // But it appears Edge and IE11 cannot properly parse `stretch`.\n  return fontStyle + \" normal \" + fontWeight + \" \" + fontSize + \"px / \" + lineHeight + \"px \" + fontFamily;\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","browser","createFastDomNode","platform","strings","Configuration","CopyOptions","TextAreaInput","PagedScreenReaderStrategy","TextAreaState","PartFingerprints","ViewPart","LineNumbersOverlay","Margin","EditorOptions","getMapForWordSeparators","Position","Range","Selection","viewEvents","VisibleTextAreaData","top","left","width","setWidth","canUseZeroSizeTextarea","isEdgeOrIE","isFirefox","TextAreaHandler","_super","context","viewController","viewHelper","_this","call","_primaryCursorPosition","_primaryCursorVisibleRange","_viewController","_viewHelper","_scrollLeft","_scrollTop","options","_context","configuration","layoutInfo","get","_setAccessibilityOptions","_contentLeft","contentLeft","_contentWidth","contentWidth","_contentHeight","height","_fontInfo","_lineHeight","_emptySelectionClipboard","_copyWithSyntaxHighlighting","_visibleTextArea","_selections","_modelSelections","_lastRenderPosition","textArea","document","createElement","write","setClassName","setAttribute","_getAriaLabel","isWeb","textAreaCover","setPosition","simpleModel","getLineCount","model","getLineMaxColumn","lineNumber","getValueInRange","range","eol","textAreaInputHost","getDataToCopy","generateHTML","rawTextToCopy","getPlainTextToCopy","isWindows","newLineCharacter","getEOL","isFromEmptySelection","length","isEmpty","multicursorText","isArray","text","join","html","undefined","mode","forceCopyWithSyntaxHighlighting","richText","getRichTextToCopy","getScreenReaderContent","currentState","isIPad","EMPTY","_accessibilitySupport","isMacintosh","selection","position","getStartPosition","textBefore","_getWordBeforePosition","_getCharacterBeforePosition","fromEditorSelection","_accessibilityPageSize","deduceModelPosition","viewAnchorPosition","deltaOffset","lineFeedCnt","deduceModelPositionRelativeToViewPosition","_textAreaInput","_register","onKeyDown","e","emitKeyDown","onKeyUp","emitKeyUp","onPaste","pasteOnNewLine","metadata","paste","onCut","cut","onType","replaceCharCnt","replacePreviousChar","type","onSelectionChangeRequest","modelSelection","setSelection","onCompositionStart","startLineNumber","column","startColumn","privateViewEventBus","emit","ViewRevealRangeRequestEvent","visibleRange","visibleRangeForPositionRelativeToEditor","viewLayout","getVerticalOffsetForLineNumber","_render","compositionStart","onCompositionUpdate","measureText","data","onCompositionEnd","compositionEnd","onFocus","ViewFocusChangedEvent","onBlur","dispose","lineContent","getLineContent","wordSeparators","distance","charCode","charCodeAt","charClass","substring","charBefore","charAt","isHighSurrogate","accessibilitySupport","localize","accessibilityPageSize","defaultValue","onConfigurationChanged","hasChanged","removeAttribute","writeScreenReaderContent","onCursorStateChanged","selections","slice","modelSelections","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollLeft","scrollTop","onZonesChanged","isFocused","focusTextArea","getLastRenderData","setAriaOptions","activeDescendant","prepareRender","ctx","positionLineNumber","positionColumn","visibleRangeForPosition","render","_renderInsideEditor","_renderAtTopLeft","renderedPosition","ta","tac","applyFontInfo","setTop","setLeft","setHeight","OUTER_CLASS_NAME","renderType","CLASS_NAME","fontInfo","canvasElem","getContext","font","createFontString","metrics","bareFontInfo","doCreateFontString","fontWeight","fontSize","lineHeight","fontFamily","fontStyle"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './textAreaHandler.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { CopyOptions, TextAreaInput } from './textAreaInput.js';\r\nimport { PagedScreenReaderStrategy, TextAreaState } from './textAreaState.js';\r\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\r\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\r\nimport { Margin } from '../viewParts/margin/margin.js';\r\nimport { EditorOptions } from '../../common/config/editorOptions.js';\r\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport * as viewEvents from '../../common/view/viewEvents.js';\r\nvar VisibleTextAreaData = /** @class */ (function () {\r\n    function VisibleTextAreaData(top, left, width) {\r\n        this.top = top;\r\n        this.left = left;\r\n        this.width = width;\r\n    }\r\n    VisibleTextAreaData.prototype.setWidth = function (width) {\r\n        return new VisibleTextAreaData(this.top, this.left, width);\r\n    };\r\n    return VisibleTextAreaData;\r\n}());\r\nvar canUseZeroSizeTextarea = (browser.isEdgeOrIE || browser.isFirefox);\r\nvar TextAreaHandler = /** @class */ (function (_super) {\r\n    __extends(TextAreaHandler, _super);\r\n    function TextAreaHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context) || this;\r\n        // --- end view API\r\n        _this._primaryCursorPosition = new Position(1, 1);\r\n        _this._primaryCursorVisibleRange = null;\r\n        _this._viewController = viewController;\r\n        _this._viewHelper = viewHelper;\r\n        _this._scrollLeft = 0;\r\n        _this._scrollTop = 0;\r\n        var options = _this._context.configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        _this._setAccessibilityOptions(options);\r\n        _this._contentLeft = layoutInfo.contentLeft;\r\n        _this._contentWidth = layoutInfo.contentWidth;\r\n        _this._contentHeight = layoutInfo.height;\r\n        _this._fontInfo = options.get(34 /* fontInfo */);\r\n        _this._lineHeight = options.get(49 /* lineHeight */);\r\n        _this._emptySelectionClipboard = options.get(25 /* emptySelectionClipboard */);\r\n        _this._copyWithSyntaxHighlighting = options.get(15 /* copyWithSyntaxHighlighting */);\r\n        _this._visibleTextArea = null;\r\n        _this._selections = [new Selection(1, 1, 1, 1)];\r\n        _this._modelSelections = [new Selection(1, 1, 1, 1)];\r\n        _this._lastRenderPosition = null;\r\n        // Text Area (The focus will always be in the textarea when the cursor is blinking)\r\n        _this.textArea = createFastDomNode(document.createElement('textarea'));\r\n        PartFingerprints.write(_this.textArea, 6 /* TextArea */);\r\n        _this.textArea.setClassName('inputarea');\r\n        _this.textArea.setAttribute('wrap', 'off');\r\n        _this.textArea.setAttribute('autocorrect', 'off');\r\n        _this.textArea.setAttribute('autocapitalize', 'off');\r\n        _this.textArea.setAttribute('autocomplete', 'off');\r\n        _this.textArea.setAttribute('spellcheck', 'false');\r\n        _this.textArea.setAttribute('aria-label', _this._getAriaLabel(options));\r\n        _this.textArea.setAttribute('role', 'textbox');\r\n        _this.textArea.setAttribute('aria-multiline', 'true');\r\n        _this.textArea.setAttribute('aria-haspopup', 'false');\r\n        _this.textArea.setAttribute('aria-autocomplete', 'both');\r\n        if (platform.isWeb && options.get(68 /* readOnly */)) {\r\n            _this.textArea.setAttribute('readonly', 'true');\r\n        }\r\n        _this.textAreaCover = createFastDomNode(document.createElement('div'));\r\n        _this.textAreaCover.setPosition('absolute');\r\n        var simpleModel = {\r\n            getLineCount: function () {\r\n                return _this._context.model.getLineCount();\r\n            },\r\n            getLineMaxColumn: function (lineNumber) {\r\n                return _this._context.model.getLineMaxColumn(lineNumber);\r\n            },\r\n            getValueInRange: function (range, eol) {\r\n                return _this._context.model.getValueInRange(range, eol);\r\n            }\r\n        };\r\n        var textAreaInputHost = {\r\n            getDataToCopy: function (generateHTML) {\r\n                var rawTextToCopy = _this._context.model.getPlainTextToCopy(_this._modelSelections, _this._emptySelectionClipboard, platform.isWindows);\r\n                var newLineCharacter = _this._context.model.getEOL();\r\n                var isFromEmptySelection = (_this._emptySelectionClipboard && _this._modelSelections.length === 1 && _this._modelSelections[0].isEmpty());\r\n                var multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\r\n                var text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\r\n                var html = undefined;\r\n                var mode = null;\r\n                if (generateHTML) {\r\n                    if (CopyOptions.forceCopyWithSyntaxHighlighting || (_this._copyWithSyntaxHighlighting && text.length < 65536)) {\r\n                        var richText = _this._context.model.getRichTextToCopy(_this._modelSelections, _this._emptySelectionClipboard);\r\n                        if (richText) {\r\n                            html = richText.html;\r\n                            mode = richText.mode;\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    isFromEmptySelection: isFromEmptySelection,\r\n                    multicursorText: multicursorText,\r\n                    text: text,\r\n                    html: html,\r\n                    mode: mode\r\n                };\r\n            },\r\n            getScreenReaderContent: function (currentState) {\r\n                if (browser.isIPad) {\r\n                    // Do not place anything in the textarea for the iPad\r\n                    return TextAreaState.EMPTY;\r\n                }\r\n                if (_this._accessibilitySupport === 1 /* Disabled */) {\r\n                    // We know for a fact that a screen reader is not attached\r\n                    // On OSX, we write the character before the cursor to allow for \"long-press\" composition\r\n                    // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\r\n                    if (platform.isMacintosh) {\r\n                        var selection = _this._selections[0];\r\n                        if (selection.isEmpty()) {\r\n                            var position = selection.getStartPosition();\r\n                            var textBefore = _this._getWordBeforePosition(position);\r\n                            if (textBefore.length === 0) {\r\n                                textBefore = _this._getCharacterBeforePosition(position);\r\n                            }\r\n                            if (textBefore.length > 0) {\r\n                                return new TextAreaState(textBefore, textBefore.length, textBefore.length, position, position);\r\n                            }\r\n                        }\r\n                    }\r\n                    return TextAreaState.EMPTY;\r\n                }\r\n                return PagedScreenReaderStrategy.fromEditorSelection(currentState, simpleModel, _this._selections[0], _this._accessibilityPageSize, _this._accessibilitySupport === 0 /* Unknown */);\r\n            },\r\n            deduceModelPosition: function (viewAnchorPosition, deltaOffset, lineFeedCnt) {\r\n                return _this._context.model.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\r\n            }\r\n        };\r\n        _this._textAreaInput = _this._register(new TextAreaInput(textAreaInputHost, _this.textArea));\r\n        _this._register(_this._textAreaInput.onKeyDown(function (e) {\r\n            _this._viewController.emitKeyDown(e);\r\n        }));\r\n        _this._register(_this._textAreaInput.onKeyUp(function (e) {\r\n            _this._viewController.emitKeyUp(e);\r\n        }));\r\n        _this._register(_this._textAreaInput.onPaste(function (e) {\r\n            var pasteOnNewLine = false;\r\n            var multicursorText = null;\r\n            var mode = null;\r\n            if (e.metadata) {\r\n                pasteOnNewLine = (_this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\r\n                multicursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\r\n                mode = e.metadata.mode;\r\n            }\r\n            _this._viewController.paste('keyboard', e.text, pasteOnNewLine, multicursorText, mode);\r\n        }));\r\n        _this._register(_this._textAreaInput.onCut(function () {\r\n            _this._viewController.cut('keyboard');\r\n        }));\r\n        _this._register(_this._textAreaInput.onType(function (e) {\r\n            if (e.replaceCharCnt) {\r\n                _this._viewController.replacePreviousChar('keyboard', e.text, e.replaceCharCnt);\r\n            }\r\n            else {\r\n                _this._viewController.type('keyboard', e.text);\r\n            }\r\n        }));\r\n        _this._register(_this._textAreaInput.onSelectionChangeRequest(function (modelSelection) {\r\n            _this._viewController.setSelection('keyboard', modelSelection);\r\n        }));\r\n        _this._register(_this._textAreaInput.onCompositionStart(function () {\r\n            var lineNumber = _this._selections[0].startLineNumber;\r\n            var column = _this._selections[0].startColumn;\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('keyboard', new Range(lineNumber, column, lineNumber, column), 0 /* Simple */, true, 1 /* Immediate */));\r\n            // Find range pixel position\r\n            var visibleRange = _this._viewHelper.visibleRangeForPositionRelativeToEditor(lineNumber, column);\r\n            if (visibleRange) {\r\n                _this._visibleTextArea = new VisibleTextAreaData(_this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber), visibleRange.left, canUseZeroSizeTextarea ? 0 : 1);\r\n                _this._render();\r\n            }\r\n            // Show the textarea\r\n            _this.textArea.setClassName('inputarea ime-input');\r\n            _this._viewController.compositionStart('keyboard');\r\n        }));\r\n        _this._register(_this._textAreaInput.onCompositionUpdate(function (e) {\r\n            if (browser.isEdgeOrIE) {\r\n                // Due to isEdgeOrIE (where the textarea was not cleared initially)\r\n                // we cannot assume the text consists only of the composited text\r\n                _this._visibleTextArea = _this._visibleTextArea.setWidth(0);\r\n            }\r\n            else {\r\n                // adjust width by its size\r\n                _this._visibleTextArea = _this._visibleTextArea.setWidth(measureText(e.data, _this._fontInfo));\r\n            }\r\n            _this._render();\r\n        }));\r\n        _this._register(_this._textAreaInput.onCompositionEnd(function () {\r\n            _this._visibleTextArea = null;\r\n            _this._render();\r\n            _this.textArea.setClassName('inputarea');\r\n            _this._viewController.compositionEnd('keyboard');\r\n        }));\r\n        _this._register(_this._textAreaInput.onFocus(function () {\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(true));\r\n        }));\r\n        _this._register(_this._textAreaInput.onBlur(function () {\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(false));\r\n        }));\r\n        return _this;\r\n    }\r\n    TextAreaHandler.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    TextAreaHandler.prototype._getWordBeforePosition = function (position) {\r\n        var lineContent = this._context.model.getLineContent(position.lineNumber);\r\n        var wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(96 /* wordSeparators */));\r\n        var column = position.column;\r\n        var distance = 0;\r\n        while (column > 1) {\r\n            var charCode = lineContent.charCodeAt(column - 2);\r\n            var charClass = wordSeparators.get(charCode);\r\n            if (charClass !== 0 /* Regular */ || distance > 50) {\r\n                return lineContent.substring(column - 1, position.column - 1);\r\n            }\r\n            distance++;\r\n            column--;\r\n        }\r\n        return lineContent.substring(0, position.column - 1);\r\n    };\r\n    TextAreaHandler.prototype._getCharacterBeforePosition = function (position) {\r\n        if (position.column > 1) {\r\n            var lineContent = this._context.model.getLineContent(position.lineNumber);\r\n            var charBefore = lineContent.charAt(position.column - 2);\r\n            if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\r\n                return charBefore;\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n    TextAreaHandler.prototype._getAriaLabel = function (options) {\r\n        var accessibilitySupport = options.get(2 /* accessibilitySupport */);\r\n        if (accessibilitySupport === 1 /* Disabled */) {\r\n            return nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press Alt+F1 for options.\");\r\n        }\r\n        return options.get(4 /* ariaLabel */);\r\n    };\r\n    TextAreaHandler.prototype._setAccessibilityOptions = function (options) {\r\n        this._accessibilitySupport = options.get(2 /* accessibilitySupport */);\r\n        var accessibilityPageSize = options.get(3 /* accessibilityPageSize */);\r\n        if (this._accessibilitySupport === 2 /* Enabled */ && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\r\n            // If a screen reader is attached and the default value is not set we shuold automatically increase the page size to 160 for a better experience\r\n            // If we put more than 160 lines the nvda can not handle this https://github.com/microsoft/vscode/issues/89717\r\n            this._accessibilityPageSize = 160;\r\n        }\r\n        else {\r\n            this._accessibilityPageSize = accessibilityPageSize;\r\n        }\r\n    };\r\n    // --- begin event handlers\r\n    TextAreaHandler.prototype.onConfigurationChanged = function (e) {\r\n        var options = this._context.configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        this._setAccessibilityOptions(options);\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._contentHeight = layoutInfo.height;\r\n        this._fontInfo = options.get(34 /* fontInfo */);\r\n        this._lineHeight = options.get(49 /* lineHeight */);\r\n        this._emptySelectionClipboard = options.get(25 /* emptySelectionClipboard */);\r\n        this._copyWithSyntaxHighlighting = options.get(15 /* copyWithSyntaxHighlighting */);\r\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\r\n        if (platform.isWeb && e.hasChanged(68 /* readOnly */)) {\r\n            if (options.get(68 /* readOnly */)) {\r\n                this.textArea.setAttribute('readonly', 'true');\r\n            }\r\n            else {\r\n                this.textArea.removeAttribute('readonly');\r\n            }\r\n        }\r\n        if (e.hasChanged(2 /* accessibilitySupport */)) {\r\n            this._textAreaInput.writeScreenReaderContent('strategy changed');\r\n        }\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onCursorStateChanged = function (e) {\r\n        this._selections = e.selections.slice(0);\r\n        this._modelSelections = e.modelSelections.slice(0);\r\n        this._textAreaInput.writeScreenReaderContent('selection changed');\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onDecorationsChanged = function (e) {\r\n        // true for inline decorations that can end up relayouting text\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onFlushed = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onLinesChanged = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onLinesDeleted = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onLinesInserted = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onScrollChanged = function (e) {\r\n        this._scrollLeft = e.scrollLeft;\r\n        this._scrollTop = e.scrollTop;\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onZonesChanged = function (e) {\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    // --- begin view API\r\n    TextAreaHandler.prototype.isFocused = function () {\r\n        return this._textAreaInput.isFocused();\r\n    };\r\n    TextAreaHandler.prototype.focusTextArea = function () {\r\n        this._textAreaInput.focusTextArea();\r\n    };\r\n    TextAreaHandler.prototype.getLastRenderData = function () {\r\n        return this._lastRenderPosition;\r\n    };\r\n    TextAreaHandler.prototype.setAriaOptions = function (options) {\r\n        if (options.activeDescendant) {\r\n            this.textArea.setAttribute('aria-haspopup', 'true');\r\n            this.textArea.setAttribute('aria-autocomplete', 'list');\r\n            this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\r\n        }\r\n        else {\r\n            this.textArea.setAttribute('aria-haspopup', 'false');\r\n            this.textArea.setAttribute('aria-autocomplete', 'both');\r\n            this.textArea.removeAttribute('aria-activedescendant');\r\n        }\r\n    };\r\n    TextAreaHandler.prototype.prepareRender = function (ctx) {\r\n        this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\r\n        this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\r\n    };\r\n    TextAreaHandler.prototype.render = function (ctx) {\r\n        this._textAreaInput.writeScreenReaderContent('render');\r\n        this._render();\r\n    };\r\n    TextAreaHandler.prototype._render = function () {\r\n        if (this._visibleTextArea) {\r\n            // The text area is visible for composition reasons\r\n            this._renderInsideEditor(null, this._visibleTextArea.top - this._scrollTop, this._contentLeft + this._visibleTextArea.left - this._scrollLeft, this._visibleTextArea.width, this._lineHeight);\r\n            return;\r\n        }\r\n        if (!this._primaryCursorVisibleRange) {\r\n            // The primary cursor is outside the viewport => place textarea to the top left\r\n            this._renderAtTopLeft();\r\n            return;\r\n        }\r\n        var left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\r\n        if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\r\n            // cursor is outside the viewport\r\n            this._renderAtTopLeft();\r\n            return;\r\n        }\r\n        var top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\r\n        if (top < 0 || top > this._contentHeight) {\r\n            // cursor is outside the viewport\r\n            this._renderAtTopLeft();\r\n            return;\r\n        }\r\n        // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\r\n        if (platform.isMacintosh) {\r\n            // For the popup emoji input, we will make the text area as high as the line height\r\n            // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\r\n            this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, this._lineHeight);\r\n            return;\r\n        }\r\n        this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, canUseZeroSizeTextarea ? 0 : 1);\r\n    };\r\n    TextAreaHandler.prototype._renderInsideEditor = function (renderedPosition, top, left, width, height) {\r\n        this._lastRenderPosition = renderedPosition;\r\n        var ta = this.textArea;\r\n        var tac = this.textAreaCover;\r\n        Configuration.applyFontInfo(ta, this._fontInfo);\r\n        ta.setTop(top);\r\n        ta.setLeft(left);\r\n        ta.setWidth(width);\r\n        ta.setHeight(height);\r\n        tac.setTop(0);\r\n        tac.setLeft(0);\r\n        tac.setWidth(0);\r\n        tac.setHeight(0);\r\n    };\r\n    TextAreaHandler.prototype._renderAtTopLeft = function () {\r\n        this._lastRenderPosition = null;\r\n        var ta = this.textArea;\r\n        var tac = this.textAreaCover;\r\n        Configuration.applyFontInfo(ta, this._fontInfo);\r\n        ta.setTop(0);\r\n        ta.setLeft(0);\r\n        tac.setTop(0);\r\n        tac.setLeft(0);\r\n        if (canUseZeroSizeTextarea) {\r\n            ta.setWidth(0);\r\n            ta.setHeight(0);\r\n            tac.setWidth(0);\r\n            tac.setHeight(0);\r\n            return;\r\n        }\r\n        // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\r\n        // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\r\n        ta.setWidth(1);\r\n        ta.setHeight(1);\r\n        tac.setWidth(1);\r\n        tac.setHeight(1);\r\n        var options = this._context.configuration.options;\r\n        if (options.get(40 /* glyphMargin */)) {\r\n            tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\r\n        }\r\n        else {\r\n            if (options.get(50 /* lineNumbers */).renderType !== 0 /* Off */) {\r\n                tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\r\n            }\r\n            else {\r\n                tac.setClassName('monaco-editor-background textAreaCover');\r\n            }\r\n        }\r\n    };\r\n    return TextAreaHandler;\r\n}(ViewPart));\r\nexport { TextAreaHandler };\r\nfunction measureText(text, fontInfo) {\r\n    // adjust width by its size\r\n    var canvasElem = document.createElement('canvas');\r\n    var context = canvasElem.getContext('2d');\r\n    context.font = createFontString(fontInfo);\r\n    var metrics = context.measureText(text);\r\n    if (browser.isFirefox) {\r\n        return metrics.width + 2; // +2 for Japanese...\r\n    }\r\n    else {\r\n        return metrics.width;\r\n    }\r\n}\r\nfunction createFontString(bareFontInfo) {\r\n    return doCreateFontString('normal', bareFontInfo.fontWeight, bareFontInfo.fontSize, bareFontInfo.lineHeight, bareFontInfo.fontFamily);\r\n}\r\nfunction doCreateFontString(fontStyle, fontWeight, fontSize, lineHeight, fontFamily) {\r\n    // The full font syntax is:\r\n    // style | variant | weight | stretch | size/line-height | fontFamily\r\n    // (https://developer.mozilla.org/en-US/docs/Web/CSS/font)\r\n    // But it appears Edge and IE11 cannot properly parse `stretch`.\r\n    return fontStyle + \" normal \" + fontWeight + \" \" + fontSize + \"px / \" + lineHeight + \"px \" + fontFamily;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,cAAa,GAAG,uBAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,cAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC;QAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;MAAC;IAAC,CAAC;IAC9E,OAAOP,cAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,cAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,OAAO,uBAAuB;AAC9B,OAAO,KAAKI,GAAG,MAAM,iBAAiB;AACtC,OAAO,KAAKC,OAAO,MAAM,kCAAkC;AAC3D,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,OAAO,KAAKC,QAAQ,MAAM,kCAAkC;AAC5D,OAAO,KAAKC,OAAO,MAAM,iCAAiC;AAC1D,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,WAAW,EAAEC,aAAa,QAAQ,oBAAoB;AAC/D,SAASC,yBAAyB,EAAEC,aAAa,QAAQ,oBAAoB;AAC7E,SAASC,gBAAgB,EAAEC,QAAQ,QAAQ,qBAAqB;AAChE,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,MAAM,QAAQ,+BAA+B;AACtD,SAASC,aAAa,QAAQ,sCAAsC;AACpE,SAASC,uBAAuB,QAAQ,oDAAoD;AAC5F,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,KAAK,QAAQ,4BAA4B;AAClD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,OAAO,KAAKC,UAAU,MAAM,iCAAiC;AAC7D,IAAIC,mBAAmB,GAAG,aAAe,YAAY;EACjD,SAASA,mBAAmB,CAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC3C,IAAI,CAACF,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;EACAH,mBAAmB,CAACtB,SAAS,CAAC0B,QAAQ,GAAG,UAAUD,KAAK,EAAE;IACtD,OAAO,IAAIH,mBAAmB,CAAC,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,IAAI,EAAEC,KAAK,CAAC;EAC9D,CAAC;EACD,OAAOH,mBAAmB;AAC9B,CAAC,EAAG;AACJ,IAAIK,sBAAsB,GAAIxB,OAAO,CAACyB,UAAU,IAAIzB,OAAO,CAAC0B,SAAU;AACtE,IAAIC,eAAe,GAAG,aAAe,UAAUC,MAAM,EAAE;EACnD3C,SAAS,CAAC0C,eAAe,EAAEC,MAAM,CAAC;EAClC,SAASD,eAAe,CAACE,OAAO,EAAEC,cAAc,EAAEC,UAAU,EAAE;IAC1D,IAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAAC,IAAI,IAAI;IAC9C;IACAG,KAAK,CAACE,sBAAsB,GAAG,IAAInB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACjDiB,KAAK,CAACG,0BAA0B,GAAG,IAAI;IACvCH,KAAK,CAACI,eAAe,GAAGN,cAAc;IACtCE,KAAK,CAACK,WAAW,GAAGN,UAAU;IAC9BC,KAAK,CAACM,WAAW,GAAG,CAAC;IACrBN,KAAK,CAACO,UAAU,GAAG,CAAC;IACpB,IAAIC,OAAO,GAAGR,KAAK,CAACS,QAAQ,CAACC,aAAa,CAACF,OAAO;IAClD,IAAIG,UAAU,GAAGH,OAAO,CAACI,GAAG,CAAC,GAAG,CAAC,iBAAiB;IAClDZ,KAAK,CAACa,wBAAwB,CAACL,OAAO,CAAC;IACvCR,KAAK,CAACc,YAAY,GAAGH,UAAU,CAACI,WAAW;IAC3Cf,KAAK,CAACgB,aAAa,GAAGL,UAAU,CAACM,YAAY;IAC7CjB,KAAK,CAACkB,cAAc,GAAGP,UAAU,CAACQ,MAAM;IACxCnB,KAAK,CAACoB,SAAS,GAAGZ,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,eAAe;IAChDZ,KAAK,CAACqB,WAAW,GAAGb,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,iBAAiB;IACpDZ,KAAK,CAACsB,wBAAwB,GAAGd,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,8BAA8B;IAC9EZ,KAAK,CAACuB,2BAA2B,GAAGf,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,iCAAiC;IACpFZ,KAAK,CAACwB,gBAAgB,GAAG,IAAI;IAC7BxB,KAAK,CAACyB,WAAW,GAAG,CAAC,IAAIxC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/Ce,KAAK,CAAC0B,gBAAgB,GAAG,CAAC,IAAIzC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpDe,KAAK,CAAC2B,mBAAmB,GAAG,IAAI;IAChC;IACA3B,KAAK,CAAC4B,QAAQ,GAAG3D,iBAAiB,CAAC4D,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAAC;IACtErD,gBAAgB,CAACsD,KAAK,CAAC/B,KAAK,CAAC4B,QAAQ,EAAE,CAAC,CAAC,eAAe;IACxD5B,KAAK,CAAC4B,QAAQ,CAACI,YAAY,CAAC,WAAW,CAAC;IACxChC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC;IAC1CjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC;IACjDjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,gBAAgB,EAAE,KAAK,CAAC;IACpDjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC;IAClDjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC;IAClDjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,YAAY,EAAEjC,KAAK,CAACkC,aAAa,CAAC1B,OAAO,CAAC,CAAC;IACvER,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC;IAC9CjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,gBAAgB,EAAE,MAAM,CAAC;IACrDjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;IACrDjC,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC;IACxD,IAAI/D,QAAQ,CAACiE,KAAK,IAAI3B,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,eAAe,EAAE;MAClDZ,KAAK,CAAC4B,QAAQ,CAACK,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC;IACnD;IACAjC,KAAK,CAACoC,aAAa,GAAGnE,iBAAiB,CAAC4D,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAC;IACtE9B,KAAK,CAACoC,aAAa,CAACC,WAAW,CAAC,UAAU,CAAC;IAC3C,IAAIC,WAAW,GAAG;MACdC,YAAY,EAAE,wBAAY;QACtB,OAAOvC,KAAK,CAACS,QAAQ,CAAC+B,KAAK,CAACD,YAAY,EAAE;MAC9C,CAAC;MACDE,gBAAgB,EAAE,0BAAUC,UAAU,EAAE;QACpC,OAAO1C,KAAK,CAACS,QAAQ,CAAC+B,KAAK,CAACC,gBAAgB,CAACC,UAAU,CAAC;MAC5D,CAAC;MACDC,eAAe,EAAE,yBAAUC,KAAK,EAAEC,GAAG,EAAE;QACnC,OAAO7C,KAAK,CAACS,QAAQ,CAAC+B,KAAK,CAACG,eAAe,CAACC,KAAK,EAAEC,GAAG,CAAC;MAC3D;IACJ,CAAC;IACD,IAAIC,iBAAiB,GAAG;MACpBC,aAAa,EAAE,uBAAUC,YAAY,EAAE;QACnC,IAAIC,aAAa,GAAGjD,KAAK,CAACS,QAAQ,CAAC+B,KAAK,CAACU,kBAAkB,CAAClD,KAAK,CAAC0B,gBAAgB,EAAE1B,KAAK,CAACsB,wBAAwB,EAAEpD,QAAQ,CAACiF,SAAS,CAAC;QACvI,IAAIC,gBAAgB,GAAGpD,KAAK,CAACS,QAAQ,CAAC+B,KAAK,CAACa,MAAM,EAAE;QACpD,IAAIC,oBAAoB,GAAItD,KAAK,CAACsB,wBAAwB,IAAItB,KAAK,CAAC0B,gBAAgB,CAAC6B,MAAM,KAAK,CAAC,IAAIvD,KAAK,CAAC0B,gBAAgB,CAAC,CAAC,CAAC,CAAC8B,OAAO,EAAG;QACzI,IAAIC,eAAe,GAAIjG,KAAK,CAACkG,OAAO,CAACT,aAAa,CAAC,GAAGA,aAAa,GAAG,IAAK;QAC3E,IAAIU,IAAI,GAAInG,KAAK,CAACkG,OAAO,CAACT,aAAa,CAAC,GAAGA,aAAa,CAACW,IAAI,CAACR,gBAAgB,CAAC,GAAGH,aAAc;QAChG,IAAIY,IAAI,GAAGC,SAAS;QACpB,IAAIC,IAAI,GAAG,IAAI;QACf,IAAIf,YAAY,EAAE;UACd,IAAI3E,WAAW,CAAC2F,+BAA+B,IAAKhE,KAAK,CAACuB,2BAA2B,IAAIoC,IAAI,CAACJ,MAAM,GAAG,KAAM,EAAE;YAC3G,IAAIU,QAAQ,GAAGjE,KAAK,CAACS,QAAQ,CAAC+B,KAAK,CAAC0B,iBAAiB,CAAClE,KAAK,CAAC0B,gBAAgB,EAAE1B,KAAK,CAACsB,wBAAwB,CAAC;YAC7G,IAAI2C,QAAQ,EAAE;cACVJ,IAAI,GAAGI,QAAQ,CAACJ,IAAI;cACpBE,IAAI,GAAGE,QAAQ,CAACF,IAAI;YACxB;UACJ;QACJ;QACA,OAAO;UACHT,oBAAoB,EAAEA,oBAAoB;UAC1CG,eAAe,EAAEA,eAAe;UAChCE,IAAI,EAAEA,IAAI;UACVE,IAAI,EAAEA,IAAI;UACVE,IAAI,EAAEA;QACV,CAAC;MACL,CAAC;MACDI,sBAAsB,EAAE,gCAAUC,YAAY,EAAE;QAC5C,IAAIpG,OAAO,CAACqG,MAAM,EAAE;UAChB;UACA,OAAO7F,aAAa,CAAC8F,KAAK;QAC9B;QACA,IAAItE,KAAK,CAACuE,qBAAqB,KAAK,CAAC,CAAC,gBAAgB;UAClD;UACA;UACA;UACA,IAAIrG,QAAQ,CAACsG,WAAW,EAAE;YACtB,IAAIC,SAAS,GAAGzE,KAAK,CAACyB,WAAW,CAAC,CAAC,CAAC;YACpC,IAAIgD,SAAS,CAACjB,OAAO,EAAE,EAAE;cACrB,IAAIkB,QAAQ,GAAGD,SAAS,CAACE,gBAAgB,EAAE;cAC3C,IAAIC,UAAU,GAAG5E,KAAK,CAAC6E,sBAAsB,CAACH,QAAQ,CAAC;cACvD,IAAIE,UAAU,CAACrB,MAAM,KAAK,CAAC,EAAE;gBACzBqB,UAAU,GAAG5E,KAAK,CAAC8E,2BAA2B,CAACJ,QAAQ,CAAC;cAC5D;cACA,IAAIE,UAAU,CAACrB,MAAM,GAAG,CAAC,EAAE;gBACvB,OAAO,IAAI/E,aAAa,CAACoG,UAAU,EAAEA,UAAU,CAACrB,MAAM,EAAEqB,UAAU,CAACrB,MAAM,EAAEmB,QAAQ,EAAEA,QAAQ,CAAC;cAClG;YACJ;UACJ;UACA,OAAOlG,aAAa,CAAC8F,KAAK;QAC9B;QACA,OAAO/F,yBAAyB,CAACwG,mBAAmB,CAACX,YAAY,EAAE9B,WAAW,EAAEtC,KAAK,CAACyB,WAAW,CAAC,CAAC,CAAC,EAAEzB,KAAK,CAACgF,sBAAsB,EAAEhF,KAAK,CAACuE,qBAAqB,KAAK,CAAC,CAAC,cAAc;MACxL,CAAC;;MACDU,mBAAmB,EAAE,6BAAUC,kBAAkB,EAAEC,WAAW,EAAEC,WAAW,EAAE;QACzE,OAAOpF,KAAK,CAACS,QAAQ,CAAC+B,KAAK,CAAC6C,yCAAyC,CAACH,kBAAkB,EAAEC,WAAW,EAAEC,WAAW,CAAC;MACvH;IACJ,CAAC;IACDpF,KAAK,CAACsF,cAAc,GAAGtF,KAAK,CAACuF,SAAS,CAAC,IAAIjH,aAAa,CAACwE,iBAAiB,EAAE9C,KAAK,CAAC4B,QAAQ,CAAC,CAAC;IAC5F5B,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACE,SAAS,CAAC,UAAUC,CAAC,EAAE;MACxDzF,KAAK,CAACI,eAAe,CAACsF,WAAW,CAACD,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IACHzF,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACK,OAAO,CAAC,UAAUF,CAAC,EAAE;MACtDzF,KAAK,CAACI,eAAe,CAACwF,SAAS,CAACH,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IACHzF,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACO,OAAO,CAAC,UAAUJ,CAAC,EAAE;MACtD,IAAIK,cAAc,GAAG,KAAK;MAC1B,IAAIrC,eAAe,GAAG,IAAI;MAC1B,IAAIM,IAAI,GAAG,IAAI;MACf,IAAI0B,CAAC,CAACM,QAAQ,EAAE;QACZD,cAAc,GAAI9F,KAAK,CAACsB,wBAAwB,IAAI,CAAC,CAACmE,CAAC,CAACM,QAAQ,CAACzC,oBAAqB;QACtFG,eAAe,GAAI,OAAOgC,CAAC,CAACM,QAAQ,CAACtC,eAAe,KAAK,WAAW,GAAGgC,CAAC,CAACM,QAAQ,CAACtC,eAAe,GAAG,IAAK;QACzGM,IAAI,GAAG0B,CAAC,CAACM,QAAQ,CAAChC,IAAI;MAC1B;MACA/D,KAAK,CAACI,eAAe,CAAC4F,KAAK,CAAC,UAAU,EAAEP,CAAC,CAAC9B,IAAI,EAAEmC,cAAc,EAAErC,eAAe,EAAEM,IAAI,CAAC;IAC1F,CAAC,CAAC,CAAC;IACH/D,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACW,KAAK,CAAC,YAAY;MACnDjG,KAAK,CAACI,eAAe,CAAC8F,GAAG,CAAC,UAAU,CAAC;IACzC,CAAC,CAAC,CAAC;IACHlG,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACa,MAAM,CAAC,UAAUV,CAAC,EAAE;MACrD,IAAIA,CAAC,CAACW,cAAc,EAAE;QAClBpG,KAAK,CAACI,eAAe,CAACiG,mBAAmB,CAAC,UAAU,EAAEZ,CAAC,CAAC9B,IAAI,EAAE8B,CAAC,CAACW,cAAc,CAAC;MACnF,CAAC,MACI;QACDpG,KAAK,CAACI,eAAe,CAACkG,IAAI,CAAC,UAAU,EAAEb,CAAC,CAAC9B,IAAI,CAAC;MAClD;IACJ,CAAC,CAAC,CAAC;IACH3D,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACiB,wBAAwB,CAAC,UAAUC,cAAc,EAAE;MACpFxG,KAAK,CAACI,eAAe,CAACqG,YAAY,CAAC,UAAU,EAAED,cAAc,CAAC;IAClE,CAAC,CAAC,CAAC;IACHxG,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACoB,kBAAkB,CAAC,YAAY;MAChE,IAAIhE,UAAU,GAAG1C,KAAK,CAACyB,WAAW,CAAC,CAAC,CAAC,CAACkF,eAAe;MACrD,IAAIC,MAAM,GAAG5G,KAAK,CAACyB,WAAW,CAAC,CAAC,CAAC,CAACoF,WAAW;MAC7C7G,KAAK,CAACS,QAAQ,CAACqG,mBAAmB,CAACC,IAAI,CAAC,IAAI7H,UAAU,CAAC8H,2BAA2B,CAAC,UAAU,EAAE,IAAIhI,KAAK,CAAC0D,UAAU,EAAEkE,MAAM,EAAElE,UAAU,EAAEkE,MAAM,CAAC,EAAE,CAAC,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC,gBAAgB,CAAC;MAC3L;MACA,IAAIK,YAAY,GAAGjH,KAAK,CAACK,WAAW,CAAC6G,uCAAuC,CAACxE,UAAU,EAAEkE,MAAM,CAAC;MAChG,IAAIK,YAAY,EAAE;QACdjH,KAAK,CAACwB,gBAAgB,GAAG,IAAIrC,mBAAmB,CAACa,KAAK,CAACS,QAAQ,CAAC0G,UAAU,CAACC,8BAA8B,CAAC1E,UAAU,CAAC,EAAEuE,YAAY,CAAC5H,IAAI,EAAEG,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC;QACzKQ,KAAK,CAACqH,OAAO,EAAE;MACnB;MACA;MACArH,KAAK,CAAC4B,QAAQ,CAACI,YAAY,CAAC,qBAAqB,CAAC;MAClDhC,KAAK,CAACI,eAAe,CAACkH,gBAAgB,CAAC,UAAU,CAAC;IACtD,CAAC,CAAC,CAAC;IACHtH,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACiC,mBAAmB,CAAC,UAAU9B,CAAC,EAAE;MAClE,IAAIzH,OAAO,CAACyB,UAAU,EAAE;QACpB;QACA;QACAO,KAAK,CAACwB,gBAAgB,GAAGxB,KAAK,CAACwB,gBAAgB,CAACjC,QAAQ,CAAC,CAAC,CAAC;MAC/D,CAAC,MACI;QACD;QACAS,KAAK,CAACwB,gBAAgB,GAAGxB,KAAK,CAACwB,gBAAgB,CAACjC,QAAQ,CAACiI,WAAW,CAAC/B,CAAC,CAACgC,IAAI,EAAEzH,KAAK,CAACoB,SAAS,CAAC,CAAC;MAClG;MACApB,KAAK,CAACqH,OAAO,EAAE;IACnB,CAAC,CAAC,CAAC;IACHrH,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACoC,gBAAgB,CAAC,YAAY;MAC9D1H,KAAK,CAACwB,gBAAgB,GAAG,IAAI;MAC7BxB,KAAK,CAACqH,OAAO,EAAE;MACfrH,KAAK,CAAC4B,QAAQ,CAACI,YAAY,CAAC,WAAW,CAAC;MACxChC,KAAK,CAACI,eAAe,CAACuH,cAAc,CAAC,UAAU,CAAC;IACpD,CAAC,CAAC,CAAC;IACH3H,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACsC,OAAO,CAAC,YAAY;MACrD5H,KAAK,CAACS,QAAQ,CAACqG,mBAAmB,CAACC,IAAI,CAAC,IAAI7H,UAAU,CAAC2I,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC;IACH7H,KAAK,CAACuF,SAAS,CAACvF,KAAK,CAACsF,cAAc,CAACwC,MAAM,CAAC,YAAY;MACpD9H,KAAK,CAACS,QAAQ,CAACqG,mBAAmB,CAACC,IAAI,CAAC,IAAI7H,UAAU,CAAC2I,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IACH,OAAO7H,KAAK;EAChB;EACAL,eAAe,CAAC9B,SAAS,CAACkK,OAAO,GAAG,YAAY;IAC5CnI,MAAM,CAAC/B,SAAS,CAACkK,OAAO,CAAC9H,IAAI,CAAC,IAAI,CAAC;EACvC,CAAC;EACDN,eAAe,CAAC9B,SAAS,CAACgH,sBAAsB,GAAG,UAAUH,QAAQ,EAAE;IACnE,IAAIsD,WAAW,GAAG,IAAI,CAACvH,QAAQ,CAAC+B,KAAK,CAACyF,cAAc,CAACvD,QAAQ,CAAChC,UAAU,CAAC;IACzE,IAAIwF,cAAc,GAAGpJ,uBAAuB,CAAC,IAAI,CAAC2B,QAAQ,CAACC,aAAa,CAACF,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,qBAAqB,CAAC;IAC9G,IAAIgG,MAAM,GAAGlC,QAAQ,CAACkC,MAAM;IAC5B,IAAIuB,QAAQ,GAAG,CAAC;IAChB,OAAOvB,MAAM,GAAG,CAAC,EAAE;MACf,IAAIwB,QAAQ,GAAGJ,WAAW,CAACK,UAAU,CAACzB,MAAM,GAAG,CAAC,CAAC;MACjD,IAAI0B,SAAS,GAAGJ,cAAc,CAACtH,GAAG,CAACwH,QAAQ,CAAC;MAC5C,IAAIE,SAAS,KAAK,CAAC,CAAC,iBAAiBH,QAAQ,GAAG,EAAE,EAAE;QAChD,OAAOH,WAAW,CAACO,SAAS,CAAC3B,MAAM,GAAG,CAAC,EAAElC,QAAQ,CAACkC,MAAM,GAAG,CAAC,CAAC;MACjE;MACAuB,QAAQ,EAAE;MACVvB,MAAM,EAAE;IACZ;IACA,OAAOoB,WAAW,CAACO,SAAS,CAAC,CAAC,EAAE7D,QAAQ,CAACkC,MAAM,GAAG,CAAC,CAAC;EACxD,CAAC;EACDjH,eAAe,CAAC9B,SAAS,CAACiH,2BAA2B,GAAG,UAAUJ,QAAQ,EAAE;IACxE,IAAIA,QAAQ,CAACkC,MAAM,GAAG,CAAC,EAAE;MACrB,IAAIoB,WAAW,GAAG,IAAI,CAACvH,QAAQ,CAAC+B,KAAK,CAACyF,cAAc,CAACvD,QAAQ,CAAChC,UAAU,CAAC;MACzE,IAAI8F,UAAU,GAAGR,WAAW,CAACS,MAAM,CAAC/D,QAAQ,CAACkC,MAAM,GAAG,CAAC,CAAC;MACxD,IAAI,CAACzI,OAAO,CAACuK,eAAe,CAACF,UAAU,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;QACpD,OAAOG,UAAU;MACrB;IACJ;IACA,OAAO,EAAE;EACb,CAAC;EACD7I,eAAe,CAAC9B,SAAS,CAACqE,aAAa,GAAG,UAAU1B,OAAO,EAAE;IACzD,IAAImI,oBAAoB,GAAGnI,OAAO,CAACI,GAAG,CAAC,CAAC,CAAC,2BAA2B;IACpE,IAAI+H,oBAAoB,KAAK,CAAC,CAAC,gBAAgB;MAC3C,OAAO5K,GAAG,CAAC6K,QAAQ,CAAC,2BAA2B,EAAE,sEAAsE,CAAC;IAC5H;IACA,OAAOpI,OAAO,CAACI,GAAG,CAAC,CAAC,CAAC,gBAAgB;EACzC,CAAC;;EACDjB,eAAe,CAAC9B,SAAS,CAACgD,wBAAwB,GAAG,UAAUL,OAAO,EAAE;IACpE,IAAI,CAAC+D,qBAAqB,GAAG/D,OAAO,CAACI,GAAG,CAAC,CAAC,CAAC,2BAA2B;IACtE,IAAIiI,qBAAqB,GAAGrI,OAAO,CAACI,GAAG,CAAC,CAAC,CAAC,4BAA4B;IACtE,IAAI,IAAI,CAAC2D,qBAAqB,KAAK,CAAC,CAAC,iBAAiBsE,qBAAqB,KAAKhK,aAAa,CAACgK,qBAAqB,CAACC,YAAY,EAAE;MAC9H;MACA;MACA,IAAI,CAAC9D,sBAAsB,GAAG,GAAG;IACrC,CAAC,MACI;MACD,IAAI,CAACA,sBAAsB,GAAG6D,qBAAqB;IACvD;EACJ,CAAC;EACD;EACAlJ,eAAe,CAAC9B,SAAS,CAACkL,sBAAsB,GAAG,UAAUtD,CAAC,EAAE;IAC5D,IAAIjF,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACC,aAAa,CAACF,OAAO;IACjD,IAAIG,UAAU,GAAGH,OAAO,CAACI,GAAG,CAAC,GAAG,CAAC,iBAAiB;IAClD,IAAI,CAACC,wBAAwB,CAACL,OAAO,CAAC;IACtC,IAAI,CAACM,YAAY,GAAGH,UAAU,CAACI,WAAW;IAC1C,IAAI,CAACC,aAAa,GAAGL,UAAU,CAACM,YAAY;IAC5C,IAAI,CAACC,cAAc,GAAGP,UAAU,CAACQ,MAAM;IACvC,IAAI,CAACC,SAAS,GAAGZ,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,eAAe;IAC/C,IAAI,CAACS,WAAW,GAAGb,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,iBAAiB;IACnD,IAAI,CAACU,wBAAwB,GAAGd,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,8BAA8B;IAC7E,IAAI,CAACW,2BAA2B,GAAGf,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,iCAAiC;IACnF,IAAI,CAACgB,QAAQ,CAACK,YAAY,CAAC,YAAY,EAAE,IAAI,CAACC,aAAa,CAAC1B,OAAO,CAAC,CAAC;IACrE,IAAItC,QAAQ,CAACiE,KAAK,IAAIsD,CAAC,CAACuD,UAAU,CAAC,EAAE,CAAC,eAAe,EAAE;MACnD,IAAIxI,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,eAAe,EAAE;QAChC,IAAI,CAACgB,QAAQ,CAACK,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC;MAClD,CAAC,MACI;QACD,IAAI,CAACL,QAAQ,CAACqH,eAAe,CAAC,UAAU,CAAC;MAC7C;IACJ;IACA,IAAIxD,CAAC,CAACuD,UAAU,CAAC,CAAC,CAAC,2BAA2B,EAAE;MAC5C,IAAI,CAAC1D,cAAc,CAAC4D,wBAAwB,CAAC,kBAAkB,CAAC;IACpE;IACA,OAAO,IAAI;EACf,CAAC;EACDvJ,eAAe,CAAC9B,SAAS,CAACsL,oBAAoB,GAAG,UAAU1D,CAAC,EAAE;IAC1D,IAAI,CAAChE,WAAW,GAAGgE,CAAC,CAAC2D,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,IAAI,CAAC3H,gBAAgB,GAAG+D,CAAC,CAAC6D,eAAe,CAACD,KAAK,CAAC,CAAC,CAAC;IAClD,IAAI,CAAC/D,cAAc,CAAC4D,wBAAwB,CAAC,mBAAmB,CAAC;IACjE,OAAO,IAAI;EACf,CAAC;EACDvJ,eAAe,CAAC9B,SAAS,CAAC0L,oBAAoB,GAAG,UAAU9D,CAAC,EAAE;IAC1D;IACA,OAAO,IAAI;EACf,CAAC;EACD9F,eAAe,CAAC9B,SAAS,CAAC2L,SAAS,GAAG,UAAU/D,CAAC,EAAE;IAC/C,OAAO,IAAI;EACf,CAAC;EACD9F,eAAe,CAAC9B,SAAS,CAAC4L,cAAc,GAAG,UAAUhE,CAAC,EAAE;IACpD,OAAO,IAAI;EACf,CAAC;EACD9F,eAAe,CAAC9B,SAAS,CAAC6L,cAAc,GAAG,UAAUjE,CAAC,EAAE;IACpD,OAAO,IAAI;EACf,CAAC;EACD9F,eAAe,CAAC9B,SAAS,CAAC8L,eAAe,GAAG,UAAUlE,CAAC,EAAE;IACrD,OAAO,IAAI;EACf,CAAC;EACD9F,eAAe,CAAC9B,SAAS,CAAC+L,eAAe,GAAG,UAAUnE,CAAC,EAAE;IACrD,IAAI,CAACnF,WAAW,GAAGmF,CAAC,CAACoE,UAAU;IAC/B,IAAI,CAACtJ,UAAU,GAAGkF,CAAC,CAACqE,SAAS;IAC7B,OAAO,IAAI;EACf,CAAC;EACDnK,eAAe,CAAC9B,SAAS,CAACkM,cAAc,GAAG,UAAUtE,CAAC,EAAE;IACpD,OAAO,IAAI;EACf,CAAC;EACD;EACA;EACA9F,eAAe,CAAC9B,SAAS,CAACmM,SAAS,GAAG,YAAY;IAC9C,OAAO,IAAI,CAAC1E,cAAc,CAAC0E,SAAS,EAAE;EAC1C,CAAC;EACDrK,eAAe,CAAC9B,SAAS,CAACoM,aAAa,GAAG,YAAY;IAClD,IAAI,CAAC3E,cAAc,CAAC2E,aAAa,EAAE;EACvC,CAAC;EACDtK,eAAe,CAAC9B,SAAS,CAACqM,iBAAiB,GAAG,YAAY;IACtD,OAAO,IAAI,CAACvI,mBAAmB;EACnC,CAAC;EACDhC,eAAe,CAAC9B,SAAS,CAACsM,cAAc,GAAG,UAAU3J,OAAO,EAAE;IAC1D,IAAIA,OAAO,CAAC4J,gBAAgB,EAAE;MAC1B,IAAI,CAACxI,QAAQ,CAACK,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;MACnD,IAAI,CAACL,QAAQ,CAACK,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC;MACvD,IAAI,CAACL,QAAQ,CAACK,YAAY,CAAC,uBAAuB,EAAEzB,OAAO,CAAC4J,gBAAgB,CAAC;IACjF,CAAC,MACI;MACD,IAAI,CAACxI,QAAQ,CAACK,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;MACpD,IAAI,CAACL,QAAQ,CAACK,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC;MACvD,IAAI,CAACL,QAAQ,CAACqH,eAAe,CAAC,uBAAuB,CAAC;IAC1D;EACJ,CAAC;EACDtJ,eAAe,CAAC9B,SAAS,CAACwM,aAAa,GAAG,UAAUC,GAAG,EAAE;IACrD,IAAI,CAACpK,sBAAsB,GAAG,IAAInB,QAAQ,CAAC,IAAI,CAAC0C,WAAW,CAAC,CAAC,CAAC,CAAC8I,kBAAkB,EAAE,IAAI,CAAC9I,WAAW,CAAC,CAAC,CAAC,CAAC+I,cAAc,CAAC;IACtH,IAAI,CAACrK,0BAA0B,GAAGmK,GAAG,CAACG,uBAAuB,CAAC,IAAI,CAACvK,sBAAsB,CAAC;EAC9F,CAAC;EACDP,eAAe,CAAC9B,SAAS,CAAC6M,MAAM,GAAG,UAAUJ,GAAG,EAAE;IAC9C,IAAI,CAAChF,cAAc,CAAC4D,wBAAwB,CAAC,QAAQ,CAAC;IACtD,IAAI,CAAC7B,OAAO,EAAE;EAClB,CAAC;EACD1H,eAAe,CAAC9B,SAAS,CAACwJ,OAAO,GAAG,YAAY;IAC5C,IAAI,IAAI,CAAC7F,gBAAgB,EAAE;MACvB;MACA,IAAI,CAACmJ,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAACnJ,gBAAgB,CAACpC,GAAG,GAAG,IAAI,CAACmB,UAAU,EAAE,IAAI,CAACO,YAAY,GAAG,IAAI,CAACU,gBAAgB,CAACnC,IAAI,GAAG,IAAI,CAACiB,WAAW,EAAE,IAAI,CAACkB,gBAAgB,CAAClC,KAAK,EAAE,IAAI,CAAC+B,WAAW,CAAC;MAC7L;IACJ;IACA,IAAI,CAAC,IAAI,CAAClB,0BAA0B,EAAE;MAClC;MACA,IAAI,CAACyK,gBAAgB,EAAE;MACvB;IACJ;IACA,IAAIvL,IAAI,GAAG,IAAI,CAACyB,YAAY,GAAG,IAAI,CAACX,0BAA0B,CAACd,IAAI,GAAG,IAAI,CAACiB,WAAW;IACtF,IAAIjB,IAAI,GAAG,IAAI,CAACyB,YAAY,IAAIzB,IAAI,GAAG,IAAI,CAACyB,YAAY,GAAG,IAAI,CAACE,aAAa,EAAE;MAC3E;MACA,IAAI,CAAC4J,gBAAgB,EAAE;MACvB;IACJ;IACA,IAAIxL,GAAG,GAAG,IAAI,CAACqB,QAAQ,CAAC0G,UAAU,CAACC,8BAA8B,CAAC,IAAI,CAAC3F,WAAW,CAAC,CAAC,CAAC,CAAC8I,kBAAkB,CAAC,GAAG,IAAI,CAAChK,UAAU;IAC3H,IAAInB,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,IAAI,CAAC8B,cAAc,EAAE;MACtC;MACA,IAAI,CAAC0J,gBAAgB,EAAE;MACvB;IACJ;IACA;IACA,IAAI1M,QAAQ,CAACsG,WAAW,EAAE;MACtB;MACA;MACA,IAAI,CAACmG,mBAAmB,CAAC,IAAI,CAACzK,sBAAsB,EAAEd,GAAG,EAAEC,IAAI,EAAEG,sBAAsB,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC6B,WAAW,CAAC;MAClH;IACJ;IACA,IAAI,CAACsJ,mBAAmB,CAAC,IAAI,CAACzK,sBAAsB,EAAEd,GAAG,EAAEC,IAAI,EAAEG,sBAAsB,GAAG,CAAC,GAAG,CAAC,EAAEA,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC;EACpI,CAAC;EACDG,eAAe,CAAC9B,SAAS,CAAC8M,mBAAmB,GAAG,UAAUE,gBAAgB,EAAEzL,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAE6B,MAAM,EAAE;IAClG,IAAI,CAACQ,mBAAmB,GAAGkJ,gBAAgB;IAC3C,IAAIC,EAAE,GAAG,IAAI,CAAClJ,QAAQ;IACtB,IAAImJ,GAAG,GAAG,IAAI,CAAC3I,aAAa;IAC5BhE,aAAa,CAAC4M,aAAa,CAACF,EAAE,EAAE,IAAI,CAAC1J,SAAS,CAAC;IAC/C0J,EAAE,CAACG,MAAM,CAAC7L,GAAG,CAAC;IACd0L,EAAE,CAACI,OAAO,CAAC7L,IAAI,CAAC;IAChByL,EAAE,CAACvL,QAAQ,CAACD,KAAK,CAAC;IAClBwL,EAAE,CAACK,SAAS,CAAChK,MAAM,CAAC;IACpB4J,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC;IACbF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;IACdH,GAAG,CAACxL,QAAQ,CAAC,CAAC,CAAC;IACfwL,GAAG,CAACI,SAAS,CAAC,CAAC,CAAC;EACpB,CAAC;EACDxL,eAAe,CAAC9B,SAAS,CAAC+M,gBAAgB,GAAG,YAAY;IACrD,IAAI,CAACjJ,mBAAmB,GAAG,IAAI;IAC/B,IAAImJ,EAAE,GAAG,IAAI,CAAClJ,QAAQ;IACtB,IAAImJ,GAAG,GAAG,IAAI,CAAC3I,aAAa;IAC5BhE,aAAa,CAAC4M,aAAa,CAACF,EAAE,EAAE,IAAI,CAAC1J,SAAS,CAAC;IAC/C0J,EAAE,CAACG,MAAM,CAAC,CAAC,CAAC;IACZH,EAAE,CAACI,OAAO,CAAC,CAAC,CAAC;IACbH,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC;IACbF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;IACd,IAAI1L,sBAAsB,EAAE;MACxBsL,EAAE,CAACvL,QAAQ,CAAC,CAAC,CAAC;MACduL,EAAE,CAACK,SAAS,CAAC,CAAC,CAAC;MACfJ,GAAG,CAACxL,QAAQ,CAAC,CAAC,CAAC;MACfwL,GAAG,CAACI,SAAS,CAAC,CAAC,CAAC;MAChB;IACJ;IACA;IACA;IACAL,EAAE,CAACvL,QAAQ,CAAC,CAAC,CAAC;IACduL,EAAE,CAACK,SAAS,CAAC,CAAC,CAAC;IACfJ,GAAG,CAACxL,QAAQ,CAAC,CAAC,CAAC;IACfwL,GAAG,CAACI,SAAS,CAAC,CAAC,CAAC;IAChB,IAAI3K,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACC,aAAa,CAACF,OAAO;IACjD,IAAIA,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,kBAAkB,EAAE;MACnCmK,GAAG,CAAC/I,YAAY,CAAC,yCAAyC,GAAGpD,MAAM,CAACwM,gBAAgB,CAAC;IACzF,CAAC,MACI;MACD,IAAI5K,OAAO,CAACI,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAACyK,UAAU,KAAK,CAAC,CAAC,WAAW;QAC9DN,GAAG,CAAC/I,YAAY,CAAC,yCAAyC,GAAGrD,kBAAkB,CAAC2M,UAAU,CAAC;MAC/F,CAAC,MACI;QACDP,GAAG,CAAC/I,YAAY,CAAC,wCAAwC,CAAC;MAC9D;IACJ;EACJ,CAAC;EACD,OAAOrC,eAAe;AAC1B,CAAC,CAACjB,QAAQ,CAAE;AACZ,SAASiB,eAAe;AACxB,SAAS6H,WAAW,CAAC7D,IAAI,EAAE4H,QAAQ,EAAE;EACjC;EACA,IAAIC,UAAU,GAAG3J,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EACjD,IAAIjC,OAAO,GAAG2L,UAAU,CAACC,UAAU,CAAC,IAAI,CAAC;EACzC5L,OAAO,CAAC6L,IAAI,GAAGC,gBAAgB,CAACJ,QAAQ,CAAC;EACzC,IAAIK,OAAO,GAAG/L,OAAO,CAAC2H,WAAW,CAAC7D,IAAI,CAAC;EACvC,IAAI3F,OAAO,CAAC0B,SAAS,EAAE;IACnB,OAAOkM,OAAO,CAACtM,KAAK,GAAG,CAAC,CAAC,CAAC;EAC9B,CAAC,MACI;IACD,OAAOsM,OAAO,CAACtM,KAAK;EACxB;AACJ;AACA,SAASqM,gBAAgB,CAACE,YAAY,EAAE;EACpC,OAAOC,kBAAkB,CAAC,QAAQ,EAAED,YAAY,CAACE,UAAU,EAAEF,YAAY,CAACG,QAAQ,EAAEH,YAAY,CAACI,UAAU,EAAEJ,YAAY,CAACK,UAAU,CAAC;AACzI;AACA,SAASJ,kBAAkB,CAACK,SAAS,EAAEJ,UAAU,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAE;EACjF;EACA;EACA;EACA;EACA,OAAOC,SAAS,GAAG,UAAU,GAAGJ,UAAU,GAAG,GAAG,GAAGC,QAAQ,GAAG,OAAO,GAAGC,UAAU,GAAG,KAAK,GAAGC,UAAU;AAC3G"},"metadata":{},"sourceType":"module"}