{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\UIElements\\\\EditUIElement.js\";\nimport React, { Component } from 'react';\nimport { Breadcrumb, Form, Modal } from 'antd';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport { CallServerPost, errorModal, successModal, PostCallWithZone } from '../Utility/sharedUtility';\nimport SingleForm from '../Utility/SingleForm';\nimport ConfirmModal from '../Utility/ConfirmModal';\nvar thisObj;\nvar EditUIElementModal = /*#__PURE__*/function (_Component) {\n  _inherits(EditUIElementModal, _Component);\n  var _super = _createSuper(EditUIElementModal);\n  function EditUIElementModal(props) {\n    var _this;\n    _classCallCheck(this, EditUIElementModal);\n    _this = _super.call(this, props);\n    //Binding function with 'this' object\n    _this.loadUiElementId = function (nextProps) {\n      if (nextProps.uiElementId !== '') {\n        var UIElementID = nextProps.uiElementId;\n        CallServerPost('UIElement/GetUIElementFormData', {\n          FormName: \"UIElements\",\n          ActionName: \"Update\",\n          ID: UIElementID,\n          Editable: nextProps.readOnly\n        }).then(function (response) {\n          var responseData = response.value;\n          //console.log(response)\n          if (responseData.status === 0) {\n            errorModal(responseData.message);\n          } else {\n            thisObj.setState({\n              responseData: responseData\n            });\n          }\n        }).catch(function (error) {\n          return error;\n        });\n      }\n    };\n    _this.cancel = function () {\n      _this.props.hideEditUIElementsModal();\n    };\n    _this.handleCancel = function () {\n      _this.setState({\n        showEditModal: false\n      });\n    };\n    _this.handleUpdate = function (values) {\n      var thisObj = _assertThisInitialized(_this);\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          thisObj.setState({\n            showEditModal: true,\n            allValues: values\n          });\n        }\n      });\n    };\n    _this.handleChangeReason = function (ChangeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      var values = thisObj.state.allValues;\n      values[\"UIElementID\"] = thisObj.props.uiElementId;\n      values[\"ChangeReason\"] = ChangeReason;\n      values[\"UpdatedDateTimeText\"] = thisObj.state.responseData.updatedDateTimeText;\n      thisObj.setState({\n        modalLoad: true,\n        disableBtn: true\n      });\n      PostCallWithZone('UIElement/Update', values).then(function (response) {\n        if (response.status === 1) {\n          successModal(response.message, thisObj.props, \"/trans/UIElements\");\n        } else {\n          errorModal(response.message);\n        }\n        thisObj.setState({\n          modalLoad: false,\n          disableBtn: false,\n          showEditModal: false\n        });\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n\n    //Initializing state \n    _this.state = {\n      showEditModal: false,\n      responseData: {\n        formData: {},\n        wizardData: {},\n        selectOptions: {}\n      },\n      modalLoad: false,\n      allValues: {},\n      visible: true,\n      disableBtn: false\n    };\n    thisObj = _assertThisInitialized(_this);\n    _this.loadUiElementId(props);\n    //To get UI Element form data\n    //console.log(this)\n    return _this;\n  }\n  _createClass(EditUIElementModal, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.visible && !nextProps.visible) {\n\n        //console.log(\"Modal Closed\");\n      } else if (!this.props.visible && nextProps.visible) {\n        //console.log(\"Modal Opened\");\n        this.loadUiElementId(nextProps);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n        getFieldDecorator = _this$props$form.getFieldDecorator,\n        setFieldsValue = _this$props$form.setFieldsValue,\n        validateFields = _this$props$form.validateFields;\n      var _this$state = this.state,\n        responseData = _this$state.responseData,\n        disableBtn = _this$state.disableBtn;\n      return /*#__PURE__*/React.createElement(Modal, {\n        visible: this.props.visible,\n        maskClosable: false,\n        style: {\n          top: 20,\n          height: \"calc(100vh - 45px)\"\n        },\n        title: \"Edit UI Element\",\n        width: '80%',\n        onCancel: disableBtn ? null : this.cancel,\n        footer: null,\n        ref: \"modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, Object.keys(responseData.formData).length > 0 && /*#__PURE__*/React.createElement(SingleForm, {\n        Editable: this.props.readOnly,\n        property: this,\n        responseData: responseData,\n        handleCancel: this.cancel,\n        setFieldsValue: setFieldsValue,\n        getFieldDecorator: getFieldDecorator,\n        validateFields: validateFields,\n        handleSubmit: this.handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ConfirmModal, {\n        loading: this.state.modalLoad,\n        title: \"Update UI Element\",\n        SubmitButtonName: \"Update\",\n        onSubmit: this.handleChangeReason,\n        visible: this.state.showEditModal,\n        handleCancel: this.handleCancel,\n        getFieldDecorator: getFieldDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return EditUIElementModal;\n}(Component);\nvar WrappedApp = Form.create()(EditUIElementModal);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Breadcrumb","Form","Modal","LayoutContentWrapper","CallServerPost","errorModal","successModal","PostCallWithZone","SingleForm","ConfirmModal","thisObj","EditUIElementModal","props","loadUiElementId","nextProps","uiElementId","UIElementID","FormName","ActionName","ID","Editable","readOnly","then","response","responseData","value","status","message","setState","catch","error","cancel","hideEditUIElementsModal","handleCancel","showEditModal","handleUpdate","values","form","validateFields","err","allValues","handleChangeReason","ChangeReason","state","updatedDateTimeText","modalLoad","disableBtn","bind","formData","wizardData","selectOptions","visible","getFieldDecorator","setFieldsValue","top","height","Object","keys","length","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/UIElements/EditUIElement.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Breadcrumb, Form, Modal } from 'antd';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\r\nimport { CallServerPost, errorModal, successModal, PostCallWithZone } from '../Utility/sharedUtility';\r\nimport SingleForm from '../Utility/SingleForm';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\n\r\nvar thisObj;\r\nclass EditUIElementModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //Binding function with 'this' object\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n\r\n\r\n        //Initializing state \r\n        this.state = {\r\n            showEditModal: false,\r\n            responseData: {\r\n                formData: {},\r\n                wizardData: {},\r\n                selectOptions: {}\r\n            },\r\n            modalLoad: false,\r\n            allValues: {},\r\n            visible: true,\r\n            disableBtn: false\r\n        };\r\n        thisObj = this;\r\n        this.loadUiElementId(props);\r\n        //To get UI Element form data\r\n        //console.log(this)\r\n\r\n        \r\n        \r\n\r\n    }\r\n\r\n    loadUiElementId = (nextProps) => {\r\n        if (nextProps.uiElementId !== '') {\r\n            let UIElementID = nextProps.uiElementId;\r\n            CallServerPost('UIElement/GetUIElementFormData', { FormName: \"UIElements\", ActionName: \"Update\", ID: UIElementID, Editable: nextProps.readOnly }).then(\r\n                function (response) {\r\n                    const responseData = response.value;\r\n                    //console.log(response)\r\n                    if (responseData.status === 0) {\r\n                        errorModal(responseData.message);\r\n                    } else {\r\n                        thisObj.setState({ responseData: responseData });\r\n                    }\r\n                }).catch(error => error);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.visible && !nextProps.visible) {\r\n\r\n            //console.log(\"Modal Closed\");\r\n        } else if (!this.props.visible && nextProps.visible) {\r\n\r\n            //console.log(\"Modal Opened\");\r\n            this.loadUiElementId(nextProps);\r\n\r\n        }\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.hideEditUIElementsModal();\r\n    }\r\n    handleCancel = () => {\r\n\r\n        this.setState({ showEditModal: false});\r\n    }\r\n    handleUpdate = (values) => {\r\n\r\n        const thisObj = this;\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                thisObj.setState({ showEditModal: true, allValues: values });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChangeReason = (ChangeReason) => {\r\n\r\n        const thisObj = this;\r\n        let values = thisObj.state.allValues;\r\n        values[\"UIElementID\"] = thisObj.props.uiElementId;\r\n        values[\"ChangeReason\"] = ChangeReason;\r\n        values[\"UpdatedDateTimeText\"] = thisObj.state.responseData.updatedDateTimeText;\r\n        thisObj.setState({ modalLoad: true, disableBtn: true });\r\n\r\n                PostCallWithZone('UIElement/Update', values)\r\n                    .then(\r\n                    function (response) {                        \r\n                        if (response.status === 1) {\r\n                            successModal(response.message, thisObj.props, \"/trans/UIElements\");\r\n                        } else {\r\n                            errorModal(response.message);\r\n                        }\r\n                        thisObj.setState({ modalLoad: false, disableBtn: false, showEditModal: false });\r\n                    }).catch(error => error);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator, setFieldsValue, validateFields } = this.props.form;\r\n        const { responseData, disableBtn } = this.state;\r\n\r\n        return (<Modal\r\n            visible={this.props.visible}\r\n            maskClosable={false}\r\n            style={{ top: 20, height: \"calc(100vh - 45px)\" }}\r\n            title={\"Edit UI Element\"}\r\n            width={'80%'}\r\n            onCancel={disableBtn ? null : this.cancel}\r\n            footer={null}\r\n            ref=\"modal\"\r\n            >\r\n                <LayoutContentWrapper>\r\n                    {\r\n                    Object.keys(responseData.formData).length > 0 && (\r\n                        <SingleForm Editable={this.props.readOnly} property={this} responseData={responseData} handleCancel={this.cancel} setFieldsValue={setFieldsValue} getFieldDecorator={getFieldDecorator} validateFields={validateFields} handleSubmit={this.handleUpdate} />)\r\n\r\n                    }\r\n                    <ConfirmModal loading={this.state.modalLoad} title=\"Update UI Element\" SubmitButtonName=\"Update\" onSubmit={this.handleChangeReason} visible={this.state.showEditModal} handleCancel={this.handleCancel} getFieldDecorator={getFieldDecorator} />\r\n\r\n                </LayoutContentWrapper>\r\n\r\n        </Modal>);\r\n    }\r\n}\r\n\r\nconst WrappedApp = Form.create()(EditUIElementModal);\r\n\r\nexport default WrappedApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}