{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n  Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n  Severity[Severity[\"Info\"] = 1] = \"Info\";\n  Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n  Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n  var _error = 'error';\n  var _warning = 'warning';\n  var _warn = 'warn';\n  var _info = 'info';\n  var _displayStrings = Object.create(null);\n  _displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n  _displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n  _displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n  /**\r\n   * Parses 'error', 'warning', 'warn', 'info' in call casings\r\n   * and falls back to ignore.\r\n   */\n  function fromValue(value) {\n    if (!value) {\n      return Severity.Ignore;\n    }\n    if (strings.equalsIgnoreCase(_error, value)) {\n      return Severity.Error;\n    }\n    if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n      return Severity.Warning;\n    }\n    if (strings.equalsIgnoreCase(_info, value)) {\n      return Severity.Info;\n    }\n    return Severity.Ignore;\n  }\n  Severity.fromValue = fromValue;\n})(Severity || (Severity = {}));\nexport default Severity;","map":{"version":3,"names":["nls","strings","Severity","_error","_warning","_warn","_info","_displayStrings","Object","create","Error","localize","Warning","Info","fromValue","value","Ignore","equalsIgnoreCase"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/severity.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../nls.js';\r\nimport * as strings from './strings.js';\r\nvar Severity;\r\n(function (Severity) {\r\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\r\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\r\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\r\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\r\n})(Severity || (Severity = {}));\r\n(function (Severity) {\r\n    var _error = 'error';\r\n    var _warning = 'warning';\r\n    var _warn = 'warn';\r\n    var _info = 'info';\r\n    var _displayStrings = Object.create(null);\r\n    _displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\r\n    _displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\r\n    _displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\r\n    /**\r\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\r\n     * and falls back to ignore.\r\n     */\r\n    function fromValue(value) {\r\n        if (!value) {\r\n            return Severity.Ignore;\r\n        }\r\n        if (strings.equalsIgnoreCase(_error, value)) {\r\n            return Severity.Error;\r\n        }\r\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\r\n            return Severity.Warning;\r\n        }\r\n        if (strings.equalsIgnoreCase(_info, value)) {\r\n            return Severity.Info;\r\n        }\r\n        return Severity.Ignore;\r\n    }\r\n    Severity.fromValue = fromValue;\r\n})(Severity || (Severity = {}));\r\nexport default Severity;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,cAAc;AACnC,OAAO,KAAKC,OAAO,MAAM,cAAc;AACvC,IAAIC,QAAQ;AACZ,CAAC,UAAUA,QAAQ,EAAE;EACjBA,QAAQ,CAACA,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EAC3CA,QAAQ,CAACA,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EACvCA,QAAQ,CAACA,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC7CA,QAAQ,CAACA,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AAC7C,CAAC,EAAEA,QAAQ,KAAKA,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,UAAUA,QAAQ,EAAE;EACjB,IAAIC,MAAM,GAAG,OAAO;EACpB,IAAIC,QAAQ,GAAG,SAAS;EACxB,IAAIC,KAAK,GAAG,MAAM;EAClB,IAAIC,KAAK,GAAG,MAAM;EAClB,IAAIC,eAAe,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EACzCF,eAAe,CAACL,QAAQ,CAACQ,KAAK,CAAC,GAAGV,GAAG,CAACW,QAAQ,CAAC,WAAW,EAAE,OAAO,CAAC;EACpEJ,eAAe,CAACL,QAAQ,CAACU,OAAO,CAAC,GAAGZ,GAAG,CAACW,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC;EAC1EJ,eAAe,CAACL,QAAQ,CAACW,IAAI,CAAC,GAAGb,GAAG,CAACW,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC;EACjE;AACJ;AACA;AACA;EACI,SAASG,SAAS,CAACC,KAAK,EAAE;IACtB,IAAI,CAACA,KAAK,EAAE;MACR,OAAOb,QAAQ,CAACc,MAAM;IAC1B;IACA,IAAIf,OAAO,CAACgB,gBAAgB,CAACd,MAAM,EAAEY,KAAK,CAAC,EAAE;MACzC,OAAOb,QAAQ,CAACQ,KAAK;IACzB;IACA,IAAIT,OAAO,CAACgB,gBAAgB,CAACb,QAAQ,EAAEW,KAAK,CAAC,IAAId,OAAO,CAACgB,gBAAgB,CAACZ,KAAK,EAAEU,KAAK,CAAC,EAAE;MACrF,OAAOb,QAAQ,CAACU,OAAO;IAC3B;IACA,IAAIX,OAAO,CAACgB,gBAAgB,CAACX,KAAK,EAAES,KAAK,CAAC,EAAE;MACxC,OAAOb,QAAQ,CAACW,IAAI;IACxB;IACA,OAAOX,QAAQ,CAACc,MAAM;EAC1B;EACAd,QAAQ,CAACY,SAAS,GAAGA,SAAS;AAClC,CAAC,EAAEZ,QAAQ,KAAKA,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}