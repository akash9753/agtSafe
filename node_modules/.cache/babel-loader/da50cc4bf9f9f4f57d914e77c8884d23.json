{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Study\\\\ActivityConfig\\\\Annotation.js\";\nimport React, { useState } from 'react';\nimport { Form, Row, Input, Col, Icon, Tooltip, TreeSelect, Switch, Button, Divider, Select, message } from 'antd';\nimport { rowStyle } from '../../../styles/JsStyles/CommonStyles';\nimport { getRules } from '../../Utility/htmlUtility';\nimport '../../Utility/browse.css';\nimport LayoutContent from '../../../components/utility/layoutContent';\nimport { errorModal, showProgress, hideProgress, getProjectRole, successModalCallback, PostCallWithZoneForDomainCreate } from '../../Utility/sharedUtility';\nimport moment from 'moment-timezone';\nimport MetaDatasetConfiguration from \"./MetaDatasetConfig\";\nimport { ANNOTATION, METADATA_ANNOT, CRF_ANNOT, TRANSFORMATION } from '../../Utility/appConstants';\nimport { ColumnField, AnnotFields, MappingFields, MetaDataset, annotateSwitch, MetaDatasetPageField, rawDatasetField, MappingOutputTypeField, StandardizedDatasetLocationField } from \"./MetaDataConfigPageField\";\nvar SHOW_PARENT = TreeSelect.SHOW_PARENT;\nvar FormItem = Form.Item;\nvar splitClass = 12;\nexport function Annotation(props) {\n  var getFieldDecorator = props.form.getFieldDecorator;\n  var study = props.study,\n    status = props.status,\n    pdfFiles = props.pdfFiles,\n    updateData = props.updateData,\n    xptLocation = props.xptLocation,\n    rawDatasetLocaton = props.rawDatasetLocaton,\n    annotationWorkFlows = props.annotationWorkFlows,\n    fileRawDatasetSelect = props.fileRawDatasetSelect,\n    transFormationWorkFlows = props.transFormationWorkFlows;\n  var workflowActivityStatusID = props.study.workflowActivityStatusID;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    ShowMetaDataConfig = _useState2[0],\n    setShowMetaDataConfig = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    MetaDatasetConfig = _useState4[0],\n    setMetaDatasetConfig = _useState4[1];\n\n  ///For RawDatset treeselect \n  //if we choose only one or two file inside the folder instead of choosing whole folder means store the Folder name\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    RawDatsetFolderName = _useState6[0],\n    setRawDatsetFolderName = _useState6[1];\n  var action = study.annotationRequired && status.Annot.id !== -1 || study.mappingRequried && status.Trans.id !== -1 ? \"Details\" : \"Create\";\n  var crfDocumentField = {\n    controlTypeText: \"FileSelect\",\n    inputTypeText: \"ServerBrowse\",\n    inputRequirementText: props.study.annotationTypeText === CRF_ANNOT || study.defineRequired ? \"Mandatory\" : \"Optional\",\n    inputTypeErrorMessage: \"\",\n    validationErrorMessage: \"\",\n    requirementErrorMessage: \"CRF Document should be selected\",\n    regExText: null,\n    minValue: null,\n    maxValue: null\n  };\n  //get value\n  var getValue = function getValue(fieldName, Activity) {\n    var obj = updateData.find(function (va) {\n      return va.configurationName === fieldName && va.activityText === Activity;\n    });\n    return obj ? obj.configurationValue : \"\";\n  };\n  //get Initial val\n  //for placeholder not priniting issue\n  var getInitialVal = function getInitialVal(fieldName, Activity) {\n    return action === \"Details\" ? {\n      initialValue: getValue(fieldName, Activity)\n    } : {};\n  };\n\n  //create  both Annotation and Mapping(if configured both activities)\n  var create = function create() {\n    var mappingRequried = study.mappingRequried,\n      annotationRequired = study.annotationRequired,\n      annotationTypeText = study.annotationTypeText;\n    var field = [];\n    annotationRequired && field.push.apply(field, _toConsumableArray(Object.keys(AnnotFields)));\n    mappingRequried && field.push.apply(field, _toConsumableArray(Object.keys(MappingFields)));\n    props.form.validateFields(field, {\n      force: true\n    }, function (err, values) {\n      if (!err) {\n        try {\n          if (\"RawDatasetLoc\" in values && \"StandardDatasetLoc\" in values && values[\"RawDatasetLoc\"] != \"\" && values[\"StandardDatasetLoc\"] != \"\" && values[\"RawDatasetLoc\"] == values[\"StandardDatasetLoc\"]) {\n            message.destroy();\n            message.error('Raw Dataset and Output Standardized Dataset Location cannot be same!');\n            return;\n          }\n          values = annotationTypeText === METADATA_ANNOT ? _objectSpread(_objectSpread({}, values), MetaDatasetConfig) : values;\n          var zones = moment.tz.guess();\n          var _study = props.study;\n          var commonprops = Object.keys(values);\n          var actualData = [];\n\n          //Set values\n          commonprops.map(function (x) {\n            var data = {};\n            data.StudyID = _study.studyID;\n            data.ConfigurationName = x;\n            if (x === \"RawDatasetLoc\") {\n              //have to send parent folder name to ConfigurationValue\n              //have to send selected file in folder send to \n              data.ConfigurationValue = RawDatsetFolderName;\n              data.ConfigurationFiles = values[x];\n            } else if (x === \"AnnotationRequired\") {\n              data.ConfigurationValue = values[x] === \"\" ? \"false\" : values[x];\n            } else {\n              data.ConfigurationValue = values[x];\n            }\n\n            //Differ Annotation and Transformation\n            //If Annotation send ActivityID = 323 else 324\n            var AnnotField = [\"MetaDataset\", \"AnnotationRequired\", \"CRFDocument\"].concat(_toConsumableArray(MetaDatasetPageField.map(function (fld) {\n              return fld.attributeName;\n            })), _toConsumableArray(ColumnField.map(function (fld) {\n              return fld.attributeName;\n            })));\n            data.ActivityID = AnnotField.indexOf(x) !== -1 ? 323 : 324; // 323 : //\"Annotation\" 324:\"Transformation\";\n            data.StandardID = _study.standardID;\n            data.ProjectID = _study.projectID;\n            data.StandardVersionID = _study.standardVersionID;\n            data.Timezone = moment.tz(zones).zoneAbbr();\n            data.UpdatedBy = getProjectRole().userProfile.userID;\n            actualData.push(data);\n          });\n          //End\n\n          //Loader\n          showProgress();\n          PostCallWithZoneForDomainCreate('ActivityConfiguration/CreateActivityConfiguration', actualData).then(function (response) {\n            hideProgress();\n            if (response.status === 0) {\n              errorModal(response.message);\n            } else {\n              successModalCallback(response.message, props.reload);\n            }\n          });\n        } catch (e) {\n          hideProgress();\n          //console.log(e);\n        }\n      }\n    });\n  };\n\n  //setSourceDataset\n  var setMetaDataset = function setMetaDataset(metadataset_Config, value) {\n    setMetaDatasetConfig(metadataset_Config);\n    setShowMetaDataConfig(false);\n    //let SrcData = sourcedataset_val.map(x => x.)\n    props.form.setFieldsValue({\n      \"MetaDataset\": value\n    });\n  };\n  var rawdatasetOnChange = function rawdatasetOnChange(valObj, fileNameObj, node) {\n    var treeNode = node.triggerNode;\n    if (treeNode) {\n      var parent = treeNode.props.parent;\n      setRawDatsetFolderName(parent);\n    }\n  };\n  var OnStandardTreeChange = function OnStandardTreeChange(value) {\n    props.form.setFieldsValue({\n      StandardDatasetLocation: value\n    });\n  };\n  return /*#__PURE__*/React.createElement(LayoutContent, {\n    style: {\n      wordBreak: 'break-all'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, props.study.annotationRequired && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    style: rowStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    style: {\n      padding: \"0px 10px 0px 0px\",\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    colon: false,\n    label: \"Do you want to annotate?\",\n    key: \"annotateSwitchItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \"               \", getFieldDecorator(AnnotFields.AnnotationRequired, {\n    valuePropName: 'checked',\n    rules: getRules(annotateSwitch, props),\n    //initialValue: action === \"Details\" ? !(getValue(AnnotFields.AnnotationRequired, ANNOTATION) === \"\" ||\n    //    getValue(AnnotFields.AnnotationRequired, ANNOTATION) === \"false\") : false\n    initialValue: true\n  })( /*#__PURE__*/React.createElement(Switch, {\n    checkedChildren: \"Yes\",\n    unCheckedChildren: \"No\",\n    disabled: action === \"Details\" || props.isProjectInActive,\n    key: 'annotateSwitch',\n    name: \"AnnotateSwitch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"CRF Document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, \"                                                                    \", getFieldDecorator(AnnotFields.CRFDocument, _objectSpread({\n    rules: getRules(crfDocumentField, props)\n  }, getInitialVal(AnnotFields.CRFDocument, ANNOTATION)))( /*#__PURE__*/React.createElement(TreeSelect, {\n    tabIndex: 0,\n    showSearch: true,\n    autoBlur: true,\n    mode: \"single\",\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please Select\",\n    disabled: action === \"Details\" || props.isProjectInActive,\n    dropdownStyle: {\n      maxHeight: 300,\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }, pdfFiles)))), study.annotationTypeText == METADATA_ANNOT && /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 68\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"MetaData Configuration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, \"                                                                    \", /*#__PURE__*/React.createElement(Input.Group, {\n    compact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, getFieldDecorator(AnnotFields.MetaDataset, _objectSpread({\n    rules: getRules(MetaDataset, props)\n  }, getInitialVal(AnnotFields.MetaDataset, ANNOTATION)))( /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    style: {\n      width: 'calc(100% - 55px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"metadataConfigBtn\",\n    onClick: function onClick() {\n      return setShowMetaDataConfig(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-cog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 41\n    }\n  }))))))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  })), props.study.mappingRequried && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    style: rowStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: splitClass,\n    sm: 24,\n    xs: 24,\n    style: {\n      paddingRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Mapping Program Language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, \"                                                                    \", getFieldDecorator(MappingFields.MappingOutput, _objectSpread({\n    rules: getRules(MappingOutputTypeField, props)\n  }, getInitialVal(MappingFields.MappingOutput, TRANSFORMATION)))( /*#__PURE__*/React.createElement(Select, {\n    key: 'MappingOutputType',\n    mode: \"single\",\n    placeholder: \"Please Select\",\n    disabled: action === \"Details\" || props.isProjectInActive,\n    \"aria-name\": \"Mapping Output Type\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    name: \"Mapping Output Type SDTM_Select.Option\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 45\n    }\n  }, \"Python\"), /*#__PURE__*/React.createElement(Select.Option, {\n    name: \"Mapping Output Type SDTM_Select.Option\",\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 45\n    }\n  }, \"SAS\"))))), /*#__PURE__*/React.createElement(Col, {\n    md: splitClass,\n    sm: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Raw Dataset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, \"                                                   \", getFieldDecorator(MappingFields.RawDatasetLoc, _objectSpread({\n    rules: getRules(rawDatasetField, props)\n  }, getInitialVal(MappingFields.RawDatasetLoc, TRANSFORMATION)))( /*#__PURE__*/React.createElement(TreeSelect, {\n    tabIndex: 0,\n    showSearch: true,\n    autoBlur: true,\n    allowClear: true,\n    treeCheckable: false,\n    multiple: false,\n    mode: \"single\",\n    style: {\n      width: \"100%\"\n    },\n    showCheckedStrategy: SHOW_PARENT,\n    disabled: action === \"Details\" || props.isProjectInActive,\n    dropdownStyle: {\n      maxHeight: 300,\n      overflow: 'auto'\n    },\n    placeholder: \"Please Select\",\n    onChange: rawdatasetOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 37\n    }\n  }, rawDatasetLocaton))))), /*#__PURE__*/React.createElement(Row, {\n    style: rowStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: splitClass,\n    sm: 24,\n    xs: 24,\n    style: {\n      paddingRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Output Standardized Dataset Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 29\n    }\n  }, \"                                                                    \", getFieldDecorator(MappingFields.StandardDatasetLoc, _objectSpread({\n    rules: getRules(StandardizedDatasetLocationField, props)\n  }, getInitialVal(MappingFields.StandardDatasetLoc, TRANSFORMATION)))( /*#__PURE__*/React.createElement(TreeSelect, {\n    tabIndex: 0,\n    showSearch: true,\n    autoBlur: true,\n    mode: \"single\",\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    disabled: action === \"Details\" || props.isProjectInActive,\n    dropdownStyle: {\n      maxHeight: 300,\n      overflow: 'auto'\n    },\n    placeholder: \"Please Select\",\n    onChange: OnStandardTreeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 37\n    }\n  }, xptLocation))))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"10px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  })), action === \"Create\" && /*#__PURE__*/React.createElement(Row, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    key: \"submit\",\n    name: \"PopupConfirm\",\n    onClick: function onClick() {\n      return create();\n    },\n    style: {\n      float: \"right\"\n    },\n    disabled: props.isProjectInActive || props.study.locked,\n    className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  }, \"Create\"))), ShowMetaDataConfig && /*#__PURE__*/React.createElement(MetaDatasetConfiguration, {\n    action: action,\n    form: props.form,\n    updateData: updateData,\n    Show: ShowMetaDataConfig,\n    FileList: fileRawDatasetSelect,\n    setMetaDataset: setMetaDataset,\n    MetaDatasetConfig: MetaDatasetConfig,\n    Cancel: function Cancel() {\n      return setShowMetaDataConfig(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","Form","Row","Input","Col","Icon","Tooltip","TreeSelect","Switch","Button","Divider","Select","message","rowStyle","getRules","LayoutContent","errorModal","showProgress","hideProgress","getProjectRole","successModalCallback","PostCallWithZoneForDomainCreate","moment","MetaDatasetConfiguration","ANNOTATION","METADATA_ANNOT","CRF_ANNOT","TRANSFORMATION","ColumnField","AnnotFields","MappingFields","MetaDataset","annotateSwitch","MetaDatasetPageField","rawDatasetField","MappingOutputTypeField","StandardizedDatasetLocationField","SHOW_PARENT","FormItem","Item","splitClass","Annotation","props","getFieldDecorator","form","study","status","pdfFiles","updateData","xptLocation","rawDatasetLocaton","annotationWorkFlows","fileRawDatasetSelect","transFormationWorkFlows","workflowActivityStatusID","ShowMetaDataConfig","setShowMetaDataConfig","MetaDatasetConfig","setMetaDatasetConfig","RawDatsetFolderName","setRawDatsetFolderName","action","annotationRequired","Annot","id","mappingRequried","Trans","crfDocumentField","controlTypeText","inputTypeText","inputRequirementText","annotationTypeText","defineRequired","inputTypeErrorMessage","validationErrorMessage","requirementErrorMessage","regExText","minValue","maxValue","getValue","fieldName","Activity","obj","find","va","configurationName","activityText","configurationValue","getInitialVal","initialValue","create","field","push","Object","keys","validateFields","force","err","values","destroy","error","zones","tz","guess","commonprops","actualData","map","x","data","StudyID","studyID","ConfigurationName","ConfigurationValue","ConfigurationFiles","AnnotField","fld","attributeName","ActivityID","indexOf","StandardID","standardID","ProjectID","projectID","StandardVersionID","standardVersionID","Timezone","zoneAbbr","UpdatedBy","userProfile","userID","then","response","reload","e","setMetaDataset","metadataset_Config","value","setFieldsValue","rawdatasetOnChange","valObj","fileNameObj","node","treeNode","triggerNode","parent","OnStandardTreeChange","StandardDatasetLocation","wordBreak","padding","display","AnnotationRequired","valuePropName","rules","isProjectInActive","CRFDocument","width","maxHeight","overflow","margin","paddingRight","MappingOutput","RawDatasetLoc","StandardDatasetLoc","float","locked"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Study/ActivityConfig/Annotation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Row, Input, Col, Icon, Tooltip, TreeSelect, Switch, Button, Divider, Select, message } from 'antd';\r\nimport { rowStyle } from '../../../styles/JsStyles/CommonStyles';\r\nimport { getRules } from '../../Utility/htmlUtility';\r\nimport '../../Utility/browse.css';\r\nimport LayoutContent from '../../../components/utility/layoutContent';\r\nimport {\r\n    errorModal,\r\n    showProgress,\r\n    hideProgress,\r\n    getProjectRole,\r\n    successModalCallback,\r\n    PostCallWithZoneForDomainCreate,\r\n} from '../../Utility/sharedUtility';\r\nimport moment from 'moment-timezone';\r\nimport MetaDatasetConfiguration from \"./MetaDatasetConfig\";\r\nimport { ANNOTATION, METADATA_ANNOT, CRF_ANNOT, TRANSFORMATION } from '../../Utility/appConstants';\r\nimport {\r\n    ColumnField,\r\n    AnnotFields,\r\n    MappingFields,\r\n    MetaDataset,\r\n    annotateSwitch,\r\n    MetaDatasetPageField,\r\n    rawDatasetField,\r\n    MappingOutputTypeField,\r\n    StandardizedDatasetLocationField,\r\n} from \"./MetaDataConfigPageField\";\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\n\r\nconst FormItem = Form.Item;\r\nconst splitClass = 12;\r\n\r\n\r\nexport function Annotation(props) {\r\n\r\n    const { getFieldDecorator } = props.form;\r\n    const { study,\r\n            status,\r\n            pdfFiles,\r\n            updateData,\r\n            xptLocation,\r\n            rawDatasetLocaton,\r\n            annotationWorkFlows,\r\n            fileRawDatasetSelect,\r\n            transFormationWorkFlows,\r\n           } = props;\r\n    const workflowActivityStatusID = props.study.workflowActivityStatusID;\r\n    const [ShowMetaDataConfig, setShowMetaDataConfig] = useState(false);\r\n    const [MetaDatasetConfig, setMetaDatasetConfig] = useState({});\r\n\r\n    ///For RawDatset treeselect \r\n    //if we choose only one or two file inside the folder instead of choosing whole folder means store the Folder name\r\n    const [RawDatsetFolderName, setRawDatsetFolderName] = useState(\"\");\r\n    let action = ((study.annotationRequired && status.Annot.id !== -1) ||\r\n                  (study.mappingRequried && status.Trans.id !== -1)) ? \"Details\" : \"Create\";\r\n\r\n    const crfDocumentField =\r\n    {\r\n        controlTypeText: \"FileSelect\",\r\n        inputTypeText: \"ServerBrowse\",\r\n        inputRequirementText: props.study.annotationTypeText === CRF_ANNOT || study.defineRequired ? \"Mandatory\" : \"Optional\",\r\n        inputTypeErrorMessage: \"\",\r\n        validationErrorMessage: \"\",\r\n        requirementErrorMessage: \"CRF Document should be selected\",\r\n        regExText: null,\r\n        minValue: null,\r\n        maxValue: null\r\n    };\r\n   //get value\r\n    let getValue = (fieldName, Activity) => {\r\n        let obj = updateData.find(va => va.configurationName === fieldName && va.activityText === Activity);\r\n        return obj ? obj.configurationValue : \"\";\r\n    }\r\n    //get Initial val\r\n    //for placeholder not priniting issue\r\n    let getInitialVal = (fieldName,Activity) =>\r\n    {\r\n        return action === \"Details\" ? { initialValue: getValue(fieldName, Activity) } : {};\r\n    }\r\n\r\n    //create  both Annotation and Mapping(if configured both activities)\r\n    let create = () =>\r\n    {\r\n        const { mappingRequried, annotationRequired, annotationTypeText } = study;\r\n\r\n        let field = [];\r\n        annotationRequired && field.push(...Object.keys(AnnotFields));\r\n        mappingRequried && field.push(...Object.keys(MappingFields));\r\n\r\n        props.form.validateFields(field, { force: true }, (err, values) =>\r\n        {\r\n            if (!err)\r\n            {\r\n                try\r\n                {\r\n                    if (\"RawDatasetLoc\" in values && \"StandardDatasetLoc\" in values &&  values[\"RawDatasetLoc\"] != \"\" && values[\"StandardDatasetLoc\"] != \"\" && values[\"RawDatasetLoc\"] == values[\"StandardDatasetLoc\"]) {\r\n                        message.destroy();\r\n                        message.error('Raw Dataset and Output Standardized Dataset Location cannot be same!');\r\n                        return;\r\n\r\n                    } \r\n                    values = annotationTypeText === METADATA_ANNOT ? { ...values, ...MetaDatasetConfig } : values;\r\n                    const zones = moment.tz.guess();\r\n                    let study = props.study;\r\n                    let commonprops = Object.keys(values);\r\n                    let actualData = [];\r\n\r\n                    //Set values\r\n                    commonprops.map(function (x)\r\n                    {\r\n                        var data = {};\r\n                        data.StudyID = study.studyID;\r\n                        data.ConfigurationName = x;\r\n\r\n                        if (x === \"RawDatasetLoc\")\r\n                        {\r\n                            //have to send parent folder name to ConfigurationValue\r\n                            //have to send selected file in folder send to \r\n                            data.ConfigurationValue = RawDatsetFolderName;\r\n                            data.ConfigurationFiles = values[x];\r\n\r\n                        } else if (x === \"AnnotationRequired\") {\r\n                            data.ConfigurationValue = values[x] === \"\" ? \"false\" : values[x];\r\n\r\n                        } else {\r\n                            data.ConfigurationValue = values[x];\r\n\r\n                        }\r\n\r\n                        //Differ Annotation and Transformation\r\n                        //If Annotation send ActivityID = 323 else 324\r\n                        let AnnotField = [\"MetaDataset\", \"AnnotationRequired\", \"CRFDocument\", ...MetaDatasetPageField.map((fld) => fld.attributeName),\r\n                            ...ColumnField.map((fld) => fld.attributeName)];\r\n\r\n                        data.ActivityID = AnnotField.indexOf(x) !== -1 ? 323 : 324; // 323 : //\"Annotation\" 324:\"Transformation\";\r\n                        data.StandardID = study.standardID;\r\n                        data.ProjectID = study.projectID;\r\n                        data.StandardVersionID = study.standardVersionID;\r\n                        data.Timezone = moment.tz(zones).zoneAbbr();\r\n                        data.UpdatedBy = getProjectRole().userProfile.userID;\r\n                        actualData.push(data);\r\n                    });\r\n                    //End\r\n\r\n                    //Loader\r\n                    showProgress();\r\n                    PostCallWithZoneForDomainCreate('ActivityConfiguration/CreateActivityConfiguration', actualData).then(\r\n                        function (response) {\r\n                            hideProgress();\r\n                            if (response.status === 0)\r\n                            {\r\n                                errorModal(response.message);\r\n                            } else {\r\n                                successModalCallback(response.message, props.reload);\r\n                            }\r\n                        });\r\n                }\r\n                catch (e) {\r\n                    hideProgress();\r\n                    //console.log(e);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //setSourceDataset\r\n    let setMetaDataset = (metadataset_Config,value) =>\r\n    {\r\n        setMetaDatasetConfig(metadataset_Config);\r\n        setShowMetaDataConfig(false);\r\n        //let SrcData = sourcedataset_val.map(x => x.)\r\n        props.form.setFieldsValue({ \"MetaDataset\": value })\r\n    }\r\n\r\n   let rawdatasetOnChange = (valObj,fileNameObj,node) => {\r\n       let treeNode = node.triggerNode;\r\n       if (treeNode) {\r\n           let parent = treeNode.props.parent;\r\n           setRawDatsetFolderName(parent);\r\n       }\r\n    }\r\n\r\n    let OnStandardTreeChange = (value) => {\r\n        props.form.setFieldsValue({ StandardDatasetLocation: value })\r\n        \r\n    }\r\n    return <LayoutContent style={{ wordBreak: 'break-all' }}>\r\n        <Form layout=\"vertical\">\r\n            {props.study.annotationRequired &&\r\n                <>\r\n                    <Row style={rowStyle} >\r\n                        <Col md={12} sm={24} xs={24} style={{ padding: \"0px 10px 0px 0px\" ,display:\"none\"}}>\r\n                            <FormItem colon={false} label=\"Do you want to annotate?\" key={\"annotateSwitchItem\"}>               {/* Annotate the document Field */}\r\n                            {getFieldDecorator(AnnotFields.AnnotationRequired, {\r\n                                    valuePropName: 'checked',\r\n                                rules: getRules(annotateSwitch, props),\r\n                                //initialValue: action === \"Details\" ? !(getValue(AnnotFields.AnnotationRequired, ANNOTATION) === \"\" ||\r\n                                //    getValue(AnnotFields.AnnotationRequired, ANNOTATION) === \"false\") : false\r\n                                initialValue:true\r\n                                })(\r\n                                    <Switch\r\n                                        checkedChildren=\"Yes\"\r\n                                        unCheckedChildren=\"No\"\r\n\r\n                                        disabled={action === \"Details\" || props.isProjectInActive}\r\n                                        key={'annotateSwitch'}\r\n                                        name=\"AnnotateSwitch\"\r\n                                    />\r\n                                )}\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col md={12} sm={24} xs={24} style={{ padding: 0 }}>\r\n                            <FormItem label=\"CRF Document\">                                                                    {/* CRF Document Field */}\r\n                            {getFieldDecorator(AnnotFields.CRFDocument, {\r\n                                    rules: getRules(crfDocumentField, props),\r\n                                ...getInitialVal(AnnotFields.CRFDocument,ANNOTATION)\r\n                                })(\r\n                                    <TreeSelect\r\n                                        tabIndex={0}\r\n                                        showSearch\r\n                                        autoBlur\r\n                                        mode=\"single\"\r\n                                        allowClear\r\n                                        style={{ width: \"100%\" }}\r\n                                        placeholder=\"Please Select\"\r\n                                        disabled={action === \"Details\" || props.isProjectInActive}\r\n                                        dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n\r\n                                    >\r\n                                        {pdfFiles}\r\n                                    </TreeSelect>\r\n                                )}\r\n                            </FormItem>\r\n                    </Col>\r\n                    {study.annotationTypeText == METADATA_ANNOT && <Col md={12} sm={24} xs={24} style={{ padding: 0 }}>\r\n                        <FormItem label=\"MetaData Configuration\">                                                                    {/* CRF Document Field */}\r\n                            <Input.Group compact>\r\n                                {getFieldDecorator(AnnotFields.MetaDataset, {\r\n                                    rules: getRules(MetaDataset, props),\r\n                                    ...getInitialVal(AnnotFields.MetaDataset,ANNOTATION)\r\n                            })(\r\n                                    <Input\r\n                                        disabled={true}\r\n\r\n                                        style={{ width: 'calc(100% - 55px)' }}\r\n                                    />\r\n                                    \r\n                            )}\r\n                                <Tooltip>\r\n                                    <Button id=\"metadataConfigBtn\"\r\n                                        onClick={() => setShowMetaDataConfig(true)}\r\n                                    >\r\n                                        <i className=\"fa fa-cog\" />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </Input.Group>\r\n                        </FormItem>\r\n                    </Col>}\r\n                    </Row>\r\n                    <Divider style={{ margin: \"10px 0\" }} />\r\n                </>\r\n            }\r\n            {props.study.mappingRequried &&\r\n                <>\r\n                    <Row style={rowStyle}>\r\n                        <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                            <FormItem label=\"Mapping Program Language\">                                                                    {/* Mapping Output Type Field */}\r\n                                {getFieldDecorator(MappingFields.MappingOutput,\r\n                                    {\r\n                                        rules: getRules(MappingOutputTypeField, props),\r\n                                        ...getInitialVal(MappingFields.MappingOutput,TRANSFORMATION)\r\n                                    })(\r\n                                        <Select\r\n                                            key={'MappingOutputType'}\r\n                                            mode=\"single\"\r\n                                            placeholder=\"Please Select\"\r\n                                            disabled={action === \"Details\" || props.isProjectInActive}\r\n\r\n                                            aria-name=\"Mapping Output Type\"\r\n                                            style={{ width: \"100%\" }}\r\n                                        >\r\n                                            <Select.Option name=\"Mapping Output Type SDTM_Select.Option\" key={\"1\"}>\r\n                                                Python\r\n                                            </Select.Option>\r\n                                            <Select.Option name=\"Mapping Output Type SDTM_Select.Option\" key={\"2\"}>\r\n                                                SAS\r\n                                            </Select.Option>\r\n                                        </Select>,\r\n                                    )}\r\n                            </FormItem>\r\n\r\n                        </Col>\r\n                        <Col md={splitClass} sm={24} xs={24} >\r\n                            <FormItem label=\"Raw Dataset\">                                                   {/* Raw Dataset Location for SDTM Field */}\r\n                            {getFieldDecorator(MappingFields.RawDatasetLoc, {\r\n                                    rules: getRules(rawDatasetField, props),\r\n                                ...getInitialVal(MappingFields.RawDatasetLoc, TRANSFORMATION)\r\n                                })(\r\n                                    <TreeSelect\r\n                                        tabIndex={0}\r\n                                        showSearch\r\n                                        autoBlur\r\n                                        allowClear\r\n                                        treeCheckable={false}\r\n                                        multiple={false}\r\n                                        mode=\"single\"\r\n                                        style={{ width: \"100%\" }}\r\n                                        showCheckedStrategy={SHOW_PARENT}\r\n                                        disabled={action === \"Details\" || props.isProjectInActive}\r\n                                        dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                                        placeholder=\"Please Select\"\r\n                                        onChange={rawdatasetOnChange}\r\n                                    >\r\n                                        {rawDatasetLocaton}\r\n                                    </TreeSelect>\r\n                                )}\r\n                            </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={rowStyle}>\r\n                        <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n\r\n                            <FormItem label=\"Output Standardized Dataset Location\">                                                                    {/* Standardized Dataset Field */}\r\n                            {getFieldDecorator(MappingFields.StandardDatasetLoc, {\r\n                                    rules: getRules(StandardizedDatasetLocationField, props),\r\n                                ...getInitialVal(MappingFields.StandardDatasetLoc,TRANSFORMATION)\r\n                                })(\r\n                                    <TreeSelect\r\n                                        tabIndex={0}\r\n                                        showSearch\r\n                                        autoBlur\r\n                                        mode=\"single\"\r\n                                        allowClear\r\n                                        style={{ width: \"100%\" }}\r\n                                        disabled={action === \"Details\" || props.isProjectInActive}\r\n                                        dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                                        placeholder=\"Please Select\"\r\n                                        onChange={OnStandardTreeChange}\r\n                                    >\r\n                                        {xptLocation}\r\n                                    </TreeSelect>\r\n                                )}\r\n                            </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                    <Divider style={{ margin: \"10px 0px\" }} />\r\n                </>\r\n            }\r\n            {action === \"Create\" &&\r\n                <Row style={{ width: \"100%\" }}>\r\n\r\n                    <Button\r\n                        key=\"submit\"\r\n                        name=\"PopupConfirm\"\r\n                        onClick={() => create()}\r\n                        style={{ float: \"right\" }}\r\n                        disabled={props.isProjectInActive || props.study.locked}\r\n                        className='ant-btn sc-ifAKCX fcfmNQ ant-btn-primary'\r\n                    >\r\n                        {\"Create\"}\r\n                    </Button>\r\n                </Row>\r\n            }\r\n            \r\n        </Form>\r\n        {ShowMetaDataConfig &&\r\n            <MetaDatasetConfiguration\r\n                action={action}\r\n                form={props.form}\r\n                updateData={updateData}\r\n                Show={ShowMetaDataConfig}\r\n                FileList={fileRawDatasetSelect}\r\n                setMetaDataset={setMetaDataset}\r\n                MetaDatasetConfig={MetaDatasetConfig}\r\n                Cancel={() => setShowMetaDataConfig(false)}\r\n            />}\r\n    </LayoutContent>\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}