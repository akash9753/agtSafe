{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Utility\\\\ConfirmModal.js\";\nimport React, { Component } from 'react';\nimport { Input, Modal, Button, Form, Spin, Icon } from 'antd';\nimport { dynamicValidation } from './validator';\nimport { getConfirmButtonText } from '../Utility/sharedUtility';\nvar FormItem = Form.Item;\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 17\n  }\n});\nvar thisObj;\nvar open = false;\nvar ConfirmModal = /*#__PURE__*/function (_Component) {\n  _inherits(ConfirmModal, _Component);\n  var _super = _createSuper(ConfirmModal);\n  function ConfirmModal(props) {\n    var _this;\n    _classCallCheck(this, ConfirmModal);\n    _this = _super.call(this, props);\n    _this.handleCancel = function () {\n      thisObj.setState({\n        open: false\n      });\n      thisObj.props.form.resetFields(['Change Reason']);\n      thisObj.props.handleCancel();\n    };\n    _this.handleSave = function () {\n      thisObj.props.form.validateFields(function (err, values) {\n        if (!err) {\n          thisObj.props.onSubmit(values[\"Change Reason\"]);\n        }\n      });\n    };\n    _this.state = {\n      loading: false,\n      visible: false,\n      open: true\n    };\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(ConfirmModal, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props = this.props,\n        title = _this$props.title,\n        SubmitButtonName = _this$props.SubmitButtonName,\n        visible = _this$props.visible;\n      var loading = this.state.loading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        visible: visible,\n        wrapClassName: \"Confirm\",\n        maskClosable: false,\n        title: title,\n        style: {\n          top: \"30vh\"\n        },\n        onCancel: loading ? null : this.props.handleCancel,\n        footer: [/*#__PURE__*/React.createElement(Button, {\n          key: \"back\",\n          name: \"PopupCancel\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-danger\",\n          style: {\n            float: 'left'\n          },\n          disabled: loading ? true : false,\n          onClick: this.handleCancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          key: \"submit\",\n          name: \"PopupConfirm\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-primary\",\n          disabled: loading ? true : false,\n          onClick: this.handleSave,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }, getConfirmButtonText())],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: antIcon,\n        spinning: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormItem, {\n        label: \"Change Reason\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, getFieldDecorator(\"Change Reason\", {\n        rules: [{\n          required: true\n        }, {\n          min: 2,\n          message: 'Change Reason should be between 2-255 characters.'\n        }, {\n          max: 255,\n          message: 'Change Reason should be between 2-255 characters.'\n        }, {\n          validator: dynamicValidation,\n          message: \"Change Reason should contain only alphanumeric and special characters(-_;,(). )\",\n          regExPattern: \"/^(?!.*  )[ a-zA-Z0-9-_;,()\\.]+$/\"\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Change Reason\",\n        id: \"ChangeReason\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      //removed componentWillReceiveProps\n      thisObj.props = props;\n      if (!state.open && props.visible) {\n        thisObj.props.form.resetFields(['Change Reason']);\n        return {\n          open: true,\n          visible: props.visible,\n          loading: props.loading !== undefined ? props.loading : false\n        };\n      } else if (!props.visible) {\n        return {\n          open: false,\n          loading: props.loading !== undefined ? props.loading : false\n        };\n      } else {\n        return {\n          loading: props.loading !== undefined ? props.loading : false\n        };\n      }\n    }\n  }]);\n  return ConfirmModal;\n}(Component);\nvar WrappedApp = Form.create()(ConfirmModal);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Input","Modal","Button","Form","Spin","Icon","dynamicValidation","getConfirmButtonText","FormItem","Item","antIcon","fontSize","color","thisObj","open","ConfirmModal","props","handleCancel","setState","form","resetFields","handleSave","validateFields","err","values","onSubmit","state","loading","visible","getFieldDecorator","title","SubmitButtonName","top","float","rules","required","min","message","max","validator","regExPattern","undefined","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Utility/ConfirmModal.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Input,Modal, Button, Form, Spin, Icon } from 'antd';\r\nimport { dynamicValidation } from './validator';\r\nimport { getConfirmButtonText } from '../Utility/sharedUtility';\r\n\r\nconst FormItem = Form.Item;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\r\n\r\nvar thisObj;\r\nvar open = false;\r\nclass ConfirmModal extends Component { t\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            visible: false,\r\n            open: true,\r\n        }\r\n        thisObj = this;\r\n    }\r\n\r\n    handleCancel = () => {\r\n        thisObj.setState({ open: false });\r\n        thisObj.props.form.resetFields(['Change Reason']);\r\n        thisObj.props.handleCancel();\r\n    }\r\n    handleSave = () => {\r\n        thisObj.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                thisObj.props.onSubmit(values[\"Change Reason\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {//removed componentWillReceiveProps\r\n        thisObj.props = props;\r\n        if (!state.open && props.visible) {\r\n            thisObj.props.form.resetFields(['Change Reason']);\r\n            return {\r\n                open: true,\r\n                visible: props.visible,\r\n                loading: (props.loading !== undefined ? props.loading :false)\r\n            };\r\n        }\r\n        else if (!props.visible) {\r\n            return {\r\n                open: false,\r\n                loading: (props.loading !== undefined ? props.loading : false)\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                loading: (props.loading !== undefined ? props.loading : false)\r\n            };\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const { title, SubmitButtonName, visible } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Modal\r\n                    visible={visible}\r\n                    wrapClassName='Confirm'\r\n                    maskClosable={false}\r\n                    title={title}\r\n                    style={{ top: \"30vh\" }}\r\n                    onCancel={loading ? null : this.props.handleCancel}\r\n                    footer={[\r\n                        <Button key=\"back\" name=\"PopupCancel\" className='ant-btn sc-ifAKCX fcfmNQ ant-btn-danger' style={{ float: 'left' }} disabled={loading ? true : false} onClick={this.handleCancel}>Cancel</Button>,\r\n                        <Button key=\"submit\" name=\"PopupConfirm\" className='ant-btn sc-ifAKCX fcfmNQ ant-btn-primary' disabled={loading ? true : false} onClick={this.handleSave}>\r\n                            {getConfirmButtonText()}\r\n                       </Button>,\r\n                    ]}\r\n                >\r\n                    <Spin indicator={antIcon} spinning={this.state.loading}>\r\n                        <FormItem\r\n                            label=\"Change Reason\"\r\n                        >{\r\n                                getFieldDecorator(\"Change Reason\", {\r\n                                    rules: [{ required: true },\r\n                                        { min: 2, message: 'Change Reason should be between 2-255 characters.' },\r\n                                        { max: 255, message: 'Change Reason should be between 2-255 characters.' },\r\n                                        {\r\n                                            validator: dynamicValidation, message: \"Change Reason should contain only alphanumeric and special characters(-_;,(). )\", regExPattern: \"/^(?!.*  )[ a-zA-Z0-9-_;,()\\.]+$/\"\r\n                                        }]\r\n                                })(\r\n                                    <Input type=\"text\" placeholder=\"Change Reason\" id=\"ChangeReason\" />\r\n\r\n                                    )}\r\n                        </FormItem>\r\n                    </Spin>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedApp = Form.create()(ConfirmModal);\r\nexport default WrappedApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}