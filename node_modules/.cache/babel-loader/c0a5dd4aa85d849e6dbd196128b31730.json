{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { Iterator } from '../../../common/iterator.js';\nimport { Event } from '../../../common/event.js';\nimport { TreeError, WeakMapper } from './tree.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nfunction noCompress(element) {\n  var elements = [element.element];\n  var incompressible = element.incompressible || false;\n  return {\n    element: {\n      elements: elements,\n      incompressible: incompressible\n    },\n    children: Iterator.map(Iterator.from(element.children), noCompress),\n    collapsible: element.collapsible,\n    collapsed: element.collapsed\n  };\n}\n// Exported only for test reasons, do not use directly\nexport function compress(element) {\n  var elements = [element.element];\n  var incompressible = element.incompressible || false;\n  var childrenIterator;\n  var children;\n  while (true) {\n    childrenIterator = Iterator.from(element.children);\n    children = Iterator.collect(childrenIterator, 2);\n    if (children.length !== 1) {\n      break;\n    }\n    element = children[0];\n    if (element.incompressible) {\n      break;\n    }\n    elements.push(element.element);\n  }\n  return {\n    element: {\n      elements: elements,\n      incompressible: incompressible\n    },\n    children: Iterator.map(Iterator.concat(Iterator.fromArray(children), childrenIterator), compress),\n    collapsible: element.collapsible,\n    collapsed: element.collapsed\n  };\n}\nfunction _decompress(element, index) {\n  if (index === void 0) {\n    index = 0;\n  }\n  var children;\n  if (index < element.element.elements.length - 1) {\n    children = Iterator.single(_decompress(element, index + 1));\n  } else {\n    children = Iterator.map(Iterator.from(element.children), function (el) {\n      return _decompress(el, 0);\n    });\n  }\n  if (index === 0 && element.element.incompressible) {\n    return {\n      element: element.element.elements[index],\n      children: children,\n      incompressible: true,\n      collapsible: element.collapsible,\n      collapsed: element.collapsed\n    };\n  }\n  return {\n    element: element.element.elements[index],\n    children: children,\n    collapsible: element.collapsible,\n    collapsed: element.collapsed\n  };\n}\n// Exported only for test reasons, do not use directly\nexport function decompress(element) {\n  return _decompress(element, 0);\n}\nfunction splice(treeElement, element, children) {\n  if (treeElement.element === element) {\n    return __assign(__assign({}, treeElement), {\n      children: children\n    });\n  }\n  return __assign(__assign({}, treeElement), {\n    children: Iterator.map(Iterator.from(treeElement.children), function (e) {\n      return splice(e, element, children);\n    })\n  });\n}\n// Exported only for test reasons, do not use directly\nvar CompressedObjectTreeModel = /** @class */function () {\n  function CompressedObjectTreeModel(user, list, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.user = user;\n    this.nodes = new Map();\n    this.model = new ObjectTreeModel(user, list, options);\n    this.enabled = typeof options.compressionEnabled === 'undefined' ? true : options.compressionEnabled;\n  }\n  Object.defineProperty(CompressedObjectTreeModel.prototype, \"onDidSplice\", {\n    get: function get() {\n      return this.model.onDidSplice;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedObjectTreeModel.prototype, \"onDidChangeCollapseState\", {\n    get: function get() {\n      return this.model.onDidChangeCollapseState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  CompressedObjectTreeModel.prototype.setChildren = function (element, children) {\n    if (element === null) {\n      var compressedChildren = Iterator.map(Iterator.from(children), this.enabled ? compress : noCompress);\n      this._setChildren(null, compressedChildren);\n      return;\n    }\n    var compressedNode = this.nodes.get(element);\n    if (!compressedNode) {\n      throw new Error('Unknown compressed tree node');\n    }\n    var node = this.model.getNode(compressedNode);\n    var compressedParentNode = this.model.getParentNodeLocation(compressedNode);\n    var parent = this.model.getNode(compressedParentNode);\n    var decompressedElement = decompress(node);\n    var splicedElement = splice(decompressedElement, element, Iterator.from(children));\n    var recompressedElement = (this.enabled ? compress : noCompress)(splicedElement);\n    var parentChildren = parent.children.map(function (child) {\n      return child === node ? recompressedElement : child;\n    });\n    this._setChildren(parent.element, parentChildren);\n  };\n  CompressedObjectTreeModel.prototype.setCompressionEnabled = function (enabled) {\n    if (enabled === this.enabled) {\n      return;\n    }\n    this.enabled = enabled;\n    var root = this.model.getNode();\n    var rootChildren = Iterator.from(root.children);\n    var decompressedRootChildren = Iterator.map(rootChildren, decompress);\n    var recompressedRootChildren = Iterator.map(decompressedRootChildren, enabled ? compress : noCompress);\n    this._setChildren(null, recompressedRootChildren);\n  };\n  CompressedObjectTreeModel.prototype._setChildren = function (node, children) {\n    var _this = this;\n    var insertedElements = new Set();\n    var _onDidCreateNode = function _onDidCreateNode(node) {\n      for (var _i = 0, _a = node.element.elements; _i < _a.length; _i++) {\n        var element = _a[_i];\n        insertedElements.add(element);\n        _this.nodes.set(element, node.element);\n      }\n    };\n    var _onDidDeleteNode = function _onDidDeleteNode(node) {\n      for (var _i = 0, _a = node.element.elements; _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!insertedElements.has(element)) {\n          _this.nodes.delete(element);\n        }\n      }\n    };\n    this.model.setChildren(node, children, _onDidCreateNode, _onDidDeleteNode);\n  };\n  CompressedObjectTreeModel.prototype.has = function (element) {\n    return this.nodes.has(element);\n  };\n  CompressedObjectTreeModel.prototype.getListIndex = function (location) {\n    var node = this.getCompressedNode(location);\n    return this.model.getListIndex(node);\n  };\n  CompressedObjectTreeModel.prototype.getListRenderCount = function (location) {\n    var node = this.getCompressedNode(location);\n    return this.model.getListRenderCount(node);\n  };\n  CompressedObjectTreeModel.prototype.getNode = function (location) {\n    if (typeof location === 'undefined') {\n      return this.model.getNode();\n    }\n    var node = this.getCompressedNode(location);\n    return this.model.getNode(node);\n  };\n  // TODO: review this\n  CompressedObjectTreeModel.prototype.getNodeLocation = function (node) {\n    var compressedNode = this.model.getNodeLocation(node);\n    if (compressedNode === null) {\n      return null;\n    }\n    return compressedNode.elements[compressedNode.elements.length - 1];\n  };\n  // TODO: review this\n  CompressedObjectTreeModel.prototype.getParentNodeLocation = function (location) {\n    var compressedNode = this.getCompressedNode(location);\n    var parentNode = this.model.getParentNodeLocation(compressedNode);\n    if (parentNode === null) {\n      return null;\n    }\n    return parentNode.elements[parentNode.elements.length - 1];\n  };\n  CompressedObjectTreeModel.prototype.isCollapsible = function (location) {\n    var compressedNode = this.getCompressedNode(location);\n    return this.model.isCollapsible(compressedNode);\n  };\n  CompressedObjectTreeModel.prototype.setCollapsible = function (location, collapsible) {\n    var compressedNode = this.getCompressedNode(location);\n    return this.model.setCollapsible(compressedNode, collapsible);\n  };\n  CompressedObjectTreeModel.prototype.isCollapsed = function (location) {\n    var compressedNode = this.getCompressedNode(location);\n    return this.model.isCollapsed(compressedNode);\n  };\n  CompressedObjectTreeModel.prototype.setCollapsed = function (location, collapsed, recursive) {\n    var compressedNode = this.getCompressedNode(location);\n    return this.model.setCollapsed(compressedNode, collapsed, recursive);\n  };\n  CompressedObjectTreeModel.prototype.expandTo = function (location) {\n    var compressedNode = this.getCompressedNode(location);\n    this.model.expandTo(compressedNode);\n  };\n  CompressedObjectTreeModel.prototype.rerender = function (location) {\n    var compressedNode = this.getCompressedNode(location);\n    this.model.rerender(compressedNode);\n  };\n  CompressedObjectTreeModel.prototype.refilter = function () {\n    this.model.refilter();\n  };\n  CompressedObjectTreeModel.prototype.getCompressedNode = function (element) {\n    if (element === null) {\n      return null;\n    }\n    var node = this.nodes.get(element);\n    if (!node) {\n      throw new TreeError(this.user, \"Tree element not found: \" + element);\n    }\n    return node;\n  };\n  return CompressedObjectTreeModel;\n}();\nexport { CompressedObjectTreeModel };\nexport var DefaultElementMapper = function DefaultElementMapper(elements) {\n  return elements[elements.length - 1];\n};\nvar CompressedTreeNodeWrapper = /** @class */function () {\n  function CompressedTreeNodeWrapper(unwrapper, node) {\n    this.unwrapper = unwrapper;\n    this.node = node;\n  }\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"element\", {\n    get: function get() {\n      return this.node.element === null ? null : this.unwrapper(this.node.element);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"children\", {\n    get: function get() {\n      var _this = this;\n      return this.node.children.map(function (node) {\n        return new CompressedTreeNodeWrapper(_this.unwrapper, node);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"depth\", {\n    get: function get() {\n      return this.node.depth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"visibleChildrenCount\", {\n    get: function get() {\n      return this.node.visibleChildrenCount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"visibleChildIndex\", {\n    get: function get() {\n      return this.node.visibleChildIndex;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"collapsible\", {\n    get: function get() {\n      return this.node.collapsible;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"collapsed\", {\n    get: function get() {\n      return this.node.collapsed;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"visible\", {\n    get: function get() {\n      return this.node.visible;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"filterData\", {\n    get: function get() {\n      return this.node.filterData;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CompressedTreeNodeWrapper;\n}();\nfunction mapList(nodeMapper, list) {\n  return {\n    splice: function splice(start, deleteCount, toInsert) {\n      list.splice(start, deleteCount, toInsert.map(function (node) {\n        return nodeMapper.map(node);\n      }));\n    }\n  };\n}\nfunction mapOptions(compressedNodeUnwrapper, options) {\n  return __assign(__assign({}, options), {\n    sorter: options.sorter && {\n      compare: function compare(node, otherNode) {\n        return options.sorter.compare(node.elements[0], otherNode.elements[0]);\n      }\n    },\n    identityProvider: options.identityProvider && {\n      getId: function getId(node) {\n        return options.identityProvider.getId(compressedNodeUnwrapper(node));\n      }\n    },\n    filter: options.filter && {\n      filter: function filter(node, parentVisibility) {\n        return options.filter.filter(compressedNodeUnwrapper(node), parentVisibility);\n      }\n    }\n  });\n}\nvar CompressibleObjectTreeModel = /** @class */function () {\n  function CompressibleObjectTreeModel(user, list, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    this.elementMapper = options.elementMapper || DefaultElementMapper;\n    var compressedNodeUnwrapper = function compressedNodeUnwrapper(node) {\n      return _this.elementMapper(node.elements);\n    };\n    this.nodeMapper = new WeakMapper(function (node) {\n      return new CompressedTreeNodeWrapper(compressedNodeUnwrapper, node);\n    });\n    this.model = new CompressedObjectTreeModel(user, mapList(this.nodeMapper, list), mapOptions(compressedNodeUnwrapper, options));\n  }\n  Object.defineProperty(CompressibleObjectTreeModel.prototype, \"onDidSplice\", {\n    get: function get() {\n      var _this = this;\n      return Event.map(this.model.onDidSplice, function (_a) {\n        var insertedNodes = _a.insertedNodes,\n          deletedNodes = _a.deletedNodes;\n        return {\n          insertedNodes: insertedNodes.map(function (node) {\n            return _this.nodeMapper.map(node);\n          }),\n          deletedNodes: deletedNodes.map(function (node) {\n            return _this.nodeMapper.map(node);\n          })\n        };\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompressibleObjectTreeModel.prototype, \"onDidChangeCollapseState\", {\n    get: function get() {\n      var _this = this;\n      return Event.map(this.model.onDidChangeCollapseState, function (_a) {\n        var node = _a.node,\n          deep = _a.deep;\n        return {\n          node: _this.nodeMapper.map(node),\n          deep: deep\n        };\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  CompressibleObjectTreeModel.prototype.setChildren = function (element, children) {\n    this.model.setChildren(element, children);\n  };\n  CompressibleObjectTreeModel.prototype.setCompressionEnabled = function (enabled) {\n    this.model.setCompressionEnabled(enabled);\n  };\n  CompressibleObjectTreeModel.prototype.has = function (location) {\n    return this.model.has(location);\n  };\n  CompressibleObjectTreeModel.prototype.getListIndex = function (location) {\n    return this.model.getListIndex(location);\n  };\n  CompressibleObjectTreeModel.prototype.getListRenderCount = function (location) {\n    return this.model.getListRenderCount(location);\n  };\n  CompressibleObjectTreeModel.prototype.getNode = function (location) {\n    return this.nodeMapper.map(this.model.getNode(location));\n  };\n  CompressibleObjectTreeModel.prototype.getNodeLocation = function (node) {\n    return node.element;\n  };\n  CompressibleObjectTreeModel.prototype.getParentNodeLocation = function (location) {\n    return this.model.getParentNodeLocation(location);\n  };\n  CompressibleObjectTreeModel.prototype.isCollapsible = function (location) {\n    return this.model.isCollapsible(location);\n  };\n  CompressibleObjectTreeModel.prototype.setCollapsible = function (location, collapsed) {\n    return this.model.setCollapsible(location, collapsed);\n  };\n  CompressibleObjectTreeModel.prototype.isCollapsed = function (location) {\n    return this.model.isCollapsed(location);\n  };\n  CompressibleObjectTreeModel.prototype.setCollapsed = function (location, collapsed, recursive) {\n    return this.model.setCollapsed(location, collapsed, recursive);\n  };\n  CompressibleObjectTreeModel.prototype.expandTo = function (location) {\n    return this.model.expandTo(location);\n  };\n  CompressibleObjectTreeModel.prototype.rerender = function (location) {\n    return this.model.rerender(location);\n  };\n  CompressibleObjectTreeModel.prototype.refilter = function () {\n    return this.model.refilter();\n  };\n  CompressibleObjectTreeModel.prototype.getCompressedTreeNode = function (location) {\n    if (location === void 0) {\n      location = null;\n    }\n    return this.model.getNode(location);\n  };\n  return CompressibleObjectTreeModel;\n}();\nexport { CompressibleObjectTreeModel };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Iterator","Event","TreeError","WeakMapper","ObjectTreeModel","noCompress","element","elements","incompressible","children","map","from","collapsible","collapsed","compress","childrenIterator","collect","push","concat","fromArray","_decompress","index","single","el","decompress","splice","treeElement","e","CompressedObjectTreeModel","user","list","options","nodes","Map","model","enabled","compressionEnabled","defineProperty","get","onDidSplice","enumerable","configurable","onDidChangeCollapseState","setChildren","compressedChildren","_setChildren","compressedNode","Error","node","getNode","compressedParentNode","getParentNodeLocation","parent","decompressedElement","splicedElement","recompressedElement","parentChildren","child","setCompressionEnabled","root","rootChildren","decompressedRootChildren","recompressedRootChildren","_this","insertedElements","Set","_onDidCreateNode","_i","_a","add","set","_onDidDeleteNode","has","delete","getListIndex","location","getCompressedNode","getListRenderCount","getNodeLocation","parentNode","isCollapsible","setCollapsible","isCollapsed","setCollapsed","recursive","expandTo","rerender","refilter","DefaultElementMapper","CompressedTreeNodeWrapper","unwrapper","depth","visibleChildrenCount","visibleChildIndex","visible","filterData","mapList","nodeMapper","start","deleteCount","toInsert","mapOptions","compressedNodeUnwrapper","sorter","compare","otherNode","identityProvider","getId","filter","parentVisibility","CompressibleObjectTreeModel","elementMapper","insertedNodes","deletedNodes","deep","getCompressedTreeNode"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/compressedObjectTreeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { Iterator } from '../../../common/iterator.js';\r\nimport { Event } from '../../../common/event.js';\r\nimport { TreeError, WeakMapper } from './tree.js';\r\nimport { ObjectTreeModel } from './objectTreeModel.js';\r\nfunction noCompress(element) {\r\n    var elements = [element.element];\r\n    var incompressible = element.incompressible || false;\r\n    return {\r\n        element: { elements: elements, incompressible: incompressible },\r\n        children: Iterator.map(Iterator.from(element.children), noCompress),\r\n        collapsible: element.collapsible,\r\n        collapsed: element.collapsed\r\n    };\r\n}\r\n// Exported only for test reasons, do not use directly\r\nexport function compress(element) {\r\n    var elements = [element.element];\r\n    var incompressible = element.incompressible || false;\r\n    var childrenIterator;\r\n    var children;\r\n    while (true) {\r\n        childrenIterator = Iterator.from(element.children);\r\n        children = Iterator.collect(childrenIterator, 2);\r\n        if (children.length !== 1) {\r\n            break;\r\n        }\r\n        element = children[0];\r\n        if (element.incompressible) {\r\n            break;\r\n        }\r\n        elements.push(element.element);\r\n    }\r\n    return {\r\n        element: { elements: elements, incompressible: incompressible },\r\n        children: Iterator.map(Iterator.concat(Iterator.fromArray(children), childrenIterator), compress),\r\n        collapsible: element.collapsible,\r\n        collapsed: element.collapsed\r\n    };\r\n}\r\nfunction _decompress(element, index) {\r\n    if (index === void 0) { index = 0; }\r\n    var children;\r\n    if (index < element.element.elements.length - 1) {\r\n        children = Iterator.single(_decompress(element, index + 1));\r\n    }\r\n    else {\r\n        children = Iterator.map(Iterator.from(element.children), function (el) { return _decompress(el, 0); });\r\n    }\r\n    if (index === 0 && element.element.incompressible) {\r\n        return {\r\n            element: element.element.elements[index],\r\n            children: children,\r\n            incompressible: true,\r\n            collapsible: element.collapsible,\r\n            collapsed: element.collapsed\r\n        };\r\n    }\r\n    return {\r\n        element: element.element.elements[index],\r\n        children: children,\r\n        collapsible: element.collapsible,\r\n        collapsed: element.collapsed\r\n    };\r\n}\r\n// Exported only for test reasons, do not use directly\r\nexport function decompress(element) {\r\n    return _decompress(element, 0);\r\n}\r\nfunction splice(treeElement, element, children) {\r\n    if (treeElement.element === element) {\r\n        return __assign(__assign({}, treeElement), { children: children });\r\n    }\r\n    return __assign(__assign({}, treeElement), { children: Iterator.map(Iterator.from(treeElement.children), function (e) { return splice(e, element, children); }) });\r\n}\r\n// Exported only for test reasons, do not use directly\r\nvar CompressedObjectTreeModel = /** @class */ (function () {\r\n    function CompressedObjectTreeModel(user, list, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.user = user;\r\n        this.nodes = new Map();\r\n        this.model = new ObjectTreeModel(user, list, options);\r\n        this.enabled = typeof options.compressionEnabled === 'undefined' ? true : options.compressionEnabled;\r\n    }\r\n    Object.defineProperty(CompressedObjectTreeModel.prototype, \"onDidSplice\", {\r\n        get: function () { return this.model.onDidSplice; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedObjectTreeModel.prototype, \"onDidChangeCollapseState\", {\r\n        get: function () { return this.model.onDidChangeCollapseState; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompressedObjectTreeModel.prototype.setChildren = function (element, children) {\r\n        if (element === null) {\r\n            var compressedChildren = Iterator.map(Iterator.from(children), this.enabled ? compress : noCompress);\r\n            this._setChildren(null, compressedChildren);\r\n            return;\r\n        }\r\n        var compressedNode = this.nodes.get(element);\r\n        if (!compressedNode) {\r\n            throw new Error('Unknown compressed tree node');\r\n        }\r\n        var node = this.model.getNode(compressedNode);\r\n        var compressedParentNode = this.model.getParentNodeLocation(compressedNode);\r\n        var parent = this.model.getNode(compressedParentNode);\r\n        var decompressedElement = decompress(node);\r\n        var splicedElement = splice(decompressedElement, element, Iterator.from(children));\r\n        var recompressedElement = (this.enabled ? compress : noCompress)(splicedElement);\r\n        var parentChildren = parent.children\r\n            .map(function (child) { return child === node ? recompressedElement : child; });\r\n        this._setChildren(parent.element, parentChildren);\r\n    };\r\n    CompressedObjectTreeModel.prototype.setCompressionEnabled = function (enabled) {\r\n        if (enabled === this.enabled) {\r\n            return;\r\n        }\r\n        this.enabled = enabled;\r\n        var root = this.model.getNode();\r\n        var rootChildren = Iterator.from(root.children);\r\n        var decompressedRootChildren = Iterator.map(rootChildren, decompress);\r\n        var recompressedRootChildren = Iterator.map(decompressedRootChildren, enabled ? compress : noCompress);\r\n        this._setChildren(null, recompressedRootChildren);\r\n    };\r\n    CompressedObjectTreeModel.prototype._setChildren = function (node, children) {\r\n        var _this = this;\r\n        var insertedElements = new Set();\r\n        var _onDidCreateNode = function (node) {\r\n            for (var _i = 0, _a = node.element.elements; _i < _a.length; _i++) {\r\n                var element = _a[_i];\r\n                insertedElements.add(element);\r\n                _this.nodes.set(element, node.element);\r\n            }\r\n        };\r\n        var _onDidDeleteNode = function (node) {\r\n            for (var _i = 0, _a = node.element.elements; _i < _a.length; _i++) {\r\n                var element = _a[_i];\r\n                if (!insertedElements.has(element)) {\r\n                    _this.nodes.delete(element);\r\n                }\r\n            }\r\n        };\r\n        this.model.setChildren(node, children, _onDidCreateNode, _onDidDeleteNode);\r\n    };\r\n    CompressedObjectTreeModel.prototype.has = function (element) {\r\n        return this.nodes.has(element);\r\n    };\r\n    CompressedObjectTreeModel.prototype.getListIndex = function (location) {\r\n        var node = this.getCompressedNode(location);\r\n        return this.model.getListIndex(node);\r\n    };\r\n    CompressedObjectTreeModel.prototype.getListRenderCount = function (location) {\r\n        var node = this.getCompressedNode(location);\r\n        return this.model.getListRenderCount(node);\r\n    };\r\n    CompressedObjectTreeModel.prototype.getNode = function (location) {\r\n        if (typeof location === 'undefined') {\r\n            return this.model.getNode();\r\n        }\r\n        var node = this.getCompressedNode(location);\r\n        return this.model.getNode(node);\r\n    };\r\n    // TODO: review this\r\n    CompressedObjectTreeModel.prototype.getNodeLocation = function (node) {\r\n        var compressedNode = this.model.getNodeLocation(node);\r\n        if (compressedNode === null) {\r\n            return null;\r\n        }\r\n        return compressedNode.elements[compressedNode.elements.length - 1];\r\n    };\r\n    // TODO: review this\r\n    CompressedObjectTreeModel.prototype.getParentNodeLocation = function (location) {\r\n        var compressedNode = this.getCompressedNode(location);\r\n        var parentNode = this.model.getParentNodeLocation(compressedNode);\r\n        if (parentNode === null) {\r\n            return null;\r\n        }\r\n        return parentNode.elements[parentNode.elements.length - 1];\r\n    };\r\n    CompressedObjectTreeModel.prototype.isCollapsible = function (location) {\r\n        var compressedNode = this.getCompressedNode(location);\r\n        return this.model.isCollapsible(compressedNode);\r\n    };\r\n    CompressedObjectTreeModel.prototype.setCollapsible = function (location, collapsible) {\r\n        var compressedNode = this.getCompressedNode(location);\r\n        return this.model.setCollapsible(compressedNode, collapsible);\r\n    };\r\n    CompressedObjectTreeModel.prototype.isCollapsed = function (location) {\r\n        var compressedNode = this.getCompressedNode(location);\r\n        return this.model.isCollapsed(compressedNode);\r\n    };\r\n    CompressedObjectTreeModel.prototype.setCollapsed = function (location, collapsed, recursive) {\r\n        var compressedNode = this.getCompressedNode(location);\r\n        return this.model.setCollapsed(compressedNode, collapsed, recursive);\r\n    };\r\n    CompressedObjectTreeModel.prototype.expandTo = function (location) {\r\n        var compressedNode = this.getCompressedNode(location);\r\n        this.model.expandTo(compressedNode);\r\n    };\r\n    CompressedObjectTreeModel.prototype.rerender = function (location) {\r\n        var compressedNode = this.getCompressedNode(location);\r\n        this.model.rerender(compressedNode);\r\n    };\r\n    CompressedObjectTreeModel.prototype.refilter = function () {\r\n        this.model.refilter();\r\n    };\r\n    CompressedObjectTreeModel.prototype.getCompressedNode = function (element) {\r\n        if (element === null) {\r\n            return null;\r\n        }\r\n        var node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, \"Tree element not found: \" + element);\r\n        }\r\n        return node;\r\n    };\r\n    return CompressedObjectTreeModel;\r\n}());\r\nexport { CompressedObjectTreeModel };\r\nexport var DefaultElementMapper = function (elements) { return elements[elements.length - 1]; };\r\nvar CompressedTreeNodeWrapper = /** @class */ (function () {\r\n    function CompressedTreeNodeWrapper(unwrapper, node) {\r\n        this.unwrapper = unwrapper;\r\n        this.node = node;\r\n    }\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"element\", {\r\n        get: function () { return this.node.element === null ? null : this.unwrapper(this.node.element); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"children\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.node.children.map(function (node) { return new CompressedTreeNodeWrapper(_this.unwrapper, node); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"depth\", {\r\n        get: function () { return this.node.depth; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"visibleChildrenCount\", {\r\n        get: function () { return this.node.visibleChildrenCount; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"visibleChildIndex\", {\r\n        get: function () { return this.node.visibleChildIndex; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"collapsible\", {\r\n        get: function () { return this.node.collapsible; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"collapsed\", {\r\n        get: function () { return this.node.collapsed; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"visible\", {\r\n        get: function () { return this.node.visible; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressedTreeNodeWrapper.prototype, \"filterData\", {\r\n        get: function () { return this.node.filterData; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CompressedTreeNodeWrapper;\r\n}());\r\nfunction mapList(nodeMapper, list) {\r\n    return {\r\n        splice: function (start, deleteCount, toInsert) {\r\n            list.splice(start, deleteCount, toInsert.map(function (node) { return nodeMapper.map(node); }));\r\n        }\r\n    };\r\n}\r\nfunction mapOptions(compressedNodeUnwrapper, options) {\r\n    return __assign(__assign({}, options), { sorter: options.sorter && {\r\n            compare: function (node, otherNode) {\r\n                return options.sorter.compare(node.elements[0], otherNode.elements[0]);\r\n            }\r\n        }, identityProvider: options.identityProvider && {\r\n            getId: function (node) {\r\n                return options.identityProvider.getId(compressedNodeUnwrapper(node));\r\n            }\r\n        }, filter: options.filter && {\r\n            filter: function (node, parentVisibility) {\r\n                return options.filter.filter(compressedNodeUnwrapper(node), parentVisibility);\r\n            }\r\n        } });\r\n}\r\nvar CompressibleObjectTreeModel = /** @class */ (function () {\r\n    function CompressibleObjectTreeModel(user, list, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this.elementMapper = options.elementMapper || DefaultElementMapper;\r\n        var compressedNodeUnwrapper = function (node) { return _this.elementMapper(node.elements); };\r\n        this.nodeMapper = new WeakMapper(function (node) { return new CompressedTreeNodeWrapper(compressedNodeUnwrapper, node); });\r\n        this.model = new CompressedObjectTreeModel(user, mapList(this.nodeMapper, list), mapOptions(compressedNodeUnwrapper, options));\r\n    }\r\n    Object.defineProperty(CompressibleObjectTreeModel.prototype, \"onDidSplice\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return Event.map(this.model.onDidSplice, function (_a) {\r\n                var insertedNodes = _a.insertedNodes, deletedNodes = _a.deletedNodes;\r\n                return ({\r\n                    insertedNodes: insertedNodes.map(function (node) { return _this.nodeMapper.map(node); }),\r\n                    deletedNodes: deletedNodes.map(function (node) { return _this.nodeMapper.map(node); }),\r\n                });\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompressibleObjectTreeModel.prototype, \"onDidChangeCollapseState\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return Event.map(this.model.onDidChangeCollapseState, function (_a) {\r\n                var node = _a.node, deep = _a.deep;\r\n                return ({\r\n                    node: _this.nodeMapper.map(node),\r\n                    deep: deep\r\n                });\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompressibleObjectTreeModel.prototype.setChildren = function (element, children) {\r\n        this.model.setChildren(element, children);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.setCompressionEnabled = function (enabled) {\r\n        this.model.setCompressionEnabled(enabled);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.has = function (location) {\r\n        return this.model.has(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.getListIndex = function (location) {\r\n        return this.model.getListIndex(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.getListRenderCount = function (location) {\r\n        return this.model.getListRenderCount(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.getNode = function (location) {\r\n        return this.nodeMapper.map(this.model.getNode(location));\r\n    };\r\n    CompressibleObjectTreeModel.prototype.getNodeLocation = function (node) {\r\n        return node.element;\r\n    };\r\n    CompressibleObjectTreeModel.prototype.getParentNodeLocation = function (location) {\r\n        return this.model.getParentNodeLocation(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.isCollapsible = function (location) {\r\n        return this.model.isCollapsible(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.setCollapsible = function (location, collapsed) {\r\n        return this.model.setCollapsible(location, collapsed);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.isCollapsed = function (location) {\r\n        return this.model.isCollapsed(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.setCollapsed = function (location, collapsed, recursive) {\r\n        return this.model.setCollapsed(location, collapsed, recursive);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.expandTo = function (location) {\r\n        return this.model.expandTo(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.rerender = function (location) {\r\n        return this.model.rerender(location);\r\n    };\r\n    CompressibleObjectTreeModel.prototype.refilter = function () {\r\n        return this.model.refilter();\r\n    };\r\n    CompressibleObjectTreeModel.prototype.getCompressedTreeNode = function (location) {\r\n        if (location === void 0) { location = null; }\r\n        return this.model.getNode(location);\r\n    };\r\n    return CompressibleObjectTreeModel;\r\n}());\r\nexport { CompressibleObjectTreeModel };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}