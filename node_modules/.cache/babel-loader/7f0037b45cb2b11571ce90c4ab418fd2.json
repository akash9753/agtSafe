{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { KeyCodeUtils } from '../../../base/common/keyCodes.js';\nimport { BaseResolvedKeybinding } from './baseResolvedKeybinding.js';\n/**\r\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\r\n */\nvar USLayoutResolvedKeybinding = /** @class */function (_super) {\n  __extends(USLayoutResolvedKeybinding, _super);\n  function USLayoutResolvedKeybinding(actual, os) {\n    return _super.call(this, os, actual.parts) || this;\n  }\n  USLayoutResolvedKeybinding.prototype._keyCodeToUILabel = function (keyCode) {\n    if (this._os === 2 /* Macintosh */) {\n      switch (keyCode) {\n        case 15 /* LeftArrow */:\n          return '←';\n        case 16 /* UpArrow */:\n          return '↑';\n        case 17 /* RightArrow */:\n          return '→';\n        case 18 /* DownArrow */:\n          return '↓';\n      }\n    }\n    return KeyCodeUtils.toString(keyCode);\n  };\n  USLayoutResolvedKeybinding.prototype._getLabel = function (keybinding) {\n    if (keybinding.isDuplicateModifierCase()) {\n      return '';\n    }\n    return this._keyCodeToUILabel(keybinding.keyCode);\n  };\n  USLayoutResolvedKeybinding.prototype._getAriaLabel = function (keybinding) {\n    if (keybinding.isDuplicateModifierCase()) {\n      return '';\n    }\n    return KeyCodeUtils.toString(keybinding.keyCode);\n  };\n  USLayoutResolvedKeybinding.prototype._getDispatchPart = function (keybinding) {\n    return USLayoutResolvedKeybinding.getDispatchStr(keybinding);\n  };\n  USLayoutResolvedKeybinding.getDispatchStr = function (keybinding) {\n    if (keybinding.isModifierKey()) {\n      return null;\n    }\n    var result = '';\n    if (keybinding.ctrlKey) {\n      result += 'ctrl+';\n    }\n    if (keybinding.shiftKey) {\n      result += 'shift+';\n    }\n    if (keybinding.altKey) {\n      result += 'alt+';\n    }\n    if (keybinding.metaKey) {\n      result += 'meta+';\n    }\n    result += KeyCodeUtils.toString(keybinding.keyCode);\n    return result;\n  };\n  return USLayoutResolvedKeybinding;\n}(BaseResolvedKeybinding);\nexport { USLayoutResolvedKeybinding };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","KeyCodeUtils","BaseResolvedKeybinding","USLayoutResolvedKeybinding","_super","actual","os","call","parts","_keyCodeToUILabel","keyCode","_os","toString","_getLabel","keybinding","isDuplicateModifierCase","_getAriaLabel","_getDispatchPart","getDispatchStr","isModifierKey","result","ctrlKey","shiftKey","altKey","metaKey"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/platform/keybinding/common/usLayoutResolvedKeybinding.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { KeyCodeUtils } from '../../../base/common/keyCodes.js';\r\nimport { BaseResolvedKeybinding } from './baseResolvedKeybinding.js';\r\n/**\r\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\r\n */\r\nvar USLayoutResolvedKeybinding = /** @class */ (function (_super) {\r\n    __extends(USLayoutResolvedKeybinding, _super);\r\n    function USLayoutResolvedKeybinding(actual, os) {\r\n        return _super.call(this, os, actual.parts) || this;\r\n    }\r\n    USLayoutResolvedKeybinding.prototype._keyCodeToUILabel = function (keyCode) {\r\n        if (this._os === 2 /* Macintosh */) {\r\n            switch (keyCode) {\r\n                case 15 /* LeftArrow */:\r\n                    return '←';\r\n                case 16 /* UpArrow */:\r\n                    return '↑';\r\n                case 17 /* RightArrow */:\r\n                    return '→';\r\n                case 18 /* DownArrow */:\r\n                    return '↓';\r\n            }\r\n        }\r\n        return KeyCodeUtils.toString(keyCode);\r\n    };\r\n    USLayoutResolvedKeybinding.prototype._getLabel = function (keybinding) {\r\n        if (keybinding.isDuplicateModifierCase()) {\r\n            return '';\r\n        }\r\n        return this._keyCodeToUILabel(keybinding.keyCode);\r\n    };\r\n    USLayoutResolvedKeybinding.prototype._getAriaLabel = function (keybinding) {\r\n        if (keybinding.isDuplicateModifierCase()) {\r\n            return '';\r\n        }\r\n        return KeyCodeUtils.toString(keybinding.keyCode);\r\n    };\r\n    USLayoutResolvedKeybinding.prototype._getDispatchPart = function (keybinding) {\r\n        return USLayoutResolvedKeybinding.getDispatchStr(keybinding);\r\n    };\r\n    USLayoutResolvedKeybinding.getDispatchStr = function (keybinding) {\r\n        if (keybinding.isModifierKey()) {\r\n            return null;\r\n        }\r\n        var result = '';\r\n        if (keybinding.ctrlKey) {\r\n            result += 'ctrl+';\r\n        }\r\n        if (keybinding.shiftKey) {\r\n            result += 'shift+';\r\n        }\r\n        if (keybinding.altKey) {\r\n            result += 'alt+';\r\n        }\r\n        if (keybinding.metaKey) {\r\n            result += 'meta+';\r\n        }\r\n        result += KeyCodeUtils.toString(keybinding.keyCode);\r\n        return result;\r\n    };\r\n    return USLayoutResolvedKeybinding;\r\n}(BaseResolvedKeybinding));\r\nexport { USLayoutResolvedKeybinding };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}