{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*(#|\\/\\/)region\\\\b\"),\n      end: new RegExp(\"^\\\\s*(#|\\/\\/)endregion\\\\b\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '',\n  // ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.root'\n    }], [/<!DOCTYPE/, 'metatag.html', '@doctype'], [/<!--/, 'comment.html', '@comment'], [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']], [/(<)(script)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@script'\n    }]], [/(<)(style)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@style'\n    }]], [/(<)([:\\w]+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/(<\\/)(\\w+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/</, 'delimiter.html'], [/[^<]+/] // text\n    ],\n\n    doctype: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.comment'\n    }], [/[^>]+/, 'metatag.content.html'], [/>/, 'metatag.html', '@pop']],\n    comment: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.comment'\n    }], [/-->/, 'comment.html', '@pop'], [/[^-]+/, 'comment.content.html'], [/./, 'comment.content.html']],\n    otherTag: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.otherTag'\n    }], [/\\/?>/, 'delimiter.html', '@pop'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/]],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.script'\n    }], [/type/, 'attribute.name', '@scriptAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.scriptAfterType'\n    }], [/=/, 'delimiter', '@scriptAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.scriptAfterTypeEquals'\n    }], [/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.scriptWithCustomType.$S2'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    scriptEmbedded: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInEmbeddedState.scriptEmbedded.$S2',\n      nextEmbedded: '@pop'\n    }], [/<\\/script/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }]],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.style'\n    }], [/type/, 'attribute.name', '@styleAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.styleAfterType'\n    }], [/=/, 'delimiter', '@styleAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.styleAfterTypeEquals'\n    }], [/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInSimpleState.styleWithCustomType.$S2'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    styleEmbedded: [[/<\\?((php)|=)?/, {\n      token: '@rematch',\n      switchTo: '@phpInEmbeddedState.styleEmbedded.$S2',\n      nextEmbedded: '@pop'\n    }], [/<\\/style/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }]],\n    // -- END <style> tags handling\n    phpInSimpleState: [[/<\\?((php)|=)?/, 'metatag.php'], [/\\?>/, {\n      token: 'metatag.php',\n      switchTo: '@$S2.$S3'\n    }], {\n      include: 'phpRoot'\n    }],\n    phpInEmbeddedState: [[/<\\?((php)|=)?/, 'metatag.php'], [/\\?>/, {\n      token: 'metatag.php',\n      switchTo: '@$S2.$S3',\n      nextEmbedded: '$S3'\n    }], {\n      include: 'phpRoot'\n    }],\n    phpRoot: [[/[a-zA-Z_]\\w*/, {\n      cases: {\n        '@phpKeywords': {\n          token: 'keyword.php'\n        },\n        '@phpCompileTimeConstants': {\n          token: 'constant.php'\n        },\n        '@default': 'identifier.php'\n      }\n    }], [/[$a-zA-Z_]\\w*/, {\n      cases: {\n        '@phpPreDefinedVariables': {\n          token: 'variable.predefined.php'\n        },\n        '@default': 'variable.php'\n      }\n    }],\n    // brackets\n    [/[{}]/, 'delimiter.bracket.php'], [/[\\[\\]]/, 'delimiter.array.php'], [/[()]/, 'delimiter.parenthesis.php'],\n    // whitespace\n    [/[ \\t\\r\\n]+/],\n    // comments\n    [/(#|\\/\\/)$/, 'comment.php'], [/(#|\\/\\/)/, 'comment.php', '@phpLineComment'],\n    // block comments\n    [/\\/\\*/, 'comment.php', '@phpComment'],\n    // strings\n    [/\"/, 'string.php', '@phpDoubleQuoteString'], [/'/, 'string.php', '@phpSingleQuoteString'],\n    // delimiters\n    [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, 'delimiter.php'],\n    // numbers\n    [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.php'], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.php'], [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.php'], [/0[0-7']*[0-7]/, 'number.octal.php'], [/0[bB][0-1']*[0-1]/, 'number.binary.php'], [/\\d[\\d']*/, 'number.php'], [/\\d/, 'number.php']],\n    phpComment: [[/\\*\\//, 'comment.php', '@pop'], [/[^*]+/, 'comment.php'], [/./, 'comment.php']],\n    phpLineComment: [[/\\?>/, {\n      token: '@rematch',\n      next: '@pop'\n    }], [/.$/, 'comment.php', '@pop'], [/[^?]+$/, 'comment.php', '@pop'], [/[^?]+/, 'comment.php'], [/./, 'comment.php']],\n    phpDoubleQuoteString: [[/[^\\\\\"]+/, 'string.php'], [/@escapes/, 'string.escape.php'], [/\\\\./, 'string.escape.invalid.php'], [/\"/, 'string.php', '@pop']],\n    phpSingleQuoteString: [[/[^\\\\']+/, 'string.php'], [/@escapes/, 'string.escape.php'], [/\\\\./, 'string.escape.invalid.php'], [/'/, 'string.php', '@pop']]\n  },\n  phpKeywords: ['abstract', 'and', 'array', 'as', 'break', 'callable', 'case', 'catch', 'cfunction', 'class', 'clone', 'const', 'continue', 'declare', 'default', 'do', 'else', 'elseif', 'enddeclare', 'endfor', 'endforeach', 'endif', 'endswitch', 'endwhile', 'extends', 'false', 'final', 'for', 'foreach', 'function', 'global', 'goto', 'if', 'implements', 'interface', 'instanceof', 'insteadof', 'namespace', 'new', 'null', 'object', 'old_function', 'or', 'private', 'protected', 'public', 'resource', 'static', 'switch', 'throw', 'trait', 'try', 'true', 'use', 'var', 'while', 'xor', 'die', 'echo', 'empty', 'exit', 'eval', 'include', 'include_once', 'isset', 'list', 'require', 'require_once', 'return', 'print', 'unset', 'yield', '__construct'],\n  phpCompileTimeConstants: ['__CLASS__', '__DIR__', '__FILE__', '__LINE__', '__NAMESPACE__', '__METHOD__', '__FUNCTION__', '__TRAIT__'],\n  phpPreDefinedVariables: ['$GLOBALS', '$_SERVER', '$_GET', '$_POST', '$_FILES', '$_REQUEST', '$_SESSION', '$_ENV', '$_COOKIE', '$php_errormsg', '$HTTP_RAW_POST_DATA', '$http_response_header', '$argc', '$argv'],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\n};","map":{"version":3,"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","phpInSimpleState","include","phpInEmbeddedState","phpRoot","cases","phpComment","phpLineComment","phpDoubleQuoteString","phpSingleQuoteString","phpKeywords","phpCompileTimeConstants","phpPreDefinedVariables","escapes"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/basic-languages/php/php.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string'] },\r\n        { open: '[', close: ']', notIn: ['string'] },\r\n        { open: '(', close: ')', notIn: ['string'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*(#|\\/\\/)region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*(#|\\/\\/)endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    // ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.root' }],\r\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\r\n            [/<!--/, 'comment.html', '@comment'],\r\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\r\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/</, 'delimiter.html'],\r\n            [/[^<]+/] // text\r\n        ],\r\n        doctype: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\r\n            [/[^>]+/, 'metatag.content.html'],\r\n            [/>/, 'metatag.html', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\r\n            [/-->/, 'comment.html', '@pop'],\r\n            [/[^-]+/, 'comment.content.html'],\r\n            [/./, 'comment.content.html']\r\n        ],\r\n        otherTag: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.otherTag' }],\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.script' }],\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterType' }],\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.style' }],\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterType' }],\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <style> tags handling\r\n        phpInSimpleState: [\r\n            [/<\\?((php)|=)?/, 'metatag.php'],\r\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3' }],\r\n            { include: 'phpRoot' }\r\n        ],\r\n        phpInEmbeddedState: [\r\n            [/<\\?((php)|=)?/, 'metatag.php'],\r\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\r\n            { include: 'phpRoot' }\r\n        ],\r\n        phpRoot: [\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@phpKeywords': { token: 'keyword.php' },\r\n                        '@phpCompileTimeConstants': { token: 'constant.php' },\r\n                        '@default': 'identifier.php'\r\n                    }\r\n                }],\r\n            [/[$a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@phpPreDefinedVariables': { token: 'variable.predefined.php' },\r\n                        '@default': 'variable.php'\r\n                    }\r\n                }],\r\n            // brackets\r\n            [/[{}]/, 'delimiter.bracket.php'],\r\n            [/[\\[\\]]/, 'delimiter.array.php'],\r\n            [/[()]/, 'delimiter.parenthesis.php'],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/],\r\n            // comments\r\n            [/(#|\\/\\/)$/, 'comment.php'],\r\n            [/(#|\\/\\/)/, 'comment.php', '@phpLineComment'],\r\n            // block comments\r\n            [/\\/\\*/, 'comment.php', '@phpComment'],\r\n            // strings\r\n            [/\"/, 'string.php', '@phpDoubleQuoteString'],\r\n            [/'/, 'string.php', '@phpSingleQuoteString'],\r\n            // delimiters\r\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, 'delimiter.php'],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.php'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.php'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.php'],\r\n            [/0[0-7']*[0-7]/, 'number.octal.php'],\r\n            [/0[bB][0-1']*[0-1]/, 'number.binary.php'],\r\n            [/\\d[\\d']*/, 'number.php'],\r\n            [/\\d/, 'number.php'],\r\n        ],\r\n        phpComment: [\r\n            [/\\*\\//, 'comment.php', '@pop'],\r\n            [/[^*]+/, 'comment.php'],\r\n            [/./, 'comment.php']\r\n        ],\r\n        phpLineComment: [\r\n            [/\\?>/, { token: '@rematch', next: '@pop' }],\r\n            [/.$/, 'comment.php', '@pop'],\r\n            [/[^?]+$/, 'comment.php', '@pop'],\r\n            [/[^?]+/, 'comment.php'],\r\n            [/./, 'comment.php']\r\n        ],\r\n        phpDoubleQuoteString: [\r\n            [/[^\\\\\"]+/, 'string.php'],\r\n            [/@escapes/, 'string.escape.php'],\r\n            [/\\\\./, 'string.escape.invalid.php'],\r\n            [/\"/, 'string.php', '@pop']\r\n        ],\r\n        phpSingleQuoteString: [\r\n            [/[^\\\\']+/, 'string.php'],\r\n            [/@escapes/, 'string.escape.php'],\r\n            [/\\\\./, 'string.escape.invalid.php'],\r\n            [/'/, 'string.php', '@pop']\r\n        ],\r\n    },\r\n    phpKeywords: [\r\n        'abstract', 'and', 'array', 'as', 'break',\r\n        'callable', 'case', 'catch', 'cfunction', 'class', 'clone',\r\n        'const', 'continue', 'declare', 'default', 'do',\r\n        'else', 'elseif', 'enddeclare', 'endfor', 'endforeach',\r\n        'endif', 'endswitch', 'endwhile', 'extends', 'false', 'final',\r\n        'for', 'foreach', 'function', 'global', 'goto',\r\n        'if', 'implements', 'interface', 'instanceof', 'insteadof',\r\n        'namespace', 'new', 'null', 'object', 'old_function', 'or', 'private',\r\n        'protected', 'public', 'resource', 'static', 'switch', 'throw', 'trait',\r\n        'try', 'true', 'use', 'var', 'while', 'xor',\r\n        'die', 'echo', 'empty', 'exit', 'eval',\r\n        'include', 'include_once', 'isset', 'list', 'require',\r\n        'require_once', 'return', 'print', 'unset', 'yield',\r\n        '__construct'\r\n    ],\r\n    phpCompileTimeConstants: [\r\n        '__CLASS__',\r\n        '__DIR__',\r\n        '__FILE__',\r\n        '__LINE__',\r\n        '__NAMESPACE__',\r\n        '__METHOD__',\r\n        '__FUNCTION__',\r\n        '__TRAIT__'\r\n    ],\r\n    phpPreDefinedVariables: [\r\n        '$GLOBALS',\r\n        '$_SERVER',\r\n        '$_GET',\r\n        '$_POST',\r\n        '$_FILES',\r\n        '$_REQUEST',\r\n        '$_SESSION',\r\n        '$_ENV',\r\n        '$_COOKIE',\r\n        '$php_errormsg',\r\n        '$HTTP_RAW_POST_DATA',\r\n        '$http_response_header',\r\n        '$argc',\r\n        '$argv'\r\n    ],\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}