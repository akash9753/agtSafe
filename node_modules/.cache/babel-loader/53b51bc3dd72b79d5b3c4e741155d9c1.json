{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Study\\\\studyRelDoc.js\";\nimport React, { Component } from 'react';\nimport { Col, Button, Row, Select, Form, TreeSelect, message, Modal, Icon, Input } from 'antd';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\nimport { getRules } from '../Utility/htmlUtility';\nimport moment from 'moment-timezone';\nimport { CallServerPost, errorModal, successModalCallback, PostCallWithZone, successModal, getProjectRole, showProgress, hideProgress } from '../Utility/sharedUtility';\nvar FormItem = Form.Item;\nvar splitClass = 24;\nvar TreeNode = TreeSelect.TreeNode;\nvar Option = Select.Option;\nvar SDTM = 'SDTM';\nvar ADAM = 'ADAM';\nvar SEND = 'SEND';\nvar thisObj = \"\";\nvar emptyDoc = {\n  FileLocation: '',\n  Title: '',\n  DocumentTypeID: '',\n  DocumentType: '',\n  DestinationType: ''\n};\nvar StudyRelDoc = /*#__PURE__*/function (_Component) {\n  _inherits(StudyRelDoc, _Component);\n  var _super = _createSuper(StudyRelDoc);\n  function StudyRelDoc(props) {\n    var _this;\n    _classCallCheck(this, StudyRelDoc);\n    _this = _super.call(this, props);\n    _this.getFormFieldList = function () {\n      showProgress();\n      CallServerPost('Study/GetValuesForCreateStudy', {\n        FormName: \"Study\",\n        ActionName: \"Create\",\n        ProjectID: JSON.parse(sessionStorage.studyDetails).projectID,\n        StudyID: JSON.parse(sessionStorage.studyDetails).studyID\n      }).then(function (response) {\n        var _this2 = this;\n        if (response.status === 0) {\n          hideProgress();\n          errorModal(response.message);\n        } else {\n          var allData = response.value;\n          var studyProDoc = allData.StudyFiles.filter(function (x) {\n            return x.activityID === 322;\n          }); //get protocol document\n          var docTypeOptions, protocolDocumentData;\n          if (Object.keys(allData).length > 0) {\n            var pctList = allData[\"fileTypes\"].filter(function (doc) {\n              return doc.shortValue.includes('Supplemental');\n            } /* || doc.shortValue.includes('Others')*/);\n            docTypeOptions = pctList.map(function (option) {\n              if (JSON.parse(sessionStorage.studyDetails).standardText.includes(SDTM) && option['longValue'].includes(SDTM)) {\n                return /*#__PURE__*/React.createElement(Option, {\n                  name: \"Document Type SDTM_Option\",\n                  key: option['productcontrolledTermID'] + \"_\" + option['shortValue'],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 37\n                  }\n                }, option['shortValue']);\n              } else if (JSON.parse(sessionStorage.studyDetails).standardText.includes(ADAM) && option['longValue'].includes(ADAM)) {\n                return /*#__PURE__*/React.createElement(Option, {\n                  name: \"Document Type ADAM_Option\",\n                  key: option['productcontrolledTermID'] + \"_\" + option['shortValue'],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 37\n                  }\n                }, option['shortValue']);\n              } else if (JSON.parse(sessionStorage.studyDetails).standardText.includes(SEND) && option['longValue'].includes(SEND)) {\n                return /*#__PURE__*/React.createElement(Option, {\n                  name: \"Document Type SEND_Option\",\n                  key: option['productcontrolledTermID'] + \"_\" + option['shortValue'],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }\n                }, option['shortValue']);\n              }\n            });\n            var treeLoop = function treeLoop(data, folderOnly) {\n              return data.map(function (item) {\n                if (item.children) {\n                  if (!thisObj.props.availableDocs.includes(item.title) && studyProDoc[0].title !== item.title) {\n                    return /*#__PURE__*/React.createElement(TreeNode, {\n                      selectable: folderOnly && item.folder,\n                      key: item.key,\n                      value: item.key,\n                      title: item.title,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 45\n                      }\n                    }, treeLoop(item.children, folderOnly));\n                  }\n                } else {\n                  var selectable = true;\n                  if (folderOnly && !item.folder) {\n                    selectable = false;\n                  }\n                  if (!thisObj.props.availableDocs.includes(item.title) && studyProDoc[0].title !== item.title) {\n                    return /*#__PURE__*/React.createElement(TreeNode, {\n                      selectable: selectable,\n                      key: item.key,\n                      value: item.key,\n                      title: item.title,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 48\n                      }\n                    });\n                  }\n                }\n              });\n            };\n            protocolDocumentData = treeLoop([allData[\"DocumentsTree\"].pdfLocation], false);\n          }\n          thisObj.setState({\n            allData: allData,\n            protocolDocumentData: protocolDocumentData,\n            docTypeOptions: docTypeOptions\n          }, hideProgress());\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.docTypeOnChange = function (value, callback) {\n      if (_this.props.curObj.length !== 0) {\n        if (_this.props.curObj.includes(value)) {\n          callback();\n        }\n      }\n    };\n    _this.handleSubmit = function () {\n      var thisObj = _assertThisInitialized(_this);\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var zones = moment.tz.guess();\n          var timezone = moment.tz(zones).zoneAbbr();\n          var DocumentTypeID = values['DocType'].split(\"_\")[0];\n          var DocumentType = values['DocType'].split(\"_\")[1];\n          var projectRole = getProjectRole();\n          var docDetails = {\n            StudyID: JSON.parse(sessionStorage.studyDetails).studyID,\n            Title: values['DocTitle'],\n            DestinationType: \"PhysicalRef\",\n            FileTypeID: DocumentTypeID,\n            DocumentType: DocumentType,\n            FileLocation: values['DocumentPath'],\n            LocationType: 0,\n            TimeZone: timezone,\n            UpdatedBy: projectRole.userProfile.userID\n          };\n          showProgress();\n          CallServerPost('Document/CreateSupplementalDoc', docDetails).then(function (response) {\n            thisObj.setState({\n              loading: false\n            });\n            if (response.status === 0) {\n              errorModal(response.message);\n            } else {\n              successModalCallback(response.message, thisObj.props.refresh);\n            }\n            hideProgress();\n          });\n        }\n      });\n    };\n    _this.cancel = function () {\n      _this.props.handleCancel();\n      _this.setState({\n        visible: false\n      });\n    };\n    _this.state = {\n      allData: false,\n      visible: false,\n      currentDoc: emptyDoc,\n      docTypeOptions: [],\n      protocolDocumentData: []\n    };\n    thisObj = _assertThisInitialized(_this);\n    thisObj.getFormFieldList();\n    return _this;\n  }\n\n  //fn to get the list\n  _createClass(StudyRelDoc, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props = this.props,\n        studyRelDocModalVisible = _this$props.studyRelDocModalVisible,\n        standard = _this$props.standard,\n        availableDocs = _this$props.availableDocs;\n      var _thisObj$state = thisObj.state,\n        currentDoc = _thisObj$state.currentDoc,\n        allData = _thisObj$state.allData,\n        visible = _thisObj$state.visible,\n        protocolDocumentData = _thisObj$state.protocolDocumentData,\n        docTypeOptions = _thisObj$state.docTypeOptions;\n      var DocTypeField = {\n        attributeName: \"DocType\",\n        controlTypeText: \"DropDownWithSearch\",\n        inputRequirementText: studyRelDocModalVisible ? \"Mandatory\" : \"Optional\",\n        inputTypeErrorMessage: \"\",\n        validationErrorMessage: \"\",\n        requirementErrorMessage: \"Document Type should be selected\",\n        regExText: null,\n        minValue: null,\n        maxValue: null\n      };\n      var studyDocumentField = {\n        attributeName: \"DocumentPath\",\n        inputRequirementText: studyRelDocModalVisible ? \"Mandatory\" : \"Optional\",\n        inputTypeErrorMessage: \"\",\n        validationErrorMessage: \"\",\n        requirementErrorMessage: \"Study Related Document should be selected\",\n        regExText: null,\n        minValue: null,\n        maxValue: null\n      };\n      var titleField = {\n        attributeName: \"DocTitle\",\n        controlTypeText: \"TextBox\",\n        inputTypeText: \"Alphanumeric\",\n        inputRequirementText: studyRelDocModalVisible ? \"Mandatory\" : \"Optional\",\n        requirementErrorMessage: \"Title is mandatory\",\n        inputTypeErrorMessage: \"Title should contain only alphanumeric values\",\n        validationErrorMessage: \"Title should be between 2-255 characters\",\n        regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\n        minValue: 2,\n        maxValue: 255\n      };\n      return /*#__PURE__*/React.createElement(Modal, {\n        visible: visible && studyRelDocModalVisible,\n        title: \"Add Documents\",\n        cancelType: \"danger\",\n        onCancel: this.props.handleCancel,\n        maskClosable: false,\n        width: '40%',\n        style: {\n          zIndex: 1051\n        },\n        footer: [/*#__PURE__*/React.createElement(Button, {\n          key: \"cancel\",\n          name: \"PopupCancel\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-danger\",\n          style: {\n            float: 'left'\n          },\n          onClick: function onClick() {\n            return _this3.cancel();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          key: \"save\",\n          name: \"PopupSave\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ saveBtn\",\n          onClick: function onClick() {\n            return _this3.handleSubmit();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }\n        }, \"Save\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(LayoutContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormItem, {\n        label: \"Select a Document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }\n      }, \"                                                                    \", getFieldDecorator('DocumentPath', {\n        rules: getRules(studyDocumentField, this.props),\n        initialValue: currentDoc.FileLocation\n      })( /*#__PURE__*/React.createElement(TreeSelect, {\n        tabIndex: 0,\n        showSearch: true,\n        autoBlur: true,\n        allowClear: true\n        //onChange={val => this.docTypeOnChange(val)}\n        ,\n        style: {\n          width: '100%'\n        },\n        dropdownStyle: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        placeholder: \"Please Select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 37\n        }\n      }, protocolDocumentData))))), /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 24,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormItem, {\n        label: \"Document Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }\n      }, \"               \", getFieldDecorator('DocType', {\n        rules: getRules(DocTypeField, this.props),\n        initialValue: currentDoc.DocumentType !== '' ? currentDoc.DocumentTypeID + \"_\" + currentDoc.DocumentType : currentDoc.DocumentType\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: '100%'\n        },\n        mode: \"single\",\n        \"aria-name\": \"Document Type \" + standard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 37\n        }\n      }, docTypeOptions))))), /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 24,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormItem, {\n        label: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }\n      }, \"               \", getFieldDecorator('DocTitle', {\n        rules: getRules(titleField, this.props),\n        initialValue: currentDoc.Title\n      })( /*#__PURE__*/React.createElement(Input, {\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 37\n        }\n      }))))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, currentState) {\n      if (newProps.studyRelDocModalVisible && !currentState.visible) {\n        thisObj.setState({\n          visible: newProps.studyRelDocModalVisible\n        });\n      }\n    }\n  }]);\n  return StudyRelDoc;\n}(Component);\nvar WrappedApp = Form.create()(StudyRelDoc);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Col","Button","Row","Select","Form","TreeSelect","message","Modal","Icon","Input","LayoutContentWrapper","LayoutContent","rowStyle","getRules","moment","CallServerPost","errorModal","successModalCallback","PostCallWithZone","successModal","getProjectRole","showProgress","hideProgress","FormItem","Item","splitClass","TreeNode","Option","SDTM","ADAM","SEND","thisObj","emptyDoc","FileLocation","Title","DocumentTypeID","DocumentType","DestinationType","StudyRelDoc","props","getFormFieldList","FormName","ActionName","ProjectID","JSON","parse","sessionStorage","studyDetails","projectID","StudyID","studyID","then","response","status","allData","value","studyProDoc","StudyFiles","filter","x","activityID","docTypeOptions","protocolDocumentData","Object","keys","length","pctList","doc","shortValue","includes","map","option","standardText","treeLoop","data","folderOnly","item","children","availableDocs","title","folder","key","selectable","pdfLocation","setState","catch","error","docTypeOnChange","callback","curObj","handleSubmit","form","validateFields","err","values","zones","tz","guess","timezone","zoneAbbr","split","projectRole","docDetails","FileTypeID","LocationType","TimeZone","UpdatedBy","userProfile","userID","loading","refresh","cancel","handleCancel","visible","state","currentDoc","getFieldDecorator","studyRelDocModalVisible","standard","DocTypeField","attributeName","controlTypeText","inputRequirementText","inputTypeErrorMessage","validationErrorMessage","requirementErrorMessage","regExText","minValue","maxValue","studyDocumentField","titleField","inputTypeText","zIndex","float","paddingRight","rules","initialValue","width","maxHeight","overflow","newProps","currentState","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Study/studyRelDoc.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Col, Button, Row, Select, Form, TreeSelect, message, Modal, Icon, Input  } from 'antd';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\r\nimport { getRules } from '../Utility/htmlUtility';\r\nimport moment from 'moment-timezone';\r\nimport { CallServerPost, errorModal, successModalCallback, PostCallWithZone, successModal, getProjectRole, showProgress, hideProgress } from '../Utility/sharedUtility';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst splitClass = 24;\r\nconst TreeNode = TreeSelect.TreeNode;\r\nconst Option = Select.Option;\r\nconst SDTM = 'SDTM';\r\n\r\nconst ADAM = 'ADAM';\r\n\r\nconst SEND = 'SEND';\r\nvar thisObj = \"\";\r\nconst emptyDoc = { FileLocation: '', Title: '', DocumentTypeID: '', DocumentType: '', DestinationType: '' };\r\n\r\nclass StudyRelDoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allData: false,\r\n            visible: false,\r\n            currentDoc: emptyDoc,\r\n            docTypeOptions: [],\r\n            protocolDocumentData: []\r\n        }\r\n        thisObj = this;\r\n        thisObj.getFormFieldList();\r\n    }\r\n\r\n    //fn to get the list\r\n    getFormFieldList = () => {\r\n        showProgress();\r\n        CallServerPost('Study/GetValuesForCreateStudy', { FormName: \"Study\", ActionName: \"Create\", ProjectID: JSON.parse(sessionStorage.studyDetails).projectID, StudyID: JSON.parse(sessionStorage.studyDetails).studyID }).then(\r\n            function (response) {\r\n\r\n                if (response.status === 0) {\r\n                    hideProgress();\r\n                    errorModal(response.message);\r\n                } else {\r\n                    const allData = response.value;\r\n                    var studyProDoc = allData.StudyFiles.filter(x => x.activityID === 322);//get protocol document\r\n                    var docTypeOptions, protocolDocumentData;\r\n\r\n                    if (Object.keys(allData).length > 0) {\r\n                        const pctList = allData[\"fileTypes\"].filter(doc => doc.shortValue.includes('Supplemental')/* || doc.shortValue.includes('Others')*/);\r\n                        docTypeOptions = pctList.map(function (option) {\r\n                            if (JSON.parse(sessionStorage.studyDetails).standardText.includes(SDTM) && option['longValue'].includes(SDTM)) {\r\n                                return (\r\n                                    <Option name=\"Document Type SDTM_Option\" key={option['productcontrolledTermID'] + \"_\" + option['shortValue']}>\r\n                                        {option['shortValue']}\r\n                                    </Option>\r\n                                );\r\n                            }\r\n                            else if (JSON.parse(sessionStorage.studyDetails).standardText.includes(ADAM) && option['longValue'].includes(ADAM)) {\r\n                                return (\r\n                                    <Option name=\"Document Type ADAM_Option\" key={option['productcontrolledTermID'] + \"_\" + option['shortValue']}>\r\n                                        {option['shortValue']}\r\n                                    </Option>\r\n                                );\r\n                            } else if (JSON.parse(sessionStorage.studyDetails).standardText.includes(SEND) && option['longValue'].includes(SEND)) {\r\n                                return (\r\n                                    <Option name=\"Document Type SEND_Option\" key={option['productcontrolledTermID'] + \"_\" + option['shortValue']}>\r\n                                        {option['shortValue']}\r\n                                    </Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n                        const treeLoop = (data, folderOnly) =>\r\n                            data.map(item => {\r\n                                if (item.children) {\r\n                                    if (!thisObj.props.availableDocs.includes(item.title) && studyProDoc[0].title !== item.title) {\r\n                                        return (\r\n\r\n                                            <TreeNode selectable={folderOnly && item.folder} key={item.key} value={item.key} title={item.title}>\r\n                                                {treeLoop(item.children, folderOnly)}\r\n                                            </TreeNode>\r\n                                        );\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    var selectable = true;\r\n                                    if (folderOnly && !item.folder) {\r\n                                        selectable = false;\r\n                                    }\r\n                                    if (!thisObj.props.availableDocs.includes(item.title) && studyProDoc[0].title !== item.title) {\r\n                                        return <TreeNode selectable={selectable} key={item.key} value={item.key} title={item.title} />;\r\n                                    }\r\n                                }\r\n                            });\r\n                        protocolDocumentData = treeLoop([allData[\"DocumentsTree\"].pdfLocation], false);\r\n\r\n\r\n\r\n                    }\r\n                    thisObj.setState({ allData: allData, protocolDocumentData: protocolDocumentData, docTypeOptions: docTypeOptions }, hideProgress());\r\n                    \r\n                }\r\n            }).catch(error => error);\r\n    }\r\n\r\n\r\n    docTypeOnChange = (value, callback) => {\r\n        if (this.props.curObj.length !== 0) {\r\n            if (this.props.curObj.includes(value)) {\r\n                callback();\r\n            }\r\n        \r\n}\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const thisObj = this;\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n\r\n                const zones = moment.tz.guess();\r\n                const timezone = moment.tz(zones).zoneAbbr();\r\n                var DocumentTypeID = values['DocType'].split(\"_\")[0];\r\n                var DocumentType = values['DocType'].split(\"_\")[1];\r\n                const projectRole = getProjectRole();\r\n                const docDetails = {\r\n                    StudyID: JSON.parse(sessionStorage.studyDetails).studyID,\r\n                    Title: values['DocTitle'], DestinationType: \"PhysicalRef\", FileTypeID: DocumentTypeID, DocumentType: DocumentType, FileLocation: values['DocumentPath'], LocationType: 0,\r\n                    TimeZone: timezone, UpdatedBy: projectRole.userProfile.userID };\r\n                showProgress();\r\n                CallServerPost('Document/CreateSupplementalDoc', docDetails).then(\r\n                    function (response) {\r\n                        thisObj.setState({\r\n                            loading: false\r\n                        });\r\n                        if (response.status === 0) {\r\n                            errorModal(response.message);\r\n                        } else {\r\n                            successModalCallback(response.message, thisObj.props.refresh);\r\n                        }\r\n                        hideProgress();\r\n                    });\r\n            }\r\n        });\r\n    }\r\n    cancel = () => {\r\n        this.props.handleCancel();\r\n        this.setState({ visible: false });\r\n    }\r\n    static getDerivedStateFromProps(newProps, currentState) {\r\n        if (newProps.studyRelDocModalVisible && !currentState.visible)\r\n        {\r\n            thisObj.setState({ visible: newProps.studyRelDocModalVisible})\r\n        } \r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { studyRelDocModalVisible, standard, availableDocs } = this.props;\r\n        const { currentDoc, allData, visible,protocolDocumentData, docTypeOptions} = thisObj.state;\r\n      \r\n        const DocTypeField = {\r\n            attributeName: \"DocType\",\r\n            controlTypeText: \"DropDownWithSearch\",\r\n            inputRequirementText: studyRelDocModalVisible ? \"Mandatory\" : \"Optional\",\r\n            inputTypeErrorMessage: \"\",\r\n            validationErrorMessage: \"\",\r\n            requirementErrorMessage: \"Document Type should be selected\",\r\n            regExText: null,\r\n            minValue: null,\r\n            maxValue: null\r\n        };\r\n        const studyDocumentField = {\r\n            attributeName: \"DocumentPath\",\r\n            inputRequirementText: studyRelDocModalVisible ? \"Mandatory\" : \"Optional\",\r\n            inputTypeErrorMessage: \"\",\r\n            validationErrorMessage: \"\",\r\n            requirementErrorMessage: \"Study Related Document should be selected\",\r\n            regExText: null,\r\n            minValue: null,\r\n            maxValue: null\r\n        };\r\n        const titleField = {\r\n            attributeName: \"DocTitle\",\r\n            controlTypeText: \"TextBox\",\r\n            inputTypeText: \"Alphanumeric\",\r\n            inputRequirementText: studyRelDocModalVisible ? \"Mandatory\" : \"Optional\",\r\n            requirementErrorMessage: \"Title is mandatory\",\r\n            inputTypeErrorMessage: \"Title should contain only alphanumeric values\",\r\n            validationErrorMessage: \"Title should be between 2-255 characters\",\r\n            regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\r\n            minValue: 2,\r\n            maxValue: 255\r\n        };\r\n       \r\n        return (<Modal\r\n            visible={visible && studyRelDocModalVisible}\r\n            title={\"Add Documents\"}\r\n            cancelType='danger'\r\n            onCancel={this.props.handleCancel}\r\n            maskClosable={false}\r\n            width={'40%'}\r\n            style={{ zIndex: 1051 }}\r\n            footer={[\r\n                <Button key=\"cancel\" name=\"PopupCancel\" className='ant-btn sc-ifAKCX fcfmNQ ant-btn-danger' style={{ float: 'left' }} onClick={() => this.cancel()}>\r\n                    Cancel\r\n                    </Button>,\r\n\r\n                <Button key=\"save\" name=\"PopupSave\" className='ant-btn sc-ifAKCX fcfmNQ saveBtn' onClick={()=>this.handleSubmit()}>\r\n                    Save\r\n                    </Button>,\r\n            ]}\r\n        >\r\n           \r\n            <LayoutContentWrapper>\r\n                <LayoutContent>\r\n                    <Row>\r\n                        <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                            <FormItem label=\"Select a Document\">                                                                    {/* SDTMStudyRelatedDocument */}\r\n                                {getFieldDecorator('DocumentPath', {\r\n                                    rules: getRules(studyDocumentField, this.props),\r\n                                    initialValue: currentDoc.FileLocation\r\n                                })(\r\n                                    <TreeSelect\r\n                                        tabIndex={0}\r\n                                        showSearch\r\n                                        autoBlur\r\n                                        allowClear\r\n                                        //onChange={val => this.docTypeOnChange(val)}\r\n                                        style={{ width: '100%' }}\r\n                                        dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                                        placeholder=\"Please Select\"\r\n                                    >\r\n                                        {protocolDocumentData}\r\n                                    </TreeSelect>\r\n                                )}\r\n                            </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={rowStyle} justify=\"space-between\">\r\n                        <Col md={24} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                            <FormItem label=\"Document Type\">               {/* Document Type Field */}\r\n                                {getFieldDecorator('DocType', {\r\n                                    rules: getRules(DocTypeField, this.props),\r\n                                    initialValue: currentDoc.DocumentType !== '' ? currentDoc.DocumentTypeID + \"_\" + currentDoc.DocumentType : currentDoc.DocumentType\r\n                                })(\r\n                                    <Select\r\n                                        style={{ width: '100%' }}\r\n                                        mode=\"single\"\r\n                                        aria-name={\"Document Type \" + standard}\r\n                                    >\r\n                                        {docTypeOptions}\r\n                                    </Select>,\r\n                                )}\r\n                            </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={rowStyle} justify=\"space-between\">\r\n                        <Col md={24} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                            <FormItem label=\"Title\">               {/* Title Field */}\r\n                                {getFieldDecorator('DocTitle', {\r\n                                    rules: getRules(titleField, this.props),\r\n                                    initialValue: currentDoc.Title\r\n                                })(\r\n                                    <Input\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder=\"Title\"\r\n                                    />,\r\n                                )}\r\n                            </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                </LayoutContent>\r\n            </LayoutContentWrapper>\r\n             \r\n        </Modal>);\r\n    }\r\n}\r\nconst WrappedApp = Form.create()(StudyRelDoc);\r\n\r\nexport default WrappedApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}