{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n/** @license react-json-editor-ajrm v2.5.13\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React, { Component } from 'react';\nimport themes from './themes';\nimport { identical, getType } from './mitsuketa';\nimport err from './err';\nimport { format } from './locale';\nimport defaultLocale from './locale/en';\nvar JSONInput = /*#__PURE__*/function (_Component) {\n  _inherits(JSONInput, _Component);\n  var _super = _createSuper(JSONInput);\n  function JSONInput(props) {\n    var _this;\n    _classCallCheck(this, JSONInput);\n    _this = _super.call(this, props);\n    _this.updateInternalProps = _this.updateInternalProps.bind(_assertThisInitialized(_this));\n    _this.createMarkup = _this.createMarkup.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.update = _this.update.bind(_assertThisInitialized(_this));\n    _this.getCursorPosition = _this.getCursorPosition.bind(_assertThisInitialized(_this));\n    _this.setCursorPosition = _this.setCursorPosition.bind(_assertThisInitialized(_this));\n    _this.scheduledUpdate = _this.scheduledUpdate.bind(_assertThisInitialized(_this));\n    _this.setUpdateTime = _this.setUpdateTime.bind(_assertThisInitialized(_this));\n    _this.renderLabels = _this.renderLabels.bind(_assertThisInitialized(_this));\n    _this.newSpan = _this.newSpan.bind(_assertThisInitialized(_this));\n    _this.renderErrorMessage = _this.renderErrorMessage.bind(_assertThisInitialized(_this));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_this));\n    _this.showPlaceholder = _this.showPlaceholder.bind(_assertThisInitialized(_this));\n    _this.tokenize = _this.tokenize.bind(_assertThisInitialized(_this));\n    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onPaste = _this.onPaste.bind(_assertThisInitialized(_this));\n    _this.stopEvent = _this.stopEvent.bind(_assertThisInitialized(_this));\n    _this.refContent = null;\n    _this.refLabels = null;\n    _this.updateInternalProps();\n    _this.renderCount = 1;\n    _this.state = {\n      prevPlaceholder: '',\n      markupText: '',\n      plainText: '',\n      json: '',\n      jsObject: undefined,\n      lines: false,\n      error: false\n    };\n    if (!_this.props.locale) {\n      console.warn(\"[react-json-editor-ajrm - Deprecation Warning] You did not provide a 'locale' prop for your JSON input - This will be required in a future version. English has been set as a default.\");\n    }\n    return _this;\n  }\n  _createClass(JSONInput, [{\n    key: \"updateInternalProps\",\n    value: function updateInternalProps() {\n      var colors = {},\n        style = {},\n        theme = themes.dark_vscode_tribute;\n      if ('theme' in this.props) if (typeof this.props.theme === 'string') if (this.props.theme in themes) theme = themes[this.props.theme];\n      colors = theme;\n      if ('colors' in this.props) colors = {\n        default: 'default' in this.props.colors ? this.props.colors.default : colors.default,\n        string: 'string' in this.props.colors ? this.props.colors.string : colors.string,\n        number: 'number' in this.props.colors ? this.props.colors.number : colors.number,\n        colon: 'colon' in this.props.colors ? this.props.colors.colon : colors.colon,\n        keys: 'keys' in this.props.colors ? this.props.colors.keys : colors.keys,\n        keys_whiteSpace: 'keys_whiteSpace' in this.props.colors ? this.props.colors.keys_whiteSpace : colors.keys_whiteSpace,\n        primitive: 'primitive' in this.props.colors ? this.props.colors.primitive : colors.primitive,\n        error: 'error' in this.props.colors ? this.props.colors.error : colors.error,\n        background: 'background' in this.props.colors ? this.props.colors.background : colors.background,\n        background_warning: 'background_warning' in this.props.colors ? this.props.colors.background_warning : colors.background_warning\n      };\n      this.colors = colors;\n      if ('style' in this.props) style = {\n        outerBox: 'outerBox' in this.props.style ? this.props.style.outerBox : {},\n        container: 'container' in this.props.style ? this.props.style.container : {},\n        warningBox: 'warningBox' in this.props.style ? this.props.style.warningBox : {},\n        errorMessage: 'errorMessage' in this.props.style ? this.props.style.errorMessage : {},\n        body: 'body' in this.props.style ? this.props.style.body : {},\n        labelColumn: 'labelColumn' in this.props.style ? this.props.style.labelColumn : {},\n        labels: 'labels' in this.props.style ? this.props.style.labels : {},\n        contentBox: 'contentBox' in this.props.style ? this.props.style.contentBox : {}\n      };else style = {\n        outerBox: {},\n        container: {},\n        warningBox: {},\n        errorMessage: {},\n        body: {},\n        labelColumn: {},\n        labels: {},\n        contentBox: {}\n      };\n      this.style = style;\n      this.confirmGood = 'confirmGood' in this.props ? this.props.confirmGood : true;\n      var totalHeight = this.props.height || '610px',\n        totalWidth = this.props.width || '479px';\n      this.totalHeight = totalHeight;\n      this.totalWidth = totalWidth;\n      if (!('onKeyPressUpdate' in this.props) || this.props.onKeyPressUpdate) {\n        if (!this.timer) this.timer = setInterval(this.scheduledUpdate, 100);\n      } else if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = false;\n      }\n      this.updateTime = false;\n      this.waitAfterKeyPress = 'waitAfterKeyPress' in this.props ? this.props.waitAfterKeyPress : 1000;\n      this.resetConfiguration = 'reset' in this.props ? this.props.reset : false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var id = this.props.id,\n        markupText = this.state.markupText,\n        error = this.props.error || this.state.error,\n        colors = this.colors,\n        style = this.style,\n        confirmGood = this.confirmGood,\n        totalHeight = this.totalHeight,\n        totalWidth = this.totalWidth,\n        hasError = !!this.props.error || (error ? 'token' in error : false);\n      this.renderCount++;\n      return React.createElement(\"div\", {\n        name: \"outer-box\",\n        id: id && id + '-outer-box',\n        style: _objectSpread({\n          display: 'block',\n          overflow: 'none',\n          height: totalHeight,\n          width: totalWidth,\n          margin: 0,\n          boxSizing: 'border-box',\n          position: 'relative'\n        }, style.outerBox)\n      }, confirmGood ? React.createElement(\"div\", {\n        style: {\n          opacity: hasError ? 0 : 1,\n          height: '30px',\n          width: '30px',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          transform: 'translate(-25%,25%)',\n          pointerEvents: 'none',\n          transitionDuration: '0.2s',\n          transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n        }\n      }, React.createElement(\"svg\", {\n        height: \"30px\",\n        width: \"30px\",\n        viewBox: \"0 0 100 100\"\n      }, React.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        fill: \"green\",\n        opacity: \"0.85\",\n        d: \"M39.363,79L16,55.49l11.347-11.419L39.694,56.49L72.983,23L84,34.085L39.363,79z\"\n      }))) : void 0, React.createElement(\"div\", {\n        name: \"container\",\n        id: id && id + '-container',\n        style: _objectSpread({\n          display: 'block',\n          height: totalHeight,\n          width: totalWidth,\n          margin: 0,\n          boxSizing: 'border-box',\n          overflow: 'hidden',\n          fontFamily: 'Roboto, sans-serif'\n        }, style.container),\n        onClick: this.onClick\n      }, React.createElement(\"div\", {\n        name: \"warning-box\",\n        id: id && id + '-warning-box',\n        style: _objectSpread({\n          display: 'block',\n          overflow: 'hidden',\n          height: hasError ? '60px' : '0px',\n          width: '100%',\n          margin: 0,\n          backgroundColor: colors.background_warning,\n          transitionDuration: '0.2s',\n          transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n        }, style.warningBox),\n        onClick: this.onClick\n      }, React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          height: '60px',\n          width: '60px',\n          margin: 0,\n          boxSizing: 'border-box',\n          overflow: 'hidden',\n          verticalAlign: 'top',\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          top: 0,\n          left: 0,\n          height: '60px',\n          width: '60px',\n          margin: 0,\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, React.createElement(\"svg\", {\n        height: \"25px\",\n        width: \"25px\",\n        viewBox: \"0 0 100 100\"\n      }, React.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        fill: \"red\",\n        d: \"M73.9,5.75c0.467-0.467,1.067-0.7,1.8-0.7c0.7,0,1.283,0.233,1.75,0.7l16.8,16.8  c0.467,0.5,0.7,1.084,0.7,1.75c0,0.733-0.233,1.334-0.7,1.801L70.35,50l23.9,23.95c0.5,0.467,0.75,1.066,0.75,1.8  c0,0.667-0.25,1.25-0.75,1.75l-16.8,16.75c-0.534,0.467-1.117,0.7-1.75,0.7s-1.233-0.233-1.8-0.7L50,70.351L26.1,94.25  c-0.567,0.467-1.167,0.7-1.8,0.7c-0.667,0-1.283-0.233-1.85-0.7L5.75,77.5C5.25,77,5,76.417,5,75.75c0-0.733,0.25-1.333,0.75-1.8  L29.65,50L5.75,26.101C5.25,25.667,5,25.066,5,24.3c0-0.666,0.25-1.25,0.75-1.75l16.8-16.8c0.467-0.467,1.05-0.7,1.75-0.7  c0.733,0,1.333,0.233,1.8,0.7L50,29.65L73.9,5.75z\"\n      }))))), React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          height: '60px',\n          width: 'calc(100% - 60px)',\n          margin: 0,\n          overflow: 'hidden',\n          verticalAlign: 'top',\n          position: 'absolute',\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, this.renderErrorMessage())), React.createElement(\"div\", {\n        name: \"body\",\n        id: id && id + '-body',\n        style: _objectSpread({\n          display: 'flex',\n          overflow: 'none',\n          height: hasError ? 'calc(100% - 60px)' : '100%',\n          width: '',\n          margin: 0,\n          resize: 'none',\n          fontFamily: 'Roboto Mono, Monaco, monospace',\n          fontSize: '11px',\n          backgroundColor: colors.background,\n          transitionDuration: '0.2s',\n          transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n        }, style.body),\n        onClick: this.onClick\n      }, React.createElement(\"span\", {\n        name: \"labels\",\n        id: id && id + '-labels',\n        ref: function ref(_ref) {\n          return _this2.refLabels = _ref;\n        },\n        style: _objectSpread({\n          display: 'inline-block',\n          boxSizing: 'border-box',\n          verticalAlign: 'top',\n          height: '100%',\n          width: '44px',\n          margin: 0,\n          padding: '5px 0px 5px 10px',\n          overflow: 'hidden',\n          color: '#D4D4D4'\n        }, style.labelColumn),\n        onClick: this.onClick\n      }, this.renderLabels()), React.createElement(\"span\", {\n        id: id,\n        ref: function ref(_ref2) {\n          return _this2.refContent = _ref2;\n        },\n        contentEditable: true,\n        style: _objectSpread({\n          display: 'inline-block',\n          boxSizing: 'border-box',\n          verticalAlign: 'top',\n          height: '100%',\n          width: '',\n          flex: 1,\n          margin: 0,\n          padding: '5px',\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          wordWrap: 'break-word',\n          whiteSpace: 'pre-line',\n          color: '#D4D4D4',\n          outline: 'none'\n        }, style.contentBox),\n        dangerouslySetInnerHTML: this.createMarkup(markupText),\n        onKeyPress: this.onKeyPress,\n        onKeyDown: this.onKeyDown,\n        onClick: this.onClick,\n        onBlur: this.onBlur,\n        onScroll: this.onScroll,\n        onPaste: this.onPaste,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"off\",\n        spellCheck: false\n      }))));\n    }\n  }, {\n    key: \"renderErrorMessage\",\n    value: function renderErrorMessage() {\n      var locale = this.props.locale || defaultLocale,\n        error = this.props.error || this.state.error,\n        style = this.style;\n      if (!error) return void 0;\n      return React.createElement(\"p\", {\n        style: _objectSpread({\n          color: 'red',\n          fontSize: '12px',\n          position: 'absolute',\n          width: 'calc(100% - 60px)',\n          height: '60px',\n          boxSizing: 'border-box',\n          margin: 0,\n          padding: 0,\n          paddingRight: '10px',\n          overflowWrap: 'break-word',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center'\n        }, style.errorMessage)\n      }, format(locale.format, error));\n    }\n  }, {\n    key: \"renderLabels\",\n    value: function renderLabels() {\n      var colors = this.colors,\n        style = this.style,\n        error = this.props.error || this.state.error,\n        errorLine = error ? error.line : -1,\n        lines = this.state.lines ? this.state.lines : 1;\n      var labels = new Array(lines);\n      for (var i = 0; i < lines - 1; i++) {\n        labels[i] = i + 1;\n      }\n      return labels.map(function (number) {\n        var color = number !== errorLine ? colors.default : 'red';\n        return React.createElement(\"div\", {\n          key: number,\n          style: _objectSpread({}, style.labels, {\n            color: color\n          })\n        }, number);\n      });\n    }\n  }, {\n    key: \"createMarkup\",\n    value: function createMarkup(markupText) {\n      if (markupText === undefined) return {\n        __html: ''\n      };\n      return {\n        __html: '' + markupText\n      };\n    }\n  }, {\n    key: \"newSpan\",\n    value: function newSpan(i, token, depth) {\n      var colors = this.colors,\n        type = token.type,\n        string = token.string;\n      var color = '';\n      switch (type) {\n        case 'string':\n        case 'number':\n        case 'primitive':\n        case 'error':\n          color = colors[token.type];\n          break;\n        case 'key':\n          if (string === ' ') color = colors.keys_whiteSpace;else color = colors.keys;\n          break;\n        case 'symbol':\n          if (string === ':') color = colors.colon;else color = colors.default;\n          break;\n        default:\n          color = colors.default;\n          break;\n      }\n      if (string.length !== string.replace(/</g, '').replace(/>/g, '').length) string = '<xmp style=display:inline;>' + string + '</xmp>';\n      return '<span' + ' type=\"' + type + '\"' + ' value=\"' + string + '\"' + ' depth=\"' + depth + '\"' + ' style=\"color:' + color + '\"' + '>' + string + '</span>';\n    }\n  }, {\n    key: \"getCursorPosition\",\n    value: function getCursorPosition(countBR) {\n      var _this3 = this;\n      /**\r\n       * Need to deprecate countBR\r\n       * It is used to differenciate between good markup render, and aux render when error found\r\n       * Adjustments based on coundBR account for usage of <br> instead of <span> for linebreaks to determine acurate cursor position\r\n       * Find a way to consolidate render styles\r\n       */\n      var isChildOf = function isChildOf(node) {\n        while (node !== null) {\n          if (node === _this3.refContent) return true;\n          node = node.parentNode;\n        }\n        return false;\n      };\n      var selection = window.getSelection(),\n        charCount = -1,\n        linebreakCount = 0,\n        node;\n      if (selection.focusNode && isChildOf(selection.focusNode)) {\n        node = selection.focusNode;\n        charCount = selection.focusOffset;\n        while (node) {\n          if (node === this.refContent) break;\n          if (node.previousSibling) {\n            node = node.previousSibling;\n            if (countBR) if (node.nodeName === 'BR') linebreakCount++;\n            charCount += node.textContent.length;\n          } else {\n            node = node.parentNode;\n            if (node === null) break;\n          }\n        }\n      }\n      return charCount + linebreakCount;\n    }\n  }, {\n    key: \"setCursorPosition\",\n    value: function setCursorPosition(nextPosition) {\n      var _this4 = this;\n      if ([false, null, undefined].indexOf(nextPosition) > -1) return;\n      var createRange = function createRange(node, chars, range) {\n        if (!range) {\n          range = document.createRange();\n          range.selectNode(node);\n          range.setStart(node, 0);\n        }\n        if (chars.count === 0) {\n          range.setEnd(node, chars.count);\n        } else if (node && chars.count > 0) {\n          if (node.nodeType === Node.TEXT_NODE) {\n            if (node.textContent.length < chars.count) chars.count -= node.textContent.length;else {\n              range.setEnd(node, chars.count);\n              chars.count = 0;\n            }\n          } else for (var lp = 0; lp < node.childNodes.length; lp++) {\n            range = createRange(node.childNodes[lp], chars, range);\n            if (chars.count === 0) break;\n          }\n        }\n        return range;\n      };\n      var setPosition = function setPosition(chars) {\n        if (chars < 0) return;\n        var selection = window.getSelection(),\n          range = createRange(_this4.refContent, {\n            count: chars\n          });\n        if (!range) return;\n        range.collapse(false);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      };\n      if (nextPosition > 0) setPosition(nextPosition);else this.refContent.focus();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var cursorOffset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var updateCursorPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var container = this.refContent,\n        data = this.tokenize(container);\n      if ('onChange' in this.props) this.props.onChange({\n        plainText: data.indented,\n        markupText: data.markup,\n        json: data.json,\n        jsObject: data.jsObject,\n        lines: data.lines,\n        error: data.error\n      });\n      var cursorPosition = this.getCursorPosition(data.error) + cursorOffset;\n      this.setState({\n        plainText: data.indented,\n        markupText: data.markup,\n        json: data.json,\n        jsObject: data.jsObject,\n        lines: data.lines,\n        error: data.error\n      });\n      this.updateTime = false;\n      if (updateCursorPosition) this.setCursorPosition(cursorPosition);\n    }\n  }, {\n    key: \"scheduledUpdate\",\n    value: function scheduledUpdate() {\n      if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n      var updateTime = this.updateTime;\n      if (updateTime === false) return;\n      if (updateTime > new Date().getTime()) return;\n      this.update();\n    }\n  }, {\n    key: \"setUpdateTime\",\n    value: function setUpdateTime() {\n      if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n      this.updateTime = new Date().getTime() + this.waitAfterKeyPress;\n    }\n  }, {\n    key: \"stopEvent\",\n    value: function stopEvent(event) {\n      if (!event) return;\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      var ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n      if (this.props.viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n      if (!ctrlOrMetaIsPressed) this.setUpdateTime();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var viewOnly = !!this.props.viewOnly;\n      var ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n      switch (event.key) {\n        case 'Tab':\n          this.stopEvent(event);\n          if (viewOnly) break;\n          document.execCommand(\"insertText\", false, \"  \");\n          this.setUpdateTime();\n          break;\n        case 'Backspace':\n        case 'Delete':\n          if (viewOnly) this.stopEvent(event);\n          this.setUpdateTime();\n          break;\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'ArrowUp':\n        case 'ArrowDown':\n          this.setUpdateTime();\n          break;\n        case 'a':\n        case 'c':\n          if (viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n          break;\n        default:\n          if (viewOnly) this.stopEvent(event);\n          break;\n      }\n    }\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (this.props.viewOnly) {\n        this.stopEvent(event);\n      } else {\n        event.preventDefault();\n        var text = event.clipboardData.getData('text/plain');\n        document.execCommand('insertText', false, text);\n      }\n      this.update();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n      var container = this.refContent,\n        data = this.tokenize(container);\n      if ('onBlur' in this.props) this.props.onBlur({\n        plainText: data.indented,\n        markupText: data.markup,\n        json: data.json,\n        jsObject: data.jsObject,\n        lines: data.lines,\n        error: data.error\n      });\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll(event) {\n      this.refLabels.scrollTop = event.target.scrollTop;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateInternalProps();\n      this.showPlaceholder();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.showPlaceholder();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timer) clearInterval(this.timer);\n    }\n  }, {\n    key: \"showPlaceholder\",\n    value: function showPlaceholder() {\n      var placeholderDoesNotExist = !('placeholder' in this.props);\n      if (placeholderDoesNotExist) return;\n      var placeholder = this.props.placeholder;\n      var placeholderHasEmptyValues = [undefined, null].indexOf(placeholder) > -1;\n      if (placeholderHasEmptyValues) return;\n      var _this$state = this.state,\n        prevPlaceholder = _this$state.prevPlaceholder,\n        jsObject = _this$state.jsObject;\n      var resetConfiguration = this.resetConfiguration;\n      var placeholderDataType = getType(placeholder);\n      var unexpectedDataType = ['object', 'array'].indexOf(placeholderDataType) === -1;\n      if (unexpectedDataType) err.throwError('showPlaceholder', 'placeholder', 'either an object or an array');\n      var samePlaceholderValues = identical(placeholder, prevPlaceholder); // Component will always re-render when new placeholder value is any different from previous placeholder value.\n\n      var componentShouldUpdate = !samePlaceholderValues;\n      if (!componentShouldUpdate) {\n        if (resetConfiguration) {\n          /**\r\n           * If 'reset' property is set true or is truthy,\r\n           * any difference between placeholder and current value\r\n           * should trigger component re-render\r\n           */\n          if (jsObject !== undefined) componentShouldUpdate = !identical(placeholder, jsObject);\n        }\n      }\n      if (!componentShouldUpdate) return;\n      var data = this.tokenize(placeholder);\n      this.setState({\n        prevPlaceholder: placeholder,\n        plainText: data.indentation,\n        markupText: data.markup,\n        lines: data.lines,\n        error: data.error\n      });\n    }\n  }, {\n    key: \"tokenize\",\n    value: function tokenize(something) {\n      if (typeof something !== 'object') return console.error('tokenize() expects object type properties only. Got \\'' + typeof something + '\\' type instead.');\n      var locale = this.props.locale || defaultLocale;\n      var newSpan = this.newSpan;\n      /**\r\n       *     DOM NODE || ONBLUR OR UPDATE\r\n       */\n\n      if ('nodeType' in something) {\n        var quarkize = function quarkize(text) {\n          var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n          var buffer = {\n            active: false,\n            string: '',\n            number: '',\n            symbol: '',\n            space: '',\n            delimiter: '',\n            quarks: []\n          };\n          function pushAndStore(char, type) {\n            switch (type) {\n              case 'symbol':\n              case 'delimiter':\n                if (buffer.active) buffer.quarks.push({\n                  string: buffer[buffer.active],\n                  type: prefix + '-' + buffer.active\n                });\n                buffer[buffer.active] = '';\n                buffer.active = type;\n                buffer[buffer.active] = char;\n                break;\n              default:\n                if (type !== buffer.active || [buffer.string, char].indexOf('\\n') > -1) {\n                  if (buffer.active) buffer.quarks.push({\n                    string: buffer[buffer.active],\n                    type: prefix + '-' + buffer.active\n                  });\n                  buffer[buffer.active] = '';\n                  buffer.active = type;\n                  buffer[buffer.active] = char;\n                } else buffer[type] += char;\n                break;\n            }\n          }\n          function finalPush() {\n            if (buffer.active) {\n              buffer.quarks.push({\n                string: buffer[buffer.active],\n                type: prefix + '-' + buffer.active\n              });\n              buffer[buffer.active] = '';\n              buffer.active = false;\n            }\n          }\n          for (var i = 0; i < text.length; i++) {\n            var char = text.charAt(i);\n            switch (char) {\n              case '\"':\n              case \"'\":\n                pushAndStore(char, 'delimiter');\n                break;\n              case ' ':\n              case \"\\xA0\":\n                pushAndStore(char, 'space');\n                break;\n              case '{':\n              case '}':\n              case '[':\n              case ']':\n              case ':':\n              case ',':\n                pushAndStore(char, 'symbol');\n                break;\n              case '0':\n              case '1':\n              case '2':\n              case '3':\n              case '4':\n              case '5':\n              case '6':\n              case '7':\n              case '8':\n              case '9':\n                if (buffer.active === 'string') pushAndStore(char, 'string');else pushAndStore(char, 'number');\n                break;\n              case '-':\n                if (i < text.length - 1) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1) {\n                  pushAndStore(char, 'number');\n                  break;\n                }\n              case '.':\n                if (i < text.length - 1 && i > 0) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1 && '0123456789'.indexOf(text.charAt(i - 1)) > -1) {\n                  pushAndStore(char, 'number');\n                  break;\n                }\n              default:\n                pushAndStore(char, 'string');\n                break;\n            }\n          }\n          finalPush();\n          return buffer.quarks;\n        };\n        var validToken = function validToken(string, type) {\n          var quotes = '\\'\"';\n          var firstChar = '',\n            lastChar = '',\n            quoteType = false;\n          switch (type) {\n            case 'primitive':\n              if (['true', 'false', 'null', 'undefined'].indexOf(string) === -1) return false;\n              break;\n            case 'string':\n              if (string.length < 2) return false;\n              firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n              if (quoteType === -1) return false;\n              if (firstChar !== lastChar) return false;\n              for (var i = 0; i < string.length; i++) {\n                if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n              }\n              break;\n            case 'key':\n              if (string.length === 0) return false;\n              firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n              if (quoteType > -1) {\n                if (string.length === 1) return false;\n                if (firstChar !== lastChar) return false;\n                for (var i = 0; i < string.length; i++) {\n                  if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n                }\n              } else {\n                var nonAlphanumeric = '\\'\"`.,:;{}[]&<>=~*%\\\\|/-+!?@^ \\xa0';\n                for (var i = 0; i < nonAlphanumeric.length; i++) {\n                  var nonAlpha = nonAlphanumeric.charAt(i);\n                  if (string.indexOf(nonAlpha) > -1) return false;\n                }\n              }\n              break;\n            case 'number':\n              for (var i = 0; i < string.length; i++) {\n                if ('0123456789'.indexOf(string.charAt(i)) === -1) if (i === 0) {\n                  if ('-' !== string.charAt(0)) return false;\n                } else if ('.' !== string.charAt(i)) return false;\n              }\n              break;\n            case 'symbol':\n              if (string.length > 1) return false;\n              if ('{[:]},'.indexOf(string) === -1) return false;\n              break;\n            case 'colon':\n              if (string.length > 1) return false;\n              if (':' !== string) return false;\n              break;\n            default:\n              return true;\n              break;\n          }\n          return true;\n        };\n        var tokenFollowed = function tokenFollowed() {\n          var last = buffer.tokens_normalize.length - 1;\n          if (last < 1) return false;\n          for (var i = last; i >= 0; i--) {\n            var previousToken = buffer.tokens_normalize[i];\n            switch (previousToken.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n              default:\n                return previousToken;\n                break;\n            }\n          }\n          return false;\n        };\n        var setError = function setError(tokenID, reason) {\n          var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n          error = {\n            token: tokenID,\n            line: line,\n            reason: reason\n          };\n          buffer.tokens_merge[tokenID + offset].type = 'error';\n        };\n        var followedBySymbol = function followedBySymbol(tokenID, options) {\n          if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n          if (options === undefined) console.error('options argument must be an array.');\n          if (tokenID === buffer.tokens_merge.length - 1) return false;\n          for (var i = tokenID + 1; i < buffer.tokens_merge.length; i++) {\n            var _nextToken = buffer.tokens_merge[i];\n            switch (_nextToken.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n              case 'symbol':\n              case 'colon':\n                if (options.indexOf(_nextToken.string) > -1) return i;else return false;\n                break;\n              default:\n                return false;\n                break;\n            }\n          }\n          return false;\n        };\n        var followsSymbol = function followsSymbol(tokenID, options) {\n          if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n          if (options === undefined) console.error('options argument must be an array.');\n          if (tokenID === 0) return false;\n          for (var i = tokenID - 1; i >= 0; i--) {\n            var _previousToken = buffer.tokens_merge[i];\n            switch (_previousToken.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n              case 'symbol':\n              case 'colon':\n                if (options.indexOf(_previousToken.string) > -1) return true;\n                return false;\n                break;\n              default:\n                return false;\n                break;\n            }\n          }\n          return false;\n        };\n        var typeFollowed = function typeFollowed(tokenID) {\n          if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n          if (tokenID === 0) return false;\n          for (var i = tokenID - 1; i >= 0; i--) {\n            var _previousToken2 = buffer.tokens_merge[i];\n            switch (_previousToken2.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n              default:\n                return _previousToken2.type;\n                break;\n            }\n          }\n          return false;\n        };\n        var newIndent = function newIndent() {\n          var space = [];\n          for (var i = 0; i < _depth * 2; i++) {\n            space.push('&nbsp;');\n          }\n          return space.join('');\n        };\n        var newLineBreak = function newLineBreak() {\n          var byPass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          _line++;\n          if (_depth > 0 || byPass) {\n            return '<br>';\n          }\n          return '';\n        };\n        var newLineBreakAndIndent = function newLineBreakAndIndent() {\n          var byPass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          return newLineBreak(byPass) + newIndent();\n        };\n        var containerNode = something.cloneNode(true),\n          hasChildren = containerNode.hasChildNodes();\n        if (!hasChildren) return '';\n        var children = containerNode.childNodes;\n        var buffer = {\n          tokens_unknown: [],\n          tokens_proto: [],\n          tokens_split: [],\n          tokens_fallback: [],\n          tokens_normalize: [],\n          tokens_merge: [],\n          tokens_plainText: '',\n          indented: '',\n          json: '',\n          jsObject: undefined,\n          markup: ''\n        };\n        for (var i = 0; i < children.length; i++) {\n          var child = children[i];\n          var info = {};\n          switch (child.nodeName) {\n            case 'SPAN':\n              info = {\n                string: child.textContent,\n                type: child.attributes.type.textContent\n              };\n              buffer.tokens_unknown.push(info);\n              break;\n            case 'DIV':\n              buffer.tokens_unknown.push({\n                string: child.textContent,\n                type: 'unknown'\n              });\n              break;\n            case 'BR':\n              if (child.textContent === '') buffer.tokens_unknown.push({\n                string: '\\n',\n                type: 'unknown'\n              });\n              break;\n            case '#text':\n              buffer.tokens_unknown.push({\n                string: child.wholeText,\n                type: 'unknown'\n              });\n              break;\n            case 'FONT':\n              buffer.tokens_unknown.push({\n                string: child.textContent,\n                type: 'unknown'\n              });\n              break;\n            default:\n              console.error('Unrecognized node:', {\n                child: child\n              });\n              break;\n          }\n        }\n        for (var i = 0; i < buffer.tokens_unknown.length; i++) {\n          var token = buffer.tokens_unknown[i];\n          buffer.tokens_proto = buffer.tokens_proto.concat(quarkize(token.string, 'proto'));\n        }\n        for (var i = 0; i < buffer.tokens_proto.length; i++) {\n          var _token = buffer.tokens_proto[i];\n          if (_token.type.indexOf('proto') === -1) {\n            if (!validToken(_token.string, _token.type)) {\n              buffer.tokens_split = buffer.tokens_split.concat(quarkize(_token.string, 'split'));\n            } else buffer.tokens_split.push(_token);\n          } else buffer.tokens_split.push(_token);\n        }\n        for (var i = 0; i < buffer.tokens_split.length; i++) {\n          var _token2 = buffer.tokens_split[i];\n          var type = _token2.type,\n            string = _token2.string,\n            length = string.length,\n            fallback = [];\n          if (type.indexOf('-') > -1) {\n            type = type.slice(type.indexOf('-') + 1);\n            if (type !== 'string') fallback.push('string');\n            fallback.push('key');\n            fallback.push('error');\n          }\n          var tokul = {\n            string: string,\n            length: length,\n            type: type,\n            fallback: fallback\n          };\n          buffer.tokens_fallback.push(tokul);\n        }\n        var buffer2 = {\n          brackets: [],\n          stringOpen: false,\n          isValue: false\n        };\n        for (var i = 0; i < buffer.tokens_fallback.length; i++) {\n          var _token3 = buffer.tokens_fallback[i];\n          var _type2 = _token3.type,\n            _string2 = _token3.string;\n          var normalToken = {\n            type: _type2,\n            string: _string2\n          };\n          switch (_type2) {\n            case 'symbol':\n            case 'colon':\n              if (buffer2.stringOpen) {\n                if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n                break;\n              }\n              switch (_string2) {\n                case '[':\n                case '{':\n                  buffer2.brackets.push(_string2);\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n                case ']':\n                case '}':\n                  buffer2.brackets.pop();\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n                case ',':\n                  if (tokenFollowed().type === 'colon') break;\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n                case ':':\n                  normalToken.type = 'colon';\n                  buffer2.isValue = true;\n                  break;\n              }\n              break;\n            case 'delimiter':\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              if (!buffer2.stringOpen) {\n                buffer2.stringOpen = _string2;\n                break;\n              }\n              if (i > 0) {\n                var previousToken = buffer.tokens_fallback[i - 1],\n                  _string = previousToken.string,\n                  _type = previousToken.type,\n                  _char = _string.charAt(_string.length - 1);\n                if (_type === 'string' && _char === '\\\\') break;\n              }\n              if (buffer2.stringOpen === _string2) {\n                buffer2.stringOpen = false;\n                break;\n              }\n              break;\n            case 'primitive':\n            case 'string':\n              if (['false', 'true', 'null', 'undefined'].indexOf(_string2) > -1) {\n                var lastIndex = buffer.tokens_normalize.length - 1;\n                if (lastIndex >= 0) {\n                  if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                    normalToken.type = 'primitive';\n                    break;\n                  }\n                  normalToken.type = 'string';\n                  break;\n                }\n                normalToken.type = 'primitive';\n                break;\n              }\n              if (_string2 === '\\n') if (!buffer2.stringOpen) {\n                normalToken.type = 'linebreak';\n                break;\n              }\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            case 'space':\n              if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            case 'number':\n              if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            default:\n              break;\n          }\n          buffer.tokens_normalize.push(normalToken);\n        }\n        for (var i = 0; i < buffer.tokens_normalize.length; i++) {\n          var _token4 = buffer.tokens_normalize[i];\n          var mergedToken = {\n            string: _token4.string,\n            type: _token4.type,\n            tokens: [i]\n          };\n          if (['symbol', 'colon'].indexOf(_token4.type) === -1) if (i + 1 < buffer.tokens_normalize.length) {\n            var count = 0;\n            for (var u = i + 1; u < buffer.tokens_normalize.length; u++) {\n              var nextToken = buffer.tokens_normalize[u];\n              if (_token4.type !== nextToken.type) break;\n              mergedToken.string += nextToken.string;\n              mergedToken.tokens.push(u);\n              count++;\n            }\n            i += count;\n          }\n          buffer.tokens_merge.push(mergedToken);\n        }\n        var quotes = '\\'\"',\n          alphanumeric = 'abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789' + '_$';\n        var error = false,\n          line = buffer.tokens_merge.length > 0 ? 1 : 0;\n        buffer2 = {\n          brackets: [],\n          stringOpen: false,\n          isValue: false\n        };\n        var bracketList = [];\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          if (error) break;\n          var _token5 = buffer.tokens_merge[i],\n            _string3 = _token5.string,\n            _type3 = _token5.type,\n            found = false;\n          switch (_type3) {\n            case 'space':\n              break;\n            case 'linebreak':\n              line++;\n              break;\n            case 'symbol':\n              switch (_string3) {\n                case '{':\n                case '[':\n                  found = followsSymbol(i, ['}', ']']);\n                  if (found) {\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: buffer.tokens_merge[found].string,\n                      secondToken: _string3\n                    }));\n                    break;\n                  }\n                  if (_string3 === '[' && i > 0) if (!followsSymbol(i, [':', '[', ','])) {\n                    setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                      firstToken: \"[\",\n                      secondToken: [\":\", \"[\", \",\"]\n                    }));\n                    break;\n                  }\n                  if (_string3 === '{') if (followsSymbol(i, ['{'])) {\n                    setError(i, format(locale.invalidToken.double, {\n                      token: \"{\"\n                    }));\n                    break;\n                  }\n                  buffer2.brackets.push(_string3);\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  bracketList.push({\n                    i: i,\n                    line: line,\n                    string: _string3\n                  });\n                  break;\n                case '}':\n                case ']':\n                  if (_string3 === '}') if (buffer2.brackets[buffer2.brackets.length - 1] !== '{') {\n                    setError(i, format(locale.brace.curly.missingOpen));\n                    break;\n                  }\n                  if (_string3 === '}') if (followsSymbol(i, [','])) {\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: \",\",\n                      secondToken: \"}\"\n                    }));\n                    break;\n                  }\n                  if (_string3 === ']') if (buffer2.brackets[buffer2.brackets.length - 1] !== '[') {\n                    setError(i, format(locale.brace.square.missingOpen));\n                    break;\n                  }\n                  if (_string3 === ']') if (followsSymbol(i, [':'])) {\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: \":\",\n                      secondToken: \"]\"\n                    }));\n                    break;\n                  }\n                  buffer2.brackets.pop();\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  bracketList.push({\n                    i: i,\n                    line: line,\n                    string: _string3\n                  });\n                  break;\n                case ',':\n                  found = followsSymbol(i, ['{']);\n                  if (found) {\n                    if (followedBySymbol(i, ['}'])) {\n                      setError(i, format(locale.brace.curly.cannotWrap, {\n                        token: \",\"\n                      }));\n                      break;\n                    }\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: \"{\",\n                      secondToken: \",\"\n                    }));\n                    break;\n                  }\n                  if (followedBySymbol(i, ['}', ',', ']'])) {\n                    setError(i, format(locale.noTrailingOrLeadingComma));\n                    break;\n                  }\n                  found = typeFollowed(i);\n                  switch (found) {\n                    case 'key':\n                    case 'colon':\n                      setError(i, format(locale.invalidToken.termSequence.prohibited, {\n                        firstTerm: found === 'key' ? locale.types.key : locale.symbols.colon,\n                        secondTerm: locale.symbols.comma\n                      }));\n                      break;\n                    case 'symbol':\n                      if (followsSymbol(i, ['{'])) {\n                        setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                          firstToken: \"{\",\n                          secondToken: \",\"\n                        }));\n                        break;\n                      }\n                      break;\n                    default:\n                      break;\n                  }\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n                default:\n                  break;\n              }\n              buffer.json += _string3;\n              break;\n            case 'colon':\n              found = followsSymbol(i, ['[']);\n              if (found && followedBySymbol(i, [']'])) {\n                setError(i, format(locale.brace.square.cannotWrap, {\n                  token: \":\"\n                }));\n                break;\n              }\n              if (found) {\n                setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                  firstToken: \"[\",\n                  secondToken: \":\"\n                }));\n                break;\n              }\n              if (typeFollowed(i) !== 'key') {\n                setError(i, format(locale.invalidToken.termSequence.permitted, {\n                  firstTerm: locale.symbols.colon,\n                  secondTerm: locale.types.key\n                }));\n                break;\n              }\n              if (followedBySymbol(i, ['}', ']'])) {\n                setError(i, format(locale.invalidToken.termSequence.permitted, {\n                  firstTerm: locale.symbols.colon,\n                  secondTerm: locale.types.value\n                }));\n                break;\n              }\n              buffer2.isValue = true;\n              buffer.json += _string3;\n              break;\n            case 'key':\n            case 'string':\n              var firstChar = _string3.charAt(0),\n                lastChar = _string3.charAt(_string3.length - 1),\n                quote_primary = quotes.indexOf(firstChar);\n              if (quotes.indexOf(firstChar) === -1) if (quotes.indexOf(lastChar) !== -1) {\n                setError(i, format(locale.string.missingOpen, {\n                  quote: firstChar\n                }));\n                break;\n              }\n              if (quotes.indexOf(lastChar) === -1) if (quotes.indexOf(firstChar) !== -1) {\n                setError(i, format(locale.string.missingClose, {\n                  quote: firstChar\n                }));\n                break;\n              }\n              if (quotes.indexOf(firstChar) > -1) if (firstChar !== lastChar) {\n                setError(i, format(locale.string.missingClose, {\n                  quote: firstChar\n                }));\n                break;\n              }\n              if ('string' === _type3) if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) {\n                setError(i, format(locale.string.mustBeWrappedByQuotes));\n                break;\n              }\n              if ('key' === _type3) if (followedBySymbol(i, ['}', ']'])) {\n                setError(i, format(locale.invalidToken.termSequence.permitted, {\n                  firstTerm: locale.types.key,\n                  secondTerm: locale.symbols.colon\n                }));\n              }\n              if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) for (var h = 0; h < _string3.length; h++) {\n                if (error) break;\n                var c = _string3.charAt(h);\n                if (alphanumeric.indexOf(c) === -1) {\n                  setError(i, format(locale.string.nonAlphanumeric, {\n                    token: c\n                  }));\n                  break;\n                }\n              }\n              if (firstChar === \"'\") _string3 = '\"' + _string3.slice(1, -1) + '\"';else if (firstChar !== '\"') _string3 = '\"' + _string3 + '\"';\n              if ('key' === _type3) if ('key' === typeFollowed(i)) {\n                if (i > 0) if (!isNaN(buffer.tokens_merge[i - 1])) {\n                  buffer.tokens_merge[i - 1] += buffer.tokens_merge[i];\n                  setError(i, format(locale.key.numberAndLetterMissingQuotes));\n                  break;\n                }\n                setError(i, format(locale.key.spaceMissingQuotes));\n                break;\n              }\n              if ('key' === _type3) if (!followsSymbol(i, ['{', ','])) {\n                setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                  firstToken: _type3,\n                  secondToken: [\"{\", \",\"]\n                }));\n                break;\n              }\n              if ('string' === _type3) if (!followsSymbol(i, ['[', ':', ','])) {\n                setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                  firstToken: _type3,\n                  secondToken: [\"[\", \":\", \",\"]\n                }));\n                break;\n              }\n              if ('key' === _type3) if (buffer2.isValue) {\n                setError(i, format(locale.string.unexpectedKey));\n                break;\n              }\n              if ('string' === _type3) if (!buffer2.isValue) {\n                setError(i, format(locale.key.unexpectedString));\n                break;\n              }\n              buffer.json += _string3;\n              break;\n            case 'number':\n            case 'primitive':\n              if (followsSymbol(i, ['{'])) {\n                buffer.tokens_merge[i].type = 'key';\n                _type3 = buffer.tokens_merge[i].type;\n                _string3 = '\"' + _string3 + '\"';\n              } else if (typeFollowed(i) === 'key') {\n                buffer.tokens_merge[i].type = 'key';\n                _type3 = buffer.tokens_merge[i].type;\n              } else if (!followsSymbol(i, ['[', ':', ','])) {\n                setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                  firstToken: _type3,\n                  secondToken: [\"[\", \":\", \",\"]\n                }));\n                break;\n              }\n              if (_type3 !== 'key') if (!buffer2.isValue) {\n                buffer.tokens_merge[i].type = 'key';\n                _type3 = buffer.tokens_merge[i].type;\n                _string3 = '\"' + _string3 + '\"';\n              }\n              if (_type3 === 'primitive') if (_string3 === 'undefined') setError(i, format(locale.invalidToken.useInstead, {\n                badToken: \"undefined\",\n                goodToken: \"null\"\n              }));\n              buffer.json += _string3;\n              break;\n          }\n        }\n        var noEscapedSingleQuote = '';\n        for (var i = 0; i < buffer.json.length; i++) {\n          var current = buffer.json.charAt(i),\n            next = '';\n          if (i + 1 < buffer.json.length) {\n            next = buffer.json.charAt(i + 1);\n            if (current === '\\\\' && next === \"'\") {\n              noEscapedSingleQuote += next;\n              i++;\n              continue;\n            }\n          }\n          noEscapedSingleQuote += current;\n        }\n        buffer.json = noEscapedSingleQuote;\n        if (!error) {\n          var removePair = function removePair(index) {\n            bracketList.splice(index + 1, 1);\n            bracketList.splice(index, 1);\n            if (!delta) delta = true;\n          };\n          var maxIterations = Math.ceil(bracketList.length / 2);\n          var round = 0,\n            delta = false;\n          while (bracketList.length > 0) {\n            delta = false;\n            for (var tokenCount = 0; tokenCount < bracketList.length - 1; tokenCount++) {\n              var pair = bracketList[tokenCount].string + bracketList[tokenCount + 1].string;\n              if (['[]', '{}'].indexOf(pair) > -1) removePair(tokenCount);\n            }\n            round++;\n            if (!delta) break;\n            if (round >= maxIterations) break;\n          }\n          if (bracketList.length > 0) {\n            var _tokenString = bracketList[0].string,\n              _tokenPosition = bracketList[0].i,\n              _closingBracketType = _tokenString === '[' ? ']' : '}';\n            line = bracketList[0].line;\n            setError(_tokenPosition, format(locale.brace[_closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n          }\n        }\n        if (!error) if ([undefined, ''].indexOf(buffer.json) === -1) try {\n          buffer.jsObject = JSON.parse(buffer.json);\n        } catch (err) {\n          var errorMessage = err.message,\n            subsMark = errorMessage.indexOf('position');\n          if (subsMark === -1) throw new Error('Error parsing failed');\n          var errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length),\n            errPosition = parseInt(errPositionStr);\n          var charTotal = 0,\n            tokenIndex = 0,\n            _token6 = false,\n            _line2 = 1,\n            exitWhile = false;\n          while (charTotal < errPosition && !exitWhile) {\n            _token6 = buffer.tokens_merge[tokenIndex];\n            if ('linebreak' === _token6.type) _line2++;\n            if (['space', 'linebreak'].indexOf(_token6.type) === -1) charTotal += _token6.string.length;\n            if (charTotal >= errPosition) break;\n            tokenIndex++;\n            if (!buffer.tokens_merge[tokenIndex + 1]) exitWhile = true;\n          }\n          line = _line2;\n          var backslashCount = 0;\n          for (var _i = 0; _i < _token6.string.length; _i++) {\n            var char = _token6.string.charAt(_i);\n            if (char === '\\\\') backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;else {\n              if (backslashCount % 2 !== 0 || backslashCount === 0) if ('\\'\"bfnrt'.indexOf(char) === -1) {\n                setError(tokenIndex, format(locale.invalidToken.unexpected, {\n                  token: '\\\\'\n                }));\n              }\n              backslashCount = 0;\n            }\n          }\n          if (!error) setError(tokenIndex, format(locale.invalidToken.unexpected, {\n            token: _token6.string\n          }));\n        }\n        var _line = 1,\n          _depth = 0;\n        ;\n        if (!error) for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          var _token7 = buffer.tokens_merge[i],\n            _string4 = _token7.string,\n            _type4 = _token7.type;\n          switch (_type4) {\n            case 'space':\n            case 'linebreak':\n              break;\n            case 'string':\n            case 'number':\n            case 'primitive':\n            case 'error':\n              buffer.markup += (followsSymbol(i, [',', '[']) ? newLineBreakAndIndent() : '') + newSpan(i, _token7, _depth);\n              break;\n            case 'key':\n              buffer.markup += newLineBreakAndIndent() + newSpan(i, _token7, _depth);\n              break;\n            case 'colon':\n              buffer.markup += newSpan(i, _token7, _depth) + '&nbsp;';\n              break;\n            case 'symbol':\n              switch (_string4) {\n                case '[':\n                case '{':\n                  buffer.markup += (!followsSymbol(i, [':']) ? newLineBreakAndIndent() : '') + newSpan(i, _token7, _depth);\n                  _depth++;\n                  break;\n                case ']':\n                case '}':\n                  _depth--;\n                  var islastToken = i === buffer.tokens_merge.length - 1,\n                    _adjustment = i > 0 ? ['[', '{'].indexOf(buffer.tokens_merge[i - 1].string) > -1 ? '' : newLineBreakAndIndent(islastToken) : '';\n                  buffer.markup += _adjustment + newSpan(i, _token7, _depth);\n                  break;\n                case ',':\n                  buffer.markup += newSpan(i, _token7, _depth);\n                  break;\n              }\n              break;\n          }\n        }\n        if (error) {\n          var countCarrigeReturn = function countCarrigeReturn(string) {\n            var count = 0;\n            for (var i = 0; i < string.length; i++) {\n              if (['\\n', '\\r'].indexOf(string[i]) > -1) count++;\n            }\n            return count;\n          };\n          var _line_fallback = 1;\n          _line = 1;\n          for (var i = 0; i < buffer.tokens_merge.length; i++) {\n            var _token8 = buffer.tokens_merge[i],\n              _type5 = _token8.type,\n              _string5 = _token8.string;\n            if (_type5 === 'linebreak') _line++;\n            buffer.markup += newSpan(i, _token8, _depth);\n            _line_fallback += countCarrigeReturn(_string5);\n          }\n          _line++;\n          _line_fallback++;\n          if (_line < _line_fallback) _line = _line_fallback;\n        }\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          var _token9 = buffer.tokens_merge[i];\n          buffer.indented += _token9.string;\n          if (['space', 'linebreak'].indexOf(_token9.type) === -1) buffer.tokens_plainText += _token9.string;\n        }\n        if (error) {\n          var isFunction = function isFunction(functionToCheck) {\n            return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n          };\n          if ('modifyErrorText' in this.props) if (isFunction(this.props.modifyErrorText)) error.reason = this.props.modifyErrorText(error.reason);\n        }\n        return {\n          tokens: buffer.tokens_merge,\n          noSpaces: buffer.tokens_plainText,\n          indented: buffer.indented,\n          json: buffer.json,\n          jsObject: buffer.jsObject,\n          markup: buffer.markup,\n          lines: _line,\n          error: error\n        };\n      }\n      ;\n      /**\r\n       *     JS OBJECTS || PLACEHOLDER\r\n       */\n\n      if (!('nodeType' in something)) {\n        var escape_character = function escape_character() {\n          if (_buffer.currentChar !== '\\\\') return false;\n          return true;\n        };\n        var extract = function extract(string, position) {\n          return string.slice(0, position) + string.slice(position + 1);\n        };\n        var determine_string = function determine_string() {\n          if ('\\'\"'.indexOf(_buffer.currentChar) === -1) return false;\n          if (!_buffer.stringOpen) {\n            add_tokenSecondary();\n            _buffer.stringStart = _buffer.position;\n            _buffer.stringOpen = _buffer.currentChar;\n            return true;\n          }\n          if (_buffer.stringOpen === _buffer.currentChar) {\n            add_tokenSecondary();\n            var stringToken = _buffer.inputText.substring(_buffer.stringStart, _buffer.position + 1);\n            add_tokenPrimary(stringToken);\n            _buffer.stringOpen = false;\n            return true;\n          }\n          return false;\n        };\n        var determine_value = function determine_value() {\n          if (':,{}[]'.indexOf(_buffer.currentChar) === -1) return false;\n          if (_buffer.stringOpen) return false;\n          add_tokenSecondary();\n          add_tokenPrimary(_buffer.currentChar);\n          switch (_buffer.currentChar) {\n            case ':':\n              _buffer.isValue = true;\n              return true;\n              break;\n            case '{':\n            case '[':\n              _buffer.brackets.push(_buffer.currentChar);\n              break;\n            case '}':\n            case ']':\n              _buffer.brackets.pop();\n              break;\n          }\n          if (_buffer.currentChar !== ':') _buffer.isValue = _buffer.brackets[_buffer.brackets.length - 1] === '[';\n          return true;\n        };\n        var add_tokenSecondary = function add_tokenSecondary() {\n          if (_buffer.tokenSecondary.length === 0) return false;\n          _buffer.tokens.push(_buffer.tokenSecondary);\n          _buffer.tokenSecondary = '';\n          return true;\n        };\n        var add_tokenPrimary = function add_tokenPrimary(value) {\n          if (value.length === 0) return false;\n          _buffer.tokens.push(value);\n          return true;\n        };\n        var indent = function indent(number) {\n          var space = [];\n          for (var i = 0; i < number * 2; i++) {\n            space.push(' ');\n          }\n          return (number > 0 ? '\\n' : '') + space.join('');\n        };\n        var indentII = function indentII(number) {\n          var space = [];\n          if (number > 0) lines++;\n          for (var i = 0; i < number * 2; i++) {\n            space.push('&nbsp;');\n          }\n          return (number > 0 ? '<br>' : '') + space.join('');\n        };\n        var _buffer = {\n          inputText: JSON.stringify(something),\n          position: 0,\n          currentChar: '',\n          tokenPrimary: '',\n          tokenSecondary: '',\n          brackets: [],\n          isValue: false,\n          stringOpen: false,\n          stringStart: 0,\n          tokens: []\n        };\n        for (var i = 0; i < _buffer.inputText.length; i++) {\n          _buffer.position = i;\n          _buffer.currentChar = _buffer.inputText.charAt(_buffer.position);\n          var a = determine_value(),\n            b = determine_string(),\n            _c = escape_character();\n          if (!a && !b && !_c) if (!_buffer.stringOpen) _buffer.tokenSecondary += _buffer.currentChar;\n        }\n        var _buffer2 = {\n          brackets: [],\n          isValue: false,\n          tokens: []\n        };\n        _buffer2.tokens = _buffer.tokens.map(function (token) {\n          var type = '',\n            string = '',\n            value = '';\n          switch (token) {\n            case ',':\n              type = 'symbol';\n              string = token;\n              value = token;\n              _buffer2.isValue = _buffer2.brackets[_buffer2.brackets.length - 1] === '[';\n              break;\n            case ':':\n              type = 'symbol';\n              string = token;\n              value = token;\n              _buffer2.isValue = true;\n              break;\n            case '{':\n            case '[':\n              type = 'symbol';\n              string = token;\n              value = token;\n              _buffer2.brackets.push(token);\n              _buffer2.isValue = _buffer2.brackets[_buffer2.brackets.length - 1] === '[';\n              break;\n            case '}':\n            case ']':\n              type = 'symbol';\n              string = token;\n              value = token;\n              _buffer2.brackets.pop();\n              _buffer2.isValue = _buffer2.brackets[_buffer2.brackets.length - 1] === '[';\n              break;\n            case 'undefined':\n              type = 'primitive';\n              string = token;\n              value = undefined;\n              break;\n            case 'null':\n              type = 'primitive';\n              string = token;\n              value = null;\n              break;\n            case 'false':\n              type = 'primitive';\n              string = token;\n              value = false;\n              break;\n            case 'true':\n              type = 'primitive';\n              string = token;\n              value = true;\n              break;\n            default:\n              var C = token.charAt(0);\n              var stripQuotesFromKey = function stripQuotesFromKey(text) {\n                if (text.length === 0) return text;\n                if (['\"\"', \"''\"].indexOf(text) > -1) return \"''\";\n                var wrappedInQuotes = false;\n                for (var i = 0; i < 2; i++) {\n                  if ([text.charAt(0), text.charAt(text.length - 1)].indexOf(['\"', \"'\"][i]) > -1) {\n                    wrappedInQuotes = true;\n                    break;\n                  }\n                }\n                if (wrappedInQuotes && text.length >= 2) text = text.slice(1, -1);\n                var nonAlphaNumeric = text.replace(/\\w/g, ''),\n                  alphaNumeric = text.replace(/\\W+/g, ''),\n                  mayRemoveQuotes = function (nonAlphaNumeric, text) {\n                    var numberAndLetter = false;\n                    for (var i = 0; i < text.length; i++) {\n                      if (i === 0) if (isNaN(text.charAt(i))) break;\n                      if (isNaN(text.charAt(i))) {\n                        numberAndLetter = true;\n                        break;\n                      }\n                    }\n                    return !(nonAlphaNumeric.length > 0 || numberAndLetter);\n                  }(nonAlphaNumeric, text),\n                  hasQuotes = function (string) {\n                    for (var i = 0; i < string.length; i++) {\n                      if ([\"'\", '\"'].indexOf(string.charAt(i)) > -1) return true;\n                    }\n                    return false;\n                  }(nonAlphaNumeric);\n                if (hasQuotes) {\n                  var newText = '';\n                  var charList = text.split('');\n                  for (var ii = 0; ii < charList.length; ii++) {\n                    var _char2 = charList[ii];\n                    if ([\"'\", '\"'].indexOf(_char2) > -1) _char2 = '\\\\' + _char2;\n                    newText += _char2;\n                  }\n                  text = newText;\n                }\n                if (!mayRemoveQuotes) return \"'\" + text + \"'\";else return text;\n              };\n              if ('\\'\"'.indexOf(C) > -1) {\n                if (_buffer2.isValue) type = 'string';else type = 'key';\n                if (type === 'key') string = stripQuotesFromKey(token);\n                if (type === 'string') {\n                  string = '';\n                  var charList2 = token.slice(1, -1).split('');\n                  for (var ii = 0; ii < charList2.length; ii++) {\n                    var _char3 = charList2[ii];\n                    if ('\\'\\\"'.indexOf(_char3) > -1) _char3 = '\\\\' + _char3;\n                    string += _char3;\n                  }\n                  string = \"'\" + string + \"'\";\n                }\n                value = string;\n                break;\n              }\n              if (!isNaN(token)) {\n                type = 'number';\n                string = token;\n                value = Number(token);\n                break;\n              }\n              if (token.length > 0) if (!_buffer2.isValue) {\n                type = 'key';\n                string = token;\n                if (string.indexOf(' ') > -1) string = \"'\" + string + \"'\";\n                value = string;\n                break;\n              }\n          }\n          return {\n            type: type,\n            string: string,\n            value: value,\n            depth: _buffer2.brackets.length\n          };\n        });\n        var clean = '';\n        for (var i = 0; i < _buffer2.tokens.length; i++) {\n          var _token10 = _buffer2.tokens[i];\n          clean += _token10.string;\n        }\n        ;\n        var indentation = '';\n        for (var i = 0; i < _buffer2.tokens.length; i++) {\n          var _token11 = _buffer2.tokens[i];\n          switch (_token11.string) {\n            case '[':\n            case '{':\n              var _nextToken2 = i < _buffer2.tokens.length - 1 - 1 ? _buffer2.tokens[i + 1] : '';\n              if ('}]'.indexOf(_nextToken2.string) === -1) indentation += _token11.string + indent(_token11.depth);else indentation += _token11.string;\n              break;\n            case ']':\n            case '}':\n              var prevToken = i > 0 ? _buffer2.tokens[i - 1] : '';\n              if ('[{'.indexOf(prevToken.string) === -1) indentation += indent(_token11.depth) + _token11.string;else indentation += _token11.string;\n              break;\n            case ':':\n              indentation += _token11.string + ' ';\n              break;\n            case ',':\n              indentation += _token11.string + indent(_token11.depth);\n              break;\n            default:\n              indentation += _token11.string;\n              break;\n          }\n        }\n        var lines = 1;\n        ;\n        var markup = '';\n        var _lastIndex = _buffer2.tokens.length - 1;\n        for (var i = 0; i < _buffer2.tokens.length; i++) {\n          var _token12 = _buffer2.tokens[i];\n          var span = newSpan(i, _token12, _token12.depth);\n          switch (_token12.string) {\n            case '{':\n            case '[':\n              var _nextToken3 = i < _buffer2.tokens.length - 1 - 1 ? _buffer2.tokens[i + 1] : '';\n              if ('}]'.indexOf(_nextToken3.string) === -1) markup += span + indentII(_token12.depth);else markup += span;\n              break;\n            case '}':\n            case ']':\n              var _prevToken = i > 0 ? _buffer2.tokens[i - 1] : '';\n              if ('[{'.indexOf(_prevToken.string) === -1) markup += indentII(_token12.depth) + (_lastIndex === i ? '<br>' : '') + span;else markup += span;\n              break;\n            case ':':\n              markup += span + ' ';\n              break;\n            case ',':\n              markup += span + indentII(_token12.depth);\n              break;\n            default:\n              markup += span;\n              break;\n          }\n        }\n        lines += 2;\n        return {\n          tokens: _buffer2.tokens,\n          noSpaces: clean,\n          indented: indentation,\n          json: JSON.stringify(something),\n          jsObject: something,\n          markup: markup,\n          lines: lines\n        };\n      }\n    }\n  }]);\n  return JSONInput;\n}(Component);\nexport default JSONInput;","map":{"version":3,"names":["_objectSpread","React","Component","themes","identical","getType","err","format","defaultLocale","JSONInput","props","updateInternalProps","bind","createMarkup","onClick","onBlur","update","getCursorPosition","setCursorPosition","scheduledUpdate","setUpdateTime","renderLabels","newSpan","renderErrorMessage","onScroll","showPlaceholder","tokenize","onKeyPress","onKeyDown","onPaste","stopEvent","refContent","refLabels","renderCount","state","prevPlaceholder","markupText","plainText","json","jsObject","undefined","lines","error","locale","console","warn","colors","style","theme","dark_vscode_tribute","default","string","number","colon","keys","keys_whiteSpace","primitive","background","background_warning","outerBox","container","warningBox","errorMessage","body","labelColumn","labels","contentBox","confirmGood","totalHeight","height","totalWidth","width","onKeyPressUpdate","timer","setInterval","clearInterval","updateTime","waitAfterKeyPress","resetConfiguration","reset","id","hasError","createElement","name","display","overflow","margin","boxSizing","position","opacity","top","right","transform","pointerEvents","transitionDuration","transitionTimingFunction","viewBox","fillRule","clipRule","fill","d","fontFamily","backgroundColor","verticalAlign","left","resize","fontSize","ref","padding","color","contentEditable","flex","overflowX","overflowY","wordWrap","whiteSpace","outline","dangerouslySetInnerHTML","autoComplete","autoCorrect","autoCapitalize","spellCheck","paddingRight","overflowWrap","flexDirection","justifyContent","errorLine","line","Array","i","map","key","__html","token","depth","type","length","replace","countBR","isChildOf","node","parentNode","selection","window","getSelection","charCount","linebreakCount","focusNode","focusOffset","previousSibling","nodeName","textContent","nextPosition","indexOf","createRange","chars","range","document","selectNode","setStart","count","setEnd","nodeType","Node","TEXT_NODE","lp","childNodes","setPosition","collapse","removeAllRanges","addRange","focus","cursorOffset","updateCursorPosition","data","onChange","indented","markup","cursorPosition","setState","Date","getTime","event","preventDefault","stopPropagation","ctrlOrMetaIsPressed","ctrlKey","metaKey","viewOnly","execCommand","text","clipboardData","getData","scrollTop","target","placeholderDoesNotExist","placeholder","placeholderHasEmptyValues","placeholderDataType","unexpectedDataType","throwError","samePlaceholderValues","componentShouldUpdate","indentation","something","quarkize","prefix","buffer","active","symbol","space","delimiter","quarks","pushAndStore","char","push","finalPush","charAt","validToken","quotes","firstChar","lastChar","quoteType","nonAlphanumeric","nonAlpha","tokenFollowed","last","tokens_normalize","previousToken","setError","tokenID","reason","offset","tokens_merge","followedBySymbol","options","nextToken","followsSymbol","typeFollowed","newIndent","_depth","join","newLineBreak","byPass","_line","newLineBreakAndIndent","containerNode","cloneNode","hasChildren","hasChildNodes","children","tokens_unknown","tokens_proto","tokens_split","tokens_fallback","tokens_plainText","child","info","attributes","wholeText","concat","fallback","slice","tokul","buffer2","brackets","stringOpen","isValue","normalToken","pop","_string","_type","_char","lastIndex","mergedToken","tokens","u","alphanumeric","bracketList","found","invalidToken","tokenSequence","prohibited","firstToken","secondToken","permitted","double","brace","curly","missingOpen","square","cannotWrap","noTrailingOrLeadingComma","termSequence","firstTerm","types","symbols","secondTerm","comma","value","quote_primary","quote","missingClose","mustBeWrappedByQuotes","h","c","isNaN","numberAndLetterMissingQuotes","spaceMissingQuotes","unexpectedKey","unexpectedString","useInstead","badToken","goodToken","noEscapedSingleQuote","current","next","removePair","index","splice","delta","maxIterations","Math","ceil","round","tokenCount","pair","_tokenString","_tokenPosition","_closingBracketType","JSON","parse","message","subsMark","Error","errPositionStr","substring","errPosition","parseInt","charTotal","tokenIndex","exitWhile","backslashCount","unexpected","islastToken","_adjustment","countCarrigeReturn","_line_fallback","isFunction","functionToCheck","toString","call","modifyErrorText","noSpaces","escape_character","currentChar","extract","determine_string","add_tokenSecondary","stringStart","stringToken","inputText","add_tokenPrimary","determine_value","tokenSecondary","indent","indentII","stringify","tokenPrimary","a","b","C","stripQuotesFromKey","wrappedInQuotes","nonAlphaNumeric","alphaNumeric","mayRemoveQuotes","numberAndLetter","hasQuotes","newText","charList","split","ii","charList2","Number","clean","prevToken","span"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/react-json-editor-ajrm/es/index.js"],"sourcesContent":["/** @license react-json-editor-ajrm v2.5.13\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React, { Component } from 'react';\nimport themes from './themes';\nimport { identical, getType } from './mitsuketa';\nimport err from './err';\nimport { format } from './locale';\nimport defaultLocale from './locale/en';\n\nclass JSONInput extends Component {\n  constructor(props) {\n    super(props);\n    this.updateInternalProps = this.updateInternalProps.bind(this);\n    this.createMarkup = this.createMarkup.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.update = this.update.bind(this);\n    this.getCursorPosition = this.getCursorPosition.bind(this);\n    this.setCursorPosition = this.setCursorPosition.bind(this);\n    this.scheduledUpdate = this.scheduledUpdate.bind(this);\n    this.setUpdateTime = this.setUpdateTime.bind(this);\n    this.renderLabels = this.renderLabels.bind(this);\n    this.newSpan = this.newSpan.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this.showPlaceholder = this.showPlaceholder.bind(this);\n    this.tokenize = this.tokenize.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onPaste = this.onPaste.bind(this);\n    this.stopEvent = this.stopEvent.bind(this);\n    this.refContent = null;\n    this.refLabels = null;\n    this.updateInternalProps();\n    this.renderCount = 1;\n    this.state = {\n      prevPlaceholder: '',\n      markupText: '',\n      plainText: '',\n      json: '',\n      jsObject: undefined,\n      lines: false,\n      error: false\n    };\n\n    if (!this.props.locale) {\n      console.warn(\"[react-json-editor-ajrm - Deprecation Warning] You did not provide a 'locale' prop for your JSON input - This will be required in a future version. English has been set as a default.\");\n    }\n  }\n\n  updateInternalProps() {\n    let colors = {},\n        style = {},\n        theme = themes.dark_vscode_tribute;\n    if ('theme' in this.props) if (typeof this.props.theme === 'string') if (this.props.theme in themes) theme = themes[this.props.theme];\n    colors = theme;\n    if ('colors' in this.props) colors = {\n      default: 'default' in this.props.colors ? this.props.colors.default : colors.default,\n      string: 'string' in this.props.colors ? this.props.colors.string : colors.string,\n      number: 'number' in this.props.colors ? this.props.colors.number : colors.number,\n      colon: 'colon' in this.props.colors ? this.props.colors.colon : colors.colon,\n      keys: 'keys' in this.props.colors ? this.props.colors.keys : colors.keys,\n      keys_whiteSpace: 'keys_whiteSpace' in this.props.colors ? this.props.colors.keys_whiteSpace : colors.keys_whiteSpace,\n      primitive: 'primitive' in this.props.colors ? this.props.colors.primitive : colors.primitive,\n      error: 'error' in this.props.colors ? this.props.colors.error : colors.error,\n      background: 'background' in this.props.colors ? this.props.colors.background : colors.background,\n      background_warning: 'background_warning' in this.props.colors ? this.props.colors.background_warning : colors.background_warning\n    };\n    this.colors = colors;\n    if ('style' in this.props) style = {\n      outerBox: 'outerBox' in this.props.style ? this.props.style.outerBox : {},\n      container: 'container' in this.props.style ? this.props.style.container : {},\n      warningBox: 'warningBox' in this.props.style ? this.props.style.warningBox : {},\n      errorMessage: 'errorMessage' in this.props.style ? this.props.style.errorMessage : {},\n      body: 'body' in this.props.style ? this.props.style.body : {},\n      labelColumn: 'labelColumn' in this.props.style ? this.props.style.labelColumn : {},\n      labels: 'labels' in this.props.style ? this.props.style.labels : {},\n      contentBox: 'contentBox' in this.props.style ? this.props.style.contentBox : {}\n    };else style = {\n      outerBox: {},\n      container: {},\n      warningBox: {},\n      errorMessage: {},\n      body: {},\n      labelColumn: {},\n      labels: {},\n      contentBox: {}\n    };\n    this.style = style;\n    this.confirmGood = 'confirmGood' in this.props ? this.props.confirmGood : true;\n    const totalHeight = this.props.height || '610px',\n          totalWidth = this.props.width || '479px';\n    this.totalHeight = totalHeight;\n    this.totalWidth = totalWidth;\n\n    if (!('onKeyPressUpdate' in this.props) || this.props.onKeyPressUpdate) {\n      if (!this.timer) this.timer = setInterval(this.scheduledUpdate, 100);\n    } else if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = false;\n    }\n\n    this.updateTime = false;\n    this.waitAfterKeyPress = 'waitAfterKeyPress' in this.props ? this.props.waitAfterKeyPress : 1000;\n    this.resetConfiguration = 'reset' in this.props ? this.props.reset : false;\n  }\n\n  render() {\n    const id = this.props.id,\n          markupText = this.state.markupText,\n          error = this.props.error || this.state.error,\n          colors = this.colors,\n          style = this.style,\n          confirmGood = this.confirmGood,\n          totalHeight = this.totalHeight,\n          totalWidth = this.totalWidth,\n          hasError = !!this.props.error || (error ? 'token' in error : false);\n    this.renderCount++;\n    return React.createElement(\"div\", {\n      name: \"outer-box\",\n      id: id && id + '-outer-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'none',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        position: 'relative'\n      }, style.outerBox)\n    }, confirmGood ? React.createElement(\"div\", {\n      style: {\n        opacity: hasError ? 0 : 1,\n        height: '30px',\n        width: '30px',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        transform: 'translate(-25%,25%)',\n        pointerEvents: 'none',\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }\n    }, React.createElement(\"svg\", {\n      height: \"30px\",\n      width: \"30px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"green\",\n      opacity: \"0.85\",\n      d: \"M39.363,79L16,55.49l11.347-11.419L39.694,56.49L72.983,23L84,34.085L39.363,79z\"\n    }))) : void 0, React.createElement(\"div\", {\n      name: \"container\",\n      id: id && id + '-container',\n      style: _objectSpread({\n        display: 'block',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        fontFamily: 'Roboto, sans-serif'\n      }, style.container),\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      name: \"warning-box\",\n      id: id && id + '-warning-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'hidden',\n        height: hasError ? '60px' : '0px',\n        width: '100%',\n        margin: 0,\n        backgroundColor: colors.background_warning,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.warningBox),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        top: 0,\n        left: 0,\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"svg\", {\n      height: \"25px\",\n      width: \"25px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"red\",\n      d: \"M73.9,5.75c0.467-0.467,1.067-0.7,1.8-0.7c0.7,0,1.283,0.233,1.75,0.7l16.8,16.8  c0.467,0.5,0.7,1.084,0.7,1.75c0,0.733-0.233,1.334-0.7,1.801L70.35,50l23.9,23.95c0.5,0.467,0.75,1.066,0.75,1.8  c0,0.667-0.25,1.25-0.75,1.75l-16.8,16.75c-0.534,0.467-1.117,0.7-1.75,0.7s-1.233-0.233-1.8-0.7L50,70.351L26.1,94.25  c-0.567,0.467-1.167,0.7-1.8,0.7c-0.667,0-1.283-0.233-1.85-0.7L5.75,77.5C5.25,77,5,76.417,5,75.75c0-0.733,0.25-1.333,0.75-1.8  L29.65,50L5.75,26.101C5.25,25.667,5,25.066,5,24.3c0-0.666,0.25-1.25,0.75-1.75l16.8-16.8c0.467-0.467,1.05-0.7,1.75-0.7  c0.733,0,1.333,0.233,1.8,0.7L50,29.65L73.9,5.75z\"\n    }))))), React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: 'calc(100% - 60px)',\n        margin: 0,\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        position: 'absolute',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, this.renderErrorMessage())), React.createElement(\"div\", {\n      name: \"body\",\n      id: id && id + '-body',\n      style: _objectSpread({\n        display: 'flex',\n        overflow: 'none',\n        height: hasError ? 'calc(100% - 60px)' : '100%',\n        width: '',\n        margin: 0,\n        resize: 'none',\n        fontFamily: 'Roboto Mono, Monaco, monospace',\n        fontSize: '11px',\n        backgroundColor: colors.background,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.body),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      name: \"labels\",\n      id: id && id + '-labels',\n      ref: ref => this.refLabels = ref,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '44px',\n        margin: 0,\n        padding: '5px 0px 5px 10px',\n        overflow: 'hidden',\n        color: '#D4D4D4'\n      }, style.labelColumn),\n      onClick: this.onClick\n    }, this.renderLabels()), React.createElement(\"span\", {\n      id: id,\n      ref: ref => this.refContent = ref,\n      contentEditable: true,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '',\n        flex: 1,\n        margin: 0,\n        padding: '5px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-line',\n        color: '#D4D4D4',\n        outline: 'none'\n      }, style.contentBox),\n      dangerouslySetInnerHTML: this.createMarkup(markupText),\n      onKeyPress: this.onKeyPress,\n      onKeyDown: this.onKeyDown,\n      onClick: this.onClick,\n      onBlur: this.onBlur,\n      onScroll: this.onScroll,\n      onPaste: this.onPaste,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"off\",\n      spellCheck: false\n    }))));\n  }\n\n  renderErrorMessage() {\n    const locale = this.props.locale || defaultLocale,\n          error = this.props.error || this.state.error,\n          style = this.style;\n    if (!error) return void 0;\n    return React.createElement(\"p\", {\n      style: _objectSpread({\n        color: 'red',\n        fontSize: '12px',\n        position: 'absolute',\n        width: 'calc(100% - 60px)',\n        height: '60px',\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n        paddingRight: '10px',\n        overflowWrap: 'break-word',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }, style.errorMessage)\n    }, format(locale.format, error));\n  }\n\n  renderLabels() {\n    const colors = this.colors,\n          style = this.style,\n          error = this.props.error || this.state.error,\n          errorLine = error ? error.line : -1,\n          lines = this.state.lines ? this.state.lines : 1;\n    let labels = new Array(lines);\n\n    for (var i = 0; i < lines - 1; i++) labels[i] = i + 1;\n\n    return labels.map(number => {\n      const color = number !== errorLine ? colors.default : 'red';\n      return React.createElement(\"div\", {\n        key: number,\n        style: _objectSpread({}, style.labels, {\n          color: color\n        })\n      }, number);\n    });\n  }\n\n  createMarkup(markupText) {\n    if (markupText === undefined) return {\n      __html: ''\n    };\n    return {\n      __html: '' + markupText\n    };\n  }\n\n  newSpan(i, token, depth) {\n    let colors = this.colors,\n        type = token.type,\n        string = token.string;\n    let color = '';\n\n    switch (type) {\n      case 'string':\n      case 'number':\n      case 'primitive':\n      case 'error':\n        color = colors[token.type];\n        break;\n\n      case 'key':\n        if (string === ' ') color = colors.keys_whiteSpace;else color = colors.keys;\n        break;\n\n      case 'symbol':\n        if (string === ':') color = colors.colon;else color = colors.default;\n        break;\n\n      default:\n        color = colors.default;\n        break;\n    }\n\n    if (string.length !== string.replace(/</g, '').replace(/>/g, '').length) string = '<xmp style=display:inline;>' + string + '</xmp>';\n    return '<span' + ' type=\"' + type + '\"' + ' value=\"' + string + '\"' + ' depth=\"' + depth + '\"' + ' style=\"color:' + color + '\"' + '>' + string + '</span>';\n  }\n\n  getCursorPosition(countBR) {\n    /**\r\n     * Need to deprecate countBR\r\n     * It is used to differenciate between good markup render, and aux render when error found\r\n     * Adjustments based on coundBR account for usage of <br> instead of <span> for linebreaks to determine acurate cursor position\r\n     * Find a way to consolidate render styles\r\n     */\n    const isChildOf = node => {\n      while (node !== null) {\n        if (node === this.refContent) return true;\n        node = node.parentNode;\n      }\n\n      return false;\n    };\n\n    let selection = window.getSelection(),\n        charCount = -1,\n        linebreakCount = 0,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode)) {\n      node = selection.focusNode;\n      charCount = selection.focusOffset;\n\n      while (node) {\n        if (node === this.refContent) break;\n\n        if (node.previousSibling) {\n          node = node.previousSibling;\n          if (countBR) if (node.nodeName === 'BR') linebreakCount++;\n          charCount += node.textContent.length;\n        } else {\n          node = node.parentNode;\n          if (node === null) break;\n        }\n      }\n    }\n\n    return charCount + linebreakCount;\n  }\n\n  setCursorPosition(nextPosition) {\n    if ([false, null, undefined].indexOf(nextPosition) > -1) return;\n\n    const createRange = (node, chars, range) => {\n      if (!range) {\n        range = document.createRange();\n        range.selectNode(node);\n        range.setStart(node, 0);\n      }\n\n      if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n      } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n          if (node.textContent.length < chars.count) chars.count -= node.textContent.length;else {\n            range.setEnd(node, chars.count);\n            chars.count = 0;\n          }\n        } else for (var lp = 0; lp < node.childNodes.length; lp++) {\n          range = createRange(node.childNodes[lp], chars, range);\n          if (chars.count === 0) break;\n        }\n      }\n\n      return range;\n    };\n\n    const setPosition = chars => {\n      if (chars < 0) return;\n      let selection = window.getSelection(),\n          range = createRange(this.refContent, {\n        count: chars\n      });\n      if (!range) return;\n      range.collapse(false);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    };\n\n    if (nextPosition > 0) setPosition(nextPosition);else this.refContent.focus();\n  }\n\n  update(cursorOffset = 0, updateCursorPosition = true) {\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onChange' in this.props) this.props.onChange({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    let cursorPosition = this.getCursorPosition(data.error) + cursorOffset;\n    this.setState({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    this.updateTime = false;\n    if (updateCursorPosition) this.setCursorPosition(cursorPosition);\n  }\n\n  scheduledUpdate() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    const {\n      updateTime\n    } = this;\n    if (updateTime === false) return;\n    if (updateTime > new Date().getTime()) return;\n    this.update();\n  }\n\n  setUpdateTime() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    this.updateTime = new Date().getTime() + this.waitAfterKeyPress;\n  }\n\n  stopEvent(event) {\n    if (!event) return;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onKeyPress(event) {\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n    if (this.props.viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n    if (!ctrlOrMetaIsPressed) this.setUpdateTime();\n  }\n\n  onKeyDown(event) {\n    const viewOnly = !!this.props.viewOnly;\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n\n    switch (event.key) {\n      case 'Tab':\n        this.stopEvent(event);\n        if (viewOnly) break;\n        document.execCommand(\"insertText\", false, \"  \");\n        this.setUpdateTime();\n        break;\n\n      case 'Backspace':\n      case 'Delete':\n        if (viewOnly) this.stopEvent(event);\n        this.setUpdateTime();\n        break;\n\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.setUpdateTime();\n        break;\n\n      case 'a':\n      case 'c':\n        if (viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n        break;\n\n      default:\n        if (viewOnly) this.stopEvent(event);\n        break;\n    }\n  }\n\n  onPaste(event) {\n    if (this.props.viewOnly) {\n      this.stopEvent(event);\n    } else {\n      event.preventDefault();\n      var text = event.clipboardData.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n\n    this.update();\n  }\n\n  onClick() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n  }\n\n  onBlur() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onBlur' in this.props) this.props.onBlur({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  onScroll(event) {\n    this.refLabels.scrollTop = event.target.scrollTop;\n  }\n\n  componentDidUpdate() {\n    this.updateInternalProps();\n    this.showPlaceholder();\n  }\n\n  componentDidMount() {\n    this.showPlaceholder();\n  }\n\n  componentWillUnmount() {\n    if (this.timer) clearInterval(this.timer);\n  }\n\n  showPlaceholder() {\n    const placeholderDoesNotExist = !('placeholder' in this.props);\n    if (placeholderDoesNotExist) return;\n    const {\n      placeholder\n    } = this.props;\n    const placeholderHasEmptyValues = [undefined, null].indexOf(placeholder) > -1;\n    if (placeholderHasEmptyValues) return;\n    const {\n      prevPlaceholder,\n      jsObject\n    } = this.state;\n    const {\n      resetConfiguration\n    } = this;\n    const placeholderDataType = getType(placeholder);\n    const unexpectedDataType = ['object', 'array'].indexOf(placeholderDataType) === -1;\n    if (unexpectedDataType) err.throwError('showPlaceholder', 'placeholder', 'either an object or an array');\n    const samePlaceholderValues = identical(placeholder, prevPlaceholder); // Component will always re-render when new placeholder value is any different from previous placeholder value.\n\n    let componentShouldUpdate = !samePlaceholderValues;\n\n    if (!componentShouldUpdate) {\n      if (resetConfiguration) {\n        /**\r\n         * If 'reset' property is set true or is truthy,\r\n         * any difference between placeholder and current value\r\n         * should trigger component re-render\r\n         */\n        if (jsObject !== undefined) componentShouldUpdate = !identical(placeholder, jsObject);\n      }\n    }\n\n    if (!componentShouldUpdate) return;\n    const data = this.tokenize(placeholder);\n    this.setState({\n      prevPlaceholder: placeholder,\n      plainText: data.indentation,\n      markupText: data.markup,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  tokenize(something) {\n    if (typeof something !== 'object') return console.error('tokenize() expects object type properties only. Got \\'' + typeof something + '\\' type instead.');\n    const locale = this.props.locale || defaultLocale;\n    const newSpan = this.newSpan;\n    /**\r\n     *     DOM NODE || ONBLUR OR UPDATE\r\n     */\n\n    if ('nodeType' in something) {\n      const containerNode = something.cloneNode(true),\n            hasChildren = containerNode.hasChildNodes();\n      if (!hasChildren) return '';\n      const children = containerNode.childNodes;\n      let buffer = {\n        tokens_unknown: [],\n        tokens_proto: [],\n        tokens_split: [],\n        tokens_fallback: [],\n        tokens_normalize: [],\n        tokens_merge: [],\n        tokens_plainText: '',\n        indented: '',\n        json: '',\n        jsObject: undefined,\n        markup: ''\n      };\n\n      for (var i = 0; i < children.length; i++) {\n        let child = children[i];\n        let info = {};\n\n        switch (child.nodeName) {\n          case 'SPAN':\n            info = {\n              string: child.textContent,\n              type: child.attributes.type.textContent\n            };\n            buffer.tokens_unknown.push(info);\n            break;\n\n          case 'DIV':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          case 'BR':\n            if (child.textContent === '') buffer.tokens_unknown.push({\n              string: '\\n',\n              type: 'unknown'\n            });\n            break;\n\n          case '#text':\n            buffer.tokens_unknown.push({\n              string: child.wholeText,\n              type: 'unknown'\n            });\n            break;\n\n          case 'FONT':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          default:\n            console.error('Unrecognized node:', {\n              child\n            });\n            break;\n        }\n      }\n\n      function quarkize(text, prefix = '') {\n        let buffer = {\n          active: false,\n          string: '',\n          number: '',\n          symbol: '',\n          space: '',\n          delimiter: '',\n          quarks: []\n        };\n\n        function pushAndStore(char, type) {\n          switch (type) {\n            case 'symbol':\n            case 'delimiter':\n              if (buffer.active) buffer.quarks.push({\n                string: buffer[buffer.active],\n                type: prefix + '-' + buffer.active\n              });\n              buffer[buffer.active] = '';\n              buffer.active = type;\n              buffer[buffer.active] = char;\n              break;\n\n            default:\n              if (type !== buffer.active || [buffer.string, char].indexOf('\\n') > -1) {\n                if (buffer.active) buffer.quarks.push({\n                  string: buffer[buffer.active],\n                  type: prefix + '-' + buffer.active\n                });\n                buffer[buffer.active] = '';\n                buffer.active = type;\n                buffer[buffer.active] = char;\n              } else buffer[type] += char;\n\n              break;\n          }\n        }\n\n        function finalPush() {\n          if (buffer.active) {\n            buffer.quarks.push({\n              string: buffer[buffer.active],\n              type: prefix + '-' + buffer.active\n            });\n            buffer[buffer.active] = '';\n            buffer.active = false;\n          }\n        }\n\n        for (var i = 0; i < text.length; i++) {\n          const char = text.charAt(i);\n\n          switch (char) {\n            case '\"':\n            case \"'\":\n              pushAndStore(char, 'delimiter');\n              break;\n\n            case ' ':\n            case '\\u00A0':\n              pushAndStore(char, 'space');\n              break;\n\n            case '{':\n            case '}':\n            case '[':\n            case ']':\n            case ':':\n            case ',':\n              pushAndStore(char, 'symbol');\n              break;\n\n            case '0':\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              if (buffer.active === 'string') pushAndStore(char, 'string');else pushAndStore(char, 'number');\n              break;\n\n            case '-':\n              if (i < text.length - 1) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            case '.':\n              if (i < text.length - 1 && i > 0) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1 && '0123456789'.indexOf(text.charAt(i - 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            default:\n              pushAndStore(char, 'string');\n              break;\n          }\n        }\n\n        finalPush();\n        return buffer.quarks;\n      }\n\n      for (var i = 0; i < buffer.tokens_unknown.length; i++) {\n        let token = buffer.tokens_unknown[i];\n        buffer.tokens_proto = buffer.tokens_proto.concat(quarkize(token.string, 'proto'));\n      }\n\n      function validToken(string, type) {\n        const quotes = '\\'\"';\n        let firstChar = '',\n            lastChar = '',\n            quoteType = false;\n\n        switch (type) {\n          case 'primitive':\n            if (['true', 'false', 'null', 'undefined'].indexOf(string) === -1) return false;\n            break;\n\n          case 'string':\n            if (string.length < 2) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n            if (quoteType === -1) return false;\n            if (firstChar !== lastChar) return false;\n\n            for (var i = 0; i < string.length; i++) {\n              if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n            }\n\n            break;\n\n          case 'key':\n            if (string.length === 0) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n\n            if (quoteType > -1) {\n              if (string.length === 1) return false;\n              if (firstChar !== lastChar) return false;\n\n              for (var i = 0; i < string.length; i++) {\n                if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n              }\n            } else {\n              const nonAlphanumeric = '\\'\"`.,:;{}[]&<>=~*%\\\\|/-+!?@^ \\xa0';\n\n              for (var i = 0; i < nonAlphanumeric.length; i++) {\n                const nonAlpha = nonAlphanumeric.charAt(i);\n                if (string.indexOf(nonAlpha) > -1) return false;\n              }\n            }\n\n            break;\n\n          case 'number':\n            for (var i = 0; i < string.length; i++) {\n              if ('0123456789'.indexOf(string.charAt(i)) === -1) if (i === 0) {\n                if ('-' !== string.charAt(0)) return false;\n              } else if ('.' !== string.charAt(i)) return false;\n            }\n\n            break;\n\n          case 'symbol':\n            if (string.length > 1) return false;\n            if ('{[:]},'.indexOf(string) === -1) return false;\n            break;\n\n          case 'colon':\n            if (string.length > 1) return false;\n            if (':' !== string) return false;\n            break;\n\n          default:\n            return true;\n            break;\n        }\n\n        return true;\n      }\n\n      for (var i = 0; i < buffer.tokens_proto.length; i++) {\n        let token = buffer.tokens_proto[i];\n\n        if (token.type.indexOf('proto') === -1) {\n          if (!validToken(token.string, token.type)) {\n            buffer.tokens_split = buffer.tokens_split.concat(quarkize(token.string, 'split'));\n          } else buffer.tokens_split.push(token);\n        } else buffer.tokens_split.push(token);\n      }\n\n      for (var i = 0; i < buffer.tokens_split.length; i++) {\n        let token = buffer.tokens_split[i];\n        let type = token.type,\n            string = token.string,\n            length = string.length,\n            fallback = [];\n\n        if (type.indexOf('-') > -1) {\n          type = type.slice(type.indexOf('-') + 1);\n          if (type !== 'string') fallback.push('string');\n          fallback.push('key');\n          fallback.push('error');\n        }\n\n        let tokul = {\n          string: string,\n          length: length,\n          type: type,\n          fallback: fallback\n        };\n        buffer.tokens_fallback.push(tokul);\n      }\n\n      function tokenFollowed() {\n        const last = buffer.tokens_normalize.length - 1;\n        if (last < 1) return false;\n\n        for (var i = last; i >= 0; i--) {\n          const previousToken = buffer.tokens_normalize[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      for (var i = 0; i < buffer.tokens_fallback.length; i++) {\n        let token = buffer.tokens_fallback[i];\n        const type = token.type,\n              string = token.string;\n        let normalToken = {\n          type: type,\n          string: string\n        };\n\n        switch (type) {\n          case 'symbol':\n          case 'colon':\n            if (buffer2.stringOpen) {\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            }\n\n            switch (string) {\n              case '[':\n              case '{':\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ']':\n              case '}':\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ',':\n                if (tokenFollowed().type === 'colon') break;\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ':':\n                normalToken.type = 'colon';\n                buffer2.isValue = true;\n                break;\n            }\n\n            break;\n\n          case 'delimiter':\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n\n            if (!buffer2.stringOpen) {\n              buffer2.stringOpen = string;\n              break;\n            }\n\n            if (i > 0) {\n              const previousToken = buffer.tokens_fallback[i - 1],\n                    _string = previousToken.string,\n                    _type = previousToken.type,\n                    _char = _string.charAt(_string.length - 1);\n\n              if (_type === 'string' && _char === '\\\\') break;\n            }\n\n            if (buffer2.stringOpen === string) {\n              buffer2.stringOpen = false;\n              break;\n            }\n\n            break;\n\n          case 'primitive':\n          case 'string':\n            if (['false', 'true', 'null', 'undefined'].indexOf(string) > -1) {\n              const lastIndex = buffer.tokens_normalize.length - 1;\n\n              if (lastIndex >= 0) {\n                if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                  normalToken.type = 'primitive';\n                  break;\n                }\n\n                normalToken.type = 'string';\n                break;\n              }\n\n              normalToken.type = 'primitive';\n              break;\n            }\n\n            if (string === '\\n') if (!buffer2.stringOpen) {\n              normalToken.type = 'linebreak';\n              break;\n            }\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'space':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'number':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          default:\n            break;\n        }\n\n        buffer.tokens_normalize.push(normalToken);\n      }\n\n      for (var i = 0; i < buffer.tokens_normalize.length; i++) {\n        const token = buffer.tokens_normalize[i];\n        let mergedToken = {\n          string: token.string,\n          type: token.type,\n          tokens: [i]\n        };\n        if (['symbol', 'colon'].indexOf(token.type) === -1) if (i + 1 < buffer.tokens_normalize.length) {\n          let count = 0;\n\n          for (var u = i + 1; u < buffer.tokens_normalize.length; u++) {\n            const nextToken = buffer.tokens_normalize[u];\n            if (token.type !== nextToken.type) break;\n            mergedToken.string += nextToken.string;\n            mergedToken.tokens.push(u);\n            count++;\n          }\n\n          i += count;\n        }\n        buffer.tokens_merge.push(mergedToken);\n      }\n\n      const quotes = '\\'\"',\n            alphanumeric = 'abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789' + '_$';\n      var error = false,\n          line = buffer.tokens_merge.length > 0 ? 1 : 0;\n      buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      function setError(tokenID, reason, offset = 0) {\n        error = {\n          token: tokenID,\n          line: line,\n          reason: reason\n        };\n        buffer.tokens_merge[tokenID + offset].type = 'error';\n      }\n\n      function followedBySymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === buffer.tokens_merge.length - 1) return false;\n\n        for (var i = tokenID + 1; i < buffer.tokens_merge.length; i++) {\n          const nextToken = buffer.tokens_merge[i];\n\n          switch (nextToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(nextToken.string) > -1) return i;else return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function followsSymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(previousToken.string) > -1) return true;\n              return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function typeFollowed(tokenID) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken.type;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let bracketList = [];\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        if (error) break;\n        let token = buffer.tokens_merge[i],\n            string = token.string,\n            type = token.type,\n            found = false;\n\n        switch (type) {\n          case 'space':\n            break;\n\n          case 'linebreak':\n            line++;\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '{':\n              case '[':\n                found = followsSymbol(i, ['}', ']']);\n\n                if (found) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: buffer.tokens_merge[found].string,\n                    secondToken: string\n                  }));\n                  break;\n                }\n\n                if (string === '[' && i > 0) if (!followsSymbol(i, [':', '[', ','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                    firstToken: \"[\",\n                    secondToken: [\":\", \"[\", \",\"]\n                  }));\n                  break;\n                }\n                if (string === '{') if (followsSymbol(i, ['{'])) {\n                  setError(i, format(locale.invalidToken.double, {\n                    token: \"{\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case '}':\n              case ']':\n                if (string === '}') if (buffer2.brackets[buffer2.brackets.length - 1] !== '{') {\n                  setError(i, format(locale.brace.curly.missingOpen));\n                  break;\n                }\n                if (string === '}') if (followsSymbol(i, [','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \",\",\n                    secondToken: \"}\"\n                  }));\n                  break;\n                }\n                if (string === ']') if (buffer2.brackets[buffer2.brackets.length - 1] !== '[') {\n                  setError(i, format(locale.brace.square.missingOpen));\n                  break;\n                }\n                if (string === ']') if (followsSymbol(i, [':'])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \":\",\n                    secondToken: \"]\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case ',':\n                found = followsSymbol(i, ['{']);\n\n                if (found) {\n                  if (followedBySymbol(i, ['}'])) {\n                    setError(i, format(locale.brace.curly.cannotWrap, {\n                      token: \",\"\n                    }));\n                    break;\n                  }\n\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \"{\",\n                    secondToken: \",\"\n                  }));\n                  break;\n                }\n\n                if (followedBySymbol(i, ['}', ',', ']'])) {\n                  setError(i, format(locale.noTrailingOrLeadingComma));\n                  break;\n                }\n\n                found = typeFollowed(i);\n\n                switch (found) {\n                  case 'key':\n                  case 'colon':\n                    setError(i, format(locale.invalidToken.termSequence.prohibited, {\n                      firstTerm: found === 'key' ? locale.types.key : locale.symbols.colon,\n                      secondTerm: locale.symbols.comma\n                    }));\n                    break;\n\n                  case 'symbol':\n                    if (followsSymbol(i, ['{'])) {\n                      setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                        firstToken: \"{\",\n                        secondToken: \",\"\n                      }));\n                      break;\n                    }\n\n                    break;\n\n                  default:\n                    break;\n                }\n\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              default:\n                break;\n            }\n\n            buffer.json += string;\n            break;\n\n          case 'colon':\n            found = followsSymbol(i, ['[']);\n\n            if (found && followedBySymbol(i, [']'])) {\n              setError(i, format(locale.brace.square.cannotWrap, {\n                token: \":\"\n              }));\n              break;\n            }\n\n            if (found) {\n              setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                firstToken: \"[\",\n                secondToken: \":\"\n              }));\n              break;\n            }\n\n            if (typeFollowed(i) !== 'key') {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.key\n              }));\n              break;\n            }\n\n            if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.value\n              }));\n              break;\n            }\n\n            buffer2.isValue = true;\n            buffer.json += string;\n            break;\n\n          case 'key':\n          case 'string':\n            let firstChar = string.charAt(0),\n                lastChar = string.charAt(string.length - 1),\n                quote_primary = quotes.indexOf(firstChar);\n            if (quotes.indexOf(firstChar) === -1) if (quotes.indexOf(lastChar) !== -1) {\n              setError(i, format(locale.string.missingOpen, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(lastChar) === -1) if (quotes.indexOf(firstChar) !== -1) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(firstChar) > -1) if (firstChar !== lastChar) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if ('string' === type) if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) {\n              setError(i, format(locale.string.mustBeWrappedByQuotes));\n              break;\n            }\n            if ('key' === type) if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.types.key,\n                secondTerm: locale.symbols.colon\n              }));\n            }\n            if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) for (var h = 0; h < string.length; h++) {\n              if (error) break;\n              const c = string.charAt(h);\n\n              if (alphanumeric.indexOf(c) === -1) {\n                setError(i, format(locale.string.nonAlphanumeric, {\n                  token: c\n                }));\n                break;\n              }\n            }\n            if (firstChar === \"'\") string = '\"' + string.slice(1, -1) + '\"';else if (firstChar !== '\"') string = '\"' + string + '\"';\n            if ('key' === type) if ('key' === typeFollowed(i)) {\n              if (i > 0) if (!isNaN(buffer.tokens_merge[i - 1])) {\n                buffer.tokens_merge[i - 1] += buffer.tokens_merge[i];\n                setError(i, format(locale.key.numberAndLetterMissingQuotes));\n                break;\n              }\n              setError(i, format(locale.key.spaceMissingQuotes));\n              break;\n            }\n            if ('key' === type) if (!followsSymbol(i, ['{', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"{\", \",\"]\n              }));\n              break;\n            }\n            if ('string' === type) if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n            if ('key' === type) if (buffer2.isValue) {\n              setError(i, format(locale.string.unexpectedKey));\n              break;\n            }\n            if ('string' === type) if (!buffer2.isValue) {\n              setError(i, format(locale.key.unexpectedString));\n              break;\n            }\n            buffer.json += string;\n            break;\n\n          case 'number':\n          case 'primitive':\n            if (followsSymbol(i, ['{'])) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            } else if (typeFollowed(i) === 'key') {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n            } else if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n\n            if (type !== 'key') if (!buffer2.isValue) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            }\n            if (type === 'primitive') if (string === 'undefined') setError(i, format(locale.invalidToken.useInstead, {\n              badToken: \"undefined\",\n              goodToken: \"null\"\n            }));\n            buffer.json += string;\n            break;\n        }\n      }\n\n      let noEscapedSingleQuote = '';\n\n      for (var i = 0; i < buffer.json.length; i++) {\n        let current = buffer.json.charAt(i),\n            next = '';\n\n        if (i + 1 < buffer.json.length) {\n          next = buffer.json.charAt(i + 1);\n\n          if (current === '\\\\' && next === \"'\") {\n            noEscapedSingleQuote += next;\n            i++;\n            continue;\n          }\n        }\n\n        noEscapedSingleQuote += current;\n      }\n\n      buffer.json = noEscapedSingleQuote;\n\n      if (!error) {\n        const maxIterations = Math.ceil(bracketList.length / 2);\n        let round = 0,\n            delta = false;\n\n        function removePair(index) {\n          bracketList.splice(index + 1, 1);\n          bracketList.splice(index, 1);\n          if (!delta) delta = true;\n        }\n\n        while (bracketList.length > 0) {\n          delta = false;\n\n          for (var tokenCount = 0; tokenCount < bracketList.length - 1; tokenCount++) {\n            const pair = bracketList[tokenCount].string + bracketList[tokenCount + 1].string;\n            if (['[]', '{}'].indexOf(pair) > -1) removePair(tokenCount);\n          }\n\n          round++;\n          if (!delta) break;\n          if (round >= maxIterations) break;\n        }\n\n        if (bracketList.length > 0) {\n          const _tokenString = bracketList[0].string,\n                _tokenPosition = bracketList[0].i,\n                _closingBracketType = _tokenString === '[' ? ']' : '}';\n\n          line = bracketList[0].line;\n          setError(_tokenPosition, format(locale.brace[_closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n        }\n      }\n\n      if (!error) if ([undefined, ''].indexOf(buffer.json) === -1) try {\n        buffer.jsObject = JSON.parse(buffer.json);\n      } catch (err) {\n        const errorMessage = err.message,\n              subsMark = errorMessage.indexOf('position');\n        if (subsMark === -1) throw new Error('Error parsing failed');\n        const errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length),\n              errPosition = parseInt(errPositionStr);\n        let charTotal = 0,\n            tokenIndex = 0,\n            token = false,\n            _line = 1,\n            exitWhile = false;\n\n        while (charTotal < errPosition && !exitWhile) {\n          token = buffer.tokens_merge[tokenIndex];\n          if ('linebreak' === token.type) _line++;\n          if (['space', 'linebreak'].indexOf(token.type) === -1) charTotal += token.string.length;\n          if (charTotal >= errPosition) break;\n          tokenIndex++;\n          if (!buffer.tokens_merge[tokenIndex + 1]) exitWhile = true;\n        }\n\n        line = _line;\n        let backslashCount = 0;\n\n        for (let i = 0; i < token.string.length; i++) {\n          const char = token.string.charAt(i);\n          if (char === '\\\\') backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;else {\n            if (backslashCount % 2 !== 0 || backslashCount === 0) if ('\\'\"bfnrt'.indexOf(char) === -1) {\n              setError(tokenIndex, format(locale.invalidToken.unexpected, {\n                token: '\\\\'\n              }));\n            }\n            backslashCount = 0;\n          }\n        }\n\n        if (!error) setError(tokenIndex, format(locale.invalidToken.unexpected, {\n          token: token.string\n        }));\n      }\n      let _line = 1,\n          _depth = 0;\n\n      function newIndent() {\n        var space = [];\n\n        for (var i = 0; i < _depth * 2; i++) space.push('&nbsp;');\n\n        return space.join('');\n      }\n\n      function newLineBreak(byPass = false) {\n        _line++;\n\n        if (_depth > 0 || byPass) {\n          return '<br>';\n        }\n\n        return '';\n      }\n\n      function newLineBreakAndIndent(byPass = false) {\n        return newLineBreak(byPass) + newIndent();\n      }\n\n      ;\n      if (!error) for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        const token = buffer.tokens_merge[i],\n              string = token.string,\n              type = token.type;\n\n        switch (type) {\n          case 'space':\n          case 'linebreak':\n            break;\n\n          case 'string':\n          case 'number':\n          case 'primitive':\n          case 'error':\n            buffer.markup += (followsSymbol(i, [',', '[']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n            break;\n\n          case 'key':\n            buffer.markup += newLineBreakAndIndent() + newSpan(i, token, _depth);\n            break;\n\n          case 'colon':\n            buffer.markup += newSpan(i, token, _depth) + '&nbsp;';\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '[':\n              case '{':\n                buffer.markup += (!followsSymbol(i, [':']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n                _depth++;\n                break;\n\n              case ']':\n              case '}':\n                _depth--;\n\n                const islastToken = i === buffer.tokens_merge.length - 1,\n                      _adjustment = i > 0 ? ['[', '{'].indexOf(buffer.tokens_merge[i - 1].string) > -1 ? '' : newLineBreakAndIndent(islastToken) : '';\n\n                buffer.markup += _adjustment + newSpan(i, token, _depth);\n                break;\n\n              case ',':\n                buffer.markup += newSpan(i, token, _depth);\n                break;\n            }\n\n            break;\n        }\n      }\n\n      if (error) {\n        let _line_fallback = 1;\n\n        function countCarrigeReturn(string) {\n          let count = 0;\n\n          for (var i = 0; i < string.length; i++) {\n            if (['\\n', '\\r'].indexOf(string[i]) > -1) count++;\n          }\n\n          return count;\n        }\n\n        _line = 1;\n\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          const token = buffer.tokens_merge[i],\n                type = token.type,\n                string = token.string;\n          if (type === 'linebreak') _line++;\n          buffer.markup += newSpan(i, token, _depth);\n          _line_fallback += countCarrigeReturn(string);\n        }\n\n        _line++;\n        _line_fallback++;\n        if (_line < _line_fallback) _line = _line_fallback;\n      }\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        let token = buffer.tokens_merge[i];\n        buffer.indented += token.string;\n        if (['space', 'linebreak'].indexOf(token.type) === -1) buffer.tokens_plainText += token.string;\n      }\n\n      if (error) {\n        function isFunction(functionToCheck) {\n          return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n        }\n\n        if ('modifyErrorText' in this.props) if (isFunction(this.props.modifyErrorText)) error.reason = this.props.modifyErrorText(error.reason);\n      }\n\n      return {\n        tokens: buffer.tokens_merge,\n        noSpaces: buffer.tokens_plainText,\n        indented: buffer.indented,\n        json: buffer.json,\n        jsObject: buffer.jsObject,\n        markup: buffer.markup,\n        lines: _line,\n        error: error\n      };\n    }\n\n    ;\n    /**\r\n     *     JS OBJECTS || PLACEHOLDER\r\n     */\n\n    if (!('nodeType' in something)) {\n      let buffer = {\n        inputText: JSON.stringify(something),\n        position: 0,\n        currentChar: '',\n        tokenPrimary: '',\n        tokenSecondary: '',\n        brackets: [],\n        isValue: false,\n        stringOpen: false,\n        stringStart: 0,\n        tokens: []\n      };\n\n      function escape_character() {\n        if (buffer.currentChar !== '\\\\') return false;\n        return true;\n      }\n\n      function extract(string, position) {\n        return string.slice(0, position) + string.slice(position + 1);\n      }\n\n      function determine_string() {\n        if ('\\'\"'.indexOf(buffer.currentChar) === -1) return false;\n\n        if (!buffer.stringOpen) {\n          add_tokenSecondary();\n          buffer.stringStart = buffer.position;\n          buffer.stringOpen = buffer.currentChar;\n          return true;\n        }\n\n        if (buffer.stringOpen === buffer.currentChar) {\n          add_tokenSecondary();\n          const stringToken = buffer.inputText.substring(buffer.stringStart, buffer.position + 1);\n          add_tokenPrimary(stringToken);\n          buffer.stringOpen = false;\n          return true;\n        }\n\n        return false;\n      }\n\n      function determine_value() {\n        if (':,{}[]'.indexOf(buffer.currentChar) === -1) return false;\n        if (buffer.stringOpen) return false;\n        add_tokenSecondary();\n        add_tokenPrimary(buffer.currentChar);\n\n        switch (buffer.currentChar) {\n          case ':':\n            buffer.isValue = true;\n            return true;\n            break;\n\n          case '{':\n          case '[':\n            buffer.brackets.push(buffer.currentChar);\n            break;\n\n          case '}':\n          case ']':\n            buffer.brackets.pop();\n            break;\n        }\n\n        if (buffer.currentChar !== ':') buffer.isValue = buffer.brackets[buffer.brackets.length - 1] === '[';\n        return true;\n      }\n\n      function add_tokenSecondary() {\n        if (buffer.tokenSecondary.length === 0) return false;\n        buffer.tokens.push(buffer.tokenSecondary);\n        buffer.tokenSecondary = '';\n        return true;\n      }\n\n      function add_tokenPrimary(value) {\n        if (value.length === 0) return false;\n        buffer.tokens.push(value);\n        return true;\n      }\n\n      for (var i = 0; i < buffer.inputText.length; i++) {\n        buffer.position = i;\n        buffer.currentChar = buffer.inputText.charAt(buffer.position);\n        const a = determine_value(),\n              b = determine_string(),\n              c = escape_character();\n        if (!a && !b && !c) if (!buffer.stringOpen) buffer.tokenSecondary += buffer.currentChar;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        isValue: false,\n        tokens: []\n      };\n      buffer2.tokens = buffer.tokens.map(token => {\n        let type = '',\n            string = '',\n            value = '';\n\n        switch (token) {\n          case ',':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case ':':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = true;\n            break;\n\n          case '{':\n          case '[':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.push(token);\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case '}':\n          case ']':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.pop();\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case 'undefined':\n            type = 'primitive';\n            string = token;\n            value = undefined;\n            break;\n\n          case 'null':\n            type = 'primitive';\n            string = token;\n            value = null;\n            break;\n\n          case 'false':\n            type = 'primitive';\n            string = token;\n            value = false;\n            break;\n\n          case 'true':\n            type = 'primitive';\n            string = token;\n            value = true;\n            break;\n\n          default:\n            const C = token.charAt(0);\n\n            function stripQuotesFromKey(text) {\n              if (text.length === 0) return text;\n              if (['\"\"', \"''\"].indexOf(text) > -1) return \"''\";\n              let wrappedInQuotes = false;\n\n              for (var i = 0; i < 2; i++) {\n                if ([text.charAt(0), text.charAt(text.length - 1)].indexOf(['\"', \"'\"][i]) > -1) {\n                  wrappedInQuotes = true;\n                  break;\n                }\n              }\n\n              if (wrappedInQuotes && text.length >= 2) text = text.slice(1, -1);\n\n              const nonAlphaNumeric = text.replace(/\\w/g, ''),\n                    alphaNumeric = text.replace(/\\W+/g, ''),\n                    mayRemoveQuotes = ((nonAlphaNumeric, text) => {\n                let numberAndLetter = false;\n\n                for (var i = 0; i < text.length; i++) {\n                  if (i === 0) if (isNaN(text.charAt(i))) break;\n\n                  if (isNaN(text.charAt(i))) {\n                    numberAndLetter = true;\n                    break;\n                  }\n                }\n\n                return !(nonAlphaNumeric.length > 0 || numberAndLetter);\n              })(nonAlphaNumeric, text),\n                    hasQuotes = (string => {\n                for (var i = 0; i < string.length; i++) {\n                  if ([\"'\", '\"'].indexOf(string.charAt(i)) > -1) return true;\n                }\n\n                return false;\n              })(nonAlphaNumeric);\n\n              if (hasQuotes) {\n                let newText = '';\n                const charList = text.split('');\n\n                for (var ii = 0; ii < charList.length; ii++) {\n                  let char = charList[ii];\n                  if ([\"'\", '\"'].indexOf(char) > -1) char = '\\\\' + char;\n                  newText += char;\n                }\n\n                text = newText;\n              }\n\n              if (!mayRemoveQuotes) return \"'\" + text + \"'\";else return text;\n            }\n\n            if ('\\'\"'.indexOf(C) > -1) {\n              if (buffer2.isValue) type = 'string';else type = 'key';\n              if (type === 'key') string = stripQuotesFromKey(token);\n\n              if (type === 'string') {\n                string = '';\n                const charList2 = token.slice(1, -1).split('');\n\n                for (var ii = 0; ii < charList2.length; ii++) {\n                  let char = charList2[ii];\n                  if ('\\'\\\"'.indexOf(char) > -1) char = '\\\\' + char;\n                  string += char;\n                }\n\n                string = \"'\" + string + \"'\";\n              }\n\n              value = string;\n              break;\n            }\n\n            if (!isNaN(token)) {\n              type = 'number';\n              string = token;\n              value = Number(token);\n              break;\n            }\n\n            if (token.length > 0) if (!buffer2.isValue) {\n              type = 'key';\n              string = token;\n              if (string.indexOf(' ') > -1) string = \"'\" + string + \"'\";\n              value = string;\n              break;\n            }\n        }\n\n        return {\n          type: type,\n          string: string,\n          value: value,\n          depth: buffer2.brackets.length\n        };\n      });\n      let clean = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        clean += token.string;\n      }\n\n      function indent(number) {\n        var space = [];\n\n        for (var i = 0; i < number * 2; i++) space.push(' ');\n\n        return (number > 0 ? '\\n' : '') + space.join('');\n      }\n\n      ;\n      let indentation = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n\n        switch (token.string) {\n          case '[':\n          case '{':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) indentation += token.string + indent(token.depth);else indentation += token.string;\n            break;\n\n          case ']':\n          case '}':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) indentation += indent(token.depth) + token.string;else indentation += token.string;\n            break;\n\n          case ':':\n            indentation += token.string + ' ';\n            break;\n\n          case ',':\n            indentation += token.string + indent(token.depth);\n            break;\n\n          default:\n            indentation += token.string;\n            break;\n        }\n      }\n\n      let lines = 1;\n\n      function indentII(number) {\n        var space = [];\n        if (number > 0) lines++;\n\n        for (var i = 0; i < number * 2; i++) space.push('&nbsp;');\n\n        return (number > 0 ? '<br>' : '') + space.join('');\n      }\n\n      ;\n      let markup = '';\n      const lastIndex = buffer2.tokens.length - 1;\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        let span = newSpan(i, token, token.depth);\n\n        switch (token.string) {\n          case '{':\n          case '[':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) markup += span + indentII(token.depth);else markup += span;\n            break;\n\n          case '}':\n          case ']':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) markup += indentII(token.depth) + (lastIndex === i ? '<br>' : '') + span;else markup += span;\n            break;\n\n          case ':':\n            markup += span + ' ';\n            break;\n\n          case ',':\n            markup += span + indentII(token.depth);\n            break;\n\n          default:\n            markup += span;\n            break;\n        }\n      }\n\n      lines += 2;\n      return {\n        tokens: buffer2.tokens,\n        noSpaces: clean,\n        indented: indentation,\n        json: JSON.stringify(something),\n        jsObject: something,\n        markup: markup,\n        lines: lines\n      };\n    }\n  }\n\n}\n\nexport default JSONInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}