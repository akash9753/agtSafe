{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nvar KeyMod = /** @class */function () {\n  function KeyMod() {}\n  KeyMod.chord = function (firstPart, secondPart) {\n    return KeyChord(firstPart, secondPart);\n  };\n  KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n  KeyMod.Shift = 1024 /* Shift */;\n  KeyMod.Alt = 512 /* Alt */;\n  KeyMod.WinCtrl = 256 /* WinCtrl */;\n  return KeyMod;\n}();\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n  return {\n    editor: undefined,\n    languages: undefined,\n    CancellationTokenSource: CancellationTokenSource,\n    Emitter: Emitter,\n    KeyCode: standaloneEnums.KeyCode,\n    KeyMod: KeyMod,\n    Position: Position,\n    Range: Range,\n    Selection: Selection,\n    SelectionDirection: standaloneEnums.SelectionDirection,\n    MarkerSeverity: standaloneEnums.MarkerSeverity,\n    MarkerTag: standaloneEnums.MarkerTag,\n    Uri: URI,\n    Token: Token\n  };\n}","map":{"version":3,"names":["CancellationTokenSource","Emitter","KeyChord","URI","Position","Range","Selection","Token","standaloneEnums","KeyMod","chord","firstPart","secondPart","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","undefined","languages","KeyCode","SelectionDirection","MarkerSeverity","MarkerTag","Uri"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './promise-polyfill/polyfill.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection } from '../core/selection.js';\r\nimport { Token } from '../core/token.js';\r\nimport * as standaloneEnums from './standaloneEnums.js';\r\nvar KeyMod = /** @class */ (function () {\r\n    function KeyMod() {\r\n    }\r\n    KeyMod.chord = function (firstPart, secondPart) {\r\n        return KeyChord(firstPart, secondPart);\r\n    };\r\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\r\n    KeyMod.Shift = 1024 /* Shift */;\r\n    KeyMod.Alt = 512 /* Alt */;\r\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\r\n    return KeyMod;\r\n}());\r\nexport { KeyMod };\r\nexport function createMonacoBaseAPI() {\r\n    return {\r\n        editor: undefined,\r\n        languages: undefined,\r\n        CancellationTokenSource: CancellationTokenSource,\r\n        Emitter: Emitter,\r\n        KeyCode: standaloneEnums.KeyCode,\r\n        KeyMod: KeyMod,\r\n        Position: Position,\r\n        Range: Range,\r\n        Selection: Selection,\r\n        SelectionDirection: standaloneEnums.SelectionDirection,\r\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\r\n        MarkerTag: standaloneEnums.MarkerTag,\r\n        Uri: URI,\r\n        Token: Token\r\n    };\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,gCAAgC;AACvC,SAASA,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,GAAG,QAAQ,6BAA6B;AACjD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAO,KAAKC,eAAe,MAAM,sBAAsB;AACvD,IAAIC,MAAM,GAAG,aAAe,YAAY;EACpC,SAASA,MAAM,GAAG,CAClB;EACAA,MAAM,CAACC,KAAK,GAAG,UAAUC,SAAS,EAAEC,UAAU,EAAE;IAC5C,OAAOV,QAAQ,CAACS,SAAS,EAAEC,UAAU,CAAC;EAC1C,CAAC;EACDH,MAAM,CAACI,OAAO,GAAG,IAAI,CAAC;EACtBJ,MAAM,CAACK,KAAK,GAAG,IAAI,CAAC;EACpBL,MAAM,CAACM,GAAG,GAAG,GAAG,CAAC;EACjBN,MAAM,CAACO,OAAO,GAAG,GAAG,CAAC;EACrB,OAAOP,MAAM;AACjB,CAAC,EAAG;AACJ,SAASA,MAAM;AACf,OAAO,SAASQ,mBAAmB,GAAG;EAClC,OAAO;IACHC,MAAM,EAAEC,SAAS;IACjBC,SAAS,EAAED,SAAS;IACpBnB,uBAAuB,EAAEA,uBAAuB;IAChDC,OAAO,EAAEA,OAAO;IAChBoB,OAAO,EAAEb,eAAe,CAACa,OAAO;IAChCZ,MAAM,EAAEA,MAAM;IACdL,QAAQ,EAAEA,QAAQ;IAClBC,KAAK,EAAEA,KAAK;IACZC,SAAS,EAAEA,SAAS;IACpBgB,kBAAkB,EAAEd,eAAe,CAACc,kBAAkB;IACtDC,cAAc,EAAEf,eAAe,CAACe,cAAc;IAC9CC,SAAS,EAAEhB,eAAe,CAACgB,SAAS;IACpCC,GAAG,EAAEtB,GAAG;IACRI,KAAK,EAAEA;EACX,CAAC;AACL"},"metadata":{},"sourceType":"module"}