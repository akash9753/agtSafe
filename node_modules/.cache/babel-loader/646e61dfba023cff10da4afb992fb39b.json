{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HorizontalRange } from '../../../common/view/renderingContext.js';\nvar DecorationsOverlay = /** @class */function (_super) {\n  __extends(DecorationsOverlay, _super);\n  function DecorationsOverlay(context) {\n    var _this = _super.call(this) || this;\n    _this._context = context;\n    var options = _this._context.configuration.options;\n    _this._lineHeight = options.get(49 /* lineHeight */);\n    _this._typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\n    _this._renderResult = null;\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  DecorationsOverlay.prototype.dispose = function () {\n    this._context.removeEventHandler(this);\n    this._renderResult = null;\n    _super.prototype.dispose.call(this);\n  };\n  // --- begin event handlers\n  DecorationsOverlay.prototype.onConfigurationChanged = function (e) {\n    var options = this._context.configuration.options;\n    this._lineHeight = options.get(49 /* lineHeight */);\n    this._typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\n    return true;\n  };\n  DecorationsOverlay.prototype.onDecorationsChanged = function (e) {\n    return true;\n  };\n  DecorationsOverlay.prototype.onFlushed = function (e) {\n    return true;\n  };\n  DecorationsOverlay.prototype.onLinesChanged = function (e) {\n    return true;\n  };\n  DecorationsOverlay.prototype.onLinesDeleted = function (e) {\n    return true;\n  };\n  DecorationsOverlay.prototype.onLinesInserted = function (e) {\n    return true;\n  };\n  DecorationsOverlay.prototype.onScrollChanged = function (e) {\n    return e.scrollTopChanged || e.scrollWidthChanged;\n  };\n  DecorationsOverlay.prototype.onZonesChanged = function (e) {\n    return true;\n  };\n  // --- end event handlers\n  DecorationsOverlay.prototype.prepareRender = function (ctx) {\n    var _decorations = ctx.getDecorationsInViewport();\n    // Keep only decorations with `className`\n    var decorations = [],\n      decorationsLen = 0;\n    for (var i = 0, len = _decorations.length; i < len; i++) {\n      var d = _decorations[i];\n      if (d.options.className) {\n        decorations[decorationsLen++] = d;\n      }\n    }\n    // Sort decorations for consistent render output\n    decorations = decorations.sort(function (a, b) {\n      if (a.options.zIndex < b.options.zIndex) {\n        return -1;\n      }\n      if (a.options.zIndex > b.options.zIndex) {\n        return 1;\n      }\n      var aClassName = a.options.className;\n      var bClassName = b.options.className;\n      if (aClassName < bClassName) {\n        return -1;\n      }\n      if (aClassName > bClassName) {\n        return 1;\n      }\n      return Range.compareRangesUsingStarts(a.range, b.range);\n    });\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    var output = [];\n    for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      var lineIndex = lineNumber - visibleStartLineNumber;\n      output[lineIndex] = '';\n    }\n    // Render first whole line decorations and then regular decorations\n    this._renderWholeLineDecorations(ctx, decorations, output);\n    this._renderNormalDecorations(ctx, decorations, output);\n    this._renderResult = output;\n  };\n  DecorationsOverlay.prototype._renderWholeLineDecorations = function (ctx, decorations, output) {\n    var lineHeight = String(this._lineHeight);\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    for (var i = 0, lenI = decorations.length; i < lenI; i++) {\n      var d = decorations[i];\n      if (!d.options.isWholeLine) {\n        continue;\n      }\n      var decorationOutput = '<div class=\"cdr ' + d.options.className + '\" style=\"left:0;width:100%;height:' + lineHeight + 'px;\"></div>';\n      var startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n      var endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n      for (var j = startLineNumber; j <= endLineNumber; j++) {\n        var lineIndex = j - visibleStartLineNumber;\n        output[lineIndex] += decorationOutput;\n      }\n    }\n  };\n  DecorationsOverlay.prototype._renderNormalDecorations = function (ctx, decorations, output) {\n    var lineHeight = String(this._lineHeight);\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var prevClassName = null;\n    var prevShowIfCollapsed = false;\n    var prevRange = null;\n    for (var i = 0, lenI = decorations.length; i < lenI; i++) {\n      var d = decorations[i];\n      if (d.options.isWholeLine) {\n        continue;\n      }\n      var className = d.options.className;\n      var showIfCollapsed = Boolean(d.options.showIfCollapsed);\n      var range = d.range;\n      if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n        range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.model.getLineMaxColumn(range.endLineNumber - 1));\n      }\n      if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\n        // merge into previous decoration\n        prevRange = Range.plusRange(prevRange, range);\n        continue;\n      }\n      // flush previous decoration\n      if (prevClassName !== null) {\n        this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n      }\n      prevClassName = className;\n      prevShowIfCollapsed = showIfCollapsed;\n      prevRange = range;\n    }\n    if (prevClassName !== null) {\n      this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n    }\n  };\n  DecorationsOverlay.prototype._renderNormalDecoration = function (ctx, range, className, showIfCollapsed, lineHeight, visibleStartLineNumber, output) {\n    var linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/className === 'findMatch');\n    if (!linesVisibleRanges) {\n      return;\n    }\n    for (var j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n      var lineVisibleRanges = linesVisibleRanges[j];\n      if (lineVisibleRanges.outsideRenderedLine) {\n        continue;\n      }\n      var lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n      if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n        var singleVisibleRange = lineVisibleRanges.ranges[0];\n        if (singleVisibleRange.width === 0) {\n          // collapsed range case => make the decoration visible by faking its width\n          lineVisibleRanges.ranges[0] = new HorizontalRange(singleVisibleRange.left, this._typicalHalfwidthCharacterWidth);\n        }\n      }\n      for (var k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n        var visibleRange = lineVisibleRanges.ranges[k];\n        var decorationOutput = '<div class=\"cdr ' + className + '\" style=\"left:' + String(visibleRange.left) + 'px;width:' + String(visibleRange.width) + 'px;height:' + lineHeight + 'px;\"></div>';\n        output[lineIndex] += decorationOutput;\n      }\n    }\n  };\n  DecorationsOverlay.prototype.render = function (startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n    var lineIndex = lineNumber - startLineNumber;\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n    return this._renderResult[lineIndex];\n  };\n  return DecorationsOverlay;\n}(DynamicViewOverlay);\nexport { DecorationsOverlay };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","DynamicViewOverlay","Range","HorizontalRange","DecorationsOverlay","_super","context","_this","call","_context","options","configuration","_lineHeight","get","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_renderResult","addEventHandler","dispose","removeEventHandler","onConfigurationChanged","e","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","scrollWidthChanged","onZonesChanged","prepareRender","ctx","_decorations","getDecorationsInViewport","decorations","decorationsLen","i","len","length","className","sort","a","zIndex","aClassName","bClassName","compareRangesUsingStarts","range","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","output","lineNumber","lineIndex","_renderWholeLineDecorations","_renderNormalDecorations","lineHeight","String","lenI","isWholeLine","decorationOutput","Math","max","min","j","prevClassName","prevShowIfCollapsed","prevRange","showIfCollapsed","Boolean","endColumn","startColumn","model","getLineMaxColumn","areIntersectingOrTouching","plusRange","_renderNormalDecoration","linesVisibleRanges","linesVisibleRangesForRange","lenJ","lineVisibleRanges","outsideRenderedLine","ranges","singleVisibleRange","width","left","k","lenK","render"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './decorations.css';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { HorizontalRange } from '../../../common/view/renderingContext.js';\r\nvar DecorationsOverlay = /** @class */ (function (_super) {\r\n    __extends(DecorationsOverlay, _super);\r\n    function DecorationsOverlay(context) {\r\n        var _this = _super.call(this) || this;\r\n        _this._context = context;\r\n        var options = _this._context.configuration.options;\r\n        _this._lineHeight = options.get(49 /* lineHeight */);\r\n        _this._typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        _this._renderResult = null;\r\n        _this._context.addEventHandler(_this);\r\n        return _this;\r\n    }\r\n    DecorationsOverlay.prototype.dispose = function () {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    // --- begin event handlers\r\n    DecorationsOverlay.prototype.onConfigurationChanged = function (e) {\r\n        var options = this._context.configuration.options;\r\n        this._lineHeight = options.get(49 /* lineHeight */);\r\n        this._typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onDecorationsChanged = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onFlushed = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onLinesChanged = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onLinesDeleted = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onLinesInserted = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onScrollChanged = function (e) {\r\n        return e.scrollTopChanged || e.scrollWidthChanged;\r\n    };\r\n    DecorationsOverlay.prototype.onZonesChanged = function (e) {\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    DecorationsOverlay.prototype.prepareRender = function (ctx) {\r\n        var _decorations = ctx.getDecorationsInViewport();\r\n        // Keep only decorations with `className`\r\n        var decorations = [], decorationsLen = 0;\r\n        for (var i = 0, len = _decorations.length; i < len; i++) {\r\n            var d = _decorations[i];\r\n            if (d.options.className) {\r\n                decorations[decorationsLen++] = d;\r\n            }\r\n        }\r\n        // Sort decorations for consistent render output\r\n        decorations = decorations.sort(function (a, b) {\r\n            if (a.options.zIndex < b.options.zIndex) {\r\n                return -1;\r\n            }\r\n            if (a.options.zIndex > b.options.zIndex) {\r\n                return 1;\r\n            }\r\n            var aClassName = a.options.className;\r\n            var bClassName = b.options.className;\r\n            if (aClassName < bClassName) {\r\n                return -1;\r\n            }\r\n            if (aClassName > bClassName) {\r\n                return 1;\r\n            }\r\n            return Range.compareRangesUsingStarts(a.range, b.range);\r\n        });\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        var output = [];\r\n        for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            var lineIndex = lineNumber - visibleStartLineNumber;\r\n            output[lineIndex] = '';\r\n        }\r\n        // Render first whole line decorations and then regular decorations\r\n        this._renderWholeLineDecorations(ctx, decorations, output);\r\n        this._renderNormalDecorations(ctx, decorations, output);\r\n        this._renderResult = output;\r\n    };\r\n    DecorationsOverlay.prototype._renderWholeLineDecorations = function (ctx, decorations, output) {\r\n        var lineHeight = String(this._lineHeight);\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        for (var i = 0, lenI = decorations.length; i < lenI; i++) {\r\n            var d = decorations[i];\r\n            if (!d.options.isWholeLine) {\r\n                continue;\r\n            }\r\n            var decorationOutput = ('<div class=\"cdr '\r\n                + d.options.className\r\n                + '\" style=\"left:0;width:100%;height:'\r\n                + lineHeight\r\n                + 'px;\"></div>');\r\n            var startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\r\n            var endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\r\n            for (var j = startLineNumber; j <= endLineNumber; j++) {\r\n                var lineIndex = j - visibleStartLineNumber;\r\n                output[lineIndex] += decorationOutput;\r\n            }\r\n        }\r\n    };\r\n    DecorationsOverlay.prototype._renderNormalDecorations = function (ctx, decorations, output) {\r\n        var lineHeight = String(this._lineHeight);\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var prevClassName = null;\r\n        var prevShowIfCollapsed = false;\r\n        var prevRange = null;\r\n        for (var i = 0, lenI = decorations.length; i < lenI; i++) {\r\n            var d = decorations[i];\r\n            if (d.options.isWholeLine) {\r\n                continue;\r\n            }\r\n            var className = d.options.className;\r\n            var showIfCollapsed = Boolean(d.options.showIfCollapsed);\r\n            var range = d.range;\r\n            if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\r\n                range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.model.getLineMaxColumn(range.endLineNumber - 1));\r\n            }\r\n            if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\r\n                // merge into previous decoration\r\n                prevRange = Range.plusRange(prevRange, range);\r\n                continue;\r\n            }\r\n            // flush previous decoration\r\n            if (prevClassName !== null) {\r\n                this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\r\n            }\r\n            prevClassName = className;\r\n            prevShowIfCollapsed = showIfCollapsed;\r\n            prevRange = range;\r\n        }\r\n        if (prevClassName !== null) {\r\n            this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\r\n        }\r\n    };\r\n    DecorationsOverlay.prototype._renderNormalDecoration = function (ctx, range, className, showIfCollapsed, lineHeight, visibleStartLineNumber, output) {\r\n        var linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/ className === 'findMatch');\r\n        if (!linesVisibleRanges) {\r\n            return;\r\n        }\r\n        for (var j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\r\n            var lineVisibleRanges = linesVisibleRanges[j];\r\n            if (lineVisibleRanges.outsideRenderedLine) {\r\n                continue;\r\n            }\r\n            var lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\r\n            if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\r\n                var singleVisibleRange = lineVisibleRanges.ranges[0];\r\n                if (singleVisibleRange.width === 0) {\r\n                    // collapsed range case => make the decoration visible by faking its width\r\n                    lineVisibleRanges.ranges[0] = new HorizontalRange(singleVisibleRange.left, this._typicalHalfwidthCharacterWidth);\r\n                }\r\n            }\r\n            for (var k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\r\n                var visibleRange = lineVisibleRanges.ranges[k];\r\n                var decorationOutput = ('<div class=\"cdr '\r\n                    + className\r\n                    + '\" style=\"left:'\r\n                    + String(visibleRange.left)\r\n                    + 'px;width:'\r\n                    + String(visibleRange.width)\r\n                    + 'px;height:'\r\n                    + lineHeight\r\n                    + 'px;\"></div>');\r\n                output[lineIndex] += decorationOutput;\r\n            }\r\n        }\r\n    };\r\n    DecorationsOverlay.prototype.render = function (startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        var lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineIndex];\r\n    };\r\n    return DecorationsOverlay;\r\n}(DynamicViewOverlay));\r\nexport { DecorationsOverlay };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}