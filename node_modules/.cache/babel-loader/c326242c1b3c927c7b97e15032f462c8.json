{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar CSSDataProvider = /** @class */function () {\n  /**\n   * Currently, unversioned data uses the V1 implementation\n   * In the future when the provider handles multiple versions of HTML custom data,\n   * use the latest implementation for unversioned data\n   */\n  function CSSDataProvider(data) {\n    this._properties = [];\n    this._atDirectives = [];\n    this._pseudoClasses = [];\n    this._pseudoElements = [];\n    this.addData(data);\n  }\n  CSSDataProvider.prototype.provideProperties = function () {\n    return this._properties;\n  };\n  CSSDataProvider.prototype.provideAtDirectives = function () {\n    return this._atDirectives;\n  };\n  CSSDataProvider.prototype.providePseudoClasses = function () {\n    return this._pseudoClasses;\n  };\n  CSSDataProvider.prototype.providePseudoElements = function () {\n    return this._pseudoElements;\n  };\n  CSSDataProvider.prototype.addData = function (data) {\n    if (data.properties) {\n      this._properties = this._properties.concat(data.properties);\n    }\n    if (data.atDirectives) {\n      this._atDirectives = this._atDirectives.concat(data.atDirectives);\n    }\n    if (data.pseudoClasses) {\n      this._pseudoClasses = this._pseudoClasses.concat(data.pseudoClasses);\n    }\n    if (data.pseudoElements) {\n      this._pseudoElements = this._pseudoElements.concat(data.pseudoElements);\n    }\n  };\n  return CSSDataProvider;\n}();\nexport { CSSDataProvider };","map":{"version":3,"names":["CSSDataProvider","data","_properties","_atDirectives","_pseudoClasses","_pseudoElements","addData","prototype","provideProperties","provideAtDirectives","providePseudoClasses","providePseudoElements","properties","concat","atDirectives","pseudoClasses","pseudoElements"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar CSSDataProvider = /** @class */ (function () {\n    /**\n     * Currently, unversioned data uses the V1 implementation\n     * In the future when the provider handles multiple versions of HTML custom data,\n     * use the latest implementation for unversioned data\n     */\n    function CSSDataProvider(data) {\n        this._properties = [];\n        this._atDirectives = [];\n        this._pseudoClasses = [];\n        this._pseudoElements = [];\n        this.addData(data);\n    }\n    CSSDataProvider.prototype.provideProperties = function () {\n        return this._properties;\n    };\n    CSSDataProvider.prototype.provideAtDirectives = function () {\n        return this._atDirectives;\n    };\n    CSSDataProvider.prototype.providePseudoClasses = function () {\n        return this._pseudoClasses;\n    };\n    CSSDataProvider.prototype.providePseudoElements = function () {\n        return this._pseudoElements;\n    };\n    CSSDataProvider.prototype.addData = function (data) {\n        if (data.properties) {\n            this._properties = this._properties.concat(data.properties);\n        }\n        if (data.atDirectives) {\n            this._atDirectives = this._atDirectives.concat(data.atDirectives);\n        }\n        if (data.pseudoClasses) {\n            this._pseudoClasses = this._pseudoClasses.concat(data.pseudoClasses);\n        }\n        if (data.pseudoElements) {\n            this._pseudoElements = this._pseudoElements.concat(data.pseudoElements);\n        }\n    };\n    return CSSDataProvider;\n}());\nexport { CSSDataProvider };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZ,IAAIA,eAAe,GAAG,aAAe,YAAY;EAC7C;AACJ;AACA;AACA;AACA;EACI,SAASA,eAAe,CAACC,IAAI,EAAE;IAC3B,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,OAAO,CAACL,IAAI,CAAC;EACtB;EACAD,eAAe,CAACO,SAAS,CAACC,iBAAiB,GAAG,YAAY;IACtD,OAAO,IAAI,CAACN,WAAW;EAC3B,CAAC;EACDF,eAAe,CAACO,SAAS,CAACE,mBAAmB,GAAG,YAAY;IACxD,OAAO,IAAI,CAACN,aAAa;EAC7B,CAAC;EACDH,eAAe,CAACO,SAAS,CAACG,oBAAoB,GAAG,YAAY;IACzD,OAAO,IAAI,CAACN,cAAc;EAC9B,CAAC;EACDJ,eAAe,CAACO,SAAS,CAACI,qBAAqB,GAAG,YAAY;IAC1D,OAAO,IAAI,CAACN,eAAe;EAC/B,CAAC;EACDL,eAAe,CAACO,SAAS,CAACD,OAAO,GAAG,UAAUL,IAAI,EAAE;IAChD,IAAIA,IAAI,CAACW,UAAU,EAAE;MACjB,IAAI,CAACV,WAAW,GAAG,IAAI,CAACA,WAAW,CAACW,MAAM,CAACZ,IAAI,CAACW,UAAU,CAAC;IAC/D;IACA,IAAIX,IAAI,CAACa,YAAY,EAAE;MACnB,IAAI,CAACX,aAAa,GAAG,IAAI,CAACA,aAAa,CAACU,MAAM,CAACZ,IAAI,CAACa,YAAY,CAAC;IACrE;IACA,IAAIb,IAAI,CAACc,aAAa,EAAE;MACpB,IAAI,CAACX,cAAc,GAAG,IAAI,CAACA,cAAc,CAACS,MAAM,CAACZ,IAAI,CAACc,aAAa,CAAC;IACxE;IACA,IAAId,IAAI,CAACe,cAAc,EAAE;MACrB,IAAI,CAACX,eAAe,GAAG,IAAI,CAACA,eAAe,CAACQ,MAAM,CAACZ,IAAI,CAACe,cAAc,CAAC;IAC3E;EACJ,CAAC;EACD,OAAOhB,eAAe;AAC1B,CAAC,EAAG;AACJ,SAASA,eAAe"},"metadata":{},"sourceType":"module"}