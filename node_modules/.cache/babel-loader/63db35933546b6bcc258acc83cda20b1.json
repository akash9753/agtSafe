{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar escapeCodiconsRegex = /(\\\\)?\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\nexport function escapeCodicons(text) {\n  return text.replace(escapeCodiconsRegex, function (match, escaped) {\n    return escaped ? match : \"\\\\\" + match;\n  });\n}\nvar markdownEscapedCodiconsRegex = /\\\\\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\nexport function markdownEscapeEscapedCodicons(text) {\n  // Need to add an extra \\ for escaping in markdown\n  return text.replace(markdownEscapedCodiconsRegex, function (match) {\n    return \"\\\\\" + match;\n  });\n}\nvar renderCodiconsRegex = /(\\\\)?\\$\\((([a-z0-9\\-]+?)(?:~([a-z0-9\\-]*?))?)\\)/gi;\nexport function renderCodicons(text) {\n  return text.replace(renderCodiconsRegex, function (_, escaped, codicon, name, animation) {\n    return escaped ? \"$(\" + codicon + \")\" : \"<span class=\\\"codicon codicon-\" + name + (animation ? \" codicon-animation-\" + animation : '') + \"\\\"></span>\";\n  });\n}","map":{"version":3,"names":["escapeCodiconsRegex","escapeCodicons","text","replace","match","escaped","markdownEscapedCodiconsRegex","markdownEscapeEscapedCodicons","renderCodiconsRegex","renderCodicons","_","codicon","name","animation"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/codicons.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar escapeCodiconsRegex = /(\\\\)?\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\r\nexport function escapeCodicons(text) {\r\n    return text.replace(escapeCodiconsRegex, function (match, escaped) { return escaped ? match : \"\\\\\" + match; });\r\n}\r\nvar markdownEscapedCodiconsRegex = /\\\\\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\r\nexport function markdownEscapeEscapedCodicons(text) {\r\n    // Need to add an extra \\ for escaping in markdown\r\n    return text.replace(markdownEscapedCodiconsRegex, function (match) { return \"\\\\\" + match; });\r\n}\r\nvar renderCodiconsRegex = /(\\\\)?\\$\\((([a-z0-9\\-]+?)(?:~([a-z0-9\\-]*?))?)\\)/gi;\r\nexport function renderCodicons(text) {\r\n    return text.replace(renderCodiconsRegex, function (_, escaped, codicon, name, animation) {\r\n        return escaped\r\n            ? \"$(\" + codicon + \")\"\r\n            : \"<span class=\\\"codicon codicon-\" + name + (animation ? \" codicon-animation-\" + animation : '') + \"\\\"></span>\";\r\n    });\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,mBAAmB,GAAG,6CAA6C;AACvE,OAAO,SAASC,cAAc,CAACC,IAAI,EAAE;EACjC,OAAOA,IAAI,CAACC,OAAO,CAACH,mBAAmB,EAAE,UAAUI,KAAK,EAAEC,OAAO,EAAE;IAAE,OAAOA,OAAO,GAAGD,KAAK,GAAG,IAAI,GAAGA,KAAK;EAAE,CAAC,CAAC;AAClH;AACA,IAAIE,4BAA4B,GAAG,0CAA0C;AAC7E,OAAO,SAASC,6BAA6B,CAACL,IAAI,EAAE;EAChD;EACA,OAAOA,IAAI,CAACC,OAAO,CAACG,4BAA4B,EAAE,UAAUF,KAAK,EAAE;IAAE,OAAO,IAAI,GAAGA,KAAK;EAAE,CAAC,CAAC;AAChG;AACA,IAAII,mBAAmB,GAAG,mDAAmD;AAC7E,OAAO,SAASC,cAAc,CAACP,IAAI,EAAE;EACjC,OAAOA,IAAI,CAACC,OAAO,CAACK,mBAAmB,EAAE,UAAUE,CAAC,EAAEL,OAAO,EAAEM,OAAO,EAAEC,IAAI,EAAEC,SAAS,EAAE;IACrF,OAAOR,OAAO,GACR,IAAI,GAAGM,OAAO,GAAG,GAAG,GACpB,gCAAgC,GAAGC,IAAI,IAAIC,SAAS,GAAG,qBAAqB,GAAGA,SAAS,GAAG,EAAE,CAAC,GAAG,YAAY;EACvH,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}