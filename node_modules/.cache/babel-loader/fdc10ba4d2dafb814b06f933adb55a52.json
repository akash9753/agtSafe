{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\nvar LineContext = /** @class */function () {\n  function LineContext(leadingLineContent, characterCountDelta) {\n    this.leadingLineContent = leadingLineContent;\n    this.characterCountDelta = characterCountDelta;\n  }\n  return LineContext;\n}();\nexport { LineContext };\nvar CompletionModel = /** @class */function () {\n  function CompletionModel(items, column, lineContext, wordDistance, options, snippetSuggestions) {\n    this._snippetCompareFn = CompletionModel._compareCompletionItems;\n    this._items = items;\n    this._column = column;\n    this._wordDistance = wordDistance;\n    this._options = options;\n    this._refilterKind = 1 /* All */;\n    this._lineContext = lineContext;\n    if (snippetSuggestions === 'top') {\n      this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\n    } else if (snippetSuggestions === 'bottom') {\n      this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\n    }\n  }\n  Object.defineProperty(CompletionModel.prototype, \"lineContext\", {\n    get: function get() {\n      return this._lineContext;\n    },\n    set: function set(value) {\n      if (this._lineContext.leadingLineContent !== value.leadingLineContent || this._lineContext.characterCountDelta !== value.characterCountDelta) {\n        this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\n        this._lineContext = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompletionModel.prototype, \"items\", {\n    get: function get() {\n      this._ensureCachedState();\n      return this._filteredItems;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompletionModel.prototype, \"incomplete\", {\n    get: function get() {\n      this._ensureCachedState();\n      return this._isIncomplete;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  CompletionModel.prototype.adopt = function (except) {\n    var res = new Array();\n    for (var i = 0; i < this._items.length;) {\n      if (!except.has(this._items[i].provider)) {\n        res.push(this._items[i]);\n        // unordered removed\n        this._items[i] = this._items[this._items.length - 1];\n        this._items.pop();\n      } else {\n        // continue with next item\n        i++;\n      }\n    }\n    this._refilterKind = 1 /* All */;\n    return res;\n  };\n  Object.defineProperty(CompletionModel.prototype, \"stats\", {\n    get: function get() {\n      this._ensureCachedState();\n      return this._stats;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  CompletionModel.prototype._ensureCachedState = function () {\n    if (this._refilterKind !== 0 /* Nothing */) {\n      this._createCachedState();\n    }\n  };\n  CompletionModel.prototype._createCachedState = function () {\n    this._isIncomplete = new Set();\n    this._stats = {\n      suggestionCount: 0,\n      snippetCount: 0,\n      textCount: 0\n    };\n    var _a = this._lineContext,\n      leadingLineContent = _a.leadingLineContent,\n      characterCountDelta = _a.characterCountDelta;\n    var word = '';\n    var wordLow = '';\n    // incrementally filter less\n    var source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\n    var target = [];\n    // picks a score function based on the number of\n    // items that we have to score/filter and based on the\n    // user-configuration\n    var scoreFn = !this._options.filterGraceful || source.length > 2000 ? fuzzyScore : fuzzyScoreGracefulAggressive;\n    for (var i = 0; i < source.length; i++) {\n      var item = source[i];\n      // collect those supports that signaled having\n      // an incomplete result\n      if (item.container.incomplete) {\n        this._isIncomplete.add(item.provider);\n      }\n      // 'word' is that remainder of the current line that we\n      // filter and score against. In theory each suggestion uses a\n      // different word, but in practice not - that's why we cache\n      var overwriteBefore = item.position.column - item.editStart.column;\n      var wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\n      if (word.length !== wordLen) {\n        word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\n        wordLow = word.toLowerCase();\n      }\n      // remember the word against which this item was\n      // scored\n      item.word = word;\n      if (wordLen === 0) {\n        // when there is nothing to score against, don't\n        // event try to do. Use a const rank and rely on\n        // the fallback-sort using the initial sort order.\n        // use a score of `-100` because that is out of the\n        // bound of values `fuzzyScore` will return\n        item.score = FuzzyScore.Default;\n      } else {\n        // skip word characters that are whitespace until\n        // we have hit the replace range (overwriteBefore)\n        var wordPos = 0;\n        while (wordPos < overwriteBefore) {\n          var ch = word.charCodeAt(wordPos);\n          if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\n            wordPos += 1;\n          } else {\n            break;\n          }\n        }\n        var textLabel = typeof item.completion.label === 'string' ? item.completion.label : item.completion.label.name;\n        if (wordPos >= wordLen) {\n          // the wordPos at which scoring starts is the whole word\n          // and therefore the same rules as not having a word apply\n          item.score = FuzzyScore.Default;\n        } else if (typeof item.completion.filterText === 'string') {\n          // when there is a `filterText` it must match the `word`.\n          // if it matches we check with the label to compute highlights\n          // and if that doesn't yield a result we have no highlights,\n          // despite having the match\n          var match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\n          if (!match) {\n            continue; // NO match\n          }\n\n          if (compareIgnoreCase(item.completion.filterText, textLabel) === 0) {\n            // filterText and label are actually the same -> use good highlights\n            item.score = match;\n          } else {\n            // re-run the scorer on the label in the hope of a result BUT use the rank\n            // of the filterText-match\n            item.score = anyScore(word, wordLow, wordPos, textLabel, item.labelLow, 0);\n            item.score[0] = match[0]; // use score from filterText\n          }\n        } else {\n          // by default match `word` against the `label`\n          var match = scoreFn(word, wordLow, wordPos, textLabel, item.labelLow, 0, false);\n          if (!match) {\n            continue; // NO match\n          }\n\n          item.score = match;\n        }\n      }\n      item.idx = i;\n      item.distance = this._wordDistance.distance(item.position, item.completion);\n      target.push(item);\n      // update stats\n      this._stats.suggestionCount++;\n      switch (item.completion.kind) {\n        case 25 /* Snippet */:\n          this._stats.snippetCount++;\n          break;\n        case 18 /* Text */:\n          this._stats.textCount++;\n          break;\n      }\n    }\n    this._filteredItems = target.sort(this._snippetCompareFn);\n    this._refilterKind = 0 /* Nothing */;\n  };\n\n  CompletionModel._compareCompletionItems = function (a, b) {\n    if (a.score[0] > b.score[0]) {\n      return -1;\n    } else if (a.score[0] < b.score[0]) {\n      return 1;\n    } else if (a.distance < b.distance) {\n      return -1;\n    } else if (a.distance > b.distance) {\n      return 1;\n    } else if (a.idx < b.idx) {\n      return -1;\n    } else if (a.idx > b.idx) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n  CompletionModel._compareCompletionItemsSnippetsDown = function (a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n      if (a.completion.kind === 25 /* Snippet */) {\n        return 1;\n      } else if (b.completion.kind === 25 /* Snippet */) {\n        return -1;\n      }\n    }\n    return CompletionModel._compareCompletionItems(a, b);\n  };\n  CompletionModel._compareCompletionItemsSnippetsUp = function (a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n      if (a.completion.kind === 25 /* Snippet */) {\n        return -1;\n      } else if (b.completion.kind === 25 /* Snippet */) {\n        return 1;\n      }\n    }\n    return CompletionModel._compareCompletionItems(a, b);\n  };\n  return CompletionModel;\n}();\nexport { CompletionModel };","map":{"version":3,"names":["fuzzyScore","fuzzyScoreGracefulAggressive","FuzzyScore","anyScore","compareIgnoreCase","LineContext","leadingLineContent","characterCountDelta","CompletionModel","items","column","lineContext","wordDistance","options","snippetSuggestions","_snippetCompareFn","_compareCompletionItems","_items","_column","_wordDistance","_options","_refilterKind","_lineContext","_compareCompletionItemsSnippetsUp","_compareCompletionItemsSnippetsDown","Object","defineProperty","prototype","get","set","value","_filteredItems","enumerable","configurable","_ensureCachedState","_isIncomplete","adopt","except","res","Array","i","length","has","provider","push","pop","_stats","_createCachedState","Set","suggestionCount","snippetCount","textCount","_a","word","wordLow","source","target","scoreFn","filterGraceful","item","container","incomplete","add","overwriteBefore","position","editStart","wordLen","slice","toLowerCase","score","Default","wordPos","ch","charCodeAt","textLabel","completion","label","name","filterText","match","filterTextLow","labelLow","idx","distance","kind","sort","a","b"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/completionModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\r\nvar LineContext = /** @class */ (function () {\r\n    function LineContext(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n    return LineContext;\r\n}());\r\nexport { LineContext };\r\nvar CompletionModel = /** @class */ (function () {\r\n    function CompletionModel(items, column, lineContext, wordDistance, options, snippetSuggestions) {\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* All */;\r\n        this._lineContext = lineContext;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    Object.defineProperty(CompletionModel.prototype, \"lineContext\", {\r\n        get: function () {\r\n            return this._lineContext;\r\n        },\r\n        set: function (value) {\r\n            if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n                || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n                this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\r\n                this._lineContext = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompletionModel.prototype, \"items\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._filteredItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompletionModel.prototype, \"incomplete\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._isIncomplete;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionModel.prototype.adopt = function (except) {\r\n        var res = new Array();\r\n        for (var i = 0; i < this._items.length;) {\r\n            if (!except.has(this._items[i].provider)) {\r\n                res.push(this._items[i]);\r\n                // unordered removed\r\n                this._items[i] = this._items[this._items.length - 1];\r\n                this._items.pop();\r\n            }\r\n            else {\r\n                // continue with next item\r\n                i++;\r\n            }\r\n        }\r\n        this._refilterKind = 1 /* All */;\r\n        return res;\r\n    };\r\n    Object.defineProperty(CompletionModel.prototype, \"stats\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._stats;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionModel.prototype._ensureCachedState = function () {\r\n        if (this._refilterKind !== 0 /* Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    };\r\n    CompletionModel.prototype._createCachedState = function () {\r\n        this._isIncomplete = new Set();\r\n        this._stats = { suggestionCount: 0, snippetCount: 0, textCount: 0 };\r\n        var _a = this._lineContext, leadingLineContent = _a.leadingLineContent, characterCountDelta = _a.characterCountDelta;\r\n        var word = '';\r\n        var wordLow = '';\r\n        // incrementally filter less\r\n        var source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\r\n        var target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        var scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (var i = 0; i < source.length; i++) {\r\n            var item = source[i];\r\n            // collect those supports that signaled having\r\n            // an incomplete result\r\n            if (item.container.incomplete) {\r\n                this._isIncomplete.add(item.provider);\r\n            }\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            var overwriteBefore = item.position.column - item.editStart.column;\r\n            var wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                var wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    var ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                var textLabel = typeof item.completion.label === 'string' ? item.completion.label : item.completion.label.name;\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    var match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    var match = scoreFn(word, wordLow, wordPos, textLabel, item.labelLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            this._stats.suggestionCount++;\r\n            switch (item.completion.kind) {\r\n                case 25 /* Snippet */:\r\n                    this._stats.snippetCount++;\r\n                    break;\r\n                case 18 /* Text */:\r\n                    this._stats.textCount++;\r\n                    break;\r\n            }\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Nothing */;\r\n    };\r\n    CompletionModel._compareCompletionItems = function (a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    CompletionModel._compareCompletionItemsSnippetsDown = function (a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 25 /* Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 25 /* Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    };\r\n    CompletionModel._compareCompletionItemsSnippetsUp = function (a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 25 /* Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 25 /* Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    };\r\n    return CompletionModel;\r\n}());\r\nexport { CompletionModel };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}