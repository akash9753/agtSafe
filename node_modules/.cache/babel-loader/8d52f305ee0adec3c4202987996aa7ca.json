{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _isIOS = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar _userAgent = undefined;\nvar isElectronRenderer = typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer';\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n  _userAgent = navigator.userAgent;\n  _isWindows = _userAgent.indexOf('Windows') >= 0;\n  _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n  _isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n  _isLinux = _userAgent.indexOf('Linux') >= 0;\n  _isWeb = true;\n  _locale = navigator.language;\n  _language = _locale;\n} else if (typeof process === 'object') {\n  _isWindows = process.platform === 'win32';\n  _isMacintosh = process.platform === 'darwin';\n  _isLinux = process.platform === 'linux';\n  _locale = LANGUAGE_DEFAULT;\n  _language = LANGUAGE_DEFAULT;\n  var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n  if (rawNlsConfig) {\n    try {\n      var nlsConfig = JSON.parse(rawNlsConfig);\n      var resolved = nlsConfig.availableLanguages['*'];\n      _locale = nlsConfig.locale;\n      // VSCode's default language is 'en'\n      _language = resolved ? resolved : LANGUAGE_DEFAULT;\n      _translationsConfigFile = nlsConfig._translationsConfigFile;\n    } catch (e) {}\n  }\n  _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isMacintosh) {\n  _platform = 1 /* Mac */;\n} else if (_isWindows) {\n  _platform = 3 /* Windows */;\n} else if (_isLinux) {\n  _platform = 2 /* Linux */;\n}\n\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nexport var isIOS = _isIOS;\nvar _globals = typeof self === 'object' ? self : typeof global === 'object' ? global : {};\nexport var globals = _globals;\nexport var setImmediate = function defineSetImmediate() {\n  if (globals.setImmediate) {\n    return globals.setImmediate.bind(globals);\n  }\n  if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n    var pending_1 = [];\n    globals.addEventListener('message', function (e) {\n      if (e.data && e.data.vscodeSetImmediateId) {\n        for (var i = 0, len = pending_1.length; i < len; i++) {\n          var candidate = pending_1[i];\n          if (candidate.id === e.data.vscodeSetImmediateId) {\n            pending_1.splice(i, 1);\n            candidate.callback();\n            return;\n          }\n        }\n      }\n    });\n    var lastId_1 = 0;\n    return function (callback) {\n      var myId = ++lastId_1;\n      pending_1.push({\n        id: myId,\n        callback: callback\n      });\n      globals.postMessage({\n        vscodeSetImmediateId: myId\n      }, '*');\n    };\n  }\n  if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n    return process.nextTick.bind(process);\n  }\n  var _promise = Promise.resolve();\n  return function (callback) {\n    return _promise.then(callback);\n  };\n}();\nexport var OS = _isMacintosh ? 2 /* Macintosh */ : _isWindows ? 1 /* Windows */ : 3 /* Linux */;","map":{"version":3,"names":["LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","undefined","_language","_translationsConfigFile","_userAgent","isElectronRenderer","process","versions","electron","type","navigator","userAgent","indexOf","maxTouchPoints","language","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","e","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","_globals","self","global","globals","setImmediate","defineSetImmediate","bind","postMessage","importScripts","pending_1","addEventListener","data","vscodeSetImmediateId","i","len","length","candidate","id","splice","callback","lastId_1","myId","push","nextTick","_promise","Promise","resolve","then","OS"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/platform.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar LANGUAGE_DEFAULT = 'en';\r\nvar _isWindows = false;\r\nvar _isMacintosh = false;\r\nvar _isLinux = false;\r\nvar _isNative = false;\r\nvar _isWeb = false;\r\nvar _isIOS = false;\r\nvar _locale = undefined;\r\nvar _language = LANGUAGE_DEFAULT;\r\nvar _translationsConfigFile = undefined;\r\nvar _userAgent = undefined;\r\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n// OS detection\r\nif (typeof navigator === 'object' && !isElectronRenderer) {\r\n    _userAgent = navigator.userAgent;\r\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\r\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\r\n    _isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\r\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\r\n    _isWeb = true;\r\n    _locale = navigator.language;\r\n    _language = _locale;\r\n}\r\nelse if (typeof process === 'object') {\r\n    _isWindows = (process.platform === 'win32');\r\n    _isMacintosh = (process.platform === 'darwin');\r\n    _isLinux = (process.platform === 'linux');\r\n    _locale = LANGUAGE_DEFAULT;\r\n    _language = LANGUAGE_DEFAULT;\r\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\r\n    if (rawNlsConfig) {\r\n        try {\r\n            var nlsConfig = JSON.parse(rawNlsConfig);\r\n            var resolved = nlsConfig.availableLanguages['*'];\r\n            _locale = nlsConfig.locale;\r\n            // VSCode's default language is 'en'\r\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\r\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    _isNative = true;\r\n}\r\nvar _platform = 0 /* Web */;\r\nif (_isMacintosh) {\r\n    _platform = 1 /* Mac */;\r\n}\r\nelse if (_isWindows) {\r\n    _platform = 3 /* Windows */;\r\n}\r\nelse if (_isLinux) {\r\n    _platform = 2 /* Linux */;\r\n}\r\nexport var isWindows = _isWindows;\r\nexport var isMacintosh = _isMacintosh;\r\nexport var isLinux = _isLinux;\r\nexport var isNative = _isNative;\r\nexport var isWeb = _isWeb;\r\nexport var isIOS = _isIOS;\r\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\r\nexport var globals = _globals;\r\nexport var setImmediate = (function defineSetImmediate() {\r\n    if (globals.setImmediate) {\r\n        return globals.setImmediate.bind(globals);\r\n    }\r\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\r\n        var pending_1 = [];\r\n        globals.addEventListener('message', function (e) {\r\n            if (e.data && e.data.vscodeSetImmediateId) {\r\n                for (var i = 0, len = pending_1.length; i < len; i++) {\r\n                    var candidate = pending_1[i];\r\n                    if (candidate.id === e.data.vscodeSetImmediateId) {\r\n                        pending_1.splice(i, 1);\r\n                        candidate.callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        var lastId_1 = 0;\r\n        return function (callback) {\r\n            var myId = ++lastId_1;\r\n            pending_1.push({\r\n                id: myId,\r\n                callback: callback\r\n            });\r\n            globals.postMessage({ vscodeSetImmediateId: myId }, '*');\r\n        };\r\n    }\r\n    if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\r\n        return process.nextTick.bind(process);\r\n    }\r\n    var _promise = Promise.resolve();\r\n    return function (callback) { return _promise.then(callback); };\r\n})();\r\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}