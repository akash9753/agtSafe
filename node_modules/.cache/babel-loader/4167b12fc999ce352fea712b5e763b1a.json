{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../common/core/selection.js';\nimport { Range } from '../../common/core/range.js';\nvar DragAndDropCommand = /** @class */function () {\n  function DragAndDropCommand(selection, targetPosition, copy) {\n    this.selection = selection;\n    this.targetPosition = targetPosition;\n    this.copy = copy;\n    this.targetSelection = null;\n  }\n  DragAndDropCommand.prototype.getEditOperations = function (model, builder) {\n    var text = model.getValueInRange(this.selection);\n    if (!this.copy) {\n      builder.addEditOperation(this.selection, null);\n    }\n    builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n    if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n    )) {\n      this.targetSelection = this.selection;\n      return;\n    }\n    if (this.copy) {\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n    if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n      // Drag the selection downwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n    if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n      // Drag the selection upwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n    // The target position is at the same line as the selection's end position.\n    if (this.selection.endColumn <= this.targetPosition.column) {\n      // The target position is after the selection's end position\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column - this.selection.endColumn + this.selection.startColumn : this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column : this.selection.endColumn);\n    } else {\n      // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n    }\n  };\n  DragAndDropCommand.prototype.computeCursorState = function (model, helper) {\n    return this.targetSelection;\n  };\n  return DragAndDropCommand;\n}();\nexport { DragAndDropCommand };","map":{"version":3,"names":["Selection","Range","DragAndDropCommand","selection","targetPosition","copy","targetSelection","prototype","getEditOperations","model","builder","text","getValueInRange","addEditOperation","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","endLineNumber","startLineNumber","endColumn","startColumn","computeCursorState","helper"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dragAndDropCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { Range } from '../../common/core/range.js';\r\nvar DragAndDropCommand = /** @class */ (function () {\r\n    function DragAndDropCommand(selection, targetPosition, copy) {\r\n        this.selection = selection;\r\n        this.targetPosition = targetPosition;\r\n        this.copy = copy;\r\n        this.targetSelection = null;\r\n    }\r\n    DragAndDropCommand.prototype.getEditOperations = function (model, builder) {\r\n        var text = model.getValueInRange(this.selection);\r\n        if (!this.copy) {\r\n            builder.addEditOperation(this.selection, null);\r\n        }\r\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\r\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\r\n        )) {\r\n            this.targetSelection = this.selection;\r\n            return;\r\n        }\r\n        if (this.copy) {\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\r\n            // Drag the selection downwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\r\n            // Drag the selection upwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        // The target position is at the same line as the selection's end position.\r\n        if (this.selection.endColumn <= this.targetPosition.column) {\r\n            // The target position is after the selection's end position\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column :\r\n                this.selection.endColumn);\r\n        }\r\n        else {\r\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\r\n        }\r\n    };\r\n    DragAndDropCommand.prototype.computeCursorState = function (model, helper) {\r\n        return this.targetSelection;\r\n    };\r\n    return DragAndDropCommand;\r\n}());\r\nexport { DragAndDropCommand };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}