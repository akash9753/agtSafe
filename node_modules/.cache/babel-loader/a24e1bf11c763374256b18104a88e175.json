{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as nls from '../../../nls.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\n// copy lines\nvar AbstractCopyLinesAction = /** @class */function (_super) {\n  __extends(AbstractCopyLinesAction, _super);\n  function AbstractCopyLinesAction(down, opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.down = down;\n    return _this;\n  }\n  AbstractCopyLinesAction.prototype.run = function (_accessor, editor) {\n    var commands = [];\n    var selections = editor.getSelections() || [];\n    for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\n      var selection = selections_1[_i];\n      commands.push(new CopyLinesCommand(selection, this.down));\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n  return AbstractCopyLinesAction;\n}(EditorAction);\nvar CopyLinesUpAction = /** @class */function (_super) {\n  __extends(CopyLinesUpAction, _super);\n  function CopyLinesUpAction() {\n    return _super.call(this, false, {\n      id: 'editor.action.copyLinesUpAction',\n      label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n      alias: 'Copy Line Up',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\n        linux: {\n          primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */\n        },\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: 25 /* MenubarSelectionMenu */,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miCopyLinesUp',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Copy Line Up\"),\n        order: 1\n      }\n    }) || this;\n  }\n  return CopyLinesUpAction;\n}(AbstractCopyLinesAction);\nvar CopyLinesDownAction = /** @class */function (_super) {\n  __extends(CopyLinesDownAction, _super);\n  function CopyLinesDownAction() {\n    return _super.call(this, true, {\n      id: 'editor.action.copyLinesDownAction',\n      label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n      alias: 'Copy Line Down',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\n        linux: {\n          primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */\n        },\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: 25 /* MenubarSelectionMenu */,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miCopyLinesDown',\n          comment: ['&& denotes a mnemonic']\n        }, \"Co&&py Line Down\"),\n        order: 2\n      }\n    }) || this;\n  }\n  return CopyLinesDownAction;\n}(AbstractCopyLinesAction);\nvar DuplicateSelectionAction = /** @class */function (_super) {\n  __extends(DuplicateSelectionAction, _super);\n  function DuplicateSelectionAction() {\n    return _super.call(this, {\n      id: 'editor.action.duplicateSelection',\n      label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n      alias: 'Duplicate Selection',\n      precondition: EditorContextKeys.writable,\n      menuOpts: {\n        menuId: 25 /* MenubarSelectionMenu */,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miDuplicateSelection',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Duplicate Selection\"),\n        order: 5\n      }\n    }) || this;\n  }\n  DuplicateSelectionAction.prototype.run = function (accessor, editor, args) {\n    if (!editor.hasModel()) {\n      return;\n    }\n    var commands = [];\n    var selections = editor.getSelections();\n    var model = editor.getModel();\n    for (var _i = 0, selections_2 = selections; _i < selections_2.length; _i++) {\n      var selection = selections_2[_i];\n      if (selection.isEmpty()) {\n        commands.push(new CopyLinesCommand(selection, true));\n      } else {\n        var insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n        commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n      }\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n  return DuplicateSelectionAction;\n}(EditorAction);\nexport { DuplicateSelectionAction };\n// move lines\nvar AbstractMoveLinesAction = /** @class */function (_super) {\n  __extends(AbstractMoveLinesAction, _super);\n  function AbstractMoveLinesAction(down, opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.down = down;\n    return _this;\n  }\n  AbstractMoveLinesAction.prototype.run = function (_accessor, editor) {\n    var commands = [];\n    var selections = editor.getSelections() || [];\n    var autoIndent = editor.getOption(8 /* autoIndent */);\n    for (var _i = 0, selections_3 = selections; _i < selections_3.length; _i++) {\n      var selection = selections_3[_i];\n      commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n  return AbstractMoveLinesAction;\n}(EditorAction);\nvar MoveLinesUpAction = /** @class */function (_super) {\n  __extends(MoveLinesUpAction, _super);\n  function MoveLinesUpAction() {\n    return _super.call(this, false, {\n      id: 'editor.action.moveLinesUpAction',\n      label: nls.localize('lines.moveUp', \"Move Line Up\"),\n      alias: 'Move Line Up',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512 /* Alt */ | 16 /* UpArrow */,\n        linux: {\n          primary: 512 /* Alt */ | 16 /* UpArrow */\n        },\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: 25 /* MenubarSelectionMenu */,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miMoveLinesUp',\n          comment: ['&& denotes a mnemonic']\n        }, \"Mo&&ve Line Up\"),\n        order: 3\n      }\n    }) || this;\n  }\n  return MoveLinesUpAction;\n}(AbstractMoveLinesAction);\nvar MoveLinesDownAction = /** @class */function (_super) {\n  __extends(MoveLinesDownAction, _super);\n  function MoveLinesDownAction() {\n    return _super.call(this, true, {\n      id: 'editor.action.moveLinesDownAction',\n      label: nls.localize('lines.moveDown', \"Move Line Down\"),\n      alias: 'Move Line Down',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512 /* Alt */ | 18 /* DownArrow */,\n        linux: {\n          primary: 512 /* Alt */ | 18 /* DownArrow */\n        },\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: 25 /* MenubarSelectionMenu */,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miMoveLinesDown',\n          comment: ['&& denotes a mnemonic']\n        }, \"Move &&Line Down\"),\n        order: 4\n      }\n    }) || this;\n  }\n  return MoveLinesDownAction;\n}(AbstractMoveLinesAction);\nvar AbstractSortLinesAction = /** @class */function (_super) {\n  __extends(AbstractSortLinesAction, _super);\n  function AbstractSortLinesAction(descending, opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.descending = descending;\n    return _this;\n  }\n  AbstractSortLinesAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections() || [];\n    for (var _i = 0, selections_4 = selections; _i < selections_4.length; _i++) {\n      var selection = selections_4[_i];\n      if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n        return;\n      }\n    }\n    var commands = [];\n    for (var i = 0, len = selections.length; i < len; i++) {\n      commands[i] = new SortLinesCommand(selections[i], this.descending);\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n  return AbstractSortLinesAction;\n}(EditorAction);\nexport { AbstractSortLinesAction };\nvar SortLinesAscendingAction = /** @class */function (_super) {\n  __extends(SortLinesAscendingAction, _super);\n  function SortLinesAscendingAction() {\n    return _super.call(this, false, {\n      id: 'editor.action.sortLinesAscending',\n      label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n      alias: 'Sort Lines Ascending',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n  return SortLinesAscendingAction;\n}(AbstractSortLinesAction);\nexport { SortLinesAscendingAction };\nvar SortLinesDescendingAction = /** @class */function (_super) {\n  __extends(SortLinesDescendingAction, _super);\n  function SortLinesDescendingAction() {\n    return _super.call(this, true, {\n      id: 'editor.action.sortLinesDescending',\n      label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n      alias: 'Sort Lines Descending',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n  return SortLinesDescendingAction;\n}(AbstractSortLinesAction);\nexport { SortLinesDescendingAction };\nvar TrimTrailingWhitespaceAction = /** @class */function (_super) {\n  __extends(TrimTrailingWhitespaceAction, _super);\n  function TrimTrailingWhitespaceAction() {\n    return _super.call(this, {\n      id: TrimTrailingWhitespaceAction.ID,\n      label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n      alias: 'Trim Trailing Whitespace',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 54 /* KEY_X */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  TrimTrailingWhitespaceAction.prototype.run = function (_accessor, editor, args) {\n    var cursors = [];\n    if (args.reason === 'auto-save') {\n      // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n      // It is very convenient for the editor config extension to invoke this action.\n      // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n      cursors = (editor.getSelections() || []).map(function (s) {\n        return new Position(s.positionLineNumber, s.positionColumn);\n      });\n    }\n    var selection = editor.getSelection();\n    if (selection === null) {\n      return;\n    }\n    var command = new TrimTrailingWhitespaceCommand(selection, cursors);\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, [command]);\n    editor.pushUndoStop();\n  };\n  TrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\n  return TrimTrailingWhitespaceAction;\n}(EditorAction);\nexport { TrimTrailingWhitespaceAction };\nvar DeleteLinesAction = /** @class */function (_super) {\n  __extends(DeleteLinesAction, _super);\n  function DeleteLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.deleteLines',\n      label: nls.localize('lines.delete', \"Delete Line\"),\n      alias: 'Delete Line',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KEY_K */,\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  DeleteLinesAction.prototype.run = function (_accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n    var ops = this._getLinesToRemove(editor);\n    var model = editor.getModel();\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n      // Model is empty\n      return;\n    }\n    var linesDeleted = 0;\n    var edits = [];\n    var cursorState = [];\n    for (var i = 0, len = ops.length; i < len; i++) {\n      var op = ops[i];\n      var startLineNumber = op.startLineNumber;\n      var endLineNumber = op.endLineNumber;\n      var startColumn = 1;\n      var endColumn = model.getLineMaxColumn(endLineNumber);\n      if (endLineNumber < model.getLineCount()) {\n        endLineNumber += 1;\n        endColumn = 1;\n      } else if (startLineNumber > 1) {\n        startLineNumber -= 1;\n        startColumn = model.getLineMaxColumn(startLineNumber);\n      }\n      edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n      cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n      linesDeleted += op.endLineNumber - op.startLineNumber + 1;\n    }\n    editor.pushUndoStop();\n    editor.executeEdits(this.id, edits, cursorState);\n    editor.pushUndoStop();\n  };\n  DeleteLinesAction.prototype._getLinesToRemove = function (editor) {\n    // Construct delete operations\n    var operations = editor.getSelections().map(function (s) {\n      var endLineNumber = s.endLineNumber;\n      if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n        endLineNumber -= 1;\n      }\n      return {\n        startLineNumber: s.startLineNumber,\n        selectionStartColumn: s.selectionStartColumn,\n        endLineNumber: endLineNumber,\n        positionColumn: s.positionColumn\n      };\n    });\n    // Sort delete operations\n    operations.sort(function (a, b) {\n      if (a.startLineNumber === b.startLineNumber) {\n        return a.endLineNumber - b.endLineNumber;\n      }\n      return a.startLineNumber - b.startLineNumber;\n    });\n    // Merge delete operations which are adjacent or overlapping\n    var mergedOperations = [];\n    var previousOperation = operations[0];\n    for (var i = 1; i < operations.length; i++) {\n      if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n        // Merge current operations into the previous one\n        previousOperation.endLineNumber = operations[i].endLineNumber;\n      } else {\n        // Push previous operation\n        mergedOperations.push(previousOperation);\n        previousOperation = operations[i];\n      }\n    }\n    // Push the last operation\n    mergedOperations.push(previousOperation);\n    return mergedOperations;\n  };\n  return DeleteLinesAction;\n}(EditorAction);\nexport { DeleteLinesAction };\nvar IndentLinesAction = /** @class */function (_super) {\n  __extends(IndentLinesAction, _super);\n  function IndentLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.indentLines',\n      label: nls.localize('lines.indent', \"Indent Line\"),\n      alias: 'Indent Line',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  IndentLinesAction.prototype.run = function (_accessor, editor) {\n    var cursors = editor._getCursors();\n    if (!cursors) {\n      return;\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, TypeOperations.indent(cursors.context.config, editor.getModel(), editor.getSelections()));\n    editor.pushUndoStop();\n  };\n  return IndentLinesAction;\n}(EditorAction);\nexport { IndentLinesAction };\nvar OutdentLinesAction = /** @class */function (_super) {\n  __extends(OutdentLinesAction, _super);\n  function OutdentLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.outdentLines',\n      label: nls.localize('lines.outdent', \"Outdent Line\"),\n      alias: 'Outdent Line',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */,\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  OutdentLinesAction.prototype.run = function (_accessor, editor) {\n    CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n  };\n  return OutdentLinesAction;\n}(EditorAction);\nvar InsertLineBeforeAction = /** @class */function (_super) {\n  __extends(InsertLineBeforeAction, _super);\n  function InsertLineBeforeAction() {\n    return _super.call(this, {\n      id: 'editor.action.insertLineBefore',\n      label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n      alias: 'Insert Line Above',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  InsertLineBeforeAction.prototype.run = function (_accessor, editor) {\n    var cursors = editor._getCursors();\n    if (!cursors) {\n      return;\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, TypeOperations.lineInsertBefore(cursors.context.config, editor.getModel(), editor.getSelections()));\n  };\n  return InsertLineBeforeAction;\n}(EditorAction);\nexport { InsertLineBeforeAction };\nvar InsertLineAfterAction = /** @class */function (_super) {\n  __extends(InsertLineAfterAction, _super);\n  function InsertLineAfterAction() {\n    return _super.call(this, {\n      id: 'editor.action.insertLineAfter',\n      label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n      alias: 'Insert Line Below',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  InsertLineAfterAction.prototype.run = function (_accessor, editor) {\n    var cursors = editor._getCursors();\n    if (!cursors) {\n      return;\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, TypeOperations.lineInsertAfter(cursors.context.config, editor.getModel(), editor.getSelections()));\n  };\n  return InsertLineAfterAction;\n}(EditorAction);\nexport { InsertLineAfterAction };\nvar AbstractDeleteAllToBoundaryAction = /** @class */function (_super) {\n  __extends(AbstractDeleteAllToBoundaryAction, _super);\n  function AbstractDeleteAllToBoundaryAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AbstractDeleteAllToBoundaryAction.prototype.run = function (_accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n    var primaryCursor = editor.getSelection();\n    var rangesToDelete = this._getRangesToDelete(editor);\n    // merge overlapping selections\n    var effectiveRanges = [];\n    for (var i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n      var range = rangesToDelete[i];\n      var nextRange = rangesToDelete[i + 1];\n      if (Range.intersectRanges(range, nextRange) === null) {\n        effectiveRanges.push(range);\n      } else {\n        rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n      }\n    }\n    effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n    var endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n    var edits = effectiveRanges.map(function (range) {\n      return EditOperation.replace(range, '');\n    });\n    editor.pushUndoStop();\n    editor.executeEdits(this.id, edits, endCursorState);\n    editor.pushUndoStop();\n  };\n  return AbstractDeleteAllToBoundaryAction;\n}(EditorAction);\nexport { AbstractDeleteAllToBoundaryAction };\nvar DeleteAllLeftAction = /** @class */function (_super) {\n  __extends(DeleteAllLeftAction, _super);\n  function DeleteAllLeftAction() {\n    return _super.call(this, {\n      id: 'deleteAllLeft',\n      label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n      alias: 'Delete All Left',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 1 /* Backspace */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  DeleteAllLeftAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\n    var endPrimaryCursor = null;\n    var endCursorState = [];\n    var deletedLines = 0;\n    rangesToDelete.forEach(function (range) {\n      var endCursor;\n      if (range.endColumn === 1 && deletedLines > 0) {\n        var newStartLine = range.startLineNumber - deletedLines;\n        endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n      } else {\n        endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n      }\n      deletedLines += range.endLineNumber - range.startLineNumber;\n      if (range.intersectRanges(primaryCursor)) {\n        endPrimaryCursor = endCursor;\n      } else {\n        endCursorState.push(endCursor);\n      }\n    });\n    if (endPrimaryCursor) {\n      endCursorState.unshift(endPrimaryCursor);\n    }\n    return endCursorState;\n  };\n  DeleteAllLeftAction.prototype._getRangesToDelete = function (editor) {\n    var selections = editor.getSelections();\n    if (selections === null) {\n      return [];\n    }\n    var rangesToDelete = selections;\n    var model = editor.getModel();\n    if (model === null) {\n      return [];\n    }\n    rangesToDelete.sort(Range.compareRangesUsingStarts);\n    rangesToDelete = rangesToDelete.map(function (selection) {\n      if (selection.isEmpty()) {\n        if (selection.startColumn === 1) {\n          var deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n          var deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n          return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n        } else {\n          return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n        }\n      } else {\n        return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n      }\n    });\n    return rangesToDelete;\n  };\n  return DeleteAllLeftAction;\n}(AbstractDeleteAllToBoundaryAction);\nexport { DeleteAllLeftAction };\nvar DeleteAllRightAction = /** @class */function (_super) {\n  __extends(DeleteAllRightAction, _super);\n  function DeleteAllRightAction() {\n    return _super.call(this, {\n      id: 'deleteAllRight',\n      label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n      alias: 'Delete All Right',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 41 /* KEY_K */,\n          secondary: [2048 /* CtrlCmd */ | 20 /* Delete */]\n        },\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  DeleteAllRightAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\n    var endPrimaryCursor = null;\n    var endCursorState = [];\n    for (var i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n      var range = rangesToDelete[i];\n      var endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n      if (range.intersectRanges(primaryCursor)) {\n        endPrimaryCursor = endCursor;\n      } else {\n        endCursorState.push(endCursor);\n      }\n    }\n    if (endPrimaryCursor) {\n      endCursorState.unshift(endPrimaryCursor);\n    }\n    return endCursorState;\n  };\n  DeleteAllRightAction.prototype._getRangesToDelete = function (editor) {\n    var model = editor.getModel();\n    if (model === null) {\n      return [];\n    }\n    var selections = editor.getSelections();\n    if (selections === null) {\n      return [];\n    }\n    var rangesToDelete = selections.map(function (sel) {\n      if (sel.isEmpty()) {\n        var maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n        if (sel.startColumn === maxColumn) {\n          return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n        } else {\n          return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n        }\n      }\n      return sel;\n    });\n    rangesToDelete.sort(Range.compareRangesUsingStarts);\n    return rangesToDelete;\n  };\n  return DeleteAllRightAction;\n}(AbstractDeleteAllToBoundaryAction);\nexport { DeleteAllRightAction };\nvar JoinLinesAction = /** @class */function (_super) {\n  __extends(JoinLinesAction, _super);\n  function JoinLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.joinLines',\n      label: nls.localize('lines.joinLines', \"Join Lines\"),\n      alias: 'Join Lines',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 40 /* KEY_J */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  JoinLinesAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections();\n    if (selections === null) {\n      return;\n    }\n    var primaryCursor = editor.getSelection();\n    if (primaryCursor === null) {\n      return;\n    }\n    selections.sort(Range.compareRangesUsingStarts);\n    var reducedSelections = [];\n    var lastSelection = selections.reduce(function (previousValue, currentValue) {\n      if (previousValue.isEmpty()) {\n        if (previousValue.endLineNumber === currentValue.startLineNumber) {\n          if (primaryCursor.equalsSelection(previousValue)) {\n            primaryCursor = currentValue;\n          }\n          return currentValue;\n        }\n        if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n          reducedSelections.push(previousValue);\n          return currentValue;\n        } else {\n          return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n        }\n      } else {\n        if (currentValue.startLineNumber > previousValue.endLineNumber) {\n          reducedSelections.push(previousValue);\n          return currentValue;\n        } else {\n          return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n        }\n      }\n    });\n    reducedSelections.push(lastSelection);\n    var model = editor.getModel();\n    if (model === null) {\n      return;\n    }\n    var edits = [];\n    var endCursorState = [];\n    var endPrimaryCursor = primaryCursor;\n    var lineOffset = 0;\n    for (var i = 0, len = reducedSelections.length; i < len; i++) {\n      var selection = reducedSelections[i];\n      var startLineNumber = selection.startLineNumber;\n      var startColumn = 1;\n      var columnDeltaOffset = 0;\n      var endLineNumber = void 0,\n        endColumn = void 0;\n      var selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n      if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n        var position = selection.getStartPosition();\n        if (position.lineNumber < model.getLineCount()) {\n          endLineNumber = startLineNumber + 1;\n          endColumn = model.getLineMaxColumn(endLineNumber);\n        } else {\n          endLineNumber = position.lineNumber;\n          endColumn = model.getLineMaxColumn(position.lineNumber);\n        }\n      } else {\n        endLineNumber = selection.endLineNumber;\n        endColumn = model.getLineMaxColumn(endLineNumber);\n      }\n      var trimmedLinesContent = model.getLineContent(startLineNumber);\n      for (var i_1 = startLineNumber + 1; i_1 <= endLineNumber; i_1++) {\n        var lineText = model.getLineContent(i_1);\n        var firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i_1);\n        if (firstNonWhitespaceIdx >= 1) {\n          var insertSpace = true;\n          if (trimmedLinesContent === '') {\n            insertSpace = false;\n          }\n          if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' || trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n            insertSpace = false;\n            trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n          }\n          var lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n          trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n          if (insertSpace) {\n            columnDeltaOffset = lineTextWithoutIndent.length + 1;\n          } else {\n            columnDeltaOffset = lineTextWithoutIndent.length;\n          }\n        } else {\n          columnDeltaOffset = 0;\n        }\n      }\n      var deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n      if (!deleteSelection.isEmpty()) {\n        var resultSelection = void 0;\n        if (selection.isEmpty()) {\n          edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n          resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n        } else {\n          if (selection.startLineNumber === selection.endLineNumber) {\n            edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n            resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n          } else {\n            edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n            resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n          }\n        }\n        if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n          endPrimaryCursor = resultSelection;\n        } else {\n          endCursorState.push(resultSelection);\n        }\n      }\n      lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n    }\n    endCursorState.unshift(endPrimaryCursor);\n    editor.pushUndoStop();\n    editor.executeEdits(this.id, edits, endCursorState);\n    editor.pushUndoStop();\n  };\n  return JoinLinesAction;\n}(EditorAction);\nexport { JoinLinesAction };\nvar TransposeAction = /** @class */function (_super) {\n  __extends(TransposeAction, _super);\n  function TransposeAction() {\n    return _super.call(this, {\n      id: 'editor.action.transpose',\n      label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n      alias: 'Transpose characters around the cursor',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n  TransposeAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections();\n    if (selections === null) {\n      return;\n    }\n    var model = editor.getModel();\n    if (model === null) {\n      return;\n    }\n    var commands = [];\n    for (var i = 0, len = selections.length; i < len; i++) {\n      var selection = selections[i];\n      if (!selection.isEmpty()) {\n        continue;\n      }\n      var cursor = selection.getStartPosition();\n      var maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n      if (cursor.column >= maxColumn) {\n        if (cursor.lineNumber === model.getLineCount()) {\n          continue;\n        }\n        // The cursor is at the end of current line and current line is not empty\n        // then we transpose the character before the cursor and the line break if there is any following line.\n        var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n        var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n        commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n      } else {\n        var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n        var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n        commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n      }\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n  return TransposeAction;\n}(EditorAction);\nexport { TransposeAction };\nvar AbstractCaseAction = /** @class */function (_super) {\n  __extends(AbstractCaseAction, _super);\n  function AbstractCaseAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AbstractCaseAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections();\n    if (selections === null) {\n      return;\n    }\n    var model = editor.getModel();\n    if (model === null) {\n      return;\n    }\n    var wordSeparators = editor.getOption(96 /* wordSeparators */);\n    var commands = [];\n    for (var i = 0, len = selections.length; i < len; i++) {\n      var selection = selections[i];\n      if (selection.isEmpty()) {\n        var cursor = selection.getStartPosition();\n        var word = model.getWordAtPosition(cursor);\n        if (!word) {\n          continue;\n        }\n        var wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n        var text = model.getValueInRange(wordRange);\n        commands.push(new ReplaceCommandThatPreservesSelection(wordRange, this._modifyText(text, wordSeparators), new Selection(cursor.lineNumber, cursor.column, cursor.lineNumber, cursor.column)));\n      } else {\n        var text = model.getValueInRange(selection);\n        commands.push(new ReplaceCommandThatPreservesSelection(selection, this._modifyText(text, wordSeparators), selection));\n      }\n    }\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n  return AbstractCaseAction;\n}(EditorAction);\nexport { AbstractCaseAction };\nvar UpperCaseAction = /** @class */function (_super) {\n  __extends(UpperCaseAction, _super);\n  function UpperCaseAction() {\n    return _super.call(this, {\n      id: 'editor.action.transformToUppercase',\n      label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n      alias: 'Transform to Uppercase',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n  UpperCaseAction.prototype._modifyText = function (text, wordSeparators) {\n    return text.toLocaleUpperCase();\n  };\n  return UpperCaseAction;\n}(AbstractCaseAction);\nexport { UpperCaseAction };\nvar LowerCaseAction = /** @class */function (_super) {\n  __extends(LowerCaseAction, _super);\n  function LowerCaseAction() {\n    return _super.call(this, {\n      id: 'editor.action.transformToLowercase',\n      label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n      alias: 'Transform to Lowercase',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n  LowerCaseAction.prototype._modifyText = function (text, wordSeparators) {\n    return text.toLocaleLowerCase();\n  };\n  return LowerCaseAction;\n}(AbstractCaseAction);\nexport { LowerCaseAction };\nvar TitleCaseAction = /** @class */function (_super) {\n  __extends(TitleCaseAction, _super);\n  function TitleCaseAction() {\n    return _super.call(this, {\n      id: 'editor.action.transformToTitlecase',\n      label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n      alias: 'Transform to Title Case',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n  TitleCaseAction.prototype._modifyText = function (text, wordSeparators) {\n    var separators = '\\r\\n\\t ' + wordSeparators;\n    var excludedChars = separators.split('');\n    var title = '';\n    var startUpperCase = true;\n    for (var i = 0; i < text.length; i++) {\n      var currentChar = text[i];\n      if (excludedChars.indexOf(currentChar) >= 0) {\n        startUpperCase = true;\n        title += currentChar;\n      } else if (startUpperCase) {\n        startUpperCase = false;\n        title += currentChar.toLocaleUpperCase();\n      } else {\n        title += currentChar.toLocaleLowerCase();\n      }\n    }\n    return title;\n  };\n  return TitleCaseAction;\n}(AbstractCaseAction);\nexport { TitleCaseAction };\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nregisterEditorAction(TitleCaseAction);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","KeyChord","CoreEditingCommands","EditorAction","registerEditorAction","ReplaceCommand","ReplaceCommandThatPreservesSelection","ReplaceCommandThatSelectsText","TrimTrailingWhitespaceCommand","TypeOperations","EditOperation","Position","Range","Selection","EditorContextKeys","CopyLinesCommand","MoveLinesCommand","SortLinesCommand","AbstractCopyLinesAction","_super","down","opts","_this","call","run","_accessor","editor","commands","selections","getSelections","_i","selections_1","length","selection","push","pushUndoStop","executeCommands","id","CopyLinesUpAction","label","localize","alias","precondition","writable","kbOpts","kbExpr","editorTextFocus","primary","linux","weight","menuOpts","menuId","group","title","key","comment","order","CopyLinesDownAction","DuplicateSelectionAction","accessor","args","hasModel","model","getModel","selections_2","isEmpty","insertSelection","endLineNumber","endColumn","getValueInRange","AbstractMoveLinesAction","autoIndent","getOption","selections_3","MoveLinesUpAction","MoveLinesDownAction","AbstractSortLinesAction","descending","selections_4","canRun","i","len","SortLinesAscendingAction","SortLinesDescendingAction","TrimTrailingWhitespaceAction","ID","cursors","reason","map","s","positionLineNumber","positionColumn","getSelection","command","DeleteLinesAction","textInputFocus","ops","_getLinesToRemove","getLineCount","getLineMaxColumn","linesDeleted","edits","cursorState","op","startLineNumber","startColumn","replace","executeEdits","operations","selectionStartColumn","sort","a","mergedOperations","previousOperation","IndentLinesAction","_getCursors","indent","context","config","OutdentLinesAction","Outdent","runEditorCommand","InsertLineBeforeAction","lineInsertBefore","InsertLineAfterAction","lineInsertAfter","AbstractDeleteAllToBoundaryAction","apply","arguments","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","range","nextRange","intersectRanges","plusRange","endCursorState","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","unshift","compareRangesUsingStarts","deleteFromLine","Math","max","deleteFromColumn","getLineContent","DeleteAllRightAction","secondary","offset","sel","maxColumn","JoinLinesAction","reducedSelections","lastSelection","reduce","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","position","getStartPosition","lineNumber","trimmedLinesContent","i_1","lineText","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","charAt","lineTextWithoutIndent","substr","deleteSelection","resultSelection","TransposeAction","cursor","column","chars","split","reverse","join","AbstractCaseAction","wordSeparators","word","getWordAtPosition","wordRange","text","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","TitleCaseAction","separators","excludedChars","startUpperCase","currentChar","indexOf"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/linesOperations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../common/commands/replaceCommand.js';\r\nimport { TrimTrailingWhitespaceCommand } from '../../common/commands/trimTrailingWhitespaceCommand.js';\r\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CopyLinesCommand } from './copyLinesCommand.js';\r\nimport { MoveLinesCommand } from './moveLinesCommand.js';\r\nimport { SortLinesCommand } from './sortLinesCommand.js';\r\n// copy lines\r\nvar AbstractCopyLinesAction = /** @class */ (function (_super) {\r\n    __extends(AbstractCopyLinesAction, _super);\r\n    function AbstractCopyLinesAction(down, opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n        _this.down = down;\r\n        return _this;\r\n    }\r\n    AbstractCopyLinesAction.prototype.run = function (_accessor, editor) {\r\n        var commands = [];\r\n        var selections = editor.getSelections() || [];\r\n        for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\r\n            var selection = selections_1[_i];\r\n            commands.push(new CopyLinesCommand(selection, this.down));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractCopyLinesAction;\r\n}(EditorAction));\r\nvar CopyLinesUpAction = /** @class */ (function (_super) {\r\n    __extends(CopyLinesUpAction, _super);\r\n    function CopyLinesUpAction() {\r\n        return _super.call(this, false, {\r\n            id: 'editor.action.copyLinesUpAction',\r\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\r\n            alias: 'Copy Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\r\n                order: 1\r\n            }\r\n        }) || this;\r\n    }\r\n    return CopyLinesUpAction;\r\n}(AbstractCopyLinesAction));\r\nvar CopyLinesDownAction = /** @class */ (function (_super) {\r\n    __extends(CopyLinesDownAction, _super);\r\n    function CopyLinesDownAction() {\r\n        return _super.call(this, true, {\r\n            id: 'editor.action.copyLinesDownAction',\r\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\r\n            alias: 'Copy Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\r\n                order: 2\r\n            }\r\n        }) || this;\r\n    }\r\n    return CopyLinesDownAction;\r\n}(AbstractCopyLinesAction));\r\nvar DuplicateSelectionAction = /** @class */ (function (_super) {\r\n    __extends(DuplicateSelectionAction, _super);\r\n    function DuplicateSelectionAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.duplicateSelection',\r\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\r\n            alias: 'Duplicate Selection',\r\n            precondition: EditorContextKeys.writable,\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\r\n                order: 5\r\n            }\r\n        }) || this;\r\n    }\r\n    DuplicateSelectionAction.prototype.run = function (accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var commands = [];\r\n        var selections = editor.getSelections();\r\n        var model = editor.getModel();\r\n        for (var _i = 0, selections_2 = selections; _i < selections_2.length; _i++) {\r\n            var selection = selections_2[_i];\r\n            if (selection.isEmpty()) {\r\n                commands.push(new CopyLinesCommand(selection, true));\r\n            }\r\n            else {\r\n                var insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\r\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return DuplicateSelectionAction;\r\n}(EditorAction));\r\nexport { DuplicateSelectionAction };\r\n// move lines\r\nvar AbstractMoveLinesAction = /** @class */ (function (_super) {\r\n    __extends(AbstractMoveLinesAction, _super);\r\n    function AbstractMoveLinesAction(down, opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n        _this.down = down;\r\n        return _this;\r\n    }\r\n    AbstractMoveLinesAction.prototype.run = function (_accessor, editor) {\r\n        var commands = [];\r\n        var selections = editor.getSelections() || [];\r\n        var autoIndent = editor.getOption(8 /* autoIndent */);\r\n        for (var _i = 0, selections_3 = selections; _i < selections_3.length; _i++) {\r\n            var selection = selections_3[_i];\r\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractMoveLinesAction;\r\n}(EditorAction));\r\nvar MoveLinesUpAction = /** @class */ (function (_super) {\r\n    __extends(MoveLinesUpAction, _super);\r\n    function MoveLinesUpAction() {\r\n        return _super.call(this, false, {\r\n            id: 'editor.action.moveLinesUpAction',\r\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\r\n            alias: 'Move Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: { primary: 512 /* Alt */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\r\n                order: 3\r\n            }\r\n        }) || this;\r\n    }\r\n    return MoveLinesUpAction;\r\n}(AbstractMoveLinesAction));\r\nvar MoveLinesDownAction = /** @class */ (function (_super) {\r\n    __extends(MoveLinesDownAction, _super);\r\n    function MoveLinesDownAction() {\r\n        return _super.call(this, true, {\r\n            id: 'editor.action.moveLinesDownAction',\r\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\r\n            alias: 'Move Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: { primary: 512 /* Alt */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\r\n                order: 4\r\n            }\r\n        }) || this;\r\n    }\r\n    return MoveLinesDownAction;\r\n}(AbstractMoveLinesAction));\r\nvar AbstractSortLinesAction = /** @class */ (function (_super) {\r\n    __extends(AbstractSortLinesAction, _super);\r\n    function AbstractSortLinesAction(descending, opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n        _this.descending = descending;\r\n        return _this;\r\n    }\r\n    AbstractSortLinesAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections() || [];\r\n        for (var _i = 0, selections_4 = selections; _i < selections_4.length; _i++) {\r\n            var selection = selections_4[_i];\r\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\r\n                return;\r\n            }\r\n        }\r\n        var commands = [];\r\n        for (var i = 0, len = selections.length; i < len; i++) {\r\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractSortLinesAction;\r\n}(EditorAction));\r\nexport { AbstractSortLinesAction };\r\nvar SortLinesAscendingAction = /** @class */ (function (_super) {\r\n    __extends(SortLinesAscendingAction, _super);\r\n    function SortLinesAscendingAction() {\r\n        return _super.call(this, false, {\r\n            id: 'editor.action.sortLinesAscending',\r\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\r\n            alias: 'Sort Lines Ascending',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    return SortLinesAscendingAction;\r\n}(AbstractSortLinesAction));\r\nexport { SortLinesAscendingAction };\r\nvar SortLinesDescendingAction = /** @class */ (function (_super) {\r\n    __extends(SortLinesDescendingAction, _super);\r\n    function SortLinesDescendingAction() {\r\n        return _super.call(this, true, {\r\n            id: 'editor.action.sortLinesDescending',\r\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\r\n            alias: 'Sort Lines Descending',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    return SortLinesDescendingAction;\r\n}(AbstractSortLinesAction));\r\nexport { SortLinesDescendingAction };\r\nvar TrimTrailingWhitespaceAction = /** @class */ (function (_super) {\r\n    __extends(TrimTrailingWhitespaceAction, _super);\r\n    function TrimTrailingWhitespaceAction() {\r\n        return _super.call(this, {\r\n            id: TrimTrailingWhitespaceAction.ID,\r\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\r\n            alias: 'Trim Trailing Whitespace',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 54 /* KEY_X */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    TrimTrailingWhitespaceAction.prototype.run = function (_accessor, editor, args) {\r\n        var cursors = [];\r\n        if (args.reason === 'auto-save') {\r\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\r\n            // It is very convenient for the editor config extension to invoke this action.\r\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\r\n            cursors = (editor.getSelections() || []).map(function (s) { return new Position(s.positionLineNumber, s.positionColumn); });\r\n        }\r\n        var selection = editor.getSelection();\r\n        if (selection === null) {\r\n            return;\r\n        }\r\n        var command = new TrimTrailingWhitespaceCommand(selection, cursors);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n    };\r\n    TrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\r\n    return TrimTrailingWhitespaceAction;\r\n}(EditorAction));\r\nexport { TrimTrailingWhitespaceAction };\r\nvar DeleteLinesAction = /** @class */ (function (_super) {\r\n    __extends(DeleteLinesAction, _super);\r\n    function DeleteLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.deleteLines',\r\n            label: nls.localize('lines.delete', \"Delete Line\"),\r\n            alias: 'Delete Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KEY_K */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DeleteLinesAction.prototype.run = function (_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var ops = this._getLinesToRemove(editor);\r\n        var model = editor.getModel();\r\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n            // Model is empty\r\n            return;\r\n        }\r\n        var linesDeleted = 0;\r\n        var edits = [];\r\n        var cursorState = [];\r\n        for (var i = 0, len = ops.length; i < len; i++) {\r\n            var op = ops[i];\r\n            var startLineNumber = op.startLineNumber;\r\n            var endLineNumber = op.endLineNumber;\r\n            var startColumn = 1;\r\n            var endColumn = model.getLineMaxColumn(endLineNumber);\r\n            if (endLineNumber < model.getLineCount()) {\r\n                endLineNumber += 1;\r\n                endColumn = 1;\r\n            }\r\n            else if (startLineNumber > 1) {\r\n                startLineNumber -= 1;\r\n                startColumn = model.getLineMaxColumn(startLineNumber);\r\n            }\r\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\r\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\r\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, cursorState);\r\n        editor.pushUndoStop();\r\n    };\r\n    DeleteLinesAction.prototype._getLinesToRemove = function (editor) {\r\n        // Construct delete operations\r\n        var operations = editor.getSelections().map(function (s) {\r\n            var endLineNumber = s.endLineNumber;\r\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n                endLineNumber -= 1;\r\n            }\r\n            return {\r\n                startLineNumber: s.startLineNumber,\r\n                selectionStartColumn: s.selectionStartColumn,\r\n                endLineNumber: endLineNumber,\r\n                positionColumn: s.positionColumn\r\n            };\r\n        });\r\n        // Sort delete operations\r\n        operations.sort(function (a, b) {\r\n            if (a.startLineNumber === b.startLineNumber) {\r\n                return a.endLineNumber - b.endLineNumber;\r\n            }\r\n            return a.startLineNumber - b.startLineNumber;\r\n        });\r\n        // Merge delete operations which are adjacent or overlapping\r\n        var mergedOperations = [];\r\n        var previousOperation = operations[0];\r\n        for (var i = 1; i < operations.length; i++) {\r\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\r\n                // Merge current operations into the previous one\r\n                previousOperation.endLineNumber = operations[i].endLineNumber;\r\n            }\r\n            else {\r\n                // Push previous operation\r\n                mergedOperations.push(previousOperation);\r\n                previousOperation = operations[i];\r\n            }\r\n        }\r\n        // Push the last operation\r\n        mergedOperations.push(previousOperation);\r\n        return mergedOperations;\r\n    };\r\n    return DeleteLinesAction;\r\n}(EditorAction));\r\nexport { DeleteLinesAction };\r\nvar IndentLinesAction = /** @class */ (function (_super) {\r\n    __extends(IndentLinesAction, _super);\r\n    function IndentLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.indentLines',\r\n            label: nls.localize('lines.indent', \"Indent Line\"),\r\n            alias: 'Indent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    IndentLinesAction.prototype.run = function (_accessor, editor) {\r\n        var cursors = editor._getCursors();\r\n        if (!cursors) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.indent(cursors.context.config, editor.getModel(), editor.getSelections()));\r\n        editor.pushUndoStop();\r\n    };\r\n    return IndentLinesAction;\r\n}(EditorAction));\r\nexport { IndentLinesAction };\r\nvar OutdentLinesAction = /** @class */ (function (_super) {\r\n    __extends(OutdentLinesAction, _super);\r\n    function OutdentLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.outdentLines',\r\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\r\n            alias: 'Outdent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    OutdentLinesAction.prototype.run = function (_accessor, editor) {\r\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\r\n    };\r\n    return OutdentLinesAction;\r\n}(EditorAction));\r\nvar InsertLineBeforeAction = /** @class */ (function (_super) {\r\n    __extends(InsertLineBeforeAction, _super);\r\n    function InsertLineBeforeAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.insertLineBefore',\r\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\r\n            alias: 'Insert Line Above',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    InsertLineBeforeAction.prototype.run = function (_accessor, editor) {\r\n        var cursors = editor._getCursors();\r\n        if (!cursors) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(cursors.context.config, editor.getModel(), editor.getSelections()));\r\n    };\r\n    return InsertLineBeforeAction;\r\n}(EditorAction));\r\nexport { InsertLineBeforeAction };\r\nvar InsertLineAfterAction = /** @class */ (function (_super) {\r\n    __extends(InsertLineAfterAction, _super);\r\n    function InsertLineAfterAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.insertLineAfter',\r\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\r\n            alias: 'Insert Line Below',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    InsertLineAfterAction.prototype.run = function (_accessor, editor) {\r\n        var cursors = editor._getCursors();\r\n        if (!cursors) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(cursors.context.config, editor.getModel(), editor.getSelections()));\r\n    };\r\n    return InsertLineAfterAction;\r\n}(EditorAction));\r\nexport { InsertLineAfterAction };\r\nvar AbstractDeleteAllToBoundaryAction = /** @class */ (function (_super) {\r\n    __extends(AbstractDeleteAllToBoundaryAction, _super);\r\n    function AbstractDeleteAllToBoundaryAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AbstractDeleteAllToBoundaryAction.prototype.run = function (_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var primaryCursor = editor.getSelection();\r\n        var rangesToDelete = this._getRangesToDelete(editor);\r\n        // merge overlapping selections\r\n        var effectiveRanges = [];\r\n        for (var i = 0, count = rangesToDelete.length - 1; i < count; i++) {\r\n            var range = rangesToDelete[i];\r\n            var nextRange = rangesToDelete[i + 1];\r\n            if (Range.intersectRanges(range, nextRange) === null) {\r\n                effectiveRanges.push(range);\r\n            }\r\n            else {\r\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\r\n            }\r\n        }\r\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\r\n        var endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\r\n        var edits = effectiveRanges.map(function (range) {\r\n            return EditOperation.replace(range, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractDeleteAllToBoundaryAction;\r\n}(EditorAction));\r\nexport { AbstractDeleteAllToBoundaryAction };\r\nvar DeleteAllLeftAction = /** @class */ (function (_super) {\r\n    __extends(DeleteAllLeftAction, _super);\r\n    function DeleteAllLeftAction() {\r\n        return _super.call(this, {\r\n            id: 'deleteAllLeft',\r\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\r\n            alias: 'Delete All Left',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DeleteAllLeftAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\r\n        var endPrimaryCursor = null;\r\n        var endCursorState = [];\r\n        var deletedLines = 0;\r\n        rangesToDelete.forEach(function (range) {\r\n            var endCursor;\r\n            if (range.endColumn === 1 && deletedLines > 0) {\r\n                var newStartLine = range.startLineNumber - deletedLines;\r\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\r\n            }\r\n            else {\r\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n            }\r\n            deletedLines += range.endLineNumber - range.startLineNumber;\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        });\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    };\r\n    DeleteAllLeftAction.prototype._getRangesToDelete = function (editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        var rangesToDelete = selections;\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        rangesToDelete = rangesToDelete.map(function (selection) {\r\n            if (selection.isEmpty()) {\r\n                if (selection.startColumn === 1) {\r\n                    var deleteFromLine = Math.max(1, selection.startLineNumber - 1);\r\n                    var deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\r\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\r\n                }\r\n                else {\r\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\r\n                }\r\n            }\r\n            else {\r\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\r\n            }\r\n        });\r\n        return rangesToDelete;\r\n    };\r\n    return DeleteAllLeftAction;\r\n}(AbstractDeleteAllToBoundaryAction));\r\nexport { DeleteAllLeftAction };\r\nvar DeleteAllRightAction = /** @class */ (function (_super) {\r\n    __extends(DeleteAllRightAction, _super);\r\n    function DeleteAllRightAction() {\r\n        return _super.call(this, {\r\n            id: 'deleteAllRight',\r\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\r\n            alias: 'Delete All Right',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 41 /* KEY_K */, secondary: [2048 /* CtrlCmd */ | 20 /* Delete */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DeleteAllRightAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\r\n        var endPrimaryCursor = null;\r\n        var endCursorState = [];\r\n        for (var i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\r\n            var range = rangesToDelete[i];\r\n            var endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        }\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    };\r\n    DeleteAllRightAction.prototype._getRangesToDelete = function (editor) {\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        var rangesToDelete = selections.map(function (sel) {\r\n            if (sel.isEmpty()) {\r\n                var maxColumn = model.getLineMaxColumn(sel.startLineNumber);\r\n                if (sel.startColumn === maxColumn) {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\r\n                }\r\n                else {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\r\n                }\r\n            }\r\n            return sel;\r\n        });\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        return rangesToDelete;\r\n    };\r\n    return DeleteAllRightAction;\r\n}(AbstractDeleteAllToBoundaryAction));\r\nexport { DeleteAllRightAction };\r\nvar JoinLinesAction = /** @class */ (function (_super) {\r\n    __extends(JoinLinesAction, _super);\r\n    function JoinLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.joinLines',\r\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\r\n            alias: 'Join Lines',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 40 /* KEY_J */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    JoinLinesAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        var primaryCursor = editor.getSelection();\r\n        if (primaryCursor === null) {\r\n            return;\r\n        }\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        var reducedSelections = [];\r\n        var lastSelection = selections.reduce(function (previousValue, currentValue) {\r\n            if (previousValue.isEmpty()) {\r\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\r\n                    if (primaryCursor.equalsSelection(previousValue)) {\r\n                        primaryCursor = currentValue;\r\n                    }\r\n                    return currentValue;\r\n                }\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n            else {\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n        });\r\n        reducedSelections.push(lastSelection);\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        var edits = [];\r\n        var endCursorState = [];\r\n        var endPrimaryCursor = primaryCursor;\r\n        var lineOffset = 0;\r\n        for (var i = 0, len = reducedSelections.length; i < len; i++) {\r\n            var selection = reducedSelections[i];\r\n            var startLineNumber = selection.startLineNumber;\r\n            var startColumn = 1;\r\n            var columnDeltaOffset = 0;\r\n            var endLineNumber = void 0, endColumn = void 0;\r\n            var selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\r\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\r\n                var position = selection.getStartPosition();\r\n                if (position.lineNumber < model.getLineCount()) {\r\n                    endLineNumber = startLineNumber + 1;\r\n                    endColumn = model.getLineMaxColumn(endLineNumber);\r\n                }\r\n                else {\r\n                    endLineNumber = position.lineNumber;\r\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\r\n                }\r\n            }\r\n            else {\r\n                endLineNumber = selection.endLineNumber;\r\n                endColumn = model.getLineMaxColumn(endLineNumber);\r\n            }\r\n            var trimmedLinesContent = model.getLineContent(startLineNumber);\r\n            for (var i_1 = startLineNumber + 1; i_1 <= endLineNumber; i_1++) {\r\n                var lineText = model.getLineContent(i_1);\r\n                var firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i_1);\r\n                if (firstNonWhitespaceIdx >= 1) {\r\n                    var insertSpace = true;\r\n                    if (trimmedLinesContent === '') {\r\n                        insertSpace = false;\r\n                    }\r\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\r\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\r\n                        insertSpace = false;\r\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\r\n                    }\r\n                    var lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\r\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\r\n                    if (insertSpace) {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\r\n                    }\r\n                    else {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length;\r\n                    }\r\n                }\r\n                else {\r\n                    columnDeltaOffset = 0;\r\n                }\r\n            }\r\n            var deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n            if (!deleteSelection.isEmpty()) {\r\n                var resultSelection = void 0;\r\n                if (selection.isEmpty()) {\r\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\r\n                }\r\n                else {\r\n                    if (selection.startLineNumber === selection.endLineNumber) {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\r\n                    }\r\n                    else {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\r\n                    }\r\n                }\r\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\r\n                    endPrimaryCursor = resultSelection;\r\n                }\r\n                else {\r\n                    endCursorState.push(resultSelection);\r\n                }\r\n            }\r\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\r\n        }\r\n        endCursorState.unshift(endPrimaryCursor);\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    };\r\n    return JoinLinesAction;\r\n}(EditorAction));\r\nexport { JoinLinesAction };\r\nvar TransposeAction = /** @class */ (function (_super) {\r\n    __extends(TransposeAction, _super);\r\n    function TransposeAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transpose',\r\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\r\n            alias: 'Transpose characters around the cursor',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    TransposeAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        var commands = [];\r\n        for (var i = 0, len = selections.length; i < len; i++) {\r\n            var selection = selections[i];\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            var cursor = selection.getStartPosition();\r\n            var maxColumn = model.getLineMaxColumn(cursor.lineNumber);\r\n            if (cursor.column >= maxColumn) {\r\n                if (cursor.lineNumber === model.getLineCount()) {\r\n                    continue;\r\n                }\r\n                // The cursor is at the end of current line and current line is not empty\r\n                // then we transpose the character before the cursor and the line break if there is any following line.\r\n                var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\r\n                var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\r\n            }\r\n            else {\r\n                var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\r\n                var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return TransposeAction;\r\n}(EditorAction));\r\nexport { TransposeAction };\r\nvar AbstractCaseAction = /** @class */ (function (_super) {\r\n    __extends(AbstractCaseAction, _super);\r\n    function AbstractCaseAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AbstractCaseAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        var wordSeparators = editor.getOption(96 /* wordSeparators */);\r\n        var commands = [];\r\n        for (var i = 0, len = selections.length; i < len; i++) {\r\n            var selection = selections[i];\r\n            if (selection.isEmpty()) {\r\n                var cursor = selection.getStartPosition();\r\n                var word = model.getWordAtPosition(cursor);\r\n                if (!word) {\r\n                    continue;\r\n                }\r\n                var wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\r\n                var text = model.getValueInRange(wordRange);\r\n                commands.push(new ReplaceCommandThatPreservesSelection(wordRange, this._modifyText(text, wordSeparators), new Selection(cursor.lineNumber, cursor.column, cursor.lineNumber, cursor.column)));\r\n            }\r\n            else {\r\n                var text = model.getValueInRange(selection);\r\n                commands.push(new ReplaceCommandThatPreservesSelection(selection, this._modifyText(text, wordSeparators), selection));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractCaseAction;\r\n}(EditorAction));\r\nexport { AbstractCaseAction };\r\nvar UpperCaseAction = /** @class */ (function (_super) {\r\n    __extends(UpperCaseAction, _super);\r\n    function UpperCaseAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transformToUppercase',\r\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\r\n            alias: 'Transform to Uppercase',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    UpperCaseAction.prototype._modifyText = function (text, wordSeparators) {\r\n        return text.toLocaleUpperCase();\r\n    };\r\n    return UpperCaseAction;\r\n}(AbstractCaseAction));\r\nexport { UpperCaseAction };\r\nvar LowerCaseAction = /** @class */ (function (_super) {\r\n    __extends(LowerCaseAction, _super);\r\n    function LowerCaseAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transformToLowercase',\r\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\r\n            alias: 'Transform to Lowercase',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    LowerCaseAction.prototype._modifyText = function (text, wordSeparators) {\r\n        return text.toLocaleLowerCase();\r\n    };\r\n    return LowerCaseAction;\r\n}(AbstractCaseAction));\r\nexport { LowerCaseAction };\r\nvar TitleCaseAction = /** @class */ (function (_super) {\r\n    __extends(TitleCaseAction, _super);\r\n    function TitleCaseAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transformToTitlecase',\r\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\r\n            alias: 'Transform to Title Case',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    TitleCaseAction.prototype._modifyText = function (text, wordSeparators) {\r\n        var separators = '\\r\\n\\t ' + wordSeparators;\r\n        var excludedChars = separators.split('');\r\n        var title = '';\r\n        var startUpperCase = true;\r\n        for (var i = 0; i < text.length; i++) {\r\n            var currentChar = text[i];\r\n            if (excludedChars.indexOf(currentChar) >= 0) {\r\n                startUpperCase = true;\r\n                title += currentChar;\r\n            }\r\n            else if (startUpperCase) {\r\n                startUpperCase = false;\r\n                title += currentChar.toLocaleUpperCase();\r\n            }\r\n            else {\r\n                title += currentChar.toLocaleLowerCase();\r\n            }\r\n        }\r\n        return title;\r\n    };\r\n    return TitleCaseAction;\r\n}(AbstractCaseAction));\r\nexport { TitleCaseAction };\r\nregisterEditorAction(CopyLinesUpAction);\r\nregisterEditorAction(CopyLinesDownAction);\r\nregisterEditorAction(DuplicateSelectionAction);\r\nregisterEditorAction(MoveLinesUpAction);\r\nregisterEditorAction(MoveLinesDownAction);\r\nregisterEditorAction(SortLinesAscendingAction);\r\nregisterEditorAction(SortLinesDescendingAction);\r\nregisterEditorAction(TrimTrailingWhitespaceAction);\r\nregisterEditorAction(DeleteLinesAction);\r\nregisterEditorAction(IndentLinesAction);\r\nregisterEditorAction(OutdentLinesAction);\r\nregisterEditorAction(InsertLineBeforeAction);\r\nregisterEditorAction(InsertLineAfterAction);\r\nregisterEditorAction(DeleteAllLeftAction);\r\nregisterEditorAction(DeleteAllRightAction);\r\nregisterEditorAction(JoinLinesAction);\r\nregisterEditorAction(TransposeAction);\r\nregisterEditorAction(UpperCaseAction);\r\nregisterEditorAction(LowerCaseAction);\r\nregisterEditorAction(TitleCaseAction);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}