{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { dispose, DisposableStore, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { CompletionProviderRegistry } from '../../common/modes.js';\nimport { CompletionModel } from './completionModel.js';\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\nimport { SnippetController2 } from '../snippet/snippetController2.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { WordDistance } from './wordDistance.js';\nimport { isLowSurrogate, isHighSurrogate } from '../../../base/common/strings.js';\nvar LineContext = /** @class */function () {\n  function LineContext(model, position, auto, shy) {\n    this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n    this.leadingWord = model.getWordUntilPosition(position);\n    this.lineNumber = position.lineNumber;\n    this.column = position.column;\n    this.auto = auto;\n    this.shy = shy;\n  }\n  LineContext.shouldAutoTrigger = function (editor) {\n    if (!editor.hasModel()) {\n      return false;\n    }\n    var model = editor.getModel();\n    var pos = editor.getPosition();\n    model.tokenizeIfCheap(pos.lineNumber);\n    var word = model.getWordAtPosition(pos);\n    if (!word) {\n      return false;\n    }\n    if (word.endColumn !== pos.column) {\n      return false;\n    }\n    if (!isNaN(Number(word.word))) {\n      return false;\n    }\n    return true;\n  };\n  return LineContext;\n}();\nexport { LineContext };\nvar SuggestModel = /** @class */function () {\n  function SuggestModel(_editor, _editorWorker) {\n    var _this = this;\n    this._editor = _editor;\n    this._editorWorker = _editorWorker;\n    this._toDispose = new DisposableStore();\n    this._quickSuggestDelay = 10;\n    this._triggerCharacterListener = new DisposableStore();\n    this._triggerQuickSuggest = new TimeoutTimer();\n    this._state = 0 /* Idle */;\n    this._completionDisposables = new DisposableStore();\n    this._onDidCancel = new Emitter();\n    this._onDidTrigger = new Emitter();\n    this._onDidSuggest = new Emitter();\n    this.onDidCancel = this._onDidCancel.event;\n    this.onDidTrigger = this._onDidTrigger.event;\n    this.onDidSuggest = this._onDidSuggest.event;\n    this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\n    // wire up various listeners\n    this._toDispose.add(this._editor.onDidChangeModel(function () {\n      _this._updateTriggerCharacters();\n      _this.cancel();\n    }));\n    this._toDispose.add(this._editor.onDidChangeModelLanguage(function () {\n      _this._updateTriggerCharacters();\n      _this.cancel();\n    }));\n    this._toDispose.add(this._editor.onDidChangeConfiguration(function () {\n      _this._updateTriggerCharacters();\n      _this._updateQuickSuggest();\n    }));\n    this._toDispose.add(CompletionProviderRegistry.onDidChange(function () {\n      _this._updateTriggerCharacters();\n      _this._updateActiveSuggestSession();\n    }));\n    this._toDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\n      _this._onCursorChange(e);\n    }));\n    var editorIsComposing = false;\n    this._toDispose.add(this._editor.onDidCompositionStart(function () {\n      editorIsComposing = true;\n    }));\n    this._toDispose.add(this._editor.onDidCompositionEnd(function () {\n      // refilter when composition ends\n      editorIsComposing = false;\n      _this._refilterCompletionItems();\n    }));\n    this._toDispose.add(this._editor.onDidChangeModelContent(function () {\n      // only filter completions when the editor isn't\n      // composing a character, e.g. ¨ + u makes ü but just\n      // ¨ cannot be used for filtering\n      if (!editorIsComposing) {\n        _this._refilterCompletionItems();\n      }\n    }));\n    this._updateTriggerCharacters();\n    this._updateQuickSuggest();\n  }\n  SuggestModel.prototype.dispose = function () {\n    dispose(this._triggerCharacterListener);\n    dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\n    this._toDispose.dispose();\n    this._completionDisposables.dispose();\n    this.cancel();\n  };\n  // --- handle configuration & precondition changes\n  SuggestModel.prototype._updateQuickSuggest = function () {\n    this._quickSuggestDelay = this._editor.getOption(67 /* quickSuggestionsDelay */);\n    if (isNaN(this._quickSuggestDelay) || !this._quickSuggestDelay && this._quickSuggestDelay !== 0 || this._quickSuggestDelay < 0) {\n      this._quickSuggestDelay = 10;\n    }\n  };\n  SuggestModel.prototype._updateTriggerCharacters = function () {\n    var _this = this;\n    this._triggerCharacterListener.clear();\n    if (this._editor.getOption(68 /* readOnly */) || !this._editor.hasModel() || !this._editor.getOption(92 /* suggestOnTriggerCharacters */)) {\n      return;\n    }\n    var supportsByTriggerCharacter = new Map();\n    for (var _i = 0, _a = CompletionProviderRegistry.all(this._editor.getModel()); _i < _a.length; _i++) {\n      var support = _a[_i];\n      for (var _b = 0, _c = support.triggerCharacters || []; _b < _c.length; _b++) {\n        var ch = _c[_b];\n        var set = supportsByTriggerCharacter.get(ch);\n        if (!set) {\n          set = new Set();\n          set.add(getSnippetSuggestSupport());\n          supportsByTriggerCharacter.set(ch, set);\n        }\n        set.add(support);\n      }\n    }\n    var checkTriggerCharacter = function checkTriggerCharacter(text) {\n      if (!text) {\n        // came here from the compositionEnd-event\n        var position = _this._editor.getPosition();\n        var model = _this._editor.getModel();\n        text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n      }\n      var lastChar = '';\n      if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n        if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n          lastChar = text.substr(text.length - 2);\n        }\n      } else {\n        lastChar = text.charAt(text.length - 1);\n      }\n      var supports = supportsByTriggerCharacter.get(lastChar);\n      if (supports) {\n        // keep existing items that where not computed by the\n        // supports/providers that want to trigger now\n        var items = _this._completionModel ? _this._completionModel.adopt(supports) : undefined;\n        _this.trigger({\n          auto: true,\n          shy: false,\n          triggerCharacter: lastChar\n        }, Boolean(_this._completionModel), supports, items);\n      }\n    };\n    this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\n    this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\n  };\n  Object.defineProperty(SuggestModel.prototype, \"state\", {\n    // --- trigger/retrigger/cancel suggest\n    get: function get() {\n      return this._state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  SuggestModel.prototype.cancel = function (retrigger) {\n    if (retrigger === void 0) {\n      retrigger = false;\n    }\n    if (this._state !== 0 /* Idle */) {\n      this._triggerQuickSuggest.cancel();\n      if (this._requestToken) {\n        this._requestToken.cancel();\n        this._requestToken = undefined;\n      }\n      this._state = 0 /* Idle */;\n      this._completionModel = undefined;\n      this._context = undefined;\n      this._onDidCancel.fire({\n        retrigger: retrigger\n      });\n    }\n  };\n  SuggestModel.prototype.clear = function () {\n    this._completionDisposables.clear();\n  };\n  SuggestModel.prototype._updateActiveSuggestSession = function () {\n    if (this._state !== 0 /* Idle */) {\n      if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\n        this.cancel();\n      } else {\n        this.trigger({\n          auto: this._state === 2 /* Auto */,\n          shy: false\n        }, true);\n      }\n    }\n  };\n  SuggestModel.prototype._onCursorChange = function (e) {\n    var _this = this;\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    var model = this._editor.getModel();\n    var prevSelection = this._currentSelection;\n    this._currentSelection = this._editor.getSelection();\n    if (!e.selection.isEmpty() || e.reason !== 0 /* NotSet */ || e.source !== 'keyboard' && e.source !== 'deleteLeft') {\n      // Early exit if nothing needs to be done!\n      // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n      this.cancel();\n      return;\n    }\n    if (!CompletionProviderRegistry.has(model)) {\n      return;\n    }\n    if (this._state === 0 /* Idle */) {\n      if (this._editor.getOption(66 /* quickSuggestions */) === false) {\n        // not enabled\n        return;\n      }\n      if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\n        // cursor didn't move RIGHT\n        return;\n      }\n      if (this._editor.getOption(89 /* suggest */).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\n        // no quick suggestion when in snippet mode\n        return;\n      }\n      this.cancel();\n      this._triggerQuickSuggest.cancelAndSet(function () {\n        if (_this._state !== 0 /* Idle */) {\n          return;\n        }\n        if (!LineContext.shouldAutoTrigger(_this._editor)) {\n          return;\n        }\n        if (!_this._editor.hasModel()) {\n          return;\n        }\n        var model = _this._editor.getModel();\n        var pos = _this._editor.getPosition();\n        // validate enabled now\n        var quickSuggestions = _this._editor.getOption(66 /* quickSuggestions */);\n        if (quickSuggestions === false) {\n          return;\n        } else if (quickSuggestions === true) {\n          // all good\n        } else {\n          // Check the type of the token that triggered this\n          model.tokenizeIfCheap(pos.lineNumber);\n          var lineTokens = model.getLineTokens(pos.lineNumber);\n          var tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\n          var inValidScope = quickSuggestions.other && tokenType === 0 /* Other */ || quickSuggestions.comments && tokenType === 1 /* Comment */ || quickSuggestions.strings && tokenType === 2 /* String */;\n          if (!inValidScope) {\n            return;\n          }\n        }\n        // we made it till here -> trigger now\n        _this.trigger({\n          auto: true,\n          shy: false\n        });\n      }, this._quickSuggestDelay);\n    }\n  };\n  SuggestModel.prototype._refilterCompletionItems = function () {\n    var _this = this;\n    // Re-filter suggestions. This MUST run async because filtering/scoring\n    // uses the model content AND the cursor position. The latter is NOT\n    // updated when the document has changed (the event which drives this method)\n    // and therefore a little pause (next mirco task) is needed. See:\n    // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\n    Promise.resolve().then(function () {\n      if (_this._state === 0 /* Idle */) {\n        return;\n      }\n      if (!_this._editor.hasModel()) {\n        return;\n      }\n      var model = _this._editor.getModel();\n      var position = _this._editor.getPosition();\n      var ctx = new LineContext(model, position, _this._state === 2 /* Auto */, false);\n      _this._onNewContext(ctx);\n    });\n  };\n  SuggestModel.prototype.trigger = function (context, retrigger, onlyFrom, existingItems) {\n    var _this = this;\n    if (retrigger === void 0) {\n      retrigger = false;\n    }\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    var model = this._editor.getModel();\n    var auto = context.auto;\n    var ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\n    // Cancel previous requests, change state & update UI\n    this.cancel(retrigger);\n    this._state = auto ? 2 /* Auto */ : 1 /* Manual */;\n    this._onDidTrigger.fire({\n      auto: auto,\n      shy: context.shy,\n      position: this._editor.getPosition()\n    });\n    // Capture context when request was sent\n    this._context = ctx;\n    // Build context for request\n    var suggestCtx;\n    if (context.triggerCharacter) {\n      suggestCtx = {\n        triggerKind: 1 /* TriggerCharacter */,\n        triggerCharacter: context.triggerCharacter\n      };\n    } else if (onlyFrom && onlyFrom.size > 0) {\n      suggestCtx = {\n        triggerKind: 2 /* TriggerForIncompleteCompletions */\n      };\n    } else {\n      suggestCtx = {\n        triggerKind: 0 /* Invoke */\n      };\n    }\n\n    this._requestToken = new CancellationTokenSource();\n    // kind filter and snippet sort rules\n    var snippetSuggestions = this._editor.getOption(86 /* snippetSuggestions */);\n    var snippetSortOrder = 1 /* Inline */;\n    switch (snippetSuggestions) {\n      case 'top':\n        snippetSortOrder = 0 /* Top */;\n        break;\n      // \t↓ that's the default anyways...\n      // case 'inline':\n      // \tsnippetSortOrder = SnippetSortOrder.Inline;\n      // \tbreak;\n      case 'bottom':\n        snippetSortOrder = 2 /* Bottom */;\n        break;\n    }\n    var itemKindFilter = SuggestModel._createItemKindFilter(this._editor);\n    var wordDistance = WordDistance.create(this._editorWorker, this._editor);\n    var items = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom), suggestCtx, this._requestToken.token);\n    Promise.all([items, wordDistance]).then(function (_a) {\n      var items = _a[0],\n        wordDistance = _a[1];\n      dispose(_this._requestToken);\n      if (_this._state === 0 /* Idle */) {\n        return;\n      }\n      if (!_this._editor.hasModel()) {\n        return;\n      }\n      var model = _this._editor.getModel();\n      if (isNonEmptyArray(existingItems)) {\n        var cmpFn = getSuggestionComparator(snippetSortOrder);\n        items = items.concat(existingItems).sort(cmpFn);\n      }\n      var ctx = new LineContext(model, _this._editor.getPosition(), auto, context.shy);\n      _this._completionModel = new CompletionModel(items, _this._context.column, {\n        leadingLineContent: ctx.leadingLineContent,\n        characterCountDelta: ctx.column - _this._context.column\n      }, wordDistance, _this._editor.getOption(89 /* suggest */), _this._editor.getOption(86 /* snippetSuggestions */));\n      // store containers so that they can be disposed later\n      for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        if (isDisposable(item.container)) {\n          _this._completionDisposables.add(item.container);\n        }\n      }\n      _this._onNewContext(ctx);\n    }).catch(onUnexpectedError);\n  };\n  SuggestModel._createItemKindFilter = function (editor) {\n    // kind filter and snippet sort rules\n    var result = new Set();\n    // snippet setting\n    var snippetSuggestions = editor.getOption(86 /* snippetSuggestions */);\n    if (snippetSuggestions === 'none') {\n      result.add(25 /* Snippet */);\n    }\n    // type setting\n    var suggestOptions = editor.getOption(89 /* suggest */);\n    if (!suggestOptions.showMethods) {\n      result.add(0 /* Method */);\n    }\n\n    if (!suggestOptions.showFunctions) {\n      result.add(1 /* Function */);\n    }\n\n    if (!suggestOptions.showConstructors) {\n      result.add(2 /* Constructor */);\n    }\n\n    if (!suggestOptions.showFields) {\n      result.add(3 /* Field */);\n    }\n\n    if (!suggestOptions.showVariables) {\n      result.add(4 /* Variable */);\n    }\n\n    if (!suggestOptions.showClasses) {\n      result.add(5 /* Class */);\n    }\n\n    if (!suggestOptions.showStructs) {\n      result.add(6 /* Struct */);\n    }\n\n    if (!suggestOptions.showInterfaces) {\n      result.add(7 /* Interface */);\n    }\n\n    if (!suggestOptions.showModules) {\n      result.add(8 /* Module */);\n    }\n\n    if (!suggestOptions.showProperties) {\n      result.add(9 /* Property */);\n    }\n\n    if (!suggestOptions.showEvents) {\n      result.add(10 /* Event */);\n    }\n\n    if (!suggestOptions.showOperators) {\n      result.add(11 /* Operator */);\n    }\n\n    if (!suggestOptions.showUnits) {\n      result.add(12 /* Unit */);\n    }\n\n    if (!suggestOptions.showValues) {\n      result.add(13 /* Value */);\n    }\n\n    if (!suggestOptions.showConstants) {\n      result.add(14 /* Constant */);\n    }\n\n    if (!suggestOptions.showEnums) {\n      result.add(15 /* Enum */);\n    }\n\n    if (!suggestOptions.showEnumMembers) {\n      result.add(16 /* EnumMember */);\n    }\n\n    if (!suggestOptions.showKeywords) {\n      result.add(17 /* Keyword */);\n    }\n\n    if (!suggestOptions.showWords) {\n      result.add(18 /* Text */);\n    }\n\n    if (!suggestOptions.showColors) {\n      result.add(19 /* Color */);\n    }\n\n    if (!suggestOptions.showFiles) {\n      result.add(20 /* File */);\n    }\n\n    if (!suggestOptions.showReferences) {\n      result.add(21 /* Reference */);\n    }\n\n    if (!suggestOptions.showColors) {\n      result.add(22 /* Customcolor */);\n    }\n\n    if (!suggestOptions.showFolders) {\n      result.add(23 /* Folder */);\n    }\n\n    if (!suggestOptions.showTypeParameters) {\n      result.add(24 /* TypeParameter */);\n    }\n\n    if (!suggestOptions.showSnippets) {\n      result.add(25 /* Snippet */);\n    }\n\n    return result;\n  };\n  SuggestModel.prototype._onNewContext = function (ctx) {\n    if (!this._context) {\n      // happens when 24x7 IntelliSense is enabled and still in its delay\n      return;\n    }\n    if (ctx.lineNumber !== this._context.lineNumber) {\n      // e.g. happens when pressing Enter while IntelliSense is computed\n      this.cancel();\n      return;\n    }\n    if (ctx.leadingWord.startColumn < this._context.leadingWord.startColumn) {\n      // happens when the current word gets outdented\n      this.cancel();\n      return;\n    }\n    if (ctx.column < this._context.column) {\n      // typed -> moved cursor LEFT -> retrigger if still on a word\n      if (ctx.leadingWord.word) {\n        this.trigger({\n          auto: this._context.auto,\n          shy: false\n        }, true);\n      } else {\n        this.cancel();\n      }\n      return;\n    }\n    if (!this._completionModel) {\n      // happens when IntelliSense is not yet computed\n      return;\n    }\n    if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\n      // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n      var incomplete = this._completionModel.incomplete;\n      var adopted = this._completionModel.adopt(incomplete);\n      this.trigger({\n        auto: this._state === 2 /* Auto */,\n        shy: false\n      }, true, incomplete, adopted);\n    } else {\n      // typed -> moved cursor RIGHT -> update UI\n      var oldLineContext = this._completionModel.lineContext;\n      var isFrozen = false;\n      this._completionModel.lineContext = {\n        leadingLineContent: ctx.leadingLineContent,\n        characterCountDelta: ctx.column - this._context.column\n      };\n      if (this._completionModel.items.length === 0) {\n        if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\n          // retrigger when heading into a new word\n          this.trigger({\n            auto: this._context.auto,\n            shy: false\n          }, true);\n          return;\n        }\n        if (!this._context.auto) {\n          // freeze when IntelliSense was manually requested\n          this._completionModel.lineContext = oldLineContext;\n          isFrozen = this._completionModel.items.length > 0;\n          if (isFrozen && ctx.leadingWord.word.length === 0) {\n            // there were results before but now there aren't\n            // and also we are not on a word anymore -> cancel\n            this.cancel();\n            return;\n          }\n        } else {\n          // nothing left\n          this.cancel();\n          return;\n        }\n      }\n      this._onDidSuggest.fire({\n        completionModel: this._completionModel,\n        auto: this._context.auto,\n        shy: this._context.shy,\n        isFrozen: isFrozen\n      });\n    }\n  };\n  return SuggestModel;\n}();\nexport { SuggestModel };","map":{"version":3,"names":["isNonEmptyArray","TimeoutTimer","onUnexpectedError","Emitter","dispose","DisposableStore","isDisposable","Selection","CompletionProviderRegistry","CompletionModel","getSuggestionComparator","provideSuggestionItems","getSnippetSuggestSupport","CompletionOptions","SnippetController2","CancellationTokenSource","WordDistance","isLowSurrogate","isHighSurrogate","LineContext","model","position","auto","shy","leadingLineContent","getLineContent","lineNumber","substr","column","leadingWord","getWordUntilPosition","shouldAutoTrigger","editor","hasModel","getModel","pos","getPosition","tokenizeIfCheap","word","getWordAtPosition","endColumn","isNaN","Number","SuggestModel","_editor","_editorWorker","_this","_toDispose","_quickSuggestDelay","_triggerCharacterListener","_triggerQuickSuggest","_state","_completionDisposables","_onDidCancel","_onDidTrigger","_onDidSuggest","onDidCancel","event","onDidTrigger","onDidSuggest","_currentSelection","getSelection","add","onDidChangeModel","_updateTriggerCharacters","cancel","onDidChangeModelLanguage","onDidChangeConfiguration","_updateQuickSuggest","onDidChange","_updateActiveSuggestSession","onDidChangeCursorSelection","e","_onCursorChange","editorIsComposing","onDidCompositionStart","onDidCompositionEnd","_refilterCompletionItems","onDidChangeModelContent","prototype","getOption","clear","supportsByTriggerCharacter","Map","_i","_a","all","length","support","_b","_c","triggerCharacters","ch","set","get","Set","checkTriggerCharacter","text","lastChar","charCodeAt","charAt","supports","items","_completionModel","adopt","undefined","trigger","triggerCharacter","Boolean","onDidType","Object","defineProperty","enumerable","configurable","retrigger","_requestToken","_context","fire","has","prevSelection","selection","isEmpty","reason","source","containsRange","getEndPosition","isBeforeOrEqual","snippetsPreventQuickSuggestions","isInSnippet","cancelAndSet","quickSuggestions","lineTokens","getLineTokens","tokenType","getStandardTokenType","findTokenIndexAtOffset","Math","max","inValidScope","other","comments","strings","Promise","resolve","then","ctx","_onNewContext","context","onlyFrom","existingItems","suggestCtx","triggerKind","size","snippetSuggestions","snippetSortOrder","itemKindFilter","_createItemKindFilter","wordDistance","create","token","cmpFn","concat","sort","characterCountDelta","items_1","item","container","catch","result","suggestOptions","showMethods","showFunctions","showConstructors","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showSnippets","startColumn","incomplete","adopted","oldLineContext","lineContext","isFrozen","completionModel"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { dispose, DisposableStore, isDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { CompletionProviderRegistry } from '../../common/modes.js';\r\nimport { CompletionModel } from './completionModel.js';\r\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { WordDistance } from './wordDistance.js';\r\nimport { isLowSurrogate, isHighSurrogate } from '../../../base/common/strings.js';\r\nvar LineContext = /** @class */ (function () {\r\n    function LineContext(model, position, auto, shy) {\r\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n        this.leadingWord = model.getWordUntilPosition(position);\r\n        this.lineNumber = position.lineNumber;\r\n        this.column = position.column;\r\n        this.auto = auto;\r\n        this.shy = shy;\r\n    }\r\n    LineContext.shouldAutoTrigger = function (editor) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        var model = editor.getModel();\r\n        var pos = editor.getPosition();\r\n        model.tokenizeIfCheap(pos.lineNumber);\r\n        var word = model.getWordAtPosition(pos);\r\n        if (!word) {\r\n            return false;\r\n        }\r\n        if (word.endColumn !== pos.column) {\r\n            return false;\r\n        }\r\n        if (!isNaN(Number(word.word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    return LineContext;\r\n}());\r\nexport { LineContext };\r\nvar SuggestModel = /** @class */ (function () {\r\n    function SuggestModel(_editor, _editorWorker) {\r\n        var _this = this;\r\n        this._editor = _editor;\r\n        this._editorWorker = _editorWorker;\r\n        this._toDispose = new DisposableStore();\r\n        this._quickSuggestDelay = 10;\r\n        this._triggerCharacterListener = new DisposableStore();\r\n        this._triggerQuickSuggest = new TimeoutTimer();\r\n        this._state = 0 /* Idle */;\r\n        this._completionDisposables = new DisposableStore();\r\n        this._onDidCancel = new Emitter();\r\n        this._onDidTrigger = new Emitter();\r\n        this._onDidSuggest = new Emitter();\r\n        this.onDidCancel = this._onDidCancel.event;\r\n        this.onDidTrigger = this._onDidTrigger.event;\r\n        this.onDidSuggest = this._onDidSuggest.event;\r\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\r\n        // wire up various listeners\r\n        this._toDispose.add(this._editor.onDidChangeModel(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeConfiguration(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this._updateQuickSuggest();\r\n        }));\r\n        this._toDispose.add(CompletionProviderRegistry.onDidChange(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this._updateActiveSuggestSession();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\r\n            _this._onCursorChange(e);\r\n        }));\r\n        var editorIsComposing = false;\r\n        this._toDispose.add(this._editor.onDidCompositionStart(function () {\r\n            editorIsComposing = true;\r\n        }));\r\n        this._toDispose.add(this._editor.onDidCompositionEnd(function () {\r\n            // refilter when composition ends\r\n            editorIsComposing = false;\r\n            _this._refilterCompletionItems();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(function () {\r\n            // only filter completions when the editor isn't\r\n            // composing a character, e.g. ¨ + u makes ü but just\r\n            // ¨ cannot be used for filtering\r\n            if (!editorIsComposing) {\r\n                _this._refilterCompletionItems();\r\n            }\r\n        }));\r\n        this._updateTriggerCharacters();\r\n        this._updateQuickSuggest();\r\n    }\r\n    SuggestModel.prototype.dispose = function () {\r\n        dispose(this._triggerCharacterListener);\r\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\r\n        this._toDispose.dispose();\r\n        this._completionDisposables.dispose();\r\n        this.cancel();\r\n    };\r\n    // --- handle configuration & precondition changes\r\n    SuggestModel.prototype._updateQuickSuggest = function () {\r\n        this._quickSuggestDelay = this._editor.getOption(67 /* quickSuggestionsDelay */);\r\n        if (isNaN(this._quickSuggestDelay) || (!this._quickSuggestDelay && this._quickSuggestDelay !== 0) || this._quickSuggestDelay < 0) {\r\n            this._quickSuggestDelay = 10;\r\n        }\r\n    };\r\n    SuggestModel.prototype._updateTriggerCharacters = function () {\r\n        var _this = this;\r\n        this._triggerCharacterListener.clear();\r\n        if (this._editor.getOption(68 /* readOnly */)\r\n            || !this._editor.hasModel()\r\n            || !this._editor.getOption(92 /* suggestOnTriggerCharacters */)) {\r\n            return;\r\n        }\r\n        var supportsByTriggerCharacter = new Map();\r\n        for (var _i = 0, _a = CompletionProviderRegistry.all(this._editor.getModel()); _i < _a.length; _i++) {\r\n            var support = _a[_i];\r\n            for (var _b = 0, _c = support.triggerCharacters || []; _b < _c.length; _b++) {\r\n                var ch = _c[_b];\r\n                var set = supportsByTriggerCharacter.get(ch);\r\n                if (!set) {\r\n                    set = new Set();\r\n                    set.add(getSnippetSuggestSupport());\r\n                    supportsByTriggerCharacter.set(ch, set);\r\n                }\r\n                set.add(support);\r\n            }\r\n        }\r\n        var checkTriggerCharacter = function (text) {\r\n            if (!text) {\r\n                // came here from the compositionEnd-event\r\n                var position = _this._editor.getPosition();\r\n                var model = _this._editor.getModel();\r\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n            }\r\n            var lastChar = '';\r\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\r\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\r\n                    lastChar = text.substr(text.length - 2);\r\n                }\r\n            }\r\n            else {\r\n                lastChar = text.charAt(text.length - 1);\r\n            }\r\n            var supports = supportsByTriggerCharacter.get(lastChar);\r\n            if (supports) {\r\n                // keep existing items that where not computed by the\r\n                // supports/providers that want to trigger now\r\n                var items = _this._completionModel ? _this._completionModel.adopt(supports) : undefined;\r\n                _this.trigger({ auto: true, shy: false, triggerCharacter: lastChar }, Boolean(_this._completionModel), supports, items);\r\n            }\r\n        };\r\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\r\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\r\n    };\r\n    Object.defineProperty(SuggestModel.prototype, \"state\", {\r\n        // --- trigger/retrigger/cancel suggest\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SuggestModel.prototype.cancel = function (retrigger) {\r\n        if (retrigger === void 0) { retrigger = false; }\r\n        if (this._state !== 0 /* Idle */) {\r\n            this._triggerQuickSuggest.cancel();\r\n            if (this._requestToken) {\r\n                this._requestToken.cancel();\r\n                this._requestToken = undefined;\r\n            }\r\n            this._state = 0 /* Idle */;\r\n            this._completionModel = undefined;\r\n            this._context = undefined;\r\n            this._onDidCancel.fire({ retrigger: retrigger });\r\n        }\r\n    };\r\n    SuggestModel.prototype.clear = function () {\r\n        this._completionDisposables.clear();\r\n    };\r\n    SuggestModel.prototype._updateActiveSuggestSession = function () {\r\n        if (this._state !== 0 /* Idle */) {\r\n            if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\r\n                this.cancel();\r\n            }\r\n            else {\r\n                this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true);\r\n            }\r\n        }\r\n    };\r\n    SuggestModel.prototype._onCursorChange = function (e) {\r\n        var _this = this;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = this._editor.getModel();\r\n        var prevSelection = this._currentSelection;\r\n        this._currentSelection = this._editor.getSelection();\r\n        if (!e.selection.isEmpty()\r\n            || e.reason !== 0 /* NotSet */\r\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\r\n            // Early exit if nothing needs to be done!\r\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (!CompletionProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        if (this._state === 0 /* Idle */) {\r\n            if (this._editor.getOption(66 /* quickSuggestions */) === false) {\r\n                // not enabled\r\n                return;\r\n            }\r\n            if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\r\n                // cursor didn't move RIGHT\r\n                return;\r\n            }\r\n            if (this._editor.getOption(89 /* suggest */).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\r\n                // no quick suggestion when in snippet mode\r\n                return;\r\n            }\r\n            this.cancel();\r\n            this._triggerQuickSuggest.cancelAndSet(function () {\r\n                if (_this._state !== 0 /* Idle */) {\r\n                    return;\r\n                }\r\n                if (!LineContext.shouldAutoTrigger(_this._editor)) {\r\n                    return;\r\n                }\r\n                if (!_this._editor.hasModel()) {\r\n                    return;\r\n                }\r\n                var model = _this._editor.getModel();\r\n                var pos = _this._editor.getPosition();\r\n                // validate enabled now\r\n                var quickSuggestions = _this._editor.getOption(66 /* quickSuggestions */);\r\n                if (quickSuggestions === false) {\r\n                    return;\r\n                }\r\n                else if (quickSuggestions === true) {\r\n                    // all good\r\n                }\r\n                else {\r\n                    // Check the type of the token that triggered this\r\n                    model.tokenizeIfCheap(pos.lineNumber);\r\n                    var lineTokens = model.getLineTokens(pos.lineNumber);\r\n                    var tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\r\n                    var inValidScope = quickSuggestions.other && tokenType === 0 /* Other */\r\n                        || quickSuggestions.comments && tokenType === 1 /* Comment */\r\n                        || quickSuggestions.strings && tokenType === 2 /* String */;\r\n                    if (!inValidScope) {\r\n                        return;\r\n                    }\r\n                }\r\n                // we made it till here -> trigger now\r\n                _this.trigger({ auto: true, shy: false });\r\n            }, this._quickSuggestDelay);\r\n        }\r\n    };\r\n    SuggestModel.prototype._refilterCompletionItems = function () {\r\n        var _this = this;\r\n        // Re-filter suggestions. This MUST run async because filtering/scoring\r\n        // uses the model content AND the cursor position. The latter is NOT\r\n        // updated when the document has changed (the event which drives this method)\r\n        // and therefore a little pause (next mirco task) is needed. See:\r\n        // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\r\n        Promise.resolve().then(function () {\r\n            if (_this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!_this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            var model = _this._editor.getModel();\r\n            var position = _this._editor.getPosition();\r\n            var ctx = new LineContext(model, position, _this._state === 2 /* Auto */, false);\r\n            _this._onNewContext(ctx);\r\n        });\r\n    };\r\n    SuggestModel.prototype.trigger = function (context, retrigger, onlyFrom, existingItems) {\r\n        var _this = this;\r\n        if (retrigger === void 0) { retrigger = false; }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = this._editor.getModel();\r\n        var auto = context.auto;\r\n        var ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n        // Cancel previous requests, change state & update UI\r\n        this.cancel(retrigger);\r\n        this._state = auto ? 2 /* Auto */ : 1 /* Manual */;\r\n        this._onDidTrigger.fire({ auto: auto, shy: context.shy, position: this._editor.getPosition() });\r\n        // Capture context when request was sent\r\n        this._context = ctx;\r\n        // Build context for request\r\n        var suggestCtx;\r\n        if (context.triggerCharacter) {\r\n            suggestCtx = {\r\n                triggerKind: 1 /* TriggerCharacter */,\r\n                triggerCharacter: context.triggerCharacter\r\n            };\r\n        }\r\n        else if (onlyFrom && onlyFrom.size > 0) {\r\n            suggestCtx = { triggerKind: 2 /* TriggerForIncompleteCompletions */ };\r\n        }\r\n        else {\r\n            suggestCtx = { triggerKind: 0 /* Invoke */ };\r\n        }\r\n        this._requestToken = new CancellationTokenSource();\r\n        // kind filter and snippet sort rules\r\n        var snippetSuggestions = this._editor.getOption(86 /* snippetSuggestions */);\r\n        var snippetSortOrder = 1 /* Inline */;\r\n        switch (snippetSuggestions) {\r\n            case 'top':\r\n                snippetSortOrder = 0 /* Top */;\r\n                break;\r\n            // \t↓ that's the default anyways...\r\n            // case 'inline':\r\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\r\n            // \tbreak;\r\n            case 'bottom':\r\n                snippetSortOrder = 2 /* Bottom */;\r\n                break;\r\n        }\r\n        var itemKindFilter = SuggestModel._createItemKindFilter(this._editor);\r\n        var wordDistance = WordDistance.create(this._editorWorker, this._editor);\r\n        var items = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom), suggestCtx, this._requestToken.token);\r\n        Promise.all([items, wordDistance]).then(function (_a) {\r\n            var items = _a[0], wordDistance = _a[1];\r\n            dispose(_this._requestToken);\r\n            if (_this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!_this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            var model = _this._editor.getModel();\r\n            if (isNonEmptyArray(existingItems)) {\r\n                var cmpFn = getSuggestionComparator(snippetSortOrder);\r\n                items = items.concat(existingItems).sort(cmpFn);\r\n            }\r\n            var ctx = new LineContext(model, _this._editor.getPosition(), auto, context.shy);\r\n            _this._completionModel = new CompletionModel(items, _this._context.column, {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - _this._context.column\r\n            }, wordDistance, _this._editor.getOption(89 /* suggest */), _this._editor.getOption(86 /* snippetSuggestions */));\r\n            // store containers so that they can be disposed later\r\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n                var item = items_1[_i];\r\n                if (isDisposable(item.container)) {\r\n                    _this._completionDisposables.add(item.container);\r\n                }\r\n            }\r\n            _this._onNewContext(ctx);\r\n        }).catch(onUnexpectedError);\r\n    };\r\n    SuggestModel._createItemKindFilter = function (editor) {\r\n        // kind filter and snippet sort rules\r\n        var result = new Set();\r\n        // snippet setting\r\n        var snippetSuggestions = editor.getOption(86 /* snippetSuggestions */);\r\n        if (snippetSuggestions === 'none') {\r\n            result.add(25 /* Snippet */);\r\n        }\r\n        // type setting\r\n        var suggestOptions = editor.getOption(89 /* suggest */);\r\n        if (!suggestOptions.showMethods) {\r\n            result.add(0 /* Method */);\r\n        }\r\n        if (!suggestOptions.showFunctions) {\r\n            result.add(1 /* Function */);\r\n        }\r\n        if (!suggestOptions.showConstructors) {\r\n            result.add(2 /* Constructor */);\r\n        }\r\n        if (!suggestOptions.showFields) {\r\n            result.add(3 /* Field */);\r\n        }\r\n        if (!suggestOptions.showVariables) {\r\n            result.add(4 /* Variable */);\r\n        }\r\n        if (!suggestOptions.showClasses) {\r\n            result.add(5 /* Class */);\r\n        }\r\n        if (!suggestOptions.showStructs) {\r\n            result.add(6 /* Struct */);\r\n        }\r\n        if (!suggestOptions.showInterfaces) {\r\n            result.add(7 /* Interface */);\r\n        }\r\n        if (!suggestOptions.showModules) {\r\n            result.add(8 /* Module */);\r\n        }\r\n        if (!suggestOptions.showProperties) {\r\n            result.add(9 /* Property */);\r\n        }\r\n        if (!suggestOptions.showEvents) {\r\n            result.add(10 /* Event */);\r\n        }\r\n        if (!suggestOptions.showOperators) {\r\n            result.add(11 /* Operator */);\r\n        }\r\n        if (!suggestOptions.showUnits) {\r\n            result.add(12 /* Unit */);\r\n        }\r\n        if (!suggestOptions.showValues) {\r\n            result.add(13 /* Value */);\r\n        }\r\n        if (!suggestOptions.showConstants) {\r\n            result.add(14 /* Constant */);\r\n        }\r\n        if (!suggestOptions.showEnums) {\r\n            result.add(15 /* Enum */);\r\n        }\r\n        if (!suggestOptions.showEnumMembers) {\r\n            result.add(16 /* EnumMember */);\r\n        }\r\n        if (!suggestOptions.showKeywords) {\r\n            result.add(17 /* Keyword */);\r\n        }\r\n        if (!suggestOptions.showWords) {\r\n            result.add(18 /* Text */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(19 /* Color */);\r\n        }\r\n        if (!suggestOptions.showFiles) {\r\n            result.add(20 /* File */);\r\n        }\r\n        if (!suggestOptions.showReferences) {\r\n            result.add(21 /* Reference */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(22 /* Customcolor */);\r\n        }\r\n        if (!suggestOptions.showFolders) {\r\n            result.add(23 /* Folder */);\r\n        }\r\n        if (!suggestOptions.showTypeParameters) {\r\n            result.add(24 /* TypeParameter */);\r\n        }\r\n        if (!suggestOptions.showSnippets) {\r\n            result.add(25 /* Snippet */);\r\n        }\r\n        return result;\r\n    };\r\n    SuggestModel.prototype._onNewContext = function (ctx) {\r\n        if (!this._context) {\r\n            // happens when 24x7 IntelliSense is enabled and still in its delay\r\n            return;\r\n        }\r\n        if (ctx.lineNumber !== this._context.lineNumber) {\r\n            // e.g. happens when pressing Enter while IntelliSense is computed\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.leadingWord.startColumn < this._context.leadingWord.startColumn) {\r\n            // happens when the current word gets outdented\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.column < this._context.column) {\r\n            // typed -> moved cursor LEFT -> retrigger if still on a word\r\n            if (ctx.leadingWord.word) {\r\n                this.trigger({ auto: this._context.auto, shy: false }, true);\r\n            }\r\n            else {\r\n                this.cancel();\r\n            }\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            // happens when IntelliSense is not yet computed\r\n            return;\r\n        }\r\n        if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\r\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\r\n            var incomplete = this._completionModel.incomplete;\r\n            var adopted = this._completionModel.adopt(incomplete);\r\n            this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true, incomplete, adopted);\r\n        }\r\n        else {\r\n            // typed -> moved cursor RIGHT -> update UI\r\n            var oldLineContext = this._completionModel.lineContext;\r\n            var isFrozen = false;\r\n            this._completionModel.lineContext = {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            };\r\n            if (this._completionModel.items.length === 0) {\r\n                if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\r\n                    // retrigger when heading into a new word\r\n                    this.trigger({ auto: this._context.auto, shy: false }, true);\r\n                    return;\r\n                }\r\n                if (!this._context.auto) {\r\n                    // freeze when IntelliSense was manually requested\r\n                    this._completionModel.lineContext = oldLineContext;\r\n                    isFrozen = this._completionModel.items.length > 0;\r\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\r\n                        // there were results before but now there aren't\r\n                        // and also we are not on a word anymore -> cancel\r\n                        this.cancel();\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // nothing left\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n            }\r\n            this._onDidSuggest.fire({\r\n                completionModel: this._completionModel,\r\n                auto: this._context.auto,\r\n                shy: this._context.shy,\r\n                isFrozen: isFrozen,\r\n            });\r\n        }\r\n    };\r\n    return SuggestModel;\r\n}());\r\nexport { SuggestModel };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}