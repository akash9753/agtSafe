{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { RGBA8 } from '../core/rgba.js';\nimport { TokenizationRegistry } from '../modes.js';\nvar MinimapTokensColorTracker = /** @class */function () {\n  function MinimapTokensColorTracker() {\n    var _this = this;\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._updateColorMap();\n    TokenizationRegistry.onDidChange(function (e) {\n      if (e.changedColorMap) {\n        _this._updateColorMap();\n      }\n    });\n  }\n  MinimapTokensColorTracker.getInstance = function () {\n    if (!this._INSTANCE) {\n      this._INSTANCE = new MinimapTokensColorTracker();\n    }\n    return this._INSTANCE;\n  };\n  MinimapTokensColorTracker.prototype._updateColorMap = function () {\n    var colorMap = TokenizationRegistry.getColorMap();\n    if (!colorMap) {\n      this._colors = [RGBA8.Empty];\n      this._backgroundIsLight = true;\n      return;\n    }\n    this._colors = [RGBA8.Empty];\n    for (var colorId = 1; colorId < colorMap.length; colorId++) {\n      var source = colorMap[colorId].rgba;\n      // Use a VM friendly data-type\n      this._colors[colorId] = new RGBA8(source.r, source.g, source.b, Math.round(source.a * 255));\n    }\n    var backgroundLuminosity = colorMap[2 /* DefaultBackground */].getRelativeLuminance();\n    this._backgroundIsLight = backgroundLuminosity >= 0.5;\n    this._onDidChange.fire(undefined);\n  };\n  MinimapTokensColorTracker.prototype.getColor = function (colorId) {\n    if (colorId < 1 || colorId >= this._colors.length) {\n      // background color (basically invisible)\n      colorId = 2 /* DefaultBackground */;\n    }\n\n    return this._colors[colorId];\n  };\n  MinimapTokensColorTracker.prototype.backgroundIsLight = function () {\n    return this._backgroundIsLight;\n  };\n  MinimapTokensColorTracker._INSTANCE = null;\n  return MinimapTokensColorTracker;\n}();\nexport { MinimapTokensColorTracker };","map":{"version":3,"names":["Emitter","RGBA8","TokenizationRegistry","MinimapTokensColorTracker","_this","_onDidChange","onDidChange","event","_updateColorMap","e","changedColorMap","getInstance","_INSTANCE","prototype","colorMap","getColorMap","_colors","Empty","_backgroundIsLight","colorId","length","source","rgba","r","g","b","Math","round","a","backgroundLuminosity","getRelativeLuminance","fire","undefined","getColor","backgroundIsLight"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/viewModel/minimapTokensColorTracker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { RGBA8 } from '../core/rgba.js';\r\nimport { TokenizationRegistry } from '../modes.js';\r\nvar MinimapTokensColorTracker = /** @class */ (function () {\r\n    function MinimapTokensColorTracker() {\r\n        var _this = this;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._updateColorMap();\r\n        TokenizationRegistry.onDidChange(function (e) {\r\n            if (e.changedColorMap) {\r\n                _this._updateColorMap();\r\n            }\r\n        });\r\n    }\r\n    MinimapTokensColorTracker.getInstance = function () {\r\n        if (!this._INSTANCE) {\r\n            this._INSTANCE = new MinimapTokensColorTracker();\r\n        }\r\n        return this._INSTANCE;\r\n    };\r\n    MinimapTokensColorTracker.prototype._updateColorMap = function () {\r\n        var colorMap = TokenizationRegistry.getColorMap();\r\n        if (!colorMap) {\r\n            this._colors = [RGBA8.Empty];\r\n            this._backgroundIsLight = true;\r\n            return;\r\n        }\r\n        this._colors = [RGBA8.Empty];\r\n        for (var colorId = 1; colorId < colorMap.length; colorId++) {\r\n            var source = colorMap[colorId].rgba;\r\n            // Use a VM friendly data-type\r\n            this._colors[colorId] = new RGBA8(source.r, source.g, source.b, Math.round(source.a * 255));\r\n        }\r\n        var backgroundLuminosity = colorMap[2 /* DefaultBackground */].getRelativeLuminance();\r\n        this._backgroundIsLight = backgroundLuminosity >= 0.5;\r\n        this._onDidChange.fire(undefined);\r\n    };\r\n    MinimapTokensColorTracker.prototype.getColor = function (colorId) {\r\n        if (colorId < 1 || colorId >= this._colors.length) {\r\n            // background color (basically invisible)\r\n            colorId = 2 /* DefaultBackground */;\r\n        }\r\n        return this._colors[colorId];\r\n    };\r\n    MinimapTokensColorTracker.prototype.backgroundIsLight = function () {\r\n        return this._backgroundIsLight;\r\n    };\r\n    MinimapTokensColorTracker._INSTANCE = null;\r\n    return MinimapTokensColorTracker;\r\n}());\r\nexport { MinimapTokensColorTracker };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,oBAAoB,QAAQ,aAAa;AAClD,IAAIC,yBAAyB,GAAG,aAAe,YAAY;EACvD,SAASA,yBAAyB,GAAG;IACjC,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,YAAY,GAAG,IAAIL,OAAO,EAAE;IACjC,IAAI,CAACM,WAAW,GAAG,IAAI,CAACD,YAAY,CAACE,KAAK;IAC1C,IAAI,CAACC,eAAe,EAAE;IACtBN,oBAAoB,CAACI,WAAW,CAAC,UAAUG,CAAC,EAAE;MAC1C,IAAIA,CAAC,CAACC,eAAe,EAAE;QACnBN,KAAK,CAACI,eAAe,EAAE;MAC3B;IACJ,CAAC,CAAC;EACN;EACAL,yBAAyB,CAACQ,WAAW,GAAG,YAAY;IAChD,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACjB,IAAI,CAACA,SAAS,GAAG,IAAIT,yBAAyB,EAAE;IACpD;IACA,OAAO,IAAI,CAACS,SAAS;EACzB,CAAC;EACDT,yBAAyB,CAACU,SAAS,CAACL,eAAe,GAAG,YAAY;IAC9D,IAAIM,QAAQ,GAAGZ,oBAAoB,CAACa,WAAW,EAAE;IACjD,IAAI,CAACD,QAAQ,EAAE;MACX,IAAI,CAACE,OAAO,GAAG,CAACf,KAAK,CAACgB,KAAK,CAAC;MAC5B,IAAI,CAACC,kBAAkB,GAAG,IAAI;MAC9B;IACJ;IACA,IAAI,CAACF,OAAO,GAAG,CAACf,KAAK,CAACgB,KAAK,CAAC;IAC5B,KAAK,IAAIE,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGL,QAAQ,CAACM,MAAM,EAAED,OAAO,EAAE,EAAE;MACxD,IAAIE,MAAM,GAAGP,QAAQ,CAACK,OAAO,CAAC,CAACG,IAAI;MACnC;MACA,IAAI,CAACN,OAAO,CAACG,OAAO,CAAC,GAAG,IAAIlB,KAAK,CAACoB,MAAM,CAACE,CAAC,EAAEF,MAAM,CAACG,CAAC,EAAEH,MAAM,CAACI,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACN,MAAM,CAACO,CAAC,GAAG,GAAG,CAAC,CAAC;IAC/F;IACA,IAAIC,oBAAoB,GAAGf,QAAQ,CAAC,CAAC,CAAC,wBAAwB,CAACgB,oBAAoB,EAAE;IACrF,IAAI,CAACZ,kBAAkB,GAAGW,oBAAoB,IAAI,GAAG;IACrD,IAAI,CAACxB,YAAY,CAAC0B,IAAI,CAACC,SAAS,CAAC;EACrC,CAAC;EACD7B,yBAAyB,CAACU,SAAS,CAACoB,QAAQ,GAAG,UAAUd,OAAO,EAAE;IAC9D,IAAIA,OAAO,GAAG,CAAC,IAAIA,OAAO,IAAI,IAAI,CAACH,OAAO,CAACI,MAAM,EAAE;MAC/C;MACAD,OAAO,GAAG,CAAC,CAAC;IAChB;;IACA,OAAO,IAAI,CAACH,OAAO,CAACG,OAAO,CAAC;EAChC,CAAC;EACDhB,yBAAyB,CAACU,SAAS,CAACqB,iBAAiB,GAAG,YAAY;IAChE,OAAO,IAAI,CAAChB,kBAAkB;EAClC,CAAC;EACDf,yBAAyB,CAACS,SAAS,GAAG,IAAI;EAC1C,OAAOT,yBAAyB;AACpC,CAAC,EAAG;AACJ,SAASA,yBAAyB"},"metadata":{},"sourceType":"module"}