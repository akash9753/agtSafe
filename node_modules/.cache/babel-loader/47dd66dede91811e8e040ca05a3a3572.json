{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as languageFacts from '../languageFacts/facts.js';\nimport { Rules, Settings } from './lintRules.js';\nimport * as nodes from '../parser/cssNodes.js';\nimport calculateBoxModel, { Element } from './lintUtil.js';\nimport { union } from '../utils/arrays.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar NodesByRootMap = /** @class */function () {\n  function NodesByRootMap() {\n    this.data = {};\n  }\n  NodesByRootMap.prototype.add = function (root, name, node) {\n    var entry = this.data[root];\n    if (!entry) {\n      entry = {\n        nodes: [],\n        names: []\n      };\n      this.data[root] = entry;\n    }\n    entry.names.push(name);\n    if (node) {\n      entry.nodes.push(node);\n    }\n  };\n  return NodesByRootMap;\n}();\nvar LintVisitor = /** @class */function () {\n  function LintVisitor(document, settings) {\n    var _this = this;\n    this.warnings = [];\n    this.settings = settings;\n    this.documentText = document.getText();\n    this.keyframes = new NodesByRootMap();\n    this.validProperties = {};\n    var properties = settings.getSetting(Settings.ValidProperties);\n    if (Array.isArray(properties)) {\n      properties.forEach(function (p) {\n        if (typeof p === 'string') {\n          var name = p.trim().toLowerCase();\n          if (name.length) {\n            _this.validProperties[name] = true;\n          }\n        }\n      });\n    }\n  }\n  LintVisitor.entries = function (node, document, settings, entryFilter) {\n    var visitor = new LintVisitor(document, settings);\n    node.acceptVisitor(visitor);\n    visitor.completeValidations();\n    return visitor.getEntries(entryFilter);\n  };\n  LintVisitor.prototype.isValidPropertyDeclaration = function (element) {\n    var propertyName = element.fullPropertyName;\n    return this.validProperties[propertyName];\n  };\n  LintVisitor.prototype.fetch = function (input, s) {\n    var elements = [];\n    for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {\n      var curr = input_1[_i];\n      if (curr.fullPropertyName === s) {\n        elements.push(curr);\n      }\n    }\n    return elements;\n  };\n  LintVisitor.prototype.fetchWithValue = function (input, s, v) {\n    var elements = [];\n    for (var _i = 0, input_2 = input; _i < input_2.length; _i++) {\n      var inputElement = input_2[_i];\n      if (inputElement.fullPropertyName === s) {\n        var expression = inputElement.node.getValue();\n        if (expression && this.findValueInExpression(expression, v)) {\n          elements.push(inputElement);\n        }\n      }\n    }\n    return elements;\n  };\n  LintVisitor.prototype.findValueInExpression = function (expression, v) {\n    var found = false;\n    expression.accept(function (node) {\n      if (node.type === nodes.NodeType.Identifier && node.matches(v)) {\n        found = true;\n      }\n      return !found;\n    });\n    return found;\n  };\n  LintVisitor.prototype.getEntries = function (filter) {\n    if (filter === void 0) {\n      filter = nodes.Level.Warning | nodes.Level.Error;\n    }\n    return this.warnings.filter(function (entry) {\n      return (entry.getLevel() & filter) !== 0;\n    });\n  };\n  LintVisitor.prototype.addEntry = function (node, rule, details) {\n    var entry = new nodes.Marker(node, rule, this.settings.getRule(rule), details);\n    this.warnings.push(entry);\n  };\n  LintVisitor.prototype.getMissingNames = function (expected, actual) {\n    var expectedClone = expected.slice(0); // clone\n    for (var i = 0; i < actual.length; i++) {\n      var k = expectedClone.indexOf(actual[i]);\n      if (k !== -1) {\n        expectedClone[k] = null;\n      }\n    }\n    var result = null;\n    for (var i = 0; i < expectedClone.length; i++) {\n      var curr = expectedClone[i];\n      if (curr) {\n        if (result === null) {\n          result = localize('namelist.single', \"'{0}'\", curr);\n        } else {\n          result = localize('namelist.concatenated', \"{0}, '{1}'\", result, curr);\n        }\n      }\n    }\n    return result;\n  };\n  LintVisitor.prototype.visitNode = function (node) {\n    switch (node.type) {\n      case nodes.NodeType.UnknownAtRule:\n        return this.visitUnknownAtRule(node);\n      case nodes.NodeType.Keyframe:\n        return this.visitKeyframe(node);\n      case nodes.NodeType.FontFace:\n        return this.visitFontFace(node);\n      case nodes.NodeType.Ruleset:\n        return this.visitRuleSet(node);\n      case nodes.NodeType.SimpleSelector:\n        return this.visitSimpleSelector(node);\n      case nodes.NodeType.Function:\n        return this.visitFunction(node);\n      case nodes.NodeType.NumericValue:\n        return this.visitNumericValue(node);\n      case nodes.NodeType.Import:\n        return this.visitImport(node);\n      case nodes.NodeType.HexColorValue:\n        return this.visitHexColorValue(node);\n      case nodes.NodeType.Prio:\n        return this.visitPrio(node);\n    }\n    return true;\n  };\n  LintVisitor.prototype.completeValidations = function () {\n    this.validateKeyframes();\n  };\n  LintVisitor.prototype.visitUnknownAtRule = function (node) {\n    var atRuleName = node.getChild(0);\n    if (!atRuleName) {\n      return false;\n    }\n    var atDirective = languageFacts.cssDataManager.getAtDirective(atRuleName.getText());\n    if (atDirective) {\n      return false;\n    }\n    this.addEntry(atRuleName, Rules.UnknownAtRules, \"Unknown at rule \" + atRuleName.getText());\n    return true;\n  };\n  LintVisitor.prototype.visitKeyframe = function (node) {\n    var keyword = node.getKeyword();\n    if (!keyword) {\n      return false;\n    }\n    var text = keyword.getText();\n    this.keyframes.add(node.getName(), text, text !== '@keyframes' ? keyword : null);\n    return true;\n  };\n  LintVisitor.prototype.validateKeyframes = function () {\n    // @keyframe and it's vendor specific alternatives\n    // @keyframe should be included\n    var expected = ['@-webkit-keyframes', '@-moz-keyframes', '@-o-keyframes'];\n    for (var name in this.keyframes.data) {\n      var actual = this.keyframes.data[name].names;\n      var needsStandard = actual.indexOf('@keyframes') === -1;\n      if (!needsStandard && actual.length === 1) {\n        continue; // only the non-vendor specific keyword is used, that's fine, no warning\n      }\n\n      var missingVendorSpecific = this.getMissingNames(expected, actual);\n      if (missingVendorSpecific || needsStandard) {\n        for (var _i = 0, _a = this.keyframes.data[name].nodes; _i < _a.length; _i++) {\n          var node = _a[_i];\n          if (needsStandard) {\n            var message = localize('keyframes.standardrule.missing', \"Always define standard rule '@keyframes' when defining keyframes.\");\n            this.addEntry(node, Rules.IncludeStandardPropertyWhenUsingVendorPrefix, message);\n          }\n          if (missingVendorSpecific) {\n            var message = localize('keyframes.vendorspecific.missing', \"Always include all vendor specific rules: Missing: {0}\", missingVendorSpecific);\n            this.addEntry(node, Rules.AllVendorPrefixes, message);\n          }\n        }\n      }\n    }\n    return true;\n  };\n  LintVisitor.prototype.visitSimpleSelector = function (node) {\n    var firstChar = this.documentText.charAt(node.offset);\n    /////////////////////////////////////////////////////////////\n    //\tLint - The universal selector (*) is known to be slow.\n    /////////////////////////////////////////////////////////////\n    if (node.length === 1 && firstChar === '*') {\n      this.addEntry(node, Rules.UniversalSelector);\n    }\n    /////////////////////////////////////////////////////////////\n    //\tLint - Avoid id selectors\n    /////////////////////////////////////////////////////////////\n    if (firstChar === '#') {\n      this.addEntry(node, Rules.AvoidIdSelector);\n    }\n    return true;\n  };\n  LintVisitor.prototype.visitImport = function (node) {\n    /////////////////////////////////////////////////////////////\n    //\tLint - Import statements shouldn't be used, because they aren't offering parallel downloads.\n    /////////////////////////////////////////////////////////////\n    this.addEntry(node, Rules.ImportStatemement);\n    return true;\n  };\n  LintVisitor.prototype.visitRuleSet = function (node) {\n    /////////////////////////////////////////////////////////////\n    //\tLint - Don't use empty rulesets.\n    /////////////////////////////////////////////////////////////\n    var declarations = node.getDeclarations();\n    if (!declarations) {\n      // syntax error\n      return false;\n    }\n    if (!declarations.hasChildren()) {\n      this.addEntry(node.getSelectors(), Rules.EmptyRuleSet);\n    }\n    var propertyTable = [];\n    for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n      var element = _a[_i];\n      if (element instanceof nodes.Declaration) {\n        propertyTable.push(new Element(element));\n      }\n    }\n    /////////////////////////////////////////////////////////////\n    // the rule warns when it finds:\n    // width being used with border, border-left, border-right, padding, padding-left, or padding-right\n    // height being used with border, border-top, border-bottom, padding, padding-top, or padding-bottom\n    // No error when box-sizing property is specified, as it assumes the user knows what he's doing.\n    // see https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size\n    /////////////////////////////////////////////////////////////\n    var boxModel = calculateBoxModel(propertyTable);\n    if (boxModel.width) {\n      var properties = [];\n      if (boxModel.right.value) {\n        properties = union(properties, boxModel.right.properties);\n      }\n      if (boxModel.left.value) {\n        properties = union(properties, boxModel.left.properties);\n      }\n      if (properties.length !== 0) {\n        for (var _b = 0, properties_1 = properties; _b < properties_1.length; _b++) {\n          var item = properties_1[_b];\n          this.addEntry(item.node, Rules.BewareOfBoxModelSize);\n        }\n        this.addEntry(boxModel.width.node, Rules.BewareOfBoxModelSize);\n      }\n    }\n    if (boxModel.height) {\n      var properties = [];\n      if (boxModel.top.value) {\n        properties = union(properties, boxModel.top.properties);\n      }\n      if (boxModel.bottom.value) {\n        properties = union(properties, boxModel.bottom.properties);\n      }\n      if (properties.length !== 0) {\n        for (var _c = 0, properties_2 = properties; _c < properties_2.length; _c++) {\n          var item = properties_2[_c];\n          this.addEntry(item.node, Rules.BewareOfBoxModelSize);\n        }\n        this.addEntry(boxModel.height.node, Rules.BewareOfBoxModelSize);\n      }\n    }\n    /////////////////////////////////////////////////////////////\n    //\tProperties ignored due to display\n    /////////////////////////////////////////////////////////////\n    // With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect\n    var displayElems = this.fetchWithValue(propertyTable, 'display', 'inline');\n    if (displayElems.length > 0) {\n      for (var _d = 0, _e = ['width', 'height', 'margin-top', 'margin-bottom', 'float']; _d < _e.length; _d++) {\n        var prop = _e[_d];\n        var elem = this.fetch(propertyTable, prop);\n        for (var index = 0; index < elem.length; index++) {\n          var node_1 = elem[index].node;\n          var value = node_1.getValue();\n          if (prop === 'float' && (!value || value.matches('none'))) {\n            continue;\n          }\n          this.addEntry(node_1, Rules.PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInline', \"Property is ignored due to the display. With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect.\"));\n        }\n      }\n    }\n    // With 'display: inline-block', 'float' has no effect\n    displayElems = this.fetchWithValue(propertyTable, 'display', 'inline-block');\n    if (displayElems.length > 0) {\n      var elem = this.fetch(propertyTable, 'float');\n      for (var index = 0; index < elem.length; index++) {\n        var node_2 = elem[index].node;\n        var value = node_2.getValue();\n        if (value && !value.matches('none')) {\n          this.addEntry(node_2, Rules.PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInlineBlock', \"inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block'\"));\n        }\n      }\n    }\n    // With 'display: block', 'vertical-align' has no effect\n    displayElems = this.fetchWithValue(propertyTable, 'display', 'block');\n    if (displayElems.length > 0) {\n      var elem = this.fetch(propertyTable, 'vertical-align');\n      for (var index = 0; index < elem.length; index++) {\n        this.addEntry(elem[index].node, Rules.PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayBlock', \"Property is ignored due to the display. With 'display: block', vertical-align should not be used.\"));\n      }\n    }\n    /////////////////////////////////////////////////////////////\n    //\tAvoid 'float'\n    /////////////////////////////////////////////////////////////\n    var elements = this.fetch(propertyTable, 'float');\n    for (var index = 0; index < elements.length; index++) {\n      var element = elements[index];\n      if (!this.isValidPropertyDeclaration(element)) {\n        this.addEntry(element.node, Rules.AvoidFloat);\n      }\n    }\n    /////////////////////////////////////////////////////////////\n    //\tDon't use duplicate declarations.\n    /////////////////////////////////////////////////////////////\n    for (var i = 0; i < propertyTable.length; i++) {\n      var element = propertyTable[i];\n      if (element.fullPropertyName !== 'background' && !this.validProperties[element.fullPropertyName]) {\n        var value = element.node.getValue();\n        if (value && this.documentText.charAt(value.offset) !== '-') {\n          var elements_1 = this.fetch(propertyTable, element.fullPropertyName);\n          if (elements_1.length > 1) {\n            for (var k = 0; k < elements_1.length; k++) {\n              var value_1 = elements_1[k].node.getValue();\n              if (value_1 && this.documentText.charAt(value_1.offset) !== '-' && elements_1[k] !== element) {\n                this.addEntry(element.node, Rules.DuplicateDeclarations);\n              }\n            }\n          }\n        }\n      }\n    }\n    /////////////////////////////////////////////////////////////\n    //\tUnknown propery & When using a vendor-prefixed gradient, make sure to use them all.\n    /////////////////////////////////////////////////////////////\n    var isExportBlock = node.getSelectors().matches(\":export\");\n    if (!isExportBlock) {\n      var propertiesBySuffix = new NodesByRootMap();\n      var containsUnknowns = false;\n      for (var _f = 0, propertyTable_1 = propertyTable; _f < propertyTable_1.length; _f++) {\n        var element = propertyTable_1[_f];\n        var decl = element.node;\n        if (this.isCSSDeclaration(decl)) {\n          var name = element.fullPropertyName;\n          var firstChar = name.charAt(0);\n          if (firstChar === '-') {\n            if (name.charAt(1) !== '-') {\n              // avoid css variables\n              if (!languageFacts.cssDataManager.isKnownProperty(name) && !this.validProperties[name]) {\n                this.addEntry(decl.getProperty(), Rules.UnknownVendorSpecificProperty);\n              }\n              var nonPrefixedName = decl.getNonPrefixedPropertyName();\n              propertiesBySuffix.add(nonPrefixedName, name, decl.getProperty());\n            }\n          } else {\n            var fullName = name;\n            if (firstChar === '*' || firstChar === '_') {\n              this.addEntry(decl.getProperty(), Rules.IEStarHack);\n              name = name.substr(1);\n            }\n            // _property and *property might be contributed via custom data\n            if (!languageFacts.cssDataManager.isKnownProperty(fullName) && !languageFacts.cssDataManager.isKnownProperty(name)) {\n              if (!this.validProperties[name]) {\n                this.addEntry(decl.getProperty(), Rules.UnknownProperty, localize('property.unknownproperty.detailed', \"Unknown property: '{0}'\", name));\n              }\n            }\n            propertiesBySuffix.add(name, name, null); // don't pass the node as we don't show errors on the standard\n          }\n        } else {\n          containsUnknowns = true;\n        }\n      }\n      if (!containsUnknowns) {\n        // don't perform this test if there are\n        for (var suffix in propertiesBySuffix.data) {\n          var entry = propertiesBySuffix.data[suffix];\n          var actual = entry.names;\n          var needsStandard = languageFacts.cssDataManager.isStandardProperty(suffix) && actual.indexOf(suffix) === -1;\n          if (!needsStandard && actual.length === 1) {\n            continue; // only the non-vendor specific rule is used, that's fine, no warning\n          }\n\n          var expected = [];\n          for (var i = 0, len = LintVisitor.prefixes.length; i < len; i++) {\n            var prefix = LintVisitor.prefixes[i];\n            if (languageFacts.cssDataManager.isStandardProperty(prefix + suffix)) {\n              expected.push(prefix + suffix);\n            }\n          }\n          var missingVendorSpecific = this.getMissingNames(expected, actual);\n          if (missingVendorSpecific || needsStandard) {\n            for (var _g = 0, _h = entry.nodes; _g < _h.length; _g++) {\n              var node_3 = _h[_g];\n              if (needsStandard) {\n                var message = localize('property.standard.missing', \"Also define the standard property '{0}' for compatibility\", suffix);\n                this.addEntry(node_3, Rules.IncludeStandardPropertyWhenUsingVendorPrefix, message);\n              }\n              if (missingVendorSpecific) {\n                var message = localize('property.vendorspecific.missing', \"Always include all vendor specific properties: Missing: {0}\", missingVendorSpecific);\n                this.addEntry(node_3, Rules.AllVendorPrefixes, message);\n              }\n            }\n          }\n        }\n      }\n    }\n    return true;\n  };\n  LintVisitor.prototype.visitPrio = function (node) {\n    /////////////////////////////////////////////////////////////\n    //\tDon't use !important\n    /////////////////////////////////////////////////////////////\n    this.addEntry(node, Rules.AvoidImportant);\n    return true;\n  };\n  LintVisitor.prototype.visitNumericValue = function (node) {\n    /////////////////////////////////////////////////////////////\n    //\t0 has no following unit\n    /////////////////////////////////////////////////////////////\n    var funcDecl = node.findParent(nodes.NodeType.Function);\n    if (funcDecl && funcDecl.getName() === 'calc') {\n      return true;\n    }\n    var decl = node.findParent(nodes.NodeType.Declaration);\n    if (decl) {\n      var declValue = decl.getValue();\n      if (declValue) {\n        var value = node.getValue();\n        if (!value.unit || languageFacts.units.length.indexOf(value.unit.toLowerCase()) === -1) {\n          return true;\n        }\n        if (parseFloat(value.value) === 0.0 && !!value.unit && !this.validProperties[decl.getFullPropertyName()]) {\n          this.addEntry(node, Rules.ZeroWithUnit);\n        }\n      }\n    }\n    return true;\n  };\n  LintVisitor.prototype.visitFontFace = function (node) {\n    var declarations = node.getDeclarations();\n    if (!declarations) {\n      // syntax error\n      return false;\n    }\n    var definesSrc = false,\n      definesFontFamily = false;\n    var containsUnknowns = false;\n    for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n      var node_4 = _a[_i];\n      if (this.isCSSDeclaration(node_4)) {\n        var name = node_4.getProperty().getName().toLowerCase();\n        if (name === 'src') {\n          definesSrc = true;\n        }\n        if (name === 'font-family') {\n          definesFontFamily = true;\n        }\n      } else {\n        containsUnknowns = true;\n      }\n    }\n    if (!containsUnknowns && (!definesSrc || !definesFontFamily)) {\n      this.addEntry(node, Rules.RequiredPropertiesForFontFace);\n    }\n    return true;\n  };\n  LintVisitor.prototype.isCSSDeclaration = function (node) {\n    if (node instanceof nodes.Declaration) {\n      if (!node.getValue()) {\n        return false;\n      }\n      var property = node.getProperty();\n      if (!property) {\n        return false;\n      }\n      var identifier = property.getIdentifier();\n      if (!identifier || identifier.containsInterpolation()) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  };\n  LintVisitor.prototype.visitHexColorValue = function (node) {\n    // Rule: #eeff0011 or #eeff00 or #ef01 or #ef0\n    var length = node.length;\n    if (length !== 9 && length !== 7 && length !== 5 && length !== 4) {\n      this.addEntry(node, Rules.HexColorLength);\n    }\n    return false;\n  };\n  LintVisitor.prototype.visitFunction = function (node) {\n    var fnName = node.getName().toLowerCase();\n    var expectedAttrCount = -1;\n    var actualAttrCount = 0;\n    switch (fnName) {\n      case 'rgb(':\n      case 'hsl(':\n        expectedAttrCount = 3;\n        break;\n      case 'rgba(':\n      case 'hsla(':\n        expectedAttrCount = 4;\n        break;\n    }\n    if (expectedAttrCount !== -1) {\n      node.getArguments().accept(function (n) {\n        if (n instanceof nodes.BinaryExpression) {\n          actualAttrCount += 1;\n          return false;\n        }\n        return true;\n      });\n      if (actualAttrCount !== expectedAttrCount) {\n        this.addEntry(node, Rules.ArgsInColorFunction);\n      }\n    }\n    return true;\n  };\n  LintVisitor.prefixes = ['-ms-', '-moz-', '-o-', '-webkit-'];\n  return LintVisitor;\n}();\nexport { LintVisitor };","map":{"version":3,"names":["languageFacts","Rules","Settings","nodes","calculateBoxModel","Element","union","nls","localize","loadMessageBundle","NodesByRootMap","data","prototype","add","root","name","node","entry","names","push","LintVisitor","document","settings","_this","warnings","documentText","getText","keyframes","validProperties","properties","getSetting","ValidProperties","Array","isArray","forEach","p","trim","toLowerCase","length","entries","entryFilter","visitor","acceptVisitor","completeValidations","getEntries","isValidPropertyDeclaration","element","propertyName","fullPropertyName","fetch","input","s","elements","_i","input_1","curr","fetchWithValue","v","input_2","inputElement","expression","getValue","findValueInExpression","found","accept","type","NodeType","Identifier","matches","filter","Level","Warning","Error","getLevel","addEntry","rule","details","Marker","getRule","getMissingNames","expected","actual","expectedClone","slice","i","k","indexOf","result","visitNode","UnknownAtRule","visitUnknownAtRule","Keyframe","visitKeyframe","FontFace","visitFontFace","Ruleset","visitRuleSet","SimpleSelector","visitSimpleSelector","Function","visitFunction","NumericValue","visitNumericValue","Import","visitImport","HexColorValue","visitHexColorValue","Prio","visitPrio","validateKeyframes","atRuleName","getChild","atDirective","cssDataManager","getAtDirective","UnknownAtRules","keyword","getKeyword","text","getName","needsStandard","missingVendorSpecific","_a","message","IncludeStandardPropertyWhenUsingVendorPrefix","AllVendorPrefixes","firstChar","charAt","offset","UniversalSelector","AvoidIdSelector","ImportStatemement","declarations","getDeclarations","hasChildren","getSelectors","EmptyRuleSet","propertyTable","getChildren","Declaration","boxModel","width","right","value","left","_b","properties_1","item","BewareOfBoxModelSize","height","top","bottom","_c","properties_2","displayElems","_d","_e","prop","elem","index","node_1","PropertyIgnoredDueToDisplay","node_2","AvoidFloat","elements_1","value_1","DuplicateDeclarations","isExportBlock","propertiesBySuffix","containsUnknowns","_f","propertyTable_1","decl","isCSSDeclaration","isKnownProperty","getProperty","UnknownVendorSpecificProperty","nonPrefixedName","getNonPrefixedPropertyName","fullName","IEStarHack","substr","UnknownProperty","suffix","isStandardProperty","len","prefixes","prefix","_g","_h","node_3","AvoidImportant","funcDecl","findParent","declValue","unit","units","parseFloat","getFullPropertyName","ZeroWithUnit","definesSrc","definesFontFamily","node_4","RequiredPropertiesForFontFace","property","identifier","getIdentifier","containsInterpolation","HexColorLength","fnName","expectedAttrCount","actualAttrCount","getArguments","n","BinaryExpression","ArgsInColorFunction"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as languageFacts from '../languageFacts/facts.js';\nimport { Rules, Settings } from './lintRules.js';\nimport * as nodes from '../parser/cssNodes.js';\nimport calculateBoxModel, { Element } from './lintUtil.js';\nimport { union } from '../utils/arrays.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar NodesByRootMap = /** @class */ (function () {\n    function NodesByRootMap() {\n        this.data = {};\n    }\n    NodesByRootMap.prototype.add = function (root, name, node) {\n        var entry = this.data[root];\n        if (!entry) {\n            entry = { nodes: [], names: [] };\n            this.data[root] = entry;\n        }\n        entry.names.push(name);\n        if (node) {\n            entry.nodes.push(node);\n        }\n    };\n    return NodesByRootMap;\n}());\nvar LintVisitor = /** @class */ (function () {\n    function LintVisitor(document, settings) {\n        var _this = this;\n        this.warnings = [];\n        this.settings = settings;\n        this.documentText = document.getText();\n        this.keyframes = new NodesByRootMap();\n        this.validProperties = {};\n        var properties = settings.getSetting(Settings.ValidProperties);\n        if (Array.isArray(properties)) {\n            properties.forEach(function (p) {\n                if (typeof p === 'string') {\n                    var name = p.trim().toLowerCase();\n                    if (name.length) {\n                        _this.validProperties[name] = true;\n                    }\n                }\n            });\n        }\n    }\n    LintVisitor.entries = function (node, document, settings, entryFilter) {\n        var visitor = new LintVisitor(document, settings);\n        node.acceptVisitor(visitor);\n        visitor.completeValidations();\n        return visitor.getEntries(entryFilter);\n    };\n    LintVisitor.prototype.isValidPropertyDeclaration = function (element) {\n        var propertyName = element.fullPropertyName;\n        return this.validProperties[propertyName];\n    };\n    LintVisitor.prototype.fetch = function (input, s) {\n        var elements = [];\n        for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {\n            var curr = input_1[_i];\n            if (curr.fullPropertyName === s) {\n                elements.push(curr);\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.fetchWithValue = function (input, s, v) {\n        var elements = [];\n        for (var _i = 0, input_2 = input; _i < input_2.length; _i++) {\n            var inputElement = input_2[_i];\n            if (inputElement.fullPropertyName === s) {\n                var expression = inputElement.node.getValue();\n                if (expression && this.findValueInExpression(expression, v)) {\n                    elements.push(inputElement);\n                }\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.findValueInExpression = function (expression, v) {\n        var found = false;\n        expression.accept(function (node) {\n            if (node.type === nodes.NodeType.Identifier && node.matches(v)) {\n                found = true;\n            }\n            return !found;\n        });\n        return found;\n    };\n    LintVisitor.prototype.getEntries = function (filter) {\n        if (filter === void 0) { filter = (nodes.Level.Warning | nodes.Level.Error); }\n        return this.warnings.filter(function (entry) {\n            return (entry.getLevel() & filter) !== 0;\n        });\n    };\n    LintVisitor.prototype.addEntry = function (node, rule, details) {\n        var entry = new nodes.Marker(node, rule, this.settings.getRule(rule), details);\n        this.warnings.push(entry);\n    };\n    LintVisitor.prototype.getMissingNames = function (expected, actual) {\n        var expectedClone = expected.slice(0); // clone\n        for (var i = 0; i < actual.length; i++) {\n            var k = expectedClone.indexOf(actual[i]);\n            if (k !== -1) {\n                expectedClone[k] = null;\n            }\n        }\n        var result = null;\n        for (var i = 0; i < expectedClone.length; i++) {\n            var curr = expectedClone[i];\n            if (curr) {\n                if (result === null) {\n                    result = localize('namelist.single', \"'{0}'\", curr);\n                }\n                else {\n                    result = localize('namelist.concatenated', \"{0}, '{1}'\", result, curr);\n                }\n            }\n        }\n        return result;\n    };\n    LintVisitor.prototype.visitNode = function (node) {\n        switch (node.type) {\n            case nodes.NodeType.UnknownAtRule:\n                return this.visitUnknownAtRule(node);\n            case nodes.NodeType.Keyframe:\n                return this.visitKeyframe(node);\n            case nodes.NodeType.FontFace:\n                return this.visitFontFace(node);\n            case nodes.NodeType.Ruleset:\n                return this.visitRuleSet(node);\n            case nodes.NodeType.SimpleSelector:\n                return this.visitSimpleSelector(node);\n            case nodes.NodeType.Function:\n                return this.visitFunction(node);\n            case nodes.NodeType.NumericValue:\n                return this.visitNumericValue(node);\n            case nodes.NodeType.Import:\n                return this.visitImport(node);\n            case nodes.NodeType.HexColorValue:\n                return this.visitHexColorValue(node);\n            case nodes.NodeType.Prio:\n                return this.visitPrio(node);\n        }\n        return true;\n    };\n    LintVisitor.prototype.completeValidations = function () {\n        this.validateKeyframes();\n    };\n    LintVisitor.prototype.visitUnknownAtRule = function (node) {\n        var atRuleName = node.getChild(0);\n        if (!atRuleName) {\n            return false;\n        }\n        var atDirective = languageFacts.cssDataManager.getAtDirective(atRuleName.getText());\n        if (atDirective) {\n            return false;\n        }\n        this.addEntry(atRuleName, Rules.UnknownAtRules, \"Unknown at rule \" + atRuleName.getText());\n        return true;\n    };\n    LintVisitor.prototype.visitKeyframe = function (node) {\n        var keyword = node.getKeyword();\n        if (!keyword) {\n            return false;\n        }\n        var text = keyword.getText();\n        this.keyframes.add(node.getName(), text, (text !== '@keyframes') ? keyword : null);\n        return true;\n    };\n    LintVisitor.prototype.validateKeyframes = function () {\n        // @keyframe and it's vendor specific alternatives\n        // @keyframe should be included\n        var expected = ['@-webkit-keyframes', '@-moz-keyframes', '@-o-keyframes'];\n        for (var name in this.keyframes.data) {\n            var actual = this.keyframes.data[name].names;\n            var needsStandard = (actual.indexOf('@keyframes') === -1);\n            if (!needsStandard && actual.length === 1) {\n                continue; // only the non-vendor specific keyword is used, that's fine, no warning\n            }\n            var missingVendorSpecific = this.getMissingNames(expected, actual);\n            if (missingVendorSpecific || needsStandard) {\n                for (var _i = 0, _a = this.keyframes.data[name].nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    if (needsStandard) {\n                        var message = localize('keyframes.standardrule.missing', \"Always define standard rule '@keyframes' when defining keyframes.\");\n                        this.addEntry(node, Rules.IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                    }\n                    if (missingVendorSpecific) {\n                        var message = localize('keyframes.vendorspecific.missing', \"Always include all vendor specific rules: Missing: {0}\", missingVendorSpecific);\n                        this.addEntry(node, Rules.AllVendorPrefixes, message);\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitSimpleSelector = function (node) {\n        var firstChar = this.documentText.charAt(node.offset);\n        /////////////////////////////////////////////////////////////\n        //\tLint - The universal selector (*) is known to be slow.\n        /////////////////////////////////////////////////////////////\n        if (node.length === 1 && firstChar === '*') {\n            this.addEntry(node, Rules.UniversalSelector);\n        }\n        /////////////////////////////////////////////////////////////\n        //\tLint - Avoid id selectors\n        /////////////////////////////////////////////////////////////\n        if (firstChar === '#') {\n            this.addEntry(node, Rules.AvoidIdSelector);\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitImport = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Import statements shouldn't be used, because they aren't offering parallel downloads.\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, Rules.ImportStatemement);\n        return true;\n    };\n    LintVisitor.prototype.visitRuleSet = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Don't use empty rulesets.\n        /////////////////////////////////////////////////////////////\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return false;\n        }\n        if (!declarations.hasChildren()) {\n            this.addEntry(node.getSelectors(), Rules.EmptyRuleSet);\n        }\n        var propertyTable = [];\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (element instanceof nodes.Declaration) {\n                propertyTable.push(new Element(element));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        // the rule warns when it finds:\n        // width being used with border, border-left, border-right, padding, padding-left, or padding-right\n        // height being used with border, border-top, border-bottom, padding, padding-top, or padding-bottom\n        // No error when box-sizing property is specified, as it assumes the user knows what he's doing.\n        // see https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size\n        /////////////////////////////////////////////////////////////\n        var boxModel = calculateBoxModel(propertyTable);\n        if (boxModel.width) {\n            var properties = [];\n            if (boxModel.right.value) {\n                properties = union(properties, boxModel.right.properties);\n            }\n            if (boxModel.left.value) {\n                properties = union(properties, boxModel.left.properties);\n            }\n            if (properties.length !== 0) {\n                for (var _b = 0, properties_1 = properties; _b < properties_1.length; _b++) {\n                    var item = properties_1[_b];\n                    this.addEntry(item.node, Rules.BewareOfBoxModelSize);\n                }\n                this.addEntry(boxModel.width.node, Rules.BewareOfBoxModelSize);\n            }\n        }\n        if (boxModel.height) {\n            var properties = [];\n            if (boxModel.top.value) {\n                properties = union(properties, boxModel.top.properties);\n            }\n            if (boxModel.bottom.value) {\n                properties = union(properties, boxModel.bottom.properties);\n            }\n            if (properties.length !== 0) {\n                for (var _c = 0, properties_2 = properties; _c < properties_2.length; _c++) {\n                    var item = properties_2[_c];\n                    this.addEntry(item.node, Rules.BewareOfBoxModelSize);\n                }\n                this.addEntry(boxModel.height.node, Rules.BewareOfBoxModelSize);\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tProperties ignored due to display\n        /////////////////////////////////////////////////////////////\n        // With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect\n        var displayElems = this.fetchWithValue(propertyTable, 'display', 'inline');\n        if (displayElems.length > 0) {\n            for (var _d = 0, _e = ['width', 'height', 'margin-top', 'margin-bottom', 'float']; _d < _e.length; _d++) {\n                var prop = _e[_d];\n                var elem = this.fetch(propertyTable, prop);\n                for (var index = 0; index < elem.length; index++) {\n                    var node_1 = elem[index].node;\n                    var value = node_1.getValue();\n                    if (prop === 'float' && (!value || value.matches('none'))) {\n                        continue;\n                    }\n                    this.addEntry(node_1, Rules.PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInline', \"Property is ignored due to the display. With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect.\"));\n                }\n            }\n        }\n        // With 'display: inline-block', 'float' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'inline-block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'float');\n            for (var index = 0; index < elem.length; index++) {\n                var node_2 = elem[index].node;\n                var value = node_2.getValue();\n                if (value && !value.matches('none')) {\n                    this.addEntry(node_2, Rules.PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInlineBlock', \"inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block'\"));\n                }\n            }\n        }\n        // With 'display: block', 'vertical-align' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'vertical-align');\n            for (var index = 0; index < elem.length; index++) {\n                this.addEntry(elem[index].node, Rules.PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayBlock', \"Property is ignored due to the display. With 'display: block', vertical-align should not be used.\"));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tAvoid 'float'\n        /////////////////////////////////////////////////////////////\n        var elements = this.fetch(propertyTable, 'float');\n        for (var index = 0; index < elements.length; index++) {\n            var element = elements[index];\n            if (!this.isValidPropertyDeclaration(element)) {\n                this.addEntry(element.node, Rules.AvoidFloat);\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tDon't use duplicate declarations.\n        /////////////////////////////////////////////////////////////\n        for (var i = 0; i < propertyTable.length; i++) {\n            var element = propertyTable[i];\n            if (element.fullPropertyName !== 'background' && !this.validProperties[element.fullPropertyName]) {\n                var value = element.node.getValue();\n                if (value && this.documentText.charAt(value.offset) !== '-') {\n                    var elements_1 = this.fetch(propertyTable, element.fullPropertyName);\n                    if (elements_1.length > 1) {\n                        for (var k = 0; k < elements_1.length; k++) {\n                            var value_1 = elements_1[k].node.getValue();\n                            if (value_1 && this.documentText.charAt(value_1.offset) !== '-' && elements_1[k] !== element) {\n                                this.addEntry(element.node, Rules.DuplicateDeclarations);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tUnknown propery & When using a vendor-prefixed gradient, make sure to use them all.\n        /////////////////////////////////////////////////////////////\n        var isExportBlock = node.getSelectors().matches(\":export\");\n        if (!isExportBlock) {\n            var propertiesBySuffix = new NodesByRootMap();\n            var containsUnknowns = false;\n            for (var _f = 0, propertyTable_1 = propertyTable; _f < propertyTable_1.length; _f++) {\n                var element = propertyTable_1[_f];\n                var decl = element.node;\n                if (this.isCSSDeclaration(decl)) {\n                    var name = element.fullPropertyName;\n                    var firstChar = name.charAt(0);\n                    if (firstChar === '-') {\n                        if (name.charAt(1) !== '-') { // avoid css variables\n                            if (!languageFacts.cssDataManager.isKnownProperty(name) && !this.validProperties[name]) {\n                                this.addEntry(decl.getProperty(), Rules.UnknownVendorSpecificProperty);\n                            }\n                            var nonPrefixedName = decl.getNonPrefixedPropertyName();\n                            propertiesBySuffix.add(nonPrefixedName, name, decl.getProperty());\n                        }\n                    }\n                    else {\n                        var fullName = name;\n                        if (firstChar === '*' || firstChar === '_') {\n                            this.addEntry(decl.getProperty(), Rules.IEStarHack);\n                            name = name.substr(1);\n                        }\n                        // _property and *property might be contributed via custom data\n                        if (!languageFacts.cssDataManager.isKnownProperty(fullName) && !languageFacts.cssDataManager.isKnownProperty(name)) {\n                            if (!this.validProperties[name]) {\n                                this.addEntry(decl.getProperty(), Rules.UnknownProperty, localize('property.unknownproperty.detailed', \"Unknown property: '{0}'\", name));\n                            }\n                        }\n                        propertiesBySuffix.add(name, name, null); // don't pass the node as we don't show errors on the standard\n                    }\n                }\n                else {\n                    containsUnknowns = true;\n                }\n            }\n            if (!containsUnknowns) { // don't perform this test if there are\n                for (var suffix in propertiesBySuffix.data) {\n                    var entry = propertiesBySuffix.data[suffix];\n                    var actual = entry.names;\n                    var needsStandard = languageFacts.cssDataManager.isStandardProperty(suffix) && (actual.indexOf(suffix) === -1);\n                    if (!needsStandard && actual.length === 1) {\n                        continue; // only the non-vendor specific rule is used, that's fine, no warning\n                    }\n                    var expected = [];\n                    for (var i = 0, len = LintVisitor.prefixes.length; i < len; i++) {\n                        var prefix = LintVisitor.prefixes[i];\n                        if (languageFacts.cssDataManager.isStandardProperty(prefix + suffix)) {\n                            expected.push(prefix + suffix);\n                        }\n                    }\n                    var missingVendorSpecific = this.getMissingNames(expected, actual);\n                    if (missingVendorSpecific || needsStandard) {\n                        for (var _g = 0, _h = entry.nodes; _g < _h.length; _g++) {\n                            var node_3 = _h[_g];\n                            if (needsStandard) {\n                                var message = localize('property.standard.missing', \"Also define the standard property '{0}' for compatibility\", suffix);\n                                this.addEntry(node_3, Rules.IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                            }\n                            if (missingVendorSpecific) {\n                                var message = localize('property.vendorspecific.missing', \"Always include all vendor specific properties: Missing: {0}\", missingVendorSpecific);\n                                this.addEntry(node_3, Rules.AllVendorPrefixes, message);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitPrio = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tDon't use !important\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, Rules.AvoidImportant);\n        return true;\n    };\n    LintVisitor.prototype.visitNumericValue = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\t0 has no following unit\n        /////////////////////////////////////////////////////////////\n        var funcDecl = node.findParent(nodes.NodeType.Function);\n        if (funcDecl && funcDecl.getName() === 'calc') {\n            return true;\n        }\n        var decl = node.findParent(nodes.NodeType.Declaration);\n        if (decl) {\n            var declValue = decl.getValue();\n            if (declValue) {\n                var value = node.getValue();\n                if (!value.unit || languageFacts.units.length.indexOf(value.unit.toLowerCase()) === -1) {\n                    return true;\n                }\n                if (parseFloat(value.value) === 0.0 && !!value.unit && !this.validProperties[decl.getFullPropertyName()]) {\n                    this.addEntry(node, Rules.ZeroWithUnit);\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitFontFace = function (node) {\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return false;\n        }\n        var definesSrc = false, definesFontFamily = false;\n        var containsUnknowns = false;\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var node_4 = _a[_i];\n            if (this.isCSSDeclaration(node_4)) {\n                var name = node_4.getProperty().getName().toLowerCase();\n                if (name === 'src') {\n                    definesSrc = true;\n                }\n                if (name === 'font-family') {\n                    definesFontFamily = true;\n                }\n            }\n            else {\n                containsUnknowns = true;\n            }\n        }\n        if (!containsUnknowns && (!definesSrc || !definesFontFamily)) {\n            this.addEntry(node, Rules.RequiredPropertiesForFontFace);\n        }\n        return true;\n    };\n    LintVisitor.prototype.isCSSDeclaration = function (node) {\n        if (node instanceof nodes.Declaration) {\n            if (!node.getValue()) {\n                return false;\n            }\n            var property = node.getProperty();\n            if (!property) {\n                return false;\n            }\n            var identifier = property.getIdentifier();\n            if (!identifier || identifier.containsInterpolation()) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitHexColorValue = function (node) {\n        // Rule: #eeff0011 or #eeff00 or #ef01 or #ef0\n        var length = node.length;\n        if (length !== 9 && length !== 7 && length !== 5 && length !== 4) {\n            this.addEntry(node, Rules.HexColorLength);\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitFunction = function (node) {\n        var fnName = node.getName().toLowerCase();\n        var expectedAttrCount = -1;\n        var actualAttrCount = 0;\n        switch (fnName) {\n            case 'rgb(':\n            case 'hsl(':\n                expectedAttrCount = 3;\n                break;\n            case 'rgba(':\n            case 'hsla(':\n                expectedAttrCount = 4;\n                break;\n        }\n        if (expectedAttrCount !== -1) {\n            node.getArguments().accept(function (n) {\n                if (n instanceof nodes.BinaryExpression) {\n                    actualAttrCount += 1;\n                    return false;\n                }\n                return true;\n            });\n            if (actualAttrCount !== expectedAttrCount) {\n                this.addEntry(node, Rules.ArgsInColorFunction);\n            }\n        }\n        return true;\n    };\n    LintVisitor.prefixes = [\n        '-ms-', '-moz-', '-o-', '-webkit-',\n    ];\n    return LintVisitor;\n}());\nexport { LintVisitor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}