{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar IndentRulesSupport = /** @class */function () {\n  function IndentRulesSupport(indentationRules) {\n    this._indentationRules = indentationRules;\n  }\n  IndentRulesSupport.prototype.shouldIncrease = function (text) {\n    if (this._indentationRules) {\n      if (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(text)) {\n        return true;\n      }\n      // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n      // \treturn true;\n      // }\n    }\n\n    return false;\n  };\n  IndentRulesSupport.prototype.shouldDecrease = function (text) {\n    if (this._indentationRules && this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(text)) {\n      return true;\n    }\n    return false;\n  };\n  IndentRulesSupport.prototype.shouldIndentNextLine = function (text) {\n    if (this._indentationRules && this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n      return true;\n    }\n    return false;\n  };\n  IndentRulesSupport.prototype.shouldIgnore = function (text) {\n    // the text matches `unIndentedLinePattern`\n    if (this._indentationRules && this._indentationRules.unIndentedLinePattern && this._indentationRules.unIndentedLinePattern.test(text)) {\n      return true;\n    }\n    return false;\n  };\n  IndentRulesSupport.prototype.getIndentMetadata = function (text) {\n    var ret = 0;\n    if (this.shouldIncrease(text)) {\n      ret += 1 /* INCREASE_MASK */;\n    }\n\n    if (this.shouldDecrease(text)) {\n      ret += 2 /* DECREASE_MASK */;\n    }\n\n    if (this.shouldIndentNextLine(text)) {\n      ret += 4 /* INDENT_NEXTLINE_MASK */;\n    }\n\n    if (this.shouldIgnore(text)) {\n      ret += 8 /* UNINDENT_MASK */;\n    }\n\n    return ret;\n  };\n  return IndentRulesSupport;\n}();\nexport { IndentRulesSupport };","map":{"version":3,"names":["IndentRulesSupport","indentationRules","_indentationRules","prototype","shouldIncrease","text","increaseIndentPattern","test","shouldDecrease","decreaseIndentPattern","shouldIndentNextLine","indentNextLinePattern","shouldIgnore","unIndentedLinePattern","getIndentMetadata","ret"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/indentRules.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar IndentRulesSupport = /** @class */ (function () {\r\n    function IndentRulesSupport(indentationRules) {\r\n        this._indentationRules = indentationRules;\r\n    }\r\n    IndentRulesSupport.prototype.shouldIncrease = function (text) {\r\n        if (this._indentationRules) {\r\n            if (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(text)) {\r\n                return true;\r\n            }\r\n            // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\r\n            // \treturn true;\r\n            // }\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.shouldDecrease = function (text) {\r\n        if (this._indentationRules && this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(text)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.shouldIndentNextLine = function (text) {\r\n        if (this._indentationRules && this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.shouldIgnore = function (text) {\r\n        // the text matches `unIndentedLinePattern`\r\n        if (this._indentationRules && this._indentationRules.unIndentedLinePattern && this._indentationRules.unIndentedLinePattern.test(text)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.getIndentMetadata = function (text) {\r\n        var ret = 0;\r\n        if (this.shouldIncrease(text)) {\r\n            ret += 1 /* INCREASE_MASK */;\r\n        }\r\n        if (this.shouldDecrease(text)) {\r\n            ret += 2 /* DECREASE_MASK */;\r\n        }\r\n        if (this.shouldIndentNextLine(text)) {\r\n            ret += 4 /* INDENT_NEXTLINE_MASK */;\r\n        }\r\n        if (this.shouldIgnore(text)) {\r\n            ret += 8 /* UNINDENT_MASK */;\r\n        }\r\n        return ret;\r\n    };\r\n    return IndentRulesSupport;\r\n}());\r\nexport { IndentRulesSupport };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,kBAAkB,GAAG,aAAe,YAAY;EAChD,SAASA,kBAAkB,CAACC,gBAAgB,EAAE;IAC1C,IAAI,CAACC,iBAAiB,GAAGD,gBAAgB;EAC7C;EACAD,kBAAkB,CAACG,SAAS,CAACC,cAAc,GAAG,UAAUC,IAAI,EAAE;IAC1D,IAAI,IAAI,CAACH,iBAAiB,EAAE;MACxB,IAAI,IAAI,CAACA,iBAAiB,CAACI,qBAAqB,IAAI,IAAI,CAACJ,iBAAiB,CAACI,qBAAqB,CAACC,IAAI,CAACF,IAAI,CAAC,EAAE;QACzG,OAAO,IAAI;MACf;MACA;MACA;MACA;IACJ;;IACA,OAAO,KAAK;EAChB,CAAC;EACDL,kBAAkB,CAACG,SAAS,CAACK,cAAc,GAAG,UAAUH,IAAI,EAAE;IAC1D,IAAI,IAAI,CAACH,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACO,qBAAqB,IAAI,IAAI,CAACP,iBAAiB,CAACO,qBAAqB,CAACF,IAAI,CAACF,IAAI,CAAC,EAAE;MACnI,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EACDL,kBAAkB,CAACG,SAAS,CAACO,oBAAoB,GAAG,UAAUL,IAAI,EAAE;IAChE,IAAI,IAAI,CAACH,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACS,qBAAqB,IAAI,IAAI,CAACT,iBAAiB,CAACS,qBAAqB,CAACJ,IAAI,CAACF,IAAI,CAAC,EAAE;MACnI,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EACDL,kBAAkB,CAACG,SAAS,CAACS,YAAY,GAAG,UAAUP,IAAI,EAAE;IACxD;IACA,IAAI,IAAI,CAACH,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACW,qBAAqB,IAAI,IAAI,CAACX,iBAAiB,CAACW,qBAAqB,CAACN,IAAI,CAACF,IAAI,CAAC,EAAE;MACnI,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EACDL,kBAAkB,CAACG,SAAS,CAACW,iBAAiB,GAAG,UAAUT,IAAI,EAAE;IAC7D,IAAIU,GAAG,GAAG,CAAC;IACX,IAAI,IAAI,CAACX,cAAc,CAACC,IAAI,CAAC,EAAE;MAC3BU,GAAG,IAAI,CAAC,CAAC;IACb;;IACA,IAAI,IAAI,CAACP,cAAc,CAACH,IAAI,CAAC,EAAE;MAC3BU,GAAG,IAAI,CAAC,CAAC;IACb;;IACA,IAAI,IAAI,CAACL,oBAAoB,CAACL,IAAI,CAAC,EAAE;MACjCU,GAAG,IAAI,CAAC,CAAC;IACb;;IACA,IAAI,IAAI,CAACH,YAAY,CAACP,IAAI,CAAC,EAAE;MACzBU,GAAG,IAAI,CAAC,CAAC;IACb;;IACA,OAAOA,GAAG;EACd,CAAC;EACD,OAAOf,kBAAkB;AAC7B,CAAC,EAAG;AACJ,SAASA,kBAAkB"},"metadata":{},"sourceType":"module"}