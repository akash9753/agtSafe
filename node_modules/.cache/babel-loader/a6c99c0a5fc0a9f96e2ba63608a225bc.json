{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar hasDifferentOriginAncestorFlag = false;\nvar sameOriginWindowChainCache = null;\nfunction getParentWindowIfSameOrigin(w) {\n  if (!w.parent || w.parent === w) {\n    return null;\n  }\n  // Cannot really tell if we have access to the parent window unless we try to access something in it\n  try {\n    var location_1 = w.location;\n    var parentLocation = w.parent.location;\n    if (location_1.protocol !== parentLocation.protocol || location_1.hostname !== parentLocation.hostname || location_1.port !== parentLocation.port) {\n      hasDifferentOriginAncestorFlag = true;\n      return null;\n    }\n  } catch (e) {\n    hasDifferentOriginAncestorFlag = true;\n    return null;\n  }\n  return w.parent;\n}\nfunction findIframeElementInParentWindow(parentWindow, childWindow) {\n  var parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\n  var iframe;\n  for (var i = 0, len = parentWindowIframes.length; i < len; i++) {\n    iframe = parentWindowIframes[i];\n    if (iframe.contentWindow === childWindow) {\n      return iframe;\n    }\n  }\n  return null;\n}\nvar IframeUtils = /** @class */function () {\n  function IframeUtils() {}\n  /**\r\n   * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\r\n   * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\r\n   * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\r\n   */\n  IframeUtils.getSameOriginWindowChain = function () {\n    if (!sameOriginWindowChainCache) {\n      sameOriginWindowChainCache = [];\n      var w = window;\n      var parent_1;\n      do {\n        parent_1 = getParentWindowIfSameOrigin(w);\n        if (parent_1) {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: findIframeElementInParentWindow(parent_1, w)\n          });\n        } else {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: null\n          });\n        }\n        w = parent_1;\n      } while (w);\n    }\n    return sameOriginWindowChainCache.slice(0);\n  };\n  /**\r\n   * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\r\n   * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\r\n   */\n  IframeUtils.hasDifferentOriginAncestor = function () {\n    if (!sameOriginWindowChainCache) {\n      this.getSameOriginWindowChain();\n    }\n    return hasDifferentOriginAncestorFlag;\n  };\n  /**\r\n   * Returns the position of `childWindow` relative to `ancestorWindow`\r\n   */\n  IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow = function (childWindow, ancestorWindow) {\n    if (!ancestorWindow || childWindow === ancestorWindow) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    var top = 0,\n      left = 0;\n    var windowChain = this.getSameOriginWindowChain();\n    for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {\n      var windowChainEl = windowChain_1[_i];\n      if (windowChainEl.window === ancestorWindow) {\n        break;\n      }\n      if (!windowChainEl.iframeElement) {\n        break;\n      }\n      var boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n      top += boundingRect.top;\n      left += boundingRect.left;\n    }\n    return {\n      top: top,\n      left: left\n    };\n  };\n  return IframeUtils;\n}();\nexport { IframeUtils };","map":{"version":3,"names":["hasDifferentOriginAncestorFlag","sameOriginWindowChainCache","getParentWindowIfSameOrigin","w","parent","location_1","location","parentLocation","protocol","hostname","port","e","findIframeElementInParentWindow","parentWindow","childWindow","parentWindowIframes","document","getElementsByTagName","iframe","i","len","length","contentWindow","IframeUtils","getSameOriginWindowChain","window","parent_1","push","iframeElement","slice","hasDifferentOriginAncestor","getPositionOfChildWindowRelativeToAncestorWindow","ancestorWindow","top","left","windowChain","_i","windowChain_1","windowChainEl","boundingRect","getBoundingClientRect"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/browser/iframe.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar hasDifferentOriginAncestorFlag = false;\r\nvar sameOriginWindowChainCache = null;\r\nfunction getParentWindowIfSameOrigin(w) {\r\n    if (!w.parent || w.parent === w) {\r\n        return null;\r\n    }\r\n    // Cannot really tell if we have access to the parent window unless we try to access something in it\r\n    try {\r\n        var location_1 = w.location;\r\n        var parentLocation = w.parent.location;\r\n        if (location_1.protocol !== parentLocation.protocol || location_1.hostname !== parentLocation.hostname || location_1.port !== parentLocation.port) {\r\n            hasDifferentOriginAncestorFlag = true;\r\n            return null;\r\n        }\r\n    }\r\n    catch (e) {\r\n        hasDifferentOriginAncestorFlag = true;\r\n        return null;\r\n    }\r\n    return w.parent;\r\n}\r\nfunction findIframeElementInParentWindow(parentWindow, childWindow) {\r\n    var parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\r\n    var iframe;\r\n    for (var i = 0, len = parentWindowIframes.length; i < len; i++) {\r\n        iframe = parentWindowIframes[i];\r\n        if (iframe.contentWindow === childWindow) {\r\n            return iframe;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nvar IframeUtils = /** @class */ (function () {\r\n    function IframeUtils() {\r\n    }\r\n    /**\r\n     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\r\n     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\r\n     * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\r\n     */\r\n    IframeUtils.getSameOriginWindowChain = function () {\r\n        if (!sameOriginWindowChainCache) {\r\n            sameOriginWindowChainCache = [];\r\n            var w = window;\r\n            var parent_1;\r\n            do {\r\n                parent_1 = getParentWindowIfSameOrigin(w);\r\n                if (parent_1) {\r\n                    sameOriginWindowChainCache.push({\r\n                        window: w,\r\n                        iframeElement: findIframeElementInParentWindow(parent_1, w)\r\n                    });\r\n                }\r\n                else {\r\n                    sameOriginWindowChainCache.push({\r\n                        window: w,\r\n                        iframeElement: null\r\n                    });\r\n                }\r\n                w = parent_1;\r\n            } while (w);\r\n        }\r\n        return sameOriginWindowChainCache.slice(0);\r\n    };\r\n    /**\r\n     * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\r\n     * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\r\n     */\r\n    IframeUtils.hasDifferentOriginAncestor = function () {\r\n        if (!sameOriginWindowChainCache) {\r\n            this.getSameOriginWindowChain();\r\n        }\r\n        return hasDifferentOriginAncestorFlag;\r\n    };\r\n    /**\r\n     * Returns the position of `childWindow` relative to `ancestorWindow`\r\n     */\r\n    IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow = function (childWindow, ancestorWindow) {\r\n        if (!ancestorWindow || childWindow === ancestorWindow) {\r\n            return {\r\n                top: 0,\r\n                left: 0\r\n            };\r\n        }\r\n        var top = 0, left = 0;\r\n        var windowChain = this.getSameOriginWindowChain();\r\n        for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {\r\n            var windowChainEl = windowChain_1[_i];\r\n            if (windowChainEl.window === ancestorWindow) {\r\n                break;\r\n            }\r\n            if (!windowChainEl.iframeElement) {\r\n                break;\r\n            }\r\n            var boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\r\n            top += boundingRect.top;\r\n            left += boundingRect.left;\r\n        }\r\n        return {\r\n            top: top,\r\n            left: left\r\n        };\r\n    };\r\n    return IframeUtils;\r\n}());\r\nexport { IframeUtils };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}