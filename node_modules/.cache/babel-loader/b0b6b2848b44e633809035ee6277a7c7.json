{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n  for (var i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n  var diff = haystack.length - needle.length;\n  if (diff > 0) {\n    return haystack.lastIndexOf(needle) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n  return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n  var s = '';\n  while (count > 0) {\n    if ((count & 1) === 1) {\n      s += value;\n    }\n    value += value;\n    count = count >>> 1;\n  }\n  return s;\n}","map":{"version":3,"names":["startsWith","haystack","needle","length","i","endsWith","diff","lastIndexOf","convertSimple2RegExpPattern","pattern","replace","repeat","value","count","s"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAU,CAACC,QAAQ,EAAEC,MAAM,EAAE;EACzC,IAAID,QAAQ,CAACE,MAAM,GAAGD,MAAM,CAACC,MAAM,EAAE;IACjC,OAAO,KAAK;EAChB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;IACpC,IAAIH,QAAQ,CAACG,CAAC,CAAC,KAAKF,MAAM,CAACE,CAAC,CAAC,EAAE;MAC3B,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQ,CAACJ,QAAQ,EAAEC,MAAM,EAAE;EACvC,IAAII,IAAI,GAAGL,QAAQ,CAACE,MAAM,GAAGD,MAAM,CAACC,MAAM;EAC1C,IAAIG,IAAI,GAAG,CAAC,EAAE;IACV,OAAOL,QAAQ,CAACM,WAAW,CAACL,MAAM,CAAC,KAAKI,IAAI;EAChD,CAAC,MACI,IAAIA,IAAI,KAAK,CAAC,EAAE;IACjB,OAAOL,QAAQ,KAAKC,MAAM;EAC9B,CAAC,MACI;IACD,OAAO,KAAK;EAChB;AACJ;AACA,OAAO,SAASM,2BAA2B,CAACC,OAAO,EAAE;EACjD,OAAOA,OAAO,CAACC,OAAO,CAAC,uCAAuC,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AAClG;AACA,OAAO,SAASC,MAAM,CAACC,KAAK,EAAEC,KAAK,EAAE;EACjC,IAAIC,CAAC,GAAG,EAAE;EACV,OAAOD,KAAK,GAAG,CAAC,EAAE;IACd,IAAI,CAACA,KAAK,GAAG,CAAC,MAAM,CAAC,EAAE;MACnBC,CAAC,IAAIF,KAAK;IACd;IACAA,KAAK,IAAIA,KAAK;IACdC,KAAK,GAAGA,KAAK,KAAK,CAAC;EACvB;EACA,OAAOC,CAAC;AACZ"},"metadata":{},"sourceType":"module"}