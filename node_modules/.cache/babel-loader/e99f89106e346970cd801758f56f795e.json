{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { KeyCodeUtils, SimpleKeybinding } from '../common/keyCodes.js';\nimport * as platform from '../common/platform.js';\nvar KEY_CODE_MAP = new Array(230);\nvar INVERSE_KEY_CODE_MAP = new Array(112 /* MAX_VALUE */);\n(function () {\n  for (var i = 0; i < INVERSE_KEY_CODE_MAP.length; i++) {\n    INVERSE_KEY_CODE_MAP[i] = -1;\n  }\n  function define(code, keyCode) {\n    KEY_CODE_MAP[code] = keyCode;\n    INVERSE_KEY_CODE_MAP[keyCode] = code;\n  }\n  define(3, 7 /* PauseBreak */); // VK_CANCEL 0x03 Control-break processing\n  define(8, 1 /* Backspace */);\n  define(9, 2 /* Tab */);\n  define(13, 3 /* Enter */);\n  define(16, 4 /* Shift */);\n  define(17, 5 /* Ctrl */);\n  define(18, 6 /* Alt */);\n  define(19, 7 /* PauseBreak */);\n  define(20, 8 /* CapsLock */);\n  define(27, 9 /* Escape */);\n  define(32, 10 /* Space */);\n  define(33, 11 /* PageUp */);\n  define(34, 12 /* PageDown */);\n  define(35, 13 /* End */);\n  define(36, 14 /* Home */);\n  define(37, 15 /* LeftArrow */);\n  define(38, 16 /* UpArrow */);\n  define(39, 17 /* RightArrow */);\n  define(40, 18 /* DownArrow */);\n  define(45, 19 /* Insert */);\n  define(46, 20 /* Delete */);\n  define(48, 21 /* KEY_0 */);\n  define(49, 22 /* KEY_1 */);\n  define(50, 23 /* KEY_2 */);\n  define(51, 24 /* KEY_3 */);\n  define(52, 25 /* KEY_4 */);\n  define(53, 26 /* KEY_5 */);\n  define(54, 27 /* KEY_6 */);\n  define(55, 28 /* KEY_7 */);\n  define(56, 29 /* KEY_8 */);\n  define(57, 30 /* KEY_9 */);\n  define(65, 31 /* KEY_A */);\n  define(66, 32 /* KEY_B */);\n  define(67, 33 /* KEY_C */);\n  define(68, 34 /* KEY_D */);\n  define(69, 35 /* KEY_E */);\n  define(70, 36 /* KEY_F */);\n  define(71, 37 /* KEY_G */);\n  define(72, 38 /* KEY_H */);\n  define(73, 39 /* KEY_I */);\n  define(74, 40 /* KEY_J */);\n  define(75, 41 /* KEY_K */);\n  define(76, 42 /* KEY_L */);\n  define(77, 43 /* KEY_M */);\n  define(78, 44 /* KEY_N */);\n  define(79, 45 /* KEY_O */);\n  define(80, 46 /* KEY_P */);\n  define(81, 47 /* KEY_Q */);\n  define(82, 48 /* KEY_R */);\n  define(83, 49 /* KEY_S */);\n  define(84, 50 /* KEY_T */);\n  define(85, 51 /* KEY_U */);\n  define(86, 52 /* KEY_V */);\n  define(87, 53 /* KEY_W */);\n  define(88, 54 /* KEY_X */);\n  define(89, 55 /* KEY_Y */);\n  define(90, 56 /* KEY_Z */);\n  define(93, 58 /* ContextMenu */);\n  define(96, 93 /* NUMPAD_0 */);\n  define(97, 94 /* NUMPAD_1 */);\n  define(98, 95 /* NUMPAD_2 */);\n  define(99, 96 /* NUMPAD_3 */);\n  define(100, 97 /* NUMPAD_4 */);\n  define(101, 98 /* NUMPAD_5 */);\n  define(102, 99 /* NUMPAD_6 */);\n  define(103, 100 /* NUMPAD_7 */);\n  define(104, 101 /* NUMPAD_8 */);\n  define(105, 102 /* NUMPAD_9 */);\n  define(106, 103 /* NUMPAD_MULTIPLY */);\n  define(107, 104 /* NUMPAD_ADD */);\n  define(108, 105 /* NUMPAD_SEPARATOR */);\n  define(109, 106 /* NUMPAD_SUBTRACT */);\n  define(110, 107 /* NUMPAD_DECIMAL */);\n  define(111, 108 /* NUMPAD_DIVIDE */);\n  define(112, 59 /* F1 */);\n  define(113, 60 /* F2 */);\n  define(114, 61 /* F3 */);\n  define(115, 62 /* F4 */);\n  define(116, 63 /* F5 */);\n  define(117, 64 /* F6 */);\n  define(118, 65 /* F7 */);\n  define(119, 66 /* F8 */);\n  define(120, 67 /* F9 */);\n  define(121, 68 /* F10 */);\n  define(122, 69 /* F11 */);\n  define(123, 70 /* F12 */);\n  define(124, 71 /* F13 */);\n  define(125, 72 /* F14 */);\n  define(126, 73 /* F15 */);\n  define(127, 74 /* F16 */);\n  define(128, 75 /* F17 */);\n  define(129, 76 /* F18 */);\n  define(130, 77 /* F19 */);\n  define(144, 78 /* NumLock */);\n  define(145, 79 /* ScrollLock */);\n  define(186, 80 /* US_SEMICOLON */);\n  define(187, 81 /* US_EQUAL */);\n  define(188, 82 /* US_COMMA */);\n  define(189, 83 /* US_MINUS */);\n  define(190, 84 /* US_DOT */);\n  define(191, 85 /* US_SLASH */);\n  define(192, 86 /* US_BACKTICK */);\n  define(193, 110 /* ABNT_C1 */);\n  define(194, 111 /* ABNT_C2 */);\n  define(219, 87 /* US_OPEN_SQUARE_BRACKET */);\n  define(220, 88 /* US_BACKSLASH */);\n  define(221, 89 /* US_CLOSE_SQUARE_BRACKET */);\n  define(222, 90 /* US_QUOTE */);\n  define(223, 91 /* OEM_8 */);\n  define(226, 92 /* OEM_102 */);\n  /**\r\n   * https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\r\n   * If an Input Method Editor is processing key input and the event is keydown, return 229.\r\n   */\n  define(229, 109 /* KEY_IN_COMPOSITION */);\n  if (browser.isIE) {\n    define(91, 57 /* Meta */);\n  } else if (browser.isFirefox) {\n    define(59, 80 /* US_SEMICOLON */);\n    define(107, 81 /* US_EQUAL */);\n    define(109, 83 /* US_MINUS */);\n    if (platform.isMacintosh) {\n      define(224, 57 /* Meta */);\n    }\n  } else if (browser.isWebKit) {\n    define(91, 57 /* Meta */);\n    if (platform.isMacintosh) {\n      // the two meta keys in the Mac have different key codes (91 and 93)\n      define(93, 57 /* Meta */);\n    } else {\n      define(92, 57 /* Meta */);\n    }\n  }\n})();\n\nfunction extractKeyCode(e) {\n  if (e.charCode) {\n    // \"keypress\" events mostly\n    var char = String.fromCharCode(e.charCode).toUpperCase();\n    return KeyCodeUtils.fromString(char);\n  }\n  return KEY_CODE_MAP[e.keyCode] || 0 /* Unknown */;\n}\n\nvar ctrlKeyMod = platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */;\nvar altKeyMod = 512 /* Alt */;\nvar shiftKeyMod = 1024 /* Shift */;\nvar metaKeyMod = platform.isMacintosh ? 2048 /* CtrlCmd */ : 256 /* WinCtrl */;\nvar StandardKeyboardEvent = /** @class */function () {\n  function StandardKeyboardEvent(source) {\n    this._standardKeyboardEventBrand = true;\n    var e = source;\n    this.browserEvent = e;\n    this.target = e.target;\n    this.ctrlKey = e.ctrlKey;\n    this.shiftKey = e.shiftKey;\n    this.altKey = e.altKey;\n    this.metaKey = e.metaKey;\n    this.keyCode = extractKeyCode(e);\n    this.code = e.code;\n    // console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\n    this.ctrlKey = this.ctrlKey || this.keyCode === 5 /* Ctrl */;\n    this.altKey = this.altKey || this.keyCode === 6 /* Alt */;\n    this.shiftKey = this.shiftKey || this.keyCode === 4 /* Shift */;\n    this.metaKey = this.metaKey || this.keyCode === 57 /* Meta */;\n    this._asKeybinding = this._computeKeybinding();\n    this._asRuntimeKeybinding = this._computeRuntimeKeybinding();\n    // console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\n  }\n\n  StandardKeyboardEvent.prototype.preventDefault = function () {\n    if (this.browserEvent && this.browserEvent.preventDefault) {\n      this.browserEvent.preventDefault();\n    }\n  };\n  StandardKeyboardEvent.prototype.stopPropagation = function () {\n    if (this.browserEvent && this.browserEvent.stopPropagation) {\n      this.browserEvent.stopPropagation();\n    }\n  };\n  StandardKeyboardEvent.prototype.toKeybinding = function () {\n    return this._asRuntimeKeybinding;\n  };\n  StandardKeyboardEvent.prototype.equals = function (other) {\n    return this._asKeybinding === other;\n  };\n  StandardKeyboardEvent.prototype._computeKeybinding = function () {\n    var key = 0 /* Unknown */;\n    if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {\n      key = this.keyCode;\n    }\n    var result = 0;\n    if (this.ctrlKey) {\n      result |= ctrlKeyMod;\n    }\n    if (this.altKey) {\n      result |= altKeyMod;\n    }\n    if (this.shiftKey) {\n      result |= shiftKeyMod;\n    }\n    if (this.metaKey) {\n      result |= metaKeyMod;\n    }\n    result |= key;\n    return result;\n  };\n  StandardKeyboardEvent.prototype._computeRuntimeKeybinding = function () {\n    var key = 0 /* Unknown */;\n    if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {\n      key = this.keyCode;\n    }\n    return new SimpleKeybinding(this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);\n  };\n  return StandardKeyboardEvent;\n}();\nexport { StandardKeyboardEvent };","map":{"version":3,"names":["browser","KeyCodeUtils","SimpleKeybinding","platform","KEY_CODE_MAP","Array","INVERSE_KEY_CODE_MAP","i","length","define","code","keyCode","isIE","isFirefox","isMacintosh","isWebKit","extractKeyCode","e","charCode","char","String","fromCharCode","toUpperCase","fromString","ctrlKeyMod","altKeyMod","shiftKeyMod","metaKeyMod","StandardKeyboardEvent","source","_standardKeyboardEventBrand","browserEvent","target","ctrlKey","shiftKey","altKey","metaKey","_asKeybinding","_computeKeybinding","_asRuntimeKeybinding","_computeRuntimeKeybinding","prototype","preventDefault","stopPropagation","toKeybinding","equals","other","key","result"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/browser/keyboardEvent.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as browser from './browser.js';\r\nimport { KeyCodeUtils, SimpleKeybinding } from '../common/keyCodes.js';\r\nimport * as platform from '../common/platform.js';\r\nvar KEY_CODE_MAP = new Array(230);\r\nvar INVERSE_KEY_CODE_MAP = new Array(112 /* MAX_VALUE */);\r\n(function () {\r\n    for (var i = 0; i < INVERSE_KEY_CODE_MAP.length; i++) {\r\n        INVERSE_KEY_CODE_MAP[i] = -1;\r\n    }\r\n    function define(code, keyCode) {\r\n        KEY_CODE_MAP[code] = keyCode;\r\n        INVERSE_KEY_CODE_MAP[keyCode] = code;\r\n    }\r\n    define(3, 7 /* PauseBreak */); // VK_CANCEL 0x03 Control-break processing\r\n    define(8, 1 /* Backspace */);\r\n    define(9, 2 /* Tab */);\r\n    define(13, 3 /* Enter */);\r\n    define(16, 4 /* Shift */);\r\n    define(17, 5 /* Ctrl */);\r\n    define(18, 6 /* Alt */);\r\n    define(19, 7 /* PauseBreak */);\r\n    define(20, 8 /* CapsLock */);\r\n    define(27, 9 /* Escape */);\r\n    define(32, 10 /* Space */);\r\n    define(33, 11 /* PageUp */);\r\n    define(34, 12 /* PageDown */);\r\n    define(35, 13 /* End */);\r\n    define(36, 14 /* Home */);\r\n    define(37, 15 /* LeftArrow */);\r\n    define(38, 16 /* UpArrow */);\r\n    define(39, 17 /* RightArrow */);\r\n    define(40, 18 /* DownArrow */);\r\n    define(45, 19 /* Insert */);\r\n    define(46, 20 /* Delete */);\r\n    define(48, 21 /* KEY_0 */);\r\n    define(49, 22 /* KEY_1 */);\r\n    define(50, 23 /* KEY_2 */);\r\n    define(51, 24 /* KEY_3 */);\r\n    define(52, 25 /* KEY_4 */);\r\n    define(53, 26 /* KEY_5 */);\r\n    define(54, 27 /* KEY_6 */);\r\n    define(55, 28 /* KEY_7 */);\r\n    define(56, 29 /* KEY_8 */);\r\n    define(57, 30 /* KEY_9 */);\r\n    define(65, 31 /* KEY_A */);\r\n    define(66, 32 /* KEY_B */);\r\n    define(67, 33 /* KEY_C */);\r\n    define(68, 34 /* KEY_D */);\r\n    define(69, 35 /* KEY_E */);\r\n    define(70, 36 /* KEY_F */);\r\n    define(71, 37 /* KEY_G */);\r\n    define(72, 38 /* KEY_H */);\r\n    define(73, 39 /* KEY_I */);\r\n    define(74, 40 /* KEY_J */);\r\n    define(75, 41 /* KEY_K */);\r\n    define(76, 42 /* KEY_L */);\r\n    define(77, 43 /* KEY_M */);\r\n    define(78, 44 /* KEY_N */);\r\n    define(79, 45 /* KEY_O */);\r\n    define(80, 46 /* KEY_P */);\r\n    define(81, 47 /* KEY_Q */);\r\n    define(82, 48 /* KEY_R */);\r\n    define(83, 49 /* KEY_S */);\r\n    define(84, 50 /* KEY_T */);\r\n    define(85, 51 /* KEY_U */);\r\n    define(86, 52 /* KEY_V */);\r\n    define(87, 53 /* KEY_W */);\r\n    define(88, 54 /* KEY_X */);\r\n    define(89, 55 /* KEY_Y */);\r\n    define(90, 56 /* KEY_Z */);\r\n    define(93, 58 /* ContextMenu */);\r\n    define(96, 93 /* NUMPAD_0 */);\r\n    define(97, 94 /* NUMPAD_1 */);\r\n    define(98, 95 /* NUMPAD_2 */);\r\n    define(99, 96 /* NUMPAD_3 */);\r\n    define(100, 97 /* NUMPAD_4 */);\r\n    define(101, 98 /* NUMPAD_5 */);\r\n    define(102, 99 /* NUMPAD_6 */);\r\n    define(103, 100 /* NUMPAD_7 */);\r\n    define(104, 101 /* NUMPAD_8 */);\r\n    define(105, 102 /* NUMPAD_9 */);\r\n    define(106, 103 /* NUMPAD_MULTIPLY */);\r\n    define(107, 104 /* NUMPAD_ADD */);\r\n    define(108, 105 /* NUMPAD_SEPARATOR */);\r\n    define(109, 106 /* NUMPAD_SUBTRACT */);\r\n    define(110, 107 /* NUMPAD_DECIMAL */);\r\n    define(111, 108 /* NUMPAD_DIVIDE */);\r\n    define(112, 59 /* F1 */);\r\n    define(113, 60 /* F2 */);\r\n    define(114, 61 /* F3 */);\r\n    define(115, 62 /* F4 */);\r\n    define(116, 63 /* F5 */);\r\n    define(117, 64 /* F6 */);\r\n    define(118, 65 /* F7 */);\r\n    define(119, 66 /* F8 */);\r\n    define(120, 67 /* F9 */);\r\n    define(121, 68 /* F10 */);\r\n    define(122, 69 /* F11 */);\r\n    define(123, 70 /* F12 */);\r\n    define(124, 71 /* F13 */);\r\n    define(125, 72 /* F14 */);\r\n    define(126, 73 /* F15 */);\r\n    define(127, 74 /* F16 */);\r\n    define(128, 75 /* F17 */);\r\n    define(129, 76 /* F18 */);\r\n    define(130, 77 /* F19 */);\r\n    define(144, 78 /* NumLock */);\r\n    define(145, 79 /* ScrollLock */);\r\n    define(186, 80 /* US_SEMICOLON */);\r\n    define(187, 81 /* US_EQUAL */);\r\n    define(188, 82 /* US_COMMA */);\r\n    define(189, 83 /* US_MINUS */);\r\n    define(190, 84 /* US_DOT */);\r\n    define(191, 85 /* US_SLASH */);\r\n    define(192, 86 /* US_BACKTICK */);\r\n    define(193, 110 /* ABNT_C1 */);\r\n    define(194, 111 /* ABNT_C2 */);\r\n    define(219, 87 /* US_OPEN_SQUARE_BRACKET */);\r\n    define(220, 88 /* US_BACKSLASH */);\r\n    define(221, 89 /* US_CLOSE_SQUARE_BRACKET */);\r\n    define(222, 90 /* US_QUOTE */);\r\n    define(223, 91 /* OEM_8 */);\r\n    define(226, 92 /* OEM_102 */);\r\n    /**\r\n     * https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\r\n     * If an Input Method Editor is processing key input and the event is keydown, return 229.\r\n     */\r\n    define(229, 109 /* KEY_IN_COMPOSITION */);\r\n    if (browser.isIE) {\r\n        define(91, 57 /* Meta */);\r\n    }\r\n    else if (browser.isFirefox) {\r\n        define(59, 80 /* US_SEMICOLON */);\r\n        define(107, 81 /* US_EQUAL */);\r\n        define(109, 83 /* US_MINUS */);\r\n        if (platform.isMacintosh) {\r\n            define(224, 57 /* Meta */);\r\n        }\r\n    }\r\n    else if (browser.isWebKit) {\r\n        define(91, 57 /* Meta */);\r\n        if (platform.isMacintosh) {\r\n            // the two meta keys in the Mac have different key codes (91 and 93)\r\n            define(93, 57 /* Meta */);\r\n        }\r\n        else {\r\n            define(92, 57 /* Meta */);\r\n        }\r\n    }\r\n})();\r\nfunction extractKeyCode(e) {\r\n    if (e.charCode) {\r\n        // \"keypress\" events mostly\r\n        var char = String.fromCharCode(e.charCode).toUpperCase();\r\n        return KeyCodeUtils.fromString(char);\r\n    }\r\n    return KEY_CODE_MAP[e.keyCode] || 0 /* Unknown */;\r\n}\r\nvar ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\r\nvar altKeyMod = 512 /* Alt */;\r\nvar shiftKeyMod = 1024 /* Shift */;\r\nvar metaKeyMod = (platform.isMacintosh ? 2048 /* CtrlCmd */ : 256 /* WinCtrl */);\r\nvar StandardKeyboardEvent = /** @class */ (function () {\r\n    function StandardKeyboardEvent(source) {\r\n        this._standardKeyboardEventBrand = true;\r\n        var e = source;\r\n        this.browserEvent = e;\r\n        this.target = e.target;\r\n        this.ctrlKey = e.ctrlKey;\r\n        this.shiftKey = e.shiftKey;\r\n        this.altKey = e.altKey;\r\n        this.metaKey = e.metaKey;\r\n        this.keyCode = extractKeyCode(e);\r\n        this.code = e.code;\r\n        // console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\r\n        this.ctrlKey = this.ctrlKey || this.keyCode === 5 /* Ctrl */;\r\n        this.altKey = this.altKey || this.keyCode === 6 /* Alt */;\r\n        this.shiftKey = this.shiftKey || this.keyCode === 4 /* Shift */;\r\n        this.metaKey = this.metaKey || this.keyCode === 57 /* Meta */;\r\n        this._asKeybinding = this._computeKeybinding();\r\n        this._asRuntimeKeybinding = this._computeRuntimeKeybinding();\r\n        // console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\r\n    }\r\n    StandardKeyboardEvent.prototype.preventDefault = function () {\r\n        if (this.browserEvent && this.browserEvent.preventDefault) {\r\n            this.browserEvent.preventDefault();\r\n        }\r\n    };\r\n    StandardKeyboardEvent.prototype.stopPropagation = function () {\r\n        if (this.browserEvent && this.browserEvent.stopPropagation) {\r\n            this.browserEvent.stopPropagation();\r\n        }\r\n    };\r\n    StandardKeyboardEvent.prototype.toKeybinding = function () {\r\n        return this._asRuntimeKeybinding;\r\n    };\r\n    StandardKeyboardEvent.prototype.equals = function (other) {\r\n        return this._asKeybinding === other;\r\n    };\r\n    StandardKeyboardEvent.prototype._computeKeybinding = function () {\r\n        var key = 0 /* Unknown */;\r\n        if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {\r\n            key = this.keyCode;\r\n        }\r\n        var result = 0;\r\n        if (this.ctrlKey) {\r\n            result |= ctrlKeyMod;\r\n        }\r\n        if (this.altKey) {\r\n            result |= altKeyMod;\r\n        }\r\n        if (this.shiftKey) {\r\n            result |= shiftKeyMod;\r\n        }\r\n        if (this.metaKey) {\r\n            result |= metaKeyMod;\r\n        }\r\n        result |= key;\r\n        return result;\r\n    };\r\n    StandardKeyboardEvent.prototype._computeRuntimeKeybinding = function () {\r\n        var key = 0 /* Unknown */;\r\n        if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {\r\n            key = this.keyCode;\r\n        }\r\n        return new SimpleKeybinding(this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);\r\n    };\r\n    return StandardKeyboardEvent;\r\n}());\r\nexport { StandardKeyboardEvent };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}