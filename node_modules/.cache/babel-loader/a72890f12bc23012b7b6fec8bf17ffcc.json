{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\nexport var IndentAction;\n(function (IndentAction) {\n  /**\r\n   * Insert new line and copy the previous line's indentation.\r\n   */\n  IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n  /**\r\n   * Insert new line and indent once (relative to the previous line's indentation).\r\n   */\n  IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n  /**\r\n   * Insert two new lines:\r\n   *  - the first one indented which will hold the cursor\r\n   *  - the second one at the same indentation level\r\n   */\n  IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n  /**\r\n   * Insert new line and outdent once (relative to the previous line's indentation).\r\n   */\n  IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\r\n * @internal\r\n */\nvar StandardAutoClosingPairConditional = /** @class */function () {\n  function StandardAutoClosingPairConditional(source) {\n    this.open = source.open;\n    this.close = source.close;\n    // initially allowed in all tokens\n    this._standardTokenMask = 0;\n    if (Array.isArray(source.notIn)) {\n      for (var i = 0, len = source.notIn.length; i < len; i++) {\n        var notIn = source.notIn[i];\n        switch (notIn) {\n          case 'string':\n            this._standardTokenMask |= 2 /* String */;\n            break;\n          case 'comment':\n            this._standardTokenMask |= 1 /* Comment */;\n            break;\n          case 'regex':\n            this._standardTokenMask |= 4 /* RegEx */;\n            break;\n        }\n      }\n    }\n  }\n  StandardAutoClosingPairConditional.prototype.isOK = function (standardToken) {\n    return (this._standardTokenMask & standardToken) === 0;\n  };\n  return StandardAutoClosingPairConditional;\n}();\nexport { StandardAutoClosingPairConditional };","map":{"version":3,"names":["IndentAction","StandardAutoClosingPairConditional","source","open","close","_standardTokenMask","Array","isArray","notIn","i","len","length","prototype","isOK","standardToken"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/common/modes/languageConfiguration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\r\nexport var IndentAction;\r\n(function (IndentAction) {\r\n    /**\r\n     * Insert new line and copy the previous line's indentation.\r\n     */\r\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Insert new line and indent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\r\n    /**\r\n     * Insert two new lines:\r\n     *  - the first one indented which will hold the cursor\r\n     *  - the second one at the same indentation level\r\n     */\r\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\r\n    /**\r\n     * Insert new line and outdent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\r\n})(IndentAction || (IndentAction = {}));\r\n/**\r\n * @internal\r\n */\r\nvar StandardAutoClosingPairConditional = /** @class */ (function () {\r\n    function StandardAutoClosingPairConditional(source) {\r\n        this.open = source.open;\r\n        this.close = source.close;\r\n        // initially allowed in all tokens\r\n        this._standardTokenMask = 0;\r\n        if (Array.isArray(source.notIn)) {\r\n            for (var i = 0, len = source.notIn.length; i < len; i++) {\r\n                var notIn = source.notIn[i];\r\n                switch (notIn) {\r\n                    case 'string':\r\n                        this._standardTokenMask |= 2 /* String */;\r\n                        break;\r\n                    case 'comment':\r\n                        this._standardTokenMask |= 1 /* Comment */;\r\n                        break;\r\n                    case 'regex':\r\n                        this._standardTokenMask |= 4 /* RegEx */;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StandardAutoClosingPairConditional.prototype.isOK = function (standardToken) {\r\n        return (this._standardTokenMask & standardToken) === 0;\r\n    };\r\n    return StandardAutoClosingPairConditional;\r\n}());\r\nexport { StandardAutoClosingPairConditional };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,YAAY;AACvB,CAAC,UAAUA,YAAY,EAAE;EACrB;AACJ;AACA;EACIA,YAAY,CAACA,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/C;AACJ;AACA;EACIA,YAAY,CAACA,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EACnD;AACJ;AACA;AACA;AACA;EACIA,YAAY,CAACA,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe;EACjE;AACJ;AACA;EACIA,YAAY,CAACA,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;AACzD,CAAC,EAAEA,YAAY,KAAKA,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC;AACA;AACA;AACA,IAAIC,kCAAkC,GAAG,aAAe,YAAY;EAChE,SAASA,kCAAkC,CAACC,MAAM,EAAE;IAChD,IAAI,CAACC,IAAI,GAAGD,MAAM,CAACC,IAAI;IACvB,IAAI,CAACC,KAAK,GAAGF,MAAM,CAACE,KAAK;IACzB;IACA,IAAI,CAACC,kBAAkB,GAAG,CAAC;IAC3B,IAAIC,KAAK,CAACC,OAAO,CAACL,MAAM,CAACM,KAAK,CAAC,EAAE;MAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGR,MAAM,CAACM,KAAK,CAACG,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QACrD,IAAID,KAAK,GAAGN,MAAM,CAACM,KAAK,CAACC,CAAC,CAAC;QAC3B,QAAQD,KAAK;UACT,KAAK,QAAQ;YACT,IAAI,CAACH,kBAAkB,IAAI,CAAC,CAAC;YAC7B;UACJ,KAAK,SAAS;YACV,IAAI,CAACA,kBAAkB,IAAI,CAAC,CAAC;YAC7B;UACJ,KAAK,OAAO;YACR,IAAI,CAACA,kBAAkB,IAAI,CAAC,CAAC;YAC7B;QAAM;MAElB;IACJ;EACJ;EACAJ,kCAAkC,CAACW,SAAS,CAACC,IAAI,GAAG,UAAUC,aAAa,EAAE;IACzE,OAAO,CAAC,IAAI,CAACT,kBAAkB,GAAGS,aAAa,MAAM,CAAC;EAC1D,CAAC;EACD,OAAOb,kCAAkC;AAC7C,CAAC,EAAG;AACJ,SAASA,kCAAkC"},"metadata":{},"sourceType":"module"}