{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { MAX_LINE_NUMBER, FoldingRegions } from './foldingRanges.js';\nvar MAX_FOLDING_REGIONS = 5000;\nvar foldingContext = {};\nexport var ID_SYNTAX_PROVIDER = 'syntax';\nvar SyntaxRangeProvider = /** @class */function () {\n  function SyntaxRangeProvider(editorModel, providers, limit) {\n    if (limit === void 0) {\n      limit = MAX_FOLDING_REGIONS;\n    }\n    this.editorModel = editorModel;\n    this.providers = providers;\n    this.limit = limit;\n    this.id = ID_SYNTAX_PROVIDER;\n  }\n  SyntaxRangeProvider.prototype.compute = function (cancellationToken) {\n    var _this = this;\n    return collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(function (ranges) {\n      if (ranges) {\n        var res = sanitizeRanges(ranges, _this.limit);\n        return res;\n      }\n      return null;\n    });\n  };\n  SyntaxRangeProvider.prototype.dispose = function () {};\n  return SyntaxRangeProvider;\n}();\nexport { SyntaxRangeProvider };\nfunction collectSyntaxRanges(providers, model, cancellationToken) {\n  var rangeData = null;\n  var promises = providers.map(function (provider, i) {\n    return Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(function (ranges) {\n      if (cancellationToken.isCancellationRequested) {\n        return;\n      }\n      if (Array.isArray(ranges)) {\n        if (!Array.isArray(rangeData)) {\n          rangeData = [];\n        }\n        var nLines = model.getLineCount();\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n          var r = ranges_1[_i];\n          if (r.start > 0 && r.end > r.start && r.end <= nLines) {\n            rangeData.push({\n              start: r.start,\n              end: r.end,\n              rank: i,\n              kind: r.kind\n            });\n          }\n        }\n      }\n    }, onUnexpectedExternalError);\n  });\n  return Promise.all(promises).then(function (_) {\n    return rangeData;\n  });\n}\nvar RangesCollector = /** @class */function () {\n  function RangesCollector(foldingRangesLimit) {\n    this._startIndexes = [];\n    this._endIndexes = [];\n    this._nestingLevels = [];\n    this._nestingLevelCounts = [];\n    this._types = [];\n    this._length = 0;\n    this._foldingRangesLimit = foldingRangesLimit;\n  }\n  RangesCollector.prototype.add = function (startLineNumber, endLineNumber, type, nestingLevel) {\n    if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n      return;\n    }\n    var index = this._length;\n    this._startIndexes[index] = startLineNumber;\n    this._endIndexes[index] = endLineNumber;\n    this._nestingLevels[index] = nestingLevel;\n    this._types[index] = type;\n    this._length++;\n    if (nestingLevel < 30) {\n      this._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\n    }\n  };\n  RangesCollector.prototype.toIndentRanges = function () {\n    if (this._length <= this._foldingRangesLimit) {\n      var startIndexes = new Uint32Array(this._length);\n      var endIndexes = new Uint32Array(this._length);\n      for (var i = 0; i < this._length; i++) {\n        startIndexes[i] = this._startIndexes[i];\n        endIndexes[i] = this._endIndexes[i];\n      }\n      return new FoldingRegions(startIndexes, endIndexes, this._types);\n    } else {\n      var entries = 0;\n      var maxLevel = this._nestingLevelCounts.length;\n      for (var i = 0; i < this._nestingLevelCounts.length; i++) {\n        var n = this._nestingLevelCounts[i];\n        if (n) {\n          if (n + entries > this._foldingRangesLimit) {\n            maxLevel = i;\n            break;\n          }\n          entries += n;\n        }\n      }\n      var startIndexes = new Uint32Array(this._foldingRangesLimit);\n      var endIndexes = new Uint32Array(this._foldingRangesLimit);\n      var types = [];\n      for (var i = 0, k = 0; i < this._length; i++) {\n        var level = this._nestingLevels[i];\n        if (level < maxLevel || level === maxLevel && entries++ < this._foldingRangesLimit) {\n          startIndexes[k] = this._startIndexes[i];\n          endIndexes[k] = this._endIndexes[i];\n          types[k] = this._types[i];\n          k++;\n        }\n      }\n      return new FoldingRegions(startIndexes, endIndexes, types);\n    }\n  };\n  return RangesCollector;\n}();\nexport { RangesCollector };\nexport function sanitizeRanges(rangeData, limit) {\n  var sorted = rangeData.sort(function (d1, d2) {\n    var diff = d1.start - d2.start;\n    if (diff === 0) {\n      diff = d1.rank - d2.rank;\n    }\n    return diff;\n  });\n  var collector = new RangesCollector(limit);\n  var top = undefined;\n  var previous = [];\n  for (var _i = 0, sorted_1 = sorted; _i < sorted_1.length; _i++) {\n    var entry = sorted_1[_i];\n    if (!top) {\n      top = entry;\n      collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n    } else {\n      if (entry.start > top.start) {\n        if (entry.end <= top.end) {\n          previous.push(top);\n          top = entry;\n          collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n        } else {\n          if (entry.start > top.end) {\n            do {\n              top = previous.pop();\n            } while (top && entry.start > top.end);\n            if (top) {\n              previous.push(top);\n            }\n            top = entry;\n          }\n          collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n        }\n      }\n    }\n  }\n  return collector.toIndentRanges();\n}","map":{"version":3,"names":["onUnexpectedExternalError","MAX_LINE_NUMBER","FoldingRegions","MAX_FOLDING_REGIONS","foldingContext","ID_SYNTAX_PROVIDER","SyntaxRangeProvider","editorModel","providers","limit","id","prototype","compute","cancellationToken","_this","collectSyntaxRanges","then","ranges","res","sanitizeRanges","dispose","model","rangeData","promises","map","provider","i","Promise","resolve","provideFoldingRanges","isCancellationRequested","Array","isArray","nLines","getLineCount","_i","ranges_1","length","r","start","end","push","rank","kind","all","_","RangesCollector","foldingRangesLimit","_startIndexes","_endIndexes","_nestingLevels","_nestingLevelCounts","_types","_length","_foldingRangesLimit","add","startLineNumber","endLineNumber","type","nestingLevel","index","toIndentRanges","startIndexes","Uint32Array","endIndexes","entries","maxLevel","n","types","k","level","sorted","sort","d1","d2","diff","collector","top","undefined","previous","sorted_1","entry","value","pop"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/folding/syntaxRangeProvider.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { MAX_LINE_NUMBER, FoldingRegions } from './foldingRanges.js';\r\nvar MAX_FOLDING_REGIONS = 5000;\r\nvar foldingContext = {};\r\nexport var ID_SYNTAX_PROVIDER = 'syntax';\r\nvar SyntaxRangeProvider = /** @class */ (function () {\r\n    function SyntaxRangeProvider(editorModel, providers, limit) {\r\n        if (limit === void 0) { limit = MAX_FOLDING_REGIONS; }\r\n        this.editorModel = editorModel;\r\n        this.providers = providers;\r\n        this.limit = limit;\r\n        this.id = ID_SYNTAX_PROVIDER;\r\n    }\r\n    SyntaxRangeProvider.prototype.compute = function (cancellationToken) {\r\n        var _this = this;\r\n        return collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(function (ranges) {\r\n            if (ranges) {\r\n                var res = sanitizeRanges(ranges, _this.limit);\r\n                return res;\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n    SyntaxRangeProvider.prototype.dispose = function () {\r\n    };\r\n    return SyntaxRangeProvider;\r\n}());\r\nexport { SyntaxRangeProvider };\r\nfunction collectSyntaxRanges(providers, model, cancellationToken) {\r\n    var rangeData = null;\r\n    var promises = providers.map(function (provider, i) {\r\n        return Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(function (ranges) {\r\n            if (cancellationToken.isCancellationRequested) {\r\n                return;\r\n            }\r\n            if (Array.isArray(ranges)) {\r\n                if (!Array.isArray(rangeData)) {\r\n                    rangeData = [];\r\n                }\r\n                var nLines = model.getLineCount();\r\n                for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\r\n                    var r = ranges_1[_i];\r\n                    if (r.start > 0 && r.end > r.start && r.end <= nLines) {\r\n                        rangeData.push({ start: r.start, end: r.end, rank: i, kind: r.kind });\r\n                    }\r\n                }\r\n            }\r\n        }, onUnexpectedExternalError);\r\n    });\r\n    return Promise.all(promises).then(function (_) {\r\n        return rangeData;\r\n    });\r\n}\r\nvar RangesCollector = /** @class */ (function () {\r\n    function RangesCollector(foldingRangesLimit) {\r\n        this._startIndexes = [];\r\n        this._endIndexes = [];\r\n        this._nestingLevels = [];\r\n        this._nestingLevelCounts = [];\r\n        this._types = [];\r\n        this._length = 0;\r\n        this._foldingRangesLimit = foldingRangesLimit;\r\n    }\r\n    RangesCollector.prototype.add = function (startLineNumber, endLineNumber, type, nestingLevel) {\r\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n            return;\r\n        }\r\n        var index = this._length;\r\n        this._startIndexes[index] = startLineNumber;\r\n        this._endIndexes[index] = endLineNumber;\r\n        this._nestingLevels[index] = nestingLevel;\r\n        this._types[index] = type;\r\n        this._length++;\r\n        if (nestingLevel < 30) {\r\n            this._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\r\n        }\r\n    };\r\n    RangesCollector.prototype.toIndentRanges = function () {\r\n        if (this._length <= this._foldingRangesLimit) {\r\n            var startIndexes = new Uint32Array(this._length);\r\n            var endIndexes = new Uint32Array(this._length);\r\n            for (var i = 0; i < this._length; i++) {\r\n                startIndexes[i] = this._startIndexes[i];\r\n                endIndexes[i] = this._endIndexes[i];\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, this._types);\r\n        }\r\n        else {\r\n            var entries = 0;\r\n            var maxLevel = this._nestingLevelCounts.length;\r\n            for (var i = 0; i < this._nestingLevelCounts.length; i++) {\r\n                var n = this._nestingLevelCounts[i];\r\n                if (n) {\r\n                    if (n + entries > this._foldingRangesLimit) {\r\n                        maxLevel = i;\r\n                        break;\r\n                    }\r\n                    entries += n;\r\n                }\r\n            }\r\n            var startIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            var endIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            var types = [];\r\n            for (var i = 0, k = 0; i < this._length; i++) {\r\n                var level = this._nestingLevels[i];\r\n                if (level < maxLevel || (level === maxLevel && entries++ < this._foldingRangesLimit)) {\r\n                    startIndexes[k] = this._startIndexes[i];\r\n                    endIndexes[k] = this._endIndexes[i];\r\n                    types[k] = this._types[i];\r\n                    k++;\r\n                }\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, types);\r\n        }\r\n    };\r\n    return RangesCollector;\r\n}());\r\nexport { RangesCollector };\r\nexport function sanitizeRanges(rangeData, limit) {\r\n    var sorted = rangeData.sort(function (d1, d2) {\r\n        var diff = d1.start - d2.start;\r\n        if (diff === 0) {\r\n            diff = d1.rank - d2.rank;\r\n        }\r\n        return diff;\r\n    });\r\n    var collector = new RangesCollector(limit);\r\n    var top = undefined;\r\n    var previous = [];\r\n    for (var _i = 0, sorted_1 = sorted; _i < sorted_1.length; _i++) {\r\n        var entry = sorted_1[_i];\r\n        if (!top) {\r\n            top = entry;\r\n            collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n        }\r\n        else {\r\n            if (entry.start > top.start) {\r\n                if (entry.end <= top.end) {\r\n                    previous.push(top);\r\n                    top = entry;\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n                else {\r\n                    if (entry.start > top.end) {\r\n                        do {\r\n                            top = previous.pop();\r\n                        } while (top && entry.start > top.end);\r\n                        if (top) {\r\n                            previous.push(top);\r\n                        }\r\n                        top = entry;\r\n                    }\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return collector.toIndentRanges();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}