{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nvar CopyLinesCommand = /** @class */function () {\n  function CopyLinesCommand(selection, isCopyingDown) {\n    this._selection = selection;\n    this._isCopyingDown = isCopyingDown;\n    this._selectionDirection = 0 /* LTR */;\n    this._selectionId = null;\n    this._startLineNumberDelta = 0;\n    this._endLineNumberDelta = 0;\n  }\n  CopyLinesCommand.prototype.getEditOperations = function (model, builder) {\n    var s = this._selection;\n    this._startLineNumberDelta = 0;\n    this._endLineNumberDelta = 0;\n    if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n      this._endLineNumberDelta = 1;\n      s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n    }\n    var sourceLines = [];\n    for (var i = s.startLineNumber; i <= s.endLineNumber; i++) {\n      sourceLines.push(model.getLineContent(i));\n    }\n    var sourceText = sourceLines.join('\\n');\n    if (sourceText === '') {\n      // Duplicating empty line\n      if (this._isCopyingDown) {\n        this._startLineNumberDelta++;\n        this._endLineNumberDelta++;\n      }\n    }\n    if (!this._isCopyingDown) {\n      builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n    } else {\n      builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n    }\n    this._selectionId = builder.trackSelection(s);\n    this._selectionDirection = this._selection.getDirection();\n  };\n  CopyLinesCommand.prototype.computeCursorState = function (model, helper) {\n    var result = helper.getTrackedSelection(this._selectionId);\n    if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n      var startLineNumber = result.startLineNumber;\n      var startColumn = result.startColumn;\n      var endLineNumber = result.endLineNumber;\n      var endColumn = result.endColumn;\n      if (this._startLineNumberDelta !== 0) {\n        startLineNumber = startLineNumber + this._startLineNumberDelta;\n        startColumn = 1;\n      }\n      if (this._endLineNumberDelta !== 0) {\n        endLineNumber = endLineNumber + this._endLineNumberDelta;\n        endColumn = 1;\n      }\n      result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n    }\n    return result;\n  };\n  return CopyLinesCommand;\n}();\nexport { CopyLinesCommand };","map":{"version":3,"names":["Range","Selection","CopyLinesCommand","selection","isCopyingDown","_selection","_isCopyingDown","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","prototype","getEditOperations","model","builder","s","startLineNumber","endLineNumber","endColumn","setEndPosition","getLineMaxColumn","sourceLines","i","push","getLineContent","sourceText","join","addEditOperation","trackSelection","getDirection","computeCursorState","helper","result","getTrackedSelection","startColumn","createWithDirection"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/copyLinesCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nvar CopyLinesCommand = /** @class */ (function () {\r\n    function CopyLinesCommand(selection, isCopyingDown) {\r\n        this._selection = selection;\r\n        this._isCopyingDown = isCopyingDown;\r\n        this._selectionDirection = 0 /* LTR */;\r\n        this._selectionId = null;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n    }\r\n    CopyLinesCommand.prototype.getEditOperations = function (model, builder) {\r\n        var s = this._selection;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._endLineNumberDelta = 1;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        var sourceLines = [];\r\n        for (var i = s.startLineNumber; i <= s.endLineNumber; i++) {\r\n            sourceLines.push(model.getLineContent(i));\r\n        }\r\n        var sourceText = sourceLines.join('\\n');\r\n        if (sourceText === '') {\r\n            // Duplicating empty line\r\n            if (this._isCopyingDown) {\r\n                this._startLineNumberDelta++;\r\n                this._endLineNumberDelta++;\r\n            }\r\n        }\r\n        if (!this._isCopyingDown) {\r\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\r\n        }\r\n        else {\r\n            builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n        this._selectionDirection = this._selection.getDirection();\r\n    };\r\n    CopyLinesCommand.prototype.computeCursorState = function (model, helper) {\r\n        var result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\r\n            var startLineNumber = result.startLineNumber;\r\n            var startColumn = result.startColumn;\r\n            var endLineNumber = result.endLineNumber;\r\n            var endColumn = result.endColumn;\r\n            if (this._startLineNumberDelta !== 0) {\r\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\r\n                startColumn = 1;\r\n            }\r\n            if (this._endLineNumberDelta !== 0) {\r\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\r\n                endColumn = 1;\r\n            }\r\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\r\n        }\r\n        return result;\r\n    };\r\n    return CopyLinesCommand;\r\n}());\r\nexport { CopyLinesCommand };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}