{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Utility\\\\htmlUtility.js\";\nimport React from 'react';\nimport { Input, AutoComplete, Select, Radio, Form, Col, Row, Icon, Button, Checkbox, Switch, TreeSelect } from 'antd';\nimport { validationOnlyForFirstAndLastName, dynamicValidation, checkCheckBox, studyRelDocTitleValidation, checkSelectForStudyDocumentPath, CheckRadioGroup, fnForBrowse, fnForSelect, checkExistOrNot, checkSelect, checkPassword, fnSwitch, fnFileSelect, conversionFactorValidation } from './validator';\nimport { Telephone } from '../User/TelephoneComponent';\nimport Upload from '../Topbar/Upload';\nimport { fnKeyUp } from '../DefineBot/supportValidation.js';\n\n//Importing Custom Browse\nimport './browse.css';\nvar Option = Select.Option;\nvar FormItem = Form.Item;\nvar TreeNode = TreeSelect.TreeNode;\nvar TextArea = Input.TextArea;\nfunction lowerCasefirst(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\nexport function stringSorter(a, b, key) {\n  if (a[key] && a[key] !== null && b[key] && b[key] !== null) {\n    if (a[key].toLowerCase() < b[key].toLowerCase()) return -1;\n    if (a[key].toLowerCase() > b[key].toLowerCase()) return 1;\n    return 0;\n  } else if (a[key] === null) {\n    a[key] = \"\";\n    b[key] = b[key] || \"\";\n    console.log(a[key]);\n    if (a[key].toLowerCase() < b[key].toLowerCase()) return -1;\n    if (a[key].toLowerCase() > b[key].toLowerCase()) return 1;\n    return 0;\n  } else if (b[key] === null) {\n    b[key] = \"\";\n    a[key] = a[key] || \"\";\n    console.log(b[key]);\n    if (a[key].toLowerCase() < b[key].toLowerCase()) return -1;\n    if (a[key].toLowerCase() > b[key].toLowerCase()) return 1;\n    return 0;\n  }\n}\nexport function intSorter(a, b, key) {\n  if (a[key] && a[key] !== null && b[key] && b[key] !== null) {\n    if (a[key] < b[key]) return -1;\n    if (a[key] > b[key]) return 1;\n    return 0;\n  } else if (a[key] === null) {\n    a[key] = \"\";\n    if (a[key] < b[key]) return -1;\n    if (a[key] > b[key]) return 1;\n    return 0;\n  } else if (b[key] === null) {\n    b[key] = \"\";\n    if (a[key] < b[key]) return -1;\n    if (a[key] > b[key]) return 1;\n    return 0;\n  }\n}\nexport function getFormItemsLeft(startTabIndex, endTabIndex, formData, selectOptions, getFieldDecorator) {\n  var i = -1;\n  var formItemsLeft = formData.map(function (option) {\n    i = i + 1;\n    if (i >= startTabIndex && i % 2 == 0 && i <= endTabIndex) {\n      return /*#__PURE__*/React.createElement(FormItem, {\n        key: option.attributeName,\n        label: option.displayName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(option.attributeName, {\n        rules: getRules(option),\n        initialValue: option.defaultValue\n      })(getField(option, selectOptions)));\n    }\n  });\n  return formItemsLeft;\n}\nexport function getFormItemsRight(startTabIndex, endTabIndex, formData, selectOptions, getFieldDecorator) {\n  var i = -1;\n  var formItemsRight = formData.map(function (option) {\n    i = i + 1;\n    if (i >= startTabIndex && i % 2 != 0 && i <= endTabIndex) {\n      return /*#__PURE__*/React.createElement(FormItem, {\n        key: option.attributeName,\n        label: option.displayName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(option.attributeName, {\n        rules: getRules(option),\n        initialValue: option.defaultValue\n      })(getField(option, selectOptions)));\n    }\n  });\n  return formItemsRight;\n}\nexport function getField(field, selectOptions) {\n  switch (field.controlTypeText) {\n    case \"TextBox\":\n      if (field.editable == 1) {\n        return /*#__PURE__*/React.createElement(Input, {\n          size: \"small\",\n          tabIndex: 0,\n          placeholder: field.displayName,\n          id: field.attributeName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Input, {\n          size: \"small\",\n          tabIndex: 0,\n          placeholder: field.displayName,\n          id: field.attributeName,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        });\n      }\n    case \"DropDown\":\n      var deafultOption = /*#__PURE__*/React.createElement(Option, {\n        name: field.displayName + \"_Option\",\n        disabled: true,\n        key: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 34\n        }\n      }, \"--Select--\");\n      var allOptions = [deafultOption];\n      var options = [];\n      if (selectOptions != null && Object.keys(selectOptions).length > 0) {\n        options = selectOptions[lowerCasefirst(field.attributeName)].map(function (option) {\n          return /*#__PURE__*/React.createElement(Option, {\n            name: field.displayName + \"_Option\",\n            key: option[lowerCasefirst(option[\"key\"])],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }\n          }, option[lowerCasefirst(option[\"literal\"])]);\n        });\n      }\n      allOptions = allOptions.concat(options);\n      return /*#__PURE__*/React.createElement(Select, {\n        \"aria-name\": field.displayName,\n        filterOption: \"true\",\n        mode: \"single\",\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, allOptions);\n    case \"CheckBox\":\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, field.displayName);\n    default:\n      return /*#__PURE__*/React.createElement(Input, {\n        size: \"small\",\n        tabIndex: 0,\n        placeholder: field.displayName,\n        id: field.attributeName,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      });\n  }\n}\nfunction splCharacter(e) {\n  var re = /[0-9A-Za-z!,@,#,$,%,^,&,*,(,)]+/g;\n  if (!re.test(e.key)) {\n    e.preventDefault();\n  }\n}\nfunction getFormField(field, allData) {\n  var _React$createElement, _React$createElement4, _React$createElement5;\n  var uploadBtn = /*#__PURE__*/React.createElement(\"a\", {\n    onClick: function onClick() {\n      return allData.showFileDialog(field.attributeName);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"file-pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 86\n    }\n  }));\n  switch (field.controlTypeText) {\n    case \"TextBox\":\n      if (field.inputTypeText == \"Password\") {\n        return /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          style: {\n            \"-webkit-text-security\": \"disc\"\n          },\n          onPaste: function onPaste(e) {\n            e.preventDefault();\n            return false;\n          },\n          onKeyPress: splCharacter,\n          onKeyDown: function onKeyDown(e) {\n            if (e.key === \" \") {\n              e.preventDefault();\n            }\n          },\n          size: \"small\",\n          maxlength: \"15\",\n          autoComplete: \"off\",\n          tabIndex: 0,\n          id: field.attributeName,\n          onKeyUp: function onKeyUp(e) {\n            reset(e, allData.props);\n          },\n          disabled: field.editable == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }\n        });\n      } else if (field.inputTypeText == \"Positive\") {\n        return /*#__PURE__*/React.createElement(Input, {\n          size: \"small\",\n          onBlur: function onBlur(e) {\n            fnFocusOut(e);\n          },\n          tabIndex: 0,\n          id: field.attributeName,\n          disabled: field.editable == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Input, {\n          size: \"small\",\n          onKeyUp: function onKeyUp(e) {\n            fnKeyUp(e, allData.props, field.displayName.replace(/ /g, \"\"));\n          },\n          tabIndex: 0,\n          id: field.attributeName,\n          disabled: field.editable == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }\n        });\n      }\n    case \"DropDown\":\n      var valuenull = null;\n      var deafultOption = field.attributeName == \"StatusID\" || field.attributeName == \"UserStatusID\" || field.attributeName == \"ProjectStatusID\" ? \"\" : /*#__PURE__*/React.createElement(Option, {\n        name: field.displayName + \"_Option\",\n        key: valuenull,\n        value: valuenull,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 163\n        }\n      }, \"--Select--\");\n      var allOptions = deafultOption != \"\" ? [deafultOption] : [];\n      var options = [];\n      if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n        if (allData.selectOptions[field.attributeName.toLowerCase()] != undefined) {\n          options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\n            return /*#__PURE__*/React.createElement(Option, {\n              name: field.displayName + \"_Option\",\n              key: option[\"keyValue\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }\n            }, option[\"literal\"]);\n          });\n        }\n      }\n      allOptions = allOptions.concat(options);\n      return /*#__PURE__*/React.createElement(Select, {\n        \"aria-name\": field.displayName,\n        disabled: field.editable == 0,\n        filterOption: \"true\",\n        mode: \"single\",\n        tabIndex: 0,\n        onChange: function onChange(value, node) {\n          var dependencyDropDownFn = allData.props.dependencyDropDownFn;\n          if (dependencyDropDownFn && typeof dependencyDropDownFn[field.attributeName] === \"function\") {\n            dependencyDropDownFn[field.attributeName](value);\n          }\n          fnForSelect(value, allData.props, field.attributeName, node);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, allOptions);\n    case \"DropDownWithSearch\":\n      var tempParam = null;\n      var deafultOption = /*#__PURE__*/React.createElement(Option, {\n        name: field.displayName + \"_Option\",\n        key: tempParam,\n        value: tempParam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 34\n        }\n      }, \"--Select--\");\n      var allOptions = [deafultOption];\n      var options = [];\n      if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n        if (allData.selectOptions[field.attributeName.toLowerCase()] != undefined) {\n          options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\n            return /*#__PURE__*/React.createElement(Option, {\n              name: field.displayName + \"_Option\",\n              key: option[\"keyValue\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 29\n              }\n            }, option[\"literal\"]);\n          });\n        }\n      }\n      allOptions = allOptions.concat(options);\n      return /*#__PURE__*/React.createElement(Select, (_React$createElement = {\n        \"aria-name\": field.displayName,\n        placeholder: field.defaultValue,\n        tabIndex: 0,\n        showSearch: true,\n        disabled: field.editable == 0,\n        optionFilterProp: \"children\",\n        onChange: function onChange(value, node) {\n          fnForSelect(value, allData.props, field.attributeName, node);\n        },\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        mode: \"single\"\n      }, _defineProperty(_React$createElement, \"tabIndex\", 0), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }), _React$createElement), allOptions);\n    case \"MultipleDropdown\":\n      var deafultOption = /*#__PURE__*/React.createElement(\"input\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 34\n        }\n      }, \"--Select--\");\n      var allOptions = field.attributeName == \"ByVariables\" ? [] : [deafultOption];\n      var options = [];\n      if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n        options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\n          return /*#__PURE__*/React.createElement(Option, {\n            name: field.displayName + \"_Option\",\n            key: option[\"keyValue\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 25\n            }\n          }, option[\"literal\"]);\n        });\n      }\n      allOptions = allOptions.concat(options);\n      if (field.formText == \"DataSetValidationRule\" && (field.attributeName == \"CDISCDataStdDomainMetadataID\" || field.attributeName == \"RuleApplicableLevel\")) {\n        var _React$createElement2;\n        return /*#__PURE__*/React.createElement(Select, (_React$createElement2 = {\n          \"aria-name\": field.displayName,\n          tabIndex: 0,\n          disabled: field.editable == 0,\n          placeholder: \"Select Key Variable\",\n          mode: field.attributeName == \"ByVariables\" || field.attributeName == \"CDISCDataStdDomainMetadataID\" || field.attributeName == \"CDISCDataStdDomainClassID\" || field.attributeName == \"RuleApplicableLevel\" ? \"multiple\" : \"tags\"\n        }, _defineProperty(_React$createElement2, \"tabIndex\", 0), _defineProperty(_React$createElement2, \"onChange\", function onChange(value, node) {\n          fnForSelect(value, allData.props, field.attributeName, node);\n        }), _defineProperty(_React$createElement2, \"__self\", this), _defineProperty(_React$createElement2, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }), _React$createElement2), allOptions);\n      } else {\n        var _React$createElement3;\n        return /*#__PURE__*/React.createElement(Select, (_React$createElement3 = {\n          \"aria-name\": field.displayName,\n          tabIndex: 0,\n          disabled: field.editable == 0,\n          placeholder: \"Select Key Variable\",\n          mode: field.attributeName == \"ByVariables\" || field.attributeName == \"CDISCDataStdDomainMetadataID\" || field.attributeName == \"CDISCDataStdDomainClassID\" ? \"multiple\" : \"tags\"\n        }, _defineProperty(_React$createElement3, \"tabIndex\", 0), _defineProperty(_React$createElement3, \"__self\", this), _defineProperty(_React$createElement3, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }), _React$createElement3), allOptions);\n      }\n    case \"MultipleDrop\":\n      var deafultOption = /*#__PURE__*/React.createElement(\"input\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 34\n        }\n      }, \"--Select--\");\n      var allOptions = [deafultOption];\n      var options = [];\n      if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n        options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\n          return /*#__PURE__*/React.createElement(Option, {\n            name: field.displayName + \"_Option\",\n            key: option[\"keyValue\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 25\n            }\n          }, option[\"literal\"]);\n        });\n      }\n      allOptions = allOptions.concat(options);\n      return /*#__PURE__*/React.createElement(Select, (_React$createElement4 = {\n        \"aria-name\": field.displayName,\n        tabIndex: 0,\n        disabled: field.editable == 0,\n        placeholder: \"Select Key Variable\",\n        mode: \"multiple\"\n      }, _defineProperty(_React$createElement4, \"tabIndex\", 0), _defineProperty(_React$createElement4, \"__self\", this), _defineProperty(_React$createElement4, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }), _React$createElement4), allOptions);\n    case \"CheckBox\":\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        tabIndex: 0,\n        key: field.attributeName,\n        disabled: field.editable == 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      });\n    case \"RadioGroup\":\n      var plainOptions = [{\n        label: 'Number',\n        value: 'Number'\n      }, {\n        label: 'Character',\n        value: 'Character'\n      }];\n      return /*#__PURE__*/React.createElement(Radio.Group, {\n        options: plainOptions,\n        tabIndex: 0,\n        key: field.attributeName,\n        disabled: field.editable == 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }\n      });\n    case \"Switch\":\n      return /*#__PURE__*/React.createElement(Switch, {\n        key: field.attributeName,\n        disabled: field.editable == 0,\n        onChange: function onChange(e) {\n          fnSwitch(e, allData.props, field.attributeName);\n        },\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      });\n    case \"FileSelect\":\n      var tempProp = allData.props.property;\n      if (tempProp.constructor.name == \"CreateStudyModal\" && field.attributeName.indexOf(\"Document\") != -1) {\n        return /*#__PURE__*/React.createElement(TreeSelect, {\n          tabIndex: 0,\n          showSearch: true,\n          autoBlur: true,\n          disabled: field.editable == 0,\n          multiple: field.inputTypeText == \"MultiBrowse\",\n          allowClear: true,\n          dropdownStyle: {\n            maxHeight: 300,\n            overflow: 'auto'\n          },\n          placeholder: \"Please Select\",\n          treeDefaultExpandedKeys: [allData.treeDefaultExpandedKeys],\n          dropdownClassName: field.attributeName,\n          onChange: function onChange(value, node, extra) {\n            fnFileSelect(value, node, extra, allData.props, field.attributeName);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }\n        }, dependencyDDLValidation(tempProp, field.attributeName));\n      } else {\n        return /*#__PURE__*/React.createElement(TreeSelect, {\n          tabIndex: 0,\n          showSearch: true,\n          autoBlur: true,\n          disabled: field.editable == 0,\n          multiple: field.inputTypeText == \"MultiBrowse\",\n          allowClear: true,\n          dropdownStyle: {\n            maxHeight: 300,\n            overflow: 'auto'\n          },\n          placeholder: \"Please Select\",\n          treeDefaultExpandedKeys: [allData.treeDefaultExpandedKeys],\n          dropdownClassName: field.attributeName,\n          onChange: function onChange(value, node, extra) {\n            fnFileSelect(value, node, extra, allData.props, field.attributeName);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 21\n          }\n        }, Object.keys(allData.treeData).length == 2 ? allData.treeData[field.attributeName.indexOf(\"Document\") != -1 ? \"Document\" : \"Location\"] : allData.treeData);\n      }\n    case \"FolderSelect\":\n      return /*#__PURE__*/React.createElement(TreeSelect, {\n        showSearch: true,\n        tabIndex: 0,\n        disabled: field.editable == 0,\n        dropdownStyle: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        placeholder: \"Please Select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }\n      }, Object.keys(allData.treeData).length == 2 ? allData.folderTreeData[field.attributeName.indexOf(\"Document\") != -1 ? \"Document\" : \"Location\"] : allData.folderTreeData);\n    case \"SpecialTextBox\":\n      return /*#__PURE__*/React.createElement(Input, {\n        tabIndex: 0,\n        style: {\n          width: \"calc(100% - 42px)\",\n          height: \"50px\"\n        },\n        placeholder: field.displayName,\n        id: field.attributeName,\n        disabled: field.editable == 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }\n      });\n    case \"SpecialSettings\":\n      return /*#__PURE__*/React.createElement(Input, {\n        tabIndex: 0,\n        style: {\n          width: \"calc(100% - 132px)\",\n          height: \"50px\"\n        },\n        placeholder: field.displayName,\n        id: field.attributeName,\n        disabled: field.attributeName != \"CommentDescription\" ? field.editable == 0 : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }\n      });\n    case \"TextArea\":\n      return /*#__PURE__*/React.createElement(TextArea, (_React$createElement5 = {\n        tabIndex: 0,\n        rows: 2,\n        size: \"small\",\n        style: {\n          resize: \"none\"\n        }\n      }, _defineProperty(_React$createElement5, \"tabIndex\", 0), _defineProperty(_React$createElement5, \"disabled\", field.editable == 0), _defineProperty(_React$createElement5, \"__self\", this), _defineProperty(_React$createElement5, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }), _React$createElement5));\n    case \"CustomBox\":\n      if (field.attributeName == 'VariableshavingValueLevels') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"VariableshavingValueLevels\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 21\n          }\n        }, allData.tableElement);\n      }\n      break;\n    case \"SpecialCheckBox\":\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        tabIndex: 0,\n        key: field.attributeName,\n        disabled: field.editable == 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 20\n        }\n      });\n    case \"FileBrowse\":\n      return /*#__PURE__*/React.createElement(Input, {\n        tabIndex: 0,\n        type: \"file\",\n        className: \"ant-input custom-file-input\",\n        style: {\n          padding: \"0px\"\n        },\n        accept: \".xml\",\n        onChange: function onChange(e) {\n          fnForBrowse(e, allData.props, field.attributeName);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }\n      });\n    case \"File\":\n      return /*#__PURE__*/React.createElement(Input, {\n        tabIndex: 0,\n        type: \"file\",\n        className: \"ant-input custom-file-input\",\n        style: {\n          padding: \"0px\"\n        },\n        accept: \".xml\",\n        onChange: function onChange(e) {\n          fnForBrowse(e, allData.props, field.attributeName);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }\n      });\n    case \"AutoComplete\":\n      {\n        var dataSource = [];\n        if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\n          if (allData.selectOptions[field.attributeName.toLowerCase()] != undefined) {\n            allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\n              dataSource.push({\n                text: option[\"literal\"],\n                value: option[\"keyValue\"]\n              });\n            });\n          }\n        }\n        console.log(dataSource);\n        return /*#__PURE__*/React.createElement(AutoComplete, {\n          filterOption: function filterOption(inputValue, option) {\n            try {\n              var _ref = option.props || {},\n                children = _ref.children;\n              var text = typeof children == \"string\" ? children : \"\";\n              return text.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n            } catch (e) {\n              return;\n            }\n          },\n          dataSource: dataSource,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 21\n          }\n        });\n      }\n    default:\n      return /*#__PURE__*/React.createElement(Input, {\n        tabIndex: 0,\n        size: \"small\",\n        placeholder: field.displayName,\n        id: field.attributeName,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }\n      });\n  }\n}\nfunction dependencyDDLValidation(prop, attrName) {\n  var _this = this;\n  var whichTwo = [];\n  if (attrName == \"ProtocolDocument\") {\n    whichTwo.push(prop.props.form.getFieldsValue([\"CRFDocument\"]).CRFDocument);\n    whichTwo = whichTwo.concat(prop.props.form.getFieldsValue([\"StudyRelatedDocument\"]).StudyRelatedDocument);\n  } else if (attrName == \"CRFDocument\") {\n    whichTwo.push(prop.props.form.getFieldsValue([\"ProtocolDocument\"]).ProtocolDocument);\n    whichTwo = whichTwo.concat(prop.props.form.getFieldsValue([\"StudyRelatedDocument\"]).StudyRelatedDocument);\n  } else {\n    whichTwo.push(prop.props.form.getFieldsValue([\"ProtocolDocument\"]).ProtocolDocument);\n    whichTwo.push(prop.props.form.getFieldsValue([\"CRFDocument\"]).CRFDocument);\n  }\n  var datas = prop.state.responseData.folderTree.Document;\n  var loops = function loops(data) {\n    return data.map(function (item) {\n      var temp = true;\n      whichTwo.forEach(function (vallidKey, validIndex) {\n        if (vallidKey == item.key) {\n          temp = false;\n        }\n      });\n      if (item.children && temp) {\n        return /*#__PURE__*/React.createElement(TreeNode, {\n          selectable: false,\n          key: item.key,\n          value: item.key,\n          title: item.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 21\n          }\n        }, loops(item.children));\n      } else if (temp) {\n        return /*#__PURE__*/React.createElement(TreeNode, {\n          key: item.key,\n          value: item.key,\n          title: item.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 24\n          }\n        });\n      }\n    });\n  };\n  return loops([datas]);\n}\nexport function getRules(field, props, pageName) {\n  var allRules = [{\n    required: field.inputRequirementText == 'Mandatory' ? true : false,\n    message: field.requirementErrorMessage\n  }];\n  var inputValidator = null;\n  var existValidator = null;\n  var noNeedValidation = [\"DocumentPath\", \"DropDown\", \"CheckBox\", \"FileSelect\", \"FolderSelect\", \"MultipleDropdown\", \"MultipleDrop\", \"Switch\", \"DropDownWithSearch\", \"RadioGroup\"];\n  if (noNeedValidation.indexOf(field.controlTypeText) < 0) {\n    //if (field.attributeName !== \"EmailAddress\") {\n    allRules.push({\n      min: field.minValue,\n      message: field.validationErrorMessage\n    });\n    allRules.push({\n      max: field.maxValue,\n      message: field.validationErrorMessage\n    });\n    //}\n    if (field.regExText !== null) {\n      switch (field.inputTypeText) {\n        case \"Alpha\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"Alphanumeric\":\n          if (field.attributeName === \"FirstName\" || field.attributeName === \"LastName\") {\n            inputValidator = {\n              validator: validationOnlyForFirstAndLastName,\n              message: field.inputTypeErrorMessage,\n              regExPattern: field.regExText,\n              callback: props.setDisplayName\n            };\n          } else {\n            inputValidator = {\n              validator: dynamicValidation,\n              message: field.inputTypeErrorMessage,\n              regExPattern: field.regExText\n            };\n          }\n          break;\n        case \"MobileNumber\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"PhoneNumber\":\n          if (field.attributeName !== \"Telephone\") {\n            inputValidator = {\n              validator: dynamicValidation,\n              message: field.inputTypeErrorMessage,\n              regExPattern: field.regExText\n            };\n          }\n          break;\n        case \"Number\":\n          if (field.attributeName === \"ConversionFactor\") {\n            inputValidator = {\n              validator: conversionFactorValidation,\n              min: field.minValue,\n              max: field.maxValue,\n              validationMsg: field.validationErrorMessage,\n              message: field.inputTypeErrorMessage,\n              regExPattern: field.regExText\n            };\n          } else {\n            inputValidator = {\n              validator: dynamicValidation,\n              message: field.inputTypeErrorMessage,\n              regExPattern: field.regExText\n            };\n          }\n          break;\n        case \"EmailAddress\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            regExPattern: field.regExText,\n            callback: props.setUserName\n          };\n          break;\n        case \"Password\":\n          inputValidator = {\n            validator: checkPassword,\n            message: field.inputTypeErrorMessage,\n            props: props,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"AlphanumericDotSpecial\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"Positive\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            props: props,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"Date\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            props: props,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"AlphaNumericUnderscore\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            props: props,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"AlphanumericSpecial\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            props: props,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"ALLInputsAccepted\":\n          inputValidator = {\n            validator: dynamicValidation,\n            message: field.inputTypeErrorMessage,\n            props: props,\n            regExPattern: field.regExText\n          };\n          break;\n        case \"StudyRelDocTitle\":\n          inputValidator = {\n            validator: studyRelDocTitleValidation,\n            message: field.inputTypeErrorMessage,\n            props: props,\n            regExPattern: field.regExText\n          };\n          break;\n        default:\n          inputValidator = null;\n          break;\n      }\n    }\n  } else if (field.controlTypeText == \"DocumentPath\") {\n    if (field.inputRequirementText == 'Mandatory') {\n      inputValidator = {\n        validator: checkSelectForStudyDocumentPath,\n        message: field.requirementErrorMessage,\n        props: props\n      };\n    }\n  } else if (field.controlTypeText == \"DropDown\" || field.controlTypeText == \"DropDownWithSearch\") {\n    if (field.inputRequirementText == 'Mandatory') {\n      inputValidator = {\n        validator: checkSelect,\n        message: field.requirementErrorMessage,\n        props: props\n      };\n    }\n  } else if (field.controlTypeText == \"CheckBox\") {\n    if (field.inputRequirementText == 'Mandatory') {\n      inputValidator = {\n        validator: checkCheckBox,\n        message: field.requirementErrorMessage\n      };\n    }\n  } else if (field.controlTypeText == \"RadioGroup\") {\n    if (field.inputRequirementText == 'Mandatory') {\n      inputValidator = {\n        validator: CheckRadioGroup,\n        message: field.requirementErrorMessage\n      };\n    }\n  }\n  if ([\"ProjectName\", \"UserName\", \"EmailAddress\", \"StudyName\", \"ColumnName\", \"RoleName\", \"Name\", \"ObjectName\", \"DataStdRoleName\", \"TermName\", \"ValueLevelVariable\", \"MacroName\", \"RuleID\", \"CodeListVersion\"].indexOf(field.attributeName) != -1 && field.formID !== 98 && field.formID !== 96) {\n    //let fieldValue = props.property !== undefined ? props.property.props.form.getFieldValue(field.attributeName) : props.props !== undefined ? props.props.form.getFieldValue(field.attributeName) : props.form.getFieldValue(field.attributeName);\n    //fieldValue = (fieldValue !== undefined && fieldValue !== null)  ? fieldValue : \"\";\n    //let fieldValueLength = fieldValue.length;\n    //if (fieldValueLength >= field.minValue && fieldValueLength <= field.maxValue) {\n    var PageName = pageName != undefined ? pageName : props.property != undefined ? props.property.constructor.name : \"\";\n    existValidator = {\n      validator: checkExistOrNot,\n      minVal: field.minValue,\n      maxVal: field.maxValue,\n      defaultValue: field.defaultValue,\n      props: props,\n      PageName: PageName\n    };\n\n    // }\n  }\n\n  if (inputValidator != null) {\n    allRules.push(inputValidator);\n  }\n  if (existValidator != null) {\n    allRules.push(existValidator);\n  }\n  return allRules;\n}\nfunction fnFocusOut(e) {\n  document.getElementById(e.target.id).value = e.target.value.split(\" \").sort(function (a, b) {\n    return a - b;\n  }).toString().replace(/,/g, \" \");\n}\nfunction reset(field, e) {\n  if (field.currentTarget.id !== \"ConfirmPassword\") {\n    e.props.form.resetFields([\"ConfirmPassword\"]);\n  }\n}\nvar rightRule = function rightRule(index) {\n  return index % 2 != 0;\n};\nvar leftRule = function leftRule(index) {\n  return index % 2 == 0;\n};\nexport function formHTML(allData) {\n  return genFormItems(allData, leftRule);\n}\nfunction genFormItems(allData, condition) {\n  var formHTML = {\n    right: [],\n    left: []\n  };\n  if (allData.props !== undefined && allData.props.responseData !== undefined && allData.props.responseData.formData !== undefined && (allData.props.responseData.formData[0].formID === 100 || allData.props.responseData.formData[0].formID === 101)) {\n    formHTML = {\n      right: [],\n      center: [],\n      left: []\n    };\n  }\n  var k = -1;\n  allData.formData.map(function (field) {\n    var position = \"left\";\n    if (field.tabIndex % 2 == 0) {\n      position = \"right\";\n    }\n    if (allData.props !== undefined && allData.props.responseData !== undefined && allData.props.responseData.formData !== undefined && (allData.props.responseData.formData[0].formID === 100 || allData.props.responseData.formData[0].formID === 101)) {\n      var pos = [\"left\", \"center\", \"right\"];\n      if (k == 2) {\n        k = 0;\n      } else {\n        k++;\n      }\n      position = pos[k];\n    }\n    var defaultValue = null;\n    if (field.controlTypeText == \"CheckBox\" || field.controlTypeText == \"RadioGroup\" || field.controlTypeText == \"SpecialCheckBox\" || field.controlTypeText == \"Switch\") {\n      defaultValue = false;\n      if (field.defaultValue == \"True\" || field.defaultValue == \"true\" || field.defaultValue == true) {\n        defaultValue = true;\n      }\n    } else {\n      if (field.defaultValue != null && field.defaultValue.trim() != '') {\n        defaultValue = field.defaultValue;\n      }\n    }\n    formHTML[position].push(field.controlTypeText == \"FileBrowse\" ? /*#__PURE__*/React.createElement(FormItem, {\n      key: field.attributeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      field: field,\n      props: allData,\n      disabled: field.editable,\n      format: allData.props.state.format,\n      pageName: allData.props.state.pageName,\n      id: field.attributeName,\n      defaultValue: defaultValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 25\n      }\n    })) : field.attributeName == \"Telephone\" ? /*#__PURE__*/React.createElement(FormItem, {\n      key: field.attributeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Telephone, {\n      getFieldDecorator: allData.getFieldDecorator,\n      allData: allData,\n      field: field,\n      SelCountry: fnTogetSelCountry(allData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(FormItem, {\n      key: field.attributeName,\n      label: field.displayName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 21\n      }\n    }, field.inputTypeText == \"Password\" ? /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 37\n      }\n    }, allData.getFieldDecorator(field.attributeName, {\n      rules: field.editable == true ? getRules(field, allData.props) : \"\",\n      //validateTrigger: ['onKeyup', 'onBlur'],\n      initialValue: defaultValue,\n      valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value'\n    })(getFormField(field, allData))) : field.controlTypeText == \"DropDownWithSearch\" ? allData.getFieldDecorator(field.attributeName, {\n      rules: field.editable == true ? getRules(field, allData.props) : \"\",\n      //validateTrigger: ['onKeyup', 'onBlur'],\n      initialValue: defaultValue,\n      valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value'\n    })(getFormField(field, allData)) : field.controlTypeText == \"MultipleDropdown\" || field.controlTypeText == \"FileSelect\" || field.controlTypeText == \"MultipleDrop\" ? allData.getFieldDecorator(field.controlTypeText == \"MultipleDrop\" || field.controlTypeText == \"MultipleDropdown\" ? field.attributeName : field.displayName.replace(/ /g, \"\"), {\n      rules: field.editable == true ? getRules(field, allData.props) : \"\",\n      initialValue: defaultValue != null ? defaultValue.split(\",\") : []\n    })(getFormField(field, allData)) : allData.getFieldDecorator(field.attributeName, {\n      rules: field.editable == true ? getRules(field, allData.props) : \"\",\n      initialValue: defaultValue,\n      //validateTrigger: ['onKeyup', 'onBlur'],\n      valuePropName: field.controlTypeText == \"CheckBox\" || field.controlTypeText == \"Switch\" || field.controlTypeText == \"RadioGroup\" ? 'checked' : 'value'\n    })(getFormField(field, allData))));\n    function fnSpecialText(field, defaultValue) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 21\n        }\n      }, allData.getFieldDecorator(field.attributeName, {\n        rules: field.editable == true ? getRules(field, allData.props) : \"\",\n        initialValue: defaultValue,\n        //validateTrigger: ['onKeyup', 'onBlur'],\n        valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value'\n      })(getFormField(field, allData))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        icon: \"setting\",\n        id: field.attributeName + \"Confirm\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        disabled: field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 25\n        }\n      })));\n    }\n    function fnSpecialSettings(field, defaultValue) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 25\n        }\n      }, field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\" ? /*#__PURE__*/React.createElement(Checkbox, {\n        id: field.attributeName + \"CheckBox\",\n        checked: false,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(Checkbox, {\n        id: field.attributeName + \"CheckBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 30\n        }\n      }, \"Common\")), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 25\n        }\n      }, allData.getFieldDecorator(field.attributeName, {\n        rules: field.editable == true ? getRules(field, allData.props) : \"\",\n        initialValue: defaultValue\n        //validateTrigger: ['onKeyup', 'onBlur'],\n      })(getFormField(field, allData))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        icon: \"setting\",\n        id: field.attributeName + \"Confirm\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        disabled: field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 29\n        }\n      }))));\n    }\n    function fnSpecialCheck(field, defaultValue) {\n      var width = \"calc(100% - 83px)\";\n      var disabled;\n      var value;\n      if (field.attributeName == \"ValueListID\") {\n        var width = \"calc(100% - 125px)\";\n        if (field.defaultValue == false || field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\") {\n          disabled = true;\n        } else {\n          disabled = false;\n        }\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 25\n        }\n      }, allData.getFieldDecorator(field.attributeName, {\n        initialValue: defaultValue\n      })(getFormField(field, allData)), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 30\n        }\n      }, \"External\"))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 21\n        }\n      }, field.attributeName == \"ValueListID\" ? /*#__PURE__*/React.createElement(Input, {\n        size: \"small\",\n        style: {\n          width: width\n        },\n        placeholder: field.displayName,\n        id: field.attributeName + \"Text\",\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(Input, {\n        size: \"small\",\n        style: {\n          width: width\n        },\n        placeholder: field.displayName,\n        id: field.attributeName + \"Text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 34\n        }\n      })), field.attributeName == \"ValueListID\" ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        icon: \"setting\",\n        id: field.attributeName + \"Confirm\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        disabled: field.defaultValue == false || field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 33\n        }\n      })) : \"\");\n    }\n  });\n  return formHTML;\n}\nfunction fnTogetSelCountry(alldata) {\n  var _alldata$props = alldata.props,\n    country = _alldata$props.country,\n    form = _alldata$props.form;\n  var countryID = form.getFieldValue(\"CountryID\");\n  var selCountry = country.find(function (c) {\n    return c.countryID == countryID;\n  });\n  if (selCountry && typeof selCountry === \"object\") {\n    return selCountry.countryAbbreviation;\n  } else {\n    return \"IN\";\n  }\n}","map":{"version":3,"names":["React","Input","AutoComplete","Select","Radio","Form","Col","Row","Icon","Button","Checkbox","Switch","TreeSelect","validationOnlyForFirstAndLastName","dynamicValidation","checkCheckBox","studyRelDocTitleValidation","checkSelectForStudyDocumentPath","CheckRadioGroup","fnForBrowse","fnForSelect","checkExistOrNot","checkSelect","checkPassword","fnSwitch","fnFileSelect","conversionFactorValidation","Telephone","Upload","fnKeyUp","Option","FormItem","Item","TreeNode","TextArea","lowerCasefirst","string","charAt","toLowerCase","slice","stringSorter","a","b","key","console","log","intSorter","getFormItemsLeft","startTabIndex","endTabIndex","formData","selectOptions","getFieldDecorator","i","formItemsLeft","map","option","attributeName","displayName","rules","getRules","initialValue","defaultValue","getField","getFormItemsRight","formItemsRight","field","controlTypeText","editable","deafultOption","allOptions","options","Object","keys","length","concat","splCharacter","e","re","test","preventDefault","getFormField","allData","uploadBtn","showFileDialog","inputTypeText","reset","props","fnFocusOut","replace","valuenull","undefined","value","node","dependencyDropDownFn","tempParam","input","children","indexOf","formText","plainOptions","label","tempProp","property","constructor","name","maxHeight","overflow","treeDefaultExpandedKeys","extra","dependencyDDLValidation","treeData","folderTreeData","width","height","resize","tableElement","padding","dataSource","push","text","inputValue","toUpperCase","prop","attrName","whichTwo","form","getFieldsValue","CRFDocument","StudyRelatedDocument","ProtocolDocument","datas","state","responseData","folderTree","Document","loops","data","item","temp","forEach","vallidKey","validIndex","title","pageName","allRules","required","inputRequirementText","message","requirementErrorMessage","inputValidator","existValidator","noNeedValidation","min","minValue","validationErrorMessage","max","maxValue","regExText","validator","inputTypeErrorMessage","regExPattern","callback","setDisplayName","validationMsg","setUserName","formID","PageName","minVal","maxVal","document","getElementById","target","id","split","sort","toString","currentTarget","resetFields","rightRule","index","leftRule","formHTML","genFormItems","condition","right","left","center","k","position","tabIndex","pos","trim","format","fnTogetSelCountry","valuePropName","fnSpecialText","marginLeft","fnSpecialSettings","fnSpecialCheck","disabled","alldata","country","countryID","getFieldValue","selCountry","find","c","countryAbbreviation"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Utility/htmlUtility.js"],"sourcesContent":["import React from 'react';\r\nimport { Input, AutoComplete,Select, Radio, Form, Col, Row, Icon, Button, Checkbox, Switch, TreeSelect } from 'antd';\r\nimport {\r\n    validationOnlyForFirstAndLastName,\r\n    dynamicValidation,\r\n    checkCheckBox,\r\n    studyRelDocTitleValidation,\r\n    checkSelectForStudyDocumentPath,\r\n    CheckRadioGroup,\r\n    fnForBrowse,\r\n    fnForSelect,\r\n    checkExistOrNot,\r\n    checkSelect,\r\n    checkPassword,\r\n    fnSwitch,\r\n    fnFileSelect,\r\n    conversionFactorValidation\r\n} from './validator';\r\n\r\n\r\nimport { Telephone } from '../User/TelephoneComponent';\r\nimport Upload from '../Topbar/Upload';\r\nimport { fnKeyUp } from '../DefineBot/supportValidation.js';\r\n\r\n//Importing Custom Browse\nimport './browse.css';\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nconst TreeNode = TreeSelect.TreeNode;\r\nconst { TextArea } = Input;\r\n\n\r\n\r\nfunction lowerCasefirst(string) {\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n\r\nexport function stringSorter(a, b, key) {\r\n    if (a[key] && a[key] !== null && b[key] && b[key] !== null) {\r\n        if (a[key].toLowerCase() < b[key].toLowerCase()) return -1;\r\n        if (a[key].toLowerCase() > b[key].toLowerCase()) return 1;\r\n        return 0;\r\n    } else if (a[key] === null) {\r\n        a[key] = \"\";\r\n        b[key] = b[key] || \"\";\r\n        console.log(a[key]);\r\n        if (a[key].toLowerCase() < b[key].toLowerCase()) return -1;\r\n        if (a[key].toLowerCase() > b[key].toLowerCase()) return 1;\r\n        return 0;\r\n    } else if (b[key] === null) {\r\n        b[key] = \"\";\r\n        a[key] = a[key] || \"\";\r\n        console.log(b[key]);\r\n        if (a[key].toLowerCase() < b[key].toLowerCase()) return -1;\r\n        if (a[key].toLowerCase() > b[key].toLowerCase()) return 1;\r\n        return 0;\r\n    }\r\n}\r\nexport function intSorter(a, b, key) {\r\n    if (a[key] && a[key] !== null && b[key] && b[key] !== null) {\r\n        if (a[key] < b[key]) return -1;\r\n        if (a[key] > b[key]) return 1;\r\n        return 0;\r\n    } else if (a[key] === null) {\r\n        a[key] = \"\";\r\n        if (a[key] < b[key]) return -1;\r\n        if (a[key] > b[key]) return 1;\r\n        return 0;\r\n    } else if (b[key] === null) {\r\n        b[key] = \"\";\r\n        if (a[key] < b[key]) return -1;\r\n        if (a[key] > b[key]) return 1;\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function getFormItemsLeft(startTabIndex, endTabIndex, formData, selectOptions, getFieldDecorator) {\r\n    var i = -1;\r\n\r\n    var formItemsLeft = formData.map(function (option) {\r\n        i = i + 1;\r\n        if (i >= startTabIndex && i % 2 == 0 && i <= endTabIndex) {\r\n\r\n\r\n            return (\r\n                <FormItem\r\n                    key={option.attributeName}\r\n                    label={option.displayName}\r\n                >\r\n                    {\r\n                        getFieldDecorator(option.attributeName, {\r\n                            rules: getRules(option),\r\n                            initialValue: option.defaultValue\r\n                        })(\r\n                            getField(option, selectOptions)\r\n\r\n                        )}\r\n\r\n                </FormItem>\r\n            )\r\n        }\r\n\r\n    });\r\n    return formItemsLeft;\r\n}\r\n\r\nexport function getFormItemsRight(startTabIndex, endTabIndex, formData, selectOptions, getFieldDecorator) {\r\n    var i = -1;\r\n\r\n    var formItemsRight = formData.map(function (option) {\r\n        i = i + 1;\r\n        if (i >= startTabIndex && i % 2 != 0 && i <= endTabIndex) {\r\n\r\n\r\n            return (\r\n                <FormItem\r\n                    key={option.attributeName}\r\n                    label={option.displayName}\r\n                >\r\n                    {\r\n                        getFieldDecorator(option.attributeName, {\r\n                            rules: getRules(option),\r\n                            initialValue: option.defaultValue\r\n                        })(\r\n                            getField(option, selectOptions)\r\n\r\n                        )}\r\n\r\n                </FormItem>\r\n            )\r\n        }\r\n\r\n    });\r\n    return formItemsRight;\r\n}\r\nexport function getField(field, selectOptions) {\r\n    switch (field.controlTypeText) {\r\n        case \"TextBox\":\r\n            if (field.editable == 1) {\r\n                return (<Input size=\"small\" tabIndex={0} placeholder={field.displayName} id={field.attributeName} />);\r\n            }\r\n            else {\r\n                return (<Input size=\"small\" tabIndex={0} placeholder={field.displayName} id={field.attributeName} disabled />);\r\n            }\r\n        case \"DropDown\":\r\n            var deafultOption = (<Option name={field.displayName + \"_Option\"} disabled key=\"1\" >--Select--</Option>);\r\n            var allOptions = [deafultOption];\r\n            var options = [];\r\n            if (selectOptions != null && Object.keys(selectOptions).length > 0) {\r\n                options = selectOptions[lowerCasefirst(field.attributeName)].map(function (option) {\r\n                    return (\r\n                        <Option name={field.displayName + \"_Option\"} key={option[lowerCasefirst(option[\"key\"])]}>\r\n                            {option[lowerCasefirst(option[\"literal\"])]}\r\n                        </Option>\r\n                    )\r\n                });\r\n            }\r\n            allOptions = allOptions.concat(options);\r\n            return (<Select\r\n                aria-name={field.displayName} filterOption=\"true\" mode=\"single\" tabIndex={0}>\r\n                {allOptions}\r\n            </Select>);\r\n        case \"CheckBox\":\r\n            return (<Checkbox\r\n                tabIndex={0}\r\n            >\r\n                {field.displayName}\r\n            </Checkbox>);\r\n\r\n        default:\r\n            return (<Input size=\"small\" tabIndex={0} placeholder={field.displayName} id={field.attributeName} disabled />);\r\n\r\n    }\r\n}\r\n\r\nfunction splCharacter(e) {\r\n    const re = /[0-9A-Za-z!,@,#,$,%,^,&,*,(,)]+/g;\r\n    if (!re.test(e.key)) {\r\n        e.preventDefault();\r\n    }\r\n}\r\n\r\nfunction getFormField(field, allData) {\r\n    const uploadBtn = <a onClick={() => allData.showFileDialog(field.attributeName)}><Icon type=\"file-pdf\" /></a>;\r\n    switch (field.controlTypeText) {\r\n        case \"TextBox\":\r\n\r\n            if (field.inputTypeText == \"Password\") {\r\n                return (\r\n\r\n                    <Input type=\"text\" style={{ \"-webkit-text-security\": \"disc\" }}\r\n                        onPaste={(e) => {\r\n                            e.preventDefault()\r\n                            return false;\r\n                        }}\r\n                        onKeyPress={splCharacter}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === \" \") {\r\n                                e.preventDefault();\r\n                            }\r\n                        }}\r\n                        size=\"small\" maxlength=\"15\" autoComplete=\"off\" tabIndex={0} id={field.attributeName} onKeyUp={(e) => { reset(e, allData.props) }\r\n                        } disabled={(field.editable == 0)\r\n                        } />\r\n                );\r\n            }\r\n            else if (field.inputTypeText == \"Positive\") {\r\n                return (<Input size=\"small\" onBlur={(e) => { fnFocusOut(e) }} tabIndex={0} id={field.attributeName} disabled={(field.editable == 0)} />);\r\n            }\r\n            else {\r\n                return (<Input size=\"small\" onKeyUp={(e) => { fnKeyUp(e, allData.props, field.displayName.replace(/ /g, \"\")) }} tabIndex={0} id={field.attributeName} disabled={(field.editable == 0)} />);\r\n            }\r\n        case \"DropDown\":\r\n            var valuenull = null;\r\n            var deafultOption = ((field.attributeName == \"StatusID\" || field.attributeName == \"UserStatusID\" || field.attributeName == \"ProjectStatusID\") ? \"\" : (<Option name={field.displayName + \"_Option\"} key={valuenull} value={valuenull}>--Select--</Option>))\r\n            var allOptions = (deafultOption != \"\") ? [deafultOption] : [];\r\n            var options = [];\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                if (allData.selectOptions[field.attributeName.toLowerCase()] != undefined) {\r\n                    options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\r\n                        return (\r\n                            <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]}>\r\n                                {option[\"literal\"]}\r\n                            </Option>\r\n                        )\r\n                    });\r\n                }\r\n            }\r\n            allOptions = allOptions.concat(options);\r\n            return (<Select\r\n                aria-name={field.displayName}\r\n                disabled={(field.editable == 0)}\r\n                filterOption=\"true\" mode=\"single\"\r\n                tabIndex={0}\r\n                onChange={\r\n                    (value, node) => {\r\n                        let { dependencyDropDownFn } = allData.props;\r\n                        if (dependencyDropDownFn && typeof dependencyDropDownFn[field.attributeName] === \"function\") {\r\n                            dependencyDropDownFn[field.attributeName](value)\r\n                        }\r\n                        fnForSelect(value, allData.props, field.attributeName, node)\r\n                    }\r\n                }>\r\n                {allOptions}\r\n            </Select>);\r\n        case \"DropDownWithSearch\":\r\n            var tempParam = null;\r\n            var deafultOption = (<Option name={field.displayName + \"_Option\"} key={tempParam} value={tempParam}>--Select--</Option>);\r\n            var allOptions = [deafultOption];\r\n            var options = [];\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                if (allData.selectOptions[field.attributeName.toLowerCase()] != undefined) {\r\n                    options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\r\n                        return (\r\n                            <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]}>\r\n                                {option[\"literal\"]}\r\n                            </Option>\r\n                        )\r\n                    });\r\n                }\r\n            }\r\n            allOptions = allOptions.concat(options);\r\n            return (<Select\r\n                aria-name={field.displayName}\r\n                placeholder={field.defaultValue}\r\n                tabIndex={0}\r\n                showSearch\r\n                disabled={(field.editable == 0)}\r\n                optionFilterProp=\"children\"\r\n                onChange={\r\n                    (value, node) => {\r\n\r\n                        fnForSelect(value, allData.props, field.attributeName, node);\r\n\r\n                    }\r\n                }\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} mode=\"single\" tabIndex={0}>\r\n                {allOptions}\r\n            </Select>);\r\n        case \"MultipleDropdown\":\r\n            var deafultOption = (<input value={null} >--Select--</input>);\r\n            var allOptions = field.attributeName == \"ByVariables\" ? [] : [deafultOption];\r\n            var options = [];\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\r\n                    return (\r\n                        <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]}>\r\n                            {option[\"literal\"]}\r\n                        </Option>\r\n                    )\r\n                });\r\n            }\r\n\r\n            allOptions = allOptions.concat(options);\r\n            if (field.formText == \"DataSetValidationRule\" && (field.attributeName == \"CDISCDataStdDomainMetadataID\" || field.attributeName == \"RuleApplicableLevel\")) {\r\n                return (<Select aria-name={field.displayName} tabIndex={0} disabled={(field.editable == 0)} placeholder=\"Select Key Variable\" mode={(field.attributeName == \"ByVariables\" || field.attributeName == \"CDISCDataStdDomainMetadataID\" || field.attributeName == \"CDISCDataStdDomainClassID\" || field.attributeName == \"RuleApplicableLevel\") ? \"multiple\" : \"tags\"} tabIndex={0} onChange={(value, node) => { fnForSelect(value, allData.props, field.attributeName, node) }} >\r\n                    {allOptions}\r\n                </Select>);\r\n            } else {\r\n                return (<Select aria-name={field.displayName} tabIndex={0} disabled={(field.editable == 0)} placeholder=\"Select Key Variable\" mode={(field.attributeName == \"ByVariables\" || field.attributeName == \"CDISCDataStdDomainMetadataID\" || field.attributeName == \"CDISCDataStdDomainClassID\") ? \"multiple\" : \"tags\"} tabIndex={0} >\r\n                    {allOptions}\r\n                </Select>);\r\n            }\r\n        case \"MultipleDrop\":\r\n            var deafultOption = (<input value={null} >--Select--</input>);\r\n            var allOptions = [deafultOption];\r\n            var options = [];\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                options = allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\r\n                    return (\r\n                        <Option name={field.displayName + \"_Option\"} key={option[\"keyValue\"]}>\r\n                            {option[\"literal\"]}\r\n                        </Option>\r\n                    )\r\n                });\r\n            }\r\n            allOptions = allOptions.concat(options);\r\n            return (<Select aria-name={field.displayName} tabIndex={0} disabled={(field.editable == 0)} placeholder=\"Select Key Variable\" mode=\"multiple\" tabIndex={0} >\r\n                {allOptions}\r\n            </Select>);\r\n        case \"CheckBox\":\r\n            return (<Checkbox tabIndex={0} key={field.attributeName} disabled={(field.editable == 0)}\r\n            >\r\n            </Checkbox>);\r\n        case \"RadioGroup\":\r\n            let plainOptions = [{ label: 'Number', value: 'Number' },\r\n            { label: 'Character', value: 'Character' }];\r\n            return (<Radio.Group options={plainOptions} tabIndex={0} key={field.attributeName} disabled={(field.editable == 0)}\r\n            >\r\n            </Radio.Group>);\r\n        case \"Switch\":\r\n            return (<Switch key={field.attributeName} disabled={(field.editable == 0)} onChange={(e) => { fnSwitch(e, allData.props, field.attributeName) }}\r\n                tabIndex={0}\r\n            >\r\n            </Switch>);\r\n        case \"FileSelect\":\r\n            let tempProp = allData.props.property;\r\n\r\n            if (tempProp.constructor.name == \"CreateStudyModal\" && field.attributeName.indexOf(\"Document\") != -1) {\r\n                return (<TreeSelect\r\n                    tabIndex={0}\r\n                    showSearch\r\n                    autoBlur={true}\r\n                    disabled={(field.editable == 0)}\r\n                    multiple={(field.inputTypeText == \"MultiBrowse\")}\r\n                    allowClear\r\n                    dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                    placeholder=\"Please Select\"\r\n                    treeDefaultExpandedKeys={[allData.treeDefaultExpandedKeys]}\r\n                    dropdownClassName={field.attributeName}\r\n                    onChange={(value, node, extra) => { fnFileSelect(value, node, extra, allData.props, field.attributeName) }}>\r\n                    {dependencyDDLValidation(tempProp, field.attributeName)}\r\n                </TreeSelect>)\r\n            }\r\n            else {\r\n                return (\r\n                    <TreeSelect\r\n                        tabIndex={0}\r\n                        showSearch\r\n                        autoBlur={true}\r\n                        disabled={(field.editable == 0)}\r\n                        multiple={(field.inputTypeText == \"MultiBrowse\")}\r\n                        allowClear\r\n                        dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                        placeholder=\"Please Select\"\r\n                        treeDefaultExpandedKeys={[allData.treeDefaultExpandedKeys]}\r\n                        dropdownClassName={field.attributeName}\r\n                        onChange={(value, node, extra) => { fnFileSelect(value, node, extra, allData.props, field.attributeName) }}>\r\n                        {(Object.keys(allData.treeData).length == 2) ? allData.treeData[(field.attributeName.indexOf(\"Document\") != -1) ? \"Document\" : \"Location\"] : allData.treeData}\r\n                    </TreeSelect>\r\n                );\r\n            }\r\n        case \"FolderSelect\":\r\n            return (<TreeSelect\r\n                showSearch\r\n                tabIndex={0}\r\n                disabled={(field.editable == 0)}\r\n                dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                placeholder=\"Please Select\">\r\n                {(Object.keys(allData.treeData).length == 2) ? allData.folderTreeData[(field.attributeName.indexOf(\"Document\") != -1) ? \"Document\" : \"Location\"] : allData.folderTreeData}\r\n            </TreeSelect>);\r\n        case \"SpecialTextBox\":\r\n            return (<Input tabIndex={0} style={{ width: \"calc(100% - 42px)\", height: \"50px\" }} placeholder={field.displayName} id={field.attributeName} disabled={(field.editable == 0)} />);\r\n        case \"SpecialSettings\":\r\n            return (<Input tabIndex={0} style={{ width: \"calc(100% - 132px)\", height: \"50px\" }} placeholder={field.displayName} id={field.attributeName} disabled={(field.attributeName != \"CommentDescription\") ? (field.editable == 0) : false} />);\r\n\r\n        case \"TextArea\":\r\n            return (<TextArea tabIndex={0} rows={2} size=\"small\" style={{ resize: \"none\" }} tabIndex={0} disabled={(field.editable == 0)} />);\r\n\r\n        case \"CustomBox\":\r\n            if (field.attributeName == 'VariableshavingValueLevels') {\r\n\r\n                return (\r\n                    <div id='VariableshavingValueLevels'>\r\n                        {\r\n                            allData.tableElement\r\n                        }\r\n                    </div>\r\n                );\r\n\r\n            }\r\n            break;\r\n\r\n        case \"SpecialCheckBox\":\r\n            return <Checkbox tabIndex={0} key={field.attributeName} disabled={(field.editable == 0)} />;\r\n        case \"FileBrowse\":\r\n            return (<Input tabIndex={0} type=\"file\" className=\"ant-input custom-file-input\" style={{ padding: \"0px\" }} accept=\".xml\" onChange={(e) => { fnForBrowse(e, allData.props, field.attributeName) }} />)\r\n\r\n        case \"File\":\r\n            return (<Input tabIndex={0} type=\"file\" className=\"ant-input custom-file-input\" style={{ padding: \"0px\" }} accept=\".xml\" onChange={(e) => { fnForBrowse(e, allData.props, field.attributeName) }} />)\r\n        case \"AutoComplete\": {\r\n            let dataSource = [];\r\n            if (allData.selectOptions != null && Object.keys(allData.selectOptions).length > 0) {\r\n                if (allData.selectOptions[field.attributeName.toLowerCase()] != undefined) {\r\n                    allData.selectOptions[field.attributeName.toLowerCase()].map(function (option) {\r\n                        dataSource.push({ text: option[\"literal\"], value: option[\"keyValue\"] })\r\n                    });\r\n                }\r\n            }\r\n            console.log(dataSource)\r\n            return (<AutoComplete\r\n                filterOption={(inputValue, option) =>\r\n                {\r\n                    try {\r\n                        let { children } = option.props || {};\r\n                        let text = typeof children == \"string\" ? children : \"\";\r\n                        return text.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                    catch (e) {\r\n                        return;\r\n                    }\r\n                }}\r\n                dataSource={dataSource}\r\n            />)\r\n        }\r\n        default:\r\n            return (<Input tabIndex={0} size=\"small\" placeholder={field.displayName} id={field.attributeName} disabled />);\r\n\r\n    }\r\n}\r\n\r\nfunction dependencyDDLValidation(prop, attrName) {\r\n    let whichTwo = [];\r\n    if (attrName == \"ProtocolDocument\") {\r\n        whichTwo.push(prop.props.form.getFieldsValue([\"CRFDocument\"]).CRFDocument);\r\n        whichTwo = whichTwo.concat(prop.props.form.getFieldsValue([\"StudyRelatedDocument\"]).StudyRelatedDocument)\r\n    } else if (attrName == \"CRFDocument\") {\r\n        whichTwo.push(prop.props.form.getFieldsValue([\"ProtocolDocument\"]).ProtocolDocument);\r\n        whichTwo = whichTwo.concat(prop.props.form.getFieldsValue([\"StudyRelatedDocument\"]).StudyRelatedDocument)\r\n    } else {\r\n        whichTwo.push(prop.props.form.getFieldsValue([\"ProtocolDocument\"]).ProtocolDocument);\r\n        whichTwo.push(prop.props.form.getFieldsValue([\"CRFDocument\"]).CRFDocument);\r\n    }\r\n    const datas = prop.state.responseData.folderTree.Document;\r\n    const loops = data =>\r\n        data.map(item => {\r\n            let temp = true;\r\n            whichTwo.forEach(function (vallidKey, validIndex) {\r\n\r\n                if (vallidKey == item.key) {\r\n                    temp = false;\r\n                }\r\n            })\r\n            if (item.children && temp) {\r\n                return (\r\n                    <TreeNode selectable={false} key={item.key} value={item.key} title={item.title}>\r\n                        {loops(item.children)}\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            else if (temp) {\r\n                return <TreeNode key={item.key} value={item.key} title={item.title} />;\r\n            }\r\n        });\r\n    return (loops([datas]));\r\n\r\n}\r\n\r\nexport function getRules(field, props, pageName) {\r\n\r\n    var allRules = [{ required: (field.inputRequirementText == 'Mandatory') ? true : false, message: field.requirementErrorMessage }];\r\n    var inputValidator = null;\r\n    var existValidator = null;\r\n\r\n    const noNeedValidation = [\"DocumentPath\", \"DropDown\", \"CheckBox\", \"FileSelect\", \"FolderSelect\", \"MultipleDropdown\", \"MultipleDrop\", \"Switch\", \"DropDownWithSearch\", \"RadioGroup\"];\r\n\r\n    if (noNeedValidation.indexOf(field.controlTypeText) < 0) {\r\n        //if (field.attributeName !== \"EmailAddress\") {\r\n        allRules.push({ min: field.minValue, message: field.validationErrorMessage });\r\n        allRules.push({ max: field.maxValue, message: field.validationErrorMessage });\r\n        //}\r\n        if (field.regExText !== null) {\r\n            switch (field.inputTypeText) {\r\n                case \"Alpha\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, regExPattern: field.regExText };\r\n                    break;\r\n                case \"Alphanumeric\":\r\n                    if (field.attributeName === \"FirstName\" || field.attributeName === \"LastName\") {\r\n                        inputValidator = { validator: validationOnlyForFirstAndLastName, message: field.inputTypeErrorMessage, regExPattern: field.regExText, callback: props.setDisplayName };\r\n\r\n                    } else {\r\n                        inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, regExPattern: field.regExText };\r\n                    }\r\n                    break;\r\n                case \"MobileNumber\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, regExPattern: field.regExText };\r\n                    break;\r\n                case \"PhoneNumber\":\r\n                    if (field.attributeName !== \"Telephone\") {\r\n                        inputValidator = {\r\n                            validator: dynamicValidation,\r\n                            message: field.inputTypeErrorMessage,\r\n                            regExPattern: field.regExText,\r\n                        };\r\n                    }\r\n                    break;\r\n                case \"Number\":\r\n                    if (field.attributeName === \"ConversionFactor\") {\r\n                        inputValidator = {\r\n                            validator: conversionFactorValidation,\r\n                            min: field.minValue,\r\n                            max: field.maxValue,\r\n                            validationMsg: field.validationErrorMessage,\r\n                            message: field.inputTypeErrorMessage,\r\n                            regExPattern: field.regExText\r\n                        };\r\n                    }\r\n                    else {\r\n                        inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, regExPattern: field.regExText };\r\n                    }\r\n                    break;\r\n                case \"EmailAddress\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, regExPattern: field.regExText, callback: props.setUserName };\r\n                    break;\r\n                case \"Password\":\r\n                    inputValidator = { validator: checkPassword, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                    break;\r\n                case \"AlphanumericDotSpecial\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, regExPattern: field.regExText };\r\n                    break;\r\n\r\n                case \"Positive\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                    break;\r\n                case \"Date\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                    break;\r\n                case \"AlphaNumericUnderscore\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                    break;\r\n                case \"AlphanumericSpecial\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                    break;\r\n                case \"ALLInputsAccepted\":\r\n                    inputValidator = { validator: dynamicValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                    break;\r\n                case \"StudyRelDocTitle\":\r\n                    inputValidator = { validator: studyRelDocTitleValidation, message: field.inputTypeErrorMessage, props: props, regExPattern: field.regExText };\r\n                    break;\r\n\r\n                default:\r\n                    inputValidator = null;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    else if (field.controlTypeText == \"DocumentPath\") {\r\n\r\n        if (field.inputRequirementText == 'Mandatory') {\r\n            inputValidator = { validator: checkSelectForStudyDocumentPath, message: field.requirementErrorMessage, props: props };\r\n        }\r\n    }\r\n    else if (field.controlTypeText == \"DropDown\" || field.controlTypeText == \"DropDownWithSearch\") {\r\n\r\n        if (field.inputRequirementText == 'Mandatory') {\r\n            inputValidator = { validator: checkSelect, message: field.requirementErrorMessage, props: props };\r\n        }\r\n    }\r\n    else if (field.controlTypeText == \"CheckBox\") {\r\n        if (field.inputRequirementText == 'Mandatory') {\r\n            inputValidator = { validator: checkCheckBox, message: field.requirementErrorMessage };\r\n        }\r\n    }\r\n    else if (field.controlTypeText == \"RadioGroup\") {\r\n        if (field.inputRequirementText == 'Mandatory') {\r\n            inputValidator = { validator: CheckRadioGroup, message: field.requirementErrorMessage };\r\n        }\r\n    }\r\n    if ([\"ProjectName\", \"UserName\", \"EmailAddress\", \"StudyName\",\r\n        \"ColumnName\", \"RoleName\", \"Name\", \"ObjectName\", \"DataStdRoleName\",\r\n        \"TermName\", \"ValueLevelVariable\", \"MacroName\", \"RuleID\", \"CodeListVersion\"].indexOf(field.attributeName) != -1 && field.formID !== 98 && field.formID !== 96) {\r\n        //let fieldValue = props.property !== undefined ? props.property.props.form.getFieldValue(field.attributeName) : props.props !== undefined ? props.props.form.getFieldValue(field.attributeName) : props.form.getFieldValue(field.attributeName);\r\n        //fieldValue = (fieldValue !== undefined && fieldValue !== null)  ? fieldValue : \"\";\r\n        //let fieldValueLength = fieldValue.length;\r\n        //if (fieldValueLength >= field.minValue && fieldValueLength <= field.maxValue) {\r\n        let PageName = pageName != undefined ? pageName : (props.property != undefined) ? props.property.constructor.name : \"\";\r\n        existValidator = { validator: checkExistOrNot, minVal: field.minValue, maxVal: field.maxValue, defaultValue: field.defaultValue, props: props, PageName: PageName };\r\n\r\n        // }\r\n    }\r\n    if (inputValidator != null) {\r\n        allRules.push(inputValidator);\r\n    }\r\n    if (existValidator != null) {\r\n        allRules.push(existValidator);\r\n    }\r\n    return allRules;\r\n\r\n}\r\n\r\nfunction fnFocusOut(e) {\r\n    document.getElementById(e.target.id).value = (e.target.value.split(\" \").sort(function (a, b) { return a - b })).toString().replace(/,/g, \" \");\r\n}\r\nfunction reset(field, e) {\r\n    if (field.currentTarget.id !== \"ConfirmPassword\") {\r\n        e.props.form.resetFields([\"ConfirmPassword\"]);\n    }\n\r\n}\r\nvar rightRule = (index) => {\r\n    return (index % 2 != 0);\r\n}\r\nvar leftRule = (index) => {\r\n    return (index % 2 == 0);\r\n}\r\nexport function formHTML(allData) {\r\n    return genFormItems(allData, leftRule);\r\n}\r\n\r\n\r\n\r\nfunction genFormItems(allData, condition) {\r\n    var formHTML = { right: [], left: [] }\r\n\r\n    if (allData.props !== undefined && allData.props.responseData !== undefined && allData.props.responseData.formData !== undefined &&\r\n        (allData.props.responseData.formData[0].formID === 100 || allData.props.responseData.formData[0].formID === 101)) {\r\n        formHTML = { right: [], center: [], left: [] }\r\n    }\r\n    var k = -1;\r\n    allData.formData.map(function (field) {\r\n        var position = \"left\";\r\n        if (field.tabIndex % 2 == 0) {\r\n            position = \"right\";\r\n        }\r\n\r\n        if (allData.props !== undefined && allData.props.responseData !== undefined && allData.props.responseData.formData !== undefined &&\r\n            (allData.props.responseData.formData[0].formID === 100 || allData.props.responseData.formData[0].formID === 101)) {\r\n            let pos = [\"left\", \"center\", \"right\"];\r\n\r\n            if (k == 2) {\r\n                k = 0;\r\n            } else {\r\n                k++;\r\n            }\r\n            position = pos[k];\r\n        }\r\n\r\n\r\n        let defaultValue = null;\r\n        if (field.controlTypeText == \"CheckBox\" || field.controlTypeText == \"RadioGroup\" || field.controlTypeText == \"SpecialCheckBox\" || field.controlTypeText == \"Switch\") {\r\n            defaultValue = false;\r\n            if (field.defaultValue == \"True\" || field.defaultValue == \"true\" || field.defaultValue == true) {\r\n                defaultValue = true;\r\n            }\r\n        } else {\r\n            if (field.defaultValue != null && field.defaultValue.trim() != '') {\r\n                defaultValue = field.defaultValue;\r\n            }\r\n        }\r\n\r\n        formHTML[position].push(\r\n            (field.controlTypeText == \"FileBrowse\") ?\r\n                (\r\n                    <FormItem\r\n                        key={field.attributeName}\r\n                    >\r\n                        <Upload field={field} props={allData} disabled={field.editable} format={allData.props.state.format} pageName={allData.props.state.pageName} id={field.attributeName} defaultValue={defaultValue} />\r\n                    </FormItem>\r\n                ) :\r\n                (field.attributeName == \"Telephone\") ?\r\n                    (\r\n                        <FormItem\r\n                            key={field.attributeName}\r\n                        >\r\n\r\n                            <Telephone\r\n                                getFieldDecorator={allData.getFieldDecorator}\r\n                                allData={allData}\r\n                                field={field}\r\n                                SelCountry={fnTogetSelCountry(allData)}\r\n                            />\r\n                        </FormItem>\r\n                    )\r\n                    :\r\n                    <FormItem\r\n                        key={field.attributeName}\r\n                        label={field.displayName}\r\n                    >\r\n                        {\r\n\r\n                            (field.inputTypeText == \"Password\") ?\r\n                                (\r\n                                    <form>\r\n                                        {\r\n                                            (allData.getFieldDecorator(field.attributeName, {\r\n                                                rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                                //validateTrigger: ['onKeyup', 'onBlur'],\r\n                                                initialValue: defaultValue,\r\n\r\n                                                valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value',\r\n                                            })(getFormField(field, allData)))\r\n                                        }\r\n                                    </form>\r\n\r\n                                )\r\n                                :\r\n                                (field.controlTypeText == \"DropDownWithSearch\") ?\r\n                                    (\r\n                                        (allData.getFieldDecorator(field.attributeName, {\r\n                                            rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                            //validateTrigger: ['onKeyup', 'onBlur'],\r\n                                            initialValue: defaultValue,\r\n\r\n                                            valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value',\r\n                                        })(getFormField(field, allData))))\r\n                                    :\r\n                                    (field.controlTypeText == \"MultipleDropdown\" || field.controlTypeText == \"FileSelect\" || field.controlTypeText == \"MultipleDrop\") ?\r\n                                        (\r\n\r\n                                            allData.getFieldDecorator((field.controlTypeText == \"MultipleDrop\" || field.controlTypeText == \"MultipleDropdown\") ? field.attributeName : field.displayName.replace(/ /g, \"\"), {\r\n                                                rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n\r\n                                                initialValue: (defaultValue != null) ? defaultValue.split(\",\") : []\r\n                                            })(getFormField(field, allData)))\r\n                                        : (allData.getFieldDecorator(field.attributeName, {\r\n                                            rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                            initialValue: defaultValue,\r\n\r\n                                            //validateTrigger: ['onKeyup', 'onBlur'],\r\n                                            valuePropName: (field.controlTypeText == \"CheckBox\" || field.controlTypeText == \"Switch\" || field.controlTypeText == \"RadioGroup\") ? 'checked' : 'value',\r\n                                        })(getFormField(field, allData)))\r\n                        }\r\n\r\n                    </FormItem >\r\n        );\r\n\r\n\r\n\r\n        function fnSpecialText(field, defaultValue) {\r\n            return (\r\n                <div>\r\n                    <span>\r\n                        {\r\n                            allData.getFieldDecorator(field.attributeName, {\r\n                                rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                initialValue: defaultValue,\r\n                                //validateTrigger: ['onKeyup', 'onBlur'],\r\n                                valuePropName: field.controlTypeText == \"CheckBox\" ? 'checked' : 'value'\r\n                            })(\r\n                                getFormField(field, allData)\r\n\r\n                            )\r\n                        }\r\n                    </span>\r\n                    <span>\r\n                        <Button type=\"primary\" icon=\"setting\" id={field.attributeName + \"Confirm\"} style={{ marginLeft: \"10px\" }} disabled={(field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\")}  ></Button>\r\n                    </span>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n        function fnSpecialSettings(field, defaultValue) {\r\n            return (\r\n                <div>\r\n                    <span>\r\n                        <span>\r\n                            {\r\n                                (field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\") ?\r\n                                    <Checkbox id={field.attributeName + \"CheckBox\"} checked={false} disabled={true}>\r\n                                    </Checkbox> :\r\n                                    <Checkbox id={field.attributeName + \"CheckBox\"}>\r\n                                    </Checkbox>\r\n                            }<span>Common</span></span>\r\n                        <span>\r\n                            {\r\n                                allData.getFieldDecorator(field.attributeName, {\r\n                                    rules: (field.editable == true ? getRules(field, allData.props) : \"\"),\r\n                                    initialValue: defaultValue,\r\n                                    //validateTrigger: ['onKeyup', 'onBlur'],\r\n                                })(getFormField(field, allData))\r\n                            }\r\n                        </span>\r\n                        <span>\r\n                            <Button type=\"primary\" icon=\"setting\" id={field.attributeName + \"Confirm\"} style={{ marginLeft: \"10px\" }} disabled={(field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\")}  ></Button>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        function fnSpecialCheck(field, defaultValue) {\r\n            var width = \"calc(100% - 83px)\";\r\n            var disabled;\r\n            var value;\r\n\r\n            if (field.attributeName == \"ValueListID\") {\r\n                var width = \"calc(100% - 125px)\";\r\n                if (field.defaultValue == false || field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\") {\r\n                    disabled = true;\r\n                }\r\n                else {\r\n                    disabled = false;\r\n\r\n                }\r\n            }\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <span>\r\n                        <span>\r\n                            {\r\n                                allData.getFieldDecorator(field.attributeName, {\r\n                                    initialValue: defaultValue,\r\n                                })(\r\n                                    getFormField(field, allData)\r\n                                )\r\n                            }<span>External</span></span>\r\n\r\n                    </span>\r\n                    <span>\r\n                        {\r\n                            (field.attributeName == \"ValueListID\") ?\r\n                                (<Input size=\"small\" style={{ width: width }} placeholder={field.displayName} id={field.attributeName + \"Text\"} disabled={disabled} />)\r\n                                :\r\n                                (<Input size=\"small\" style={{ width: width }} placeholder={field.displayName} id={field.attributeName + \"Text\"} />)\r\n                        }\r\n                    </span>\r\n                    {\r\n                        (field.attributeName == \"ValueListID\") ?\r\n                            <span>\r\n                                <Button type=\"primary\" icon=\"setting\" id={field.attributeName + \"Confirm\"} style={{ marginLeft: \"10px\" }} disabled={(field.defaultValue == false || field.defaultValue == null || field.defaultValue == '' || field.defaultValue == \"\")} ></Button>\r\n                            </span> : \"\"\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n\r\n    });\r\n    return formHTML;\r\n\r\n}\r\n\r\nfunction fnTogetSelCountry(alldata) {\r\n    let { country, form } = alldata.props;\r\n    let countryID = form.getFieldValue(\"CountryID\");\r\n\r\n    let selCountry = country.find(c => c.countryID == countryID);\n    if (selCountry && typeof selCountry === \"object\") {\r\n        return selCountry.countryAbbreviation;\r\n    } else {\r\n        return \"IN\";\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}