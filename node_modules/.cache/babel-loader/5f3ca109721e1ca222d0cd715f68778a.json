{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range, SelectionRange } from '../jsonLanguageTypes.js';\nimport { createScanner } from './../../jsonc-parser/main.js';\nexport function getSelectionRanges(document, positions, doc) {\n  function getSelectionRange(position) {\n    var offset = document.offsetAt(position);\n    var node = doc.getNodeFromOffset(offset, true);\n    var result = [];\n    while (node) {\n      switch (node.type) {\n        case 'string':\n        case 'object':\n        case 'array':\n          // range without \", [ or {\n          var cStart = node.offset + 1,\n            cEnd = node.offset + node.length - 1;\n          if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n            result.push(newRange(cStart, cEnd));\n          }\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n        case 'number':\n        case 'boolean':\n        case 'null':\n        case 'property':\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n      }\n      if (node.type === 'property' || node.parent && node.parent.type === 'array') {\n        var afterCommaOffset = getOffsetAfterNextToken(node.offset + node.length, 5 /* CommaToken */);\n        if (afterCommaOffset !== -1) {\n          result.push(newRange(node.offset, afterCommaOffset));\n        }\n      }\n      node = node.parent;\n    }\n    var current = undefined;\n    for (var index = result.length - 1; index >= 0; index--) {\n      current = SelectionRange.create(result[index], current);\n    }\n    if (!current) {\n      current = SelectionRange.create(Range.create(position, position));\n    }\n    return current;\n  }\n  function newRange(start, end) {\n    return Range.create(document.positionAt(start), document.positionAt(end));\n  }\n  var scanner = createScanner(document.getText(), true);\n  function getOffsetAfterNextToken(offset, expectedToken) {\n    scanner.setPosition(offset);\n    var token = scanner.scan();\n    if (token === expectedToken) {\n      return scanner.getTokenOffset() + scanner.getTokenLength();\n    }\n    return -1;\n  }\n  return positions.map(getSelectionRange);\n}","map":{"version":3,"names":["Range","SelectionRange","createScanner","getSelectionRanges","document","positions","doc","getSelectionRange","position","offset","offsetAt","node","getNodeFromOffset","result","type","cStart","cEnd","length","push","newRange","parent","afterCommaOffset","getOffsetAfterNextToken","current","undefined","index","create","start","end","positionAt","scanner","getText","expectedToken","setPosition","token","scan","getTokenOffset","getTokenLength","map"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSelectionRanges.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range, SelectionRange } from '../jsonLanguageTypes.js';\nimport { createScanner } from './../../jsonc-parser/main.js';\nexport function getSelectionRanges(document, positions, doc) {\n    function getSelectionRange(position) {\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset, true);\n        var result = [];\n        while (node) {\n            switch (node.type) {\n                case 'string':\n                case 'object':\n                case 'array':\n                    // range without \", [ or {\n                    var cStart = node.offset + 1, cEnd = node.offset + node.length - 1;\n                    if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n                        result.push(newRange(cStart, cEnd));\n                    }\n                    result.push(newRange(node.offset, node.offset + node.length));\n                    break;\n                case 'number':\n                case 'boolean':\n                case 'null':\n                case 'property':\n                    result.push(newRange(node.offset, node.offset + node.length));\n                    break;\n            }\n            if (node.type === 'property' || node.parent && node.parent.type === 'array') {\n                var afterCommaOffset = getOffsetAfterNextToken(node.offset + node.length, 5 /* CommaToken */);\n                if (afterCommaOffset !== -1) {\n                    result.push(newRange(node.offset, afterCommaOffset));\n                }\n            }\n            node = node.parent;\n        }\n        var current = undefined;\n        for (var index = result.length - 1; index >= 0; index--) {\n            current = SelectionRange.create(result[index], current);\n        }\n        if (!current) {\n            current = SelectionRange.create(Range.create(position, position));\n        }\n        return current;\n    }\n    function newRange(start, end) {\n        return Range.create(document.positionAt(start), document.positionAt(end));\n    }\n    var scanner = createScanner(document.getText(), true);\n    function getOffsetAfterNextToken(offset, expectedToken) {\n        scanner.setPosition(offset);\n        var token = scanner.scan();\n        if (token === expectedToken) {\n            return scanner.getTokenOffset() + scanner.getTokenLength();\n        }\n        return -1;\n    }\n    return positions.map(getSelectionRange);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}