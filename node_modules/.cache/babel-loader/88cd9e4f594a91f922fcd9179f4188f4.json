{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n  return r;\n};\nimport { TokenType, Scanner } from './cssScanner.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js';\nimport * as languageFacts from '../languageFacts/facts.js';\nimport { isDefined } from '../utils/objects.js';\n/// <summary>\n/// A parser for the css core specification. See for reference:\n/// https://www.w3.org/TR/CSS21/grammar.html\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\nvar Parser = /** @class */function () {\n  function Parser(scnr) {\n    if (scnr === void 0) {\n      scnr = new Scanner();\n    }\n    this.keyframeRegex = /^@(\\-(webkit|ms|moz|o)\\-)?keyframes$/i;\n    this.scanner = scnr;\n    this.token = {\n      type: TokenType.EOF,\n      offset: -1,\n      len: 0,\n      text: ''\n    };\n    this.prevToken = undefined;\n  }\n  Parser.prototype.peekIdent = function (text) {\n    return TokenType.Ident === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n  };\n  Parser.prototype.peekKeyword = function (text) {\n    return TokenType.AtKeyword === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n  };\n  Parser.prototype.peekDelim = function (text) {\n    return TokenType.Delim === this.token.type && text === this.token.text;\n  };\n  Parser.prototype.peek = function (type) {\n    return type === this.token.type;\n  };\n  Parser.prototype.peekRegExp = function (type, regEx) {\n    if (type !== this.token.type) {\n      return false;\n    }\n    return regEx.test(this.token.text);\n  };\n  Parser.prototype.hasWhitespace = function () {\n    return !!this.prevToken && this.prevToken.offset + this.prevToken.len !== this.token.offset;\n  };\n  Parser.prototype.consumeToken = function () {\n    this.prevToken = this.token;\n    this.token = this.scanner.scan();\n  };\n  Parser.prototype.mark = function () {\n    return {\n      prev: this.prevToken,\n      curr: this.token,\n      pos: this.scanner.pos()\n    };\n  };\n  Parser.prototype.restoreAtMark = function (mark) {\n    this.prevToken = mark.prev;\n    this.token = mark.curr;\n    this.scanner.goBackTo(mark.pos);\n  };\n  Parser.prototype.try = function (func) {\n    var pos = this.mark();\n    var node = func();\n    if (!node) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    return node;\n  };\n  Parser.prototype.acceptOneKeyword = function (keywords) {\n    if (TokenType.AtKeyword === this.token.type) {\n      for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {\n        var keyword = keywords_1[_i];\n        if (keyword.length === this.token.text.length && keyword === this.token.text.toLowerCase()) {\n          this.consumeToken();\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Parser.prototype.accept = function (type) {\n    if (type === this.token.type) {\n      this.consumeToken();\n      return true;\n    }\n    return false;\n  };\n  Parser.prototype.acceptIdent = function (text) {\n    if (this.peekIdent(text)) {\n      this.consumeToken();\n      return true;\n    }\n    return false;\n  };\n  Parser.prototype.acceptKeyword = function (text) {\n    if (this.peekKeyword(text)) {\n      this.consumeToken();\n      return true;\n    }\n    return false;\n  };\n  Parser.prototype.acceptDelim = function (text) {\n    if (this.peekDelim(text)) {\n      this.consumeToken();\n      return true;\n    }\n    return false;\n  };\n  Parser.prototype.acceptRegexp = function (regEx) {\n    if (regEx.test(this.token.text)) {\n      this.consumeToken();\n      return true;\n    }\n    return false;\n  };\n  Parser.prototype._parseRegexp = function (regEx) {\n    var node = this.createNode(nodes.NodeType.Identifier);\n    do {} while (this.acceptRegexp(regEx));\n    return this.finish(node);\n  };\n  Parser.prototype.acceptUnquotedString = function () {\n    var pos = this.scanner.pos();\n    this.scanner.goBackTo(this.token.offset);\n    var unquoted = this.scanner.scanUnquotedString();\n    if (unquoted) {\n      this.token = unquoted;\n      this.consumeToken();\n      return true;\n    }\n    this.scanner.goBackTo(pos);\n    return false;\n  };\n  Parser.prototype.resync = function (resyncTokens, resyncStopTokens) {\n    while (true) {\n      if (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n        this.consumeToken();\n        return true;\n      } else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n        return true;\n      } else {\n        if (this.token.type === TokenType.EOF) {\n          return false;\n        }\n        this.token = this.scanner.scan();\n      }\n    }\n  };\n  Parser.prototype.createNode = function (nodeType) {\n    return new nodes.Node(this.token.offset, this.token.len, nodeType);\n  };\n  Parser.prototype.create = function (ctor) {\n    return new ctor(this.token.offset, this.token.len);\n  };\n  Parser.prototype.finish = function (node, error, resyncTokens, resyncStopTokens) {\n    // parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n    // + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n    if (!(node instanceof nodes.Nodelist)) {\n      if (error) {\n        this.markError(node, error, resyncTokens, resyncStopTokens);\n      }\n      // set the node end position\n      if (this.prevToken) {\n        // length with more elements belonging together\n        var prevEnd = this.prevToken.offset + this.prevToken.len;\n        node.length = prevEnd > node.offset ? prevEnd - node.offset : 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n      }\n    }\n\n    return node;\n  };\n  Parser.prototype.markError = function (node, error, resyncTokens, resyncStopTokens) {\n    if (this.token !== this.lastErrorToken) {\n      // do not report twice on the same token\n      node.addIssue(new nodes.Marker(node, error, nodes.Level.Error, undefined, this.token.offset, this.token.len));\n      this.lastErrorToken = this.token;\n    }\n    if (resyncTokens || resyncStopTokens) {\n      this.resync(resyncTokens, resyncStopTokens);\n    }\n  };\n  Parser.prototype.parseStylesheet = function (textDocument) {\n    var versionId = textDocument.version;\n    var text = textDocument.getText();\n    var textProvider = function textProvider(offset, length) {\n      if (textDocument.version !== versionId) {\n        throw new Error('Underlying model has changed, AST is no longer valid');\n      }\n      return text.substr(offset, length);\n    };\n    return this.internalParse(text, this._parseStylesheet, textProvider);\n  };\n  Parser.prototype.internalParse = function (input, parseFunc, textProvider) {\n    this.scanner.setSource(input);\n    this.token = this.scanner.scan();\n    var node = parseFunc.bind(this)();\n    if (node) {\n      if (textProvider) {\n        node.textProvider = textProvider;\n      } else {\n        node.textProvider = function (offset, length) {\n          return input.substr(offset, length);\n        };\n      }\n    }\n    return node;\n  };\n  Parser.prototype._parseStylesheet = function () {\n    var node = this.create(nodes.Stylesheet);\n    while (node.addChild(this._parseStylesheetStart())) {\n      // Parse statements only valid at the beginning of stylesheets.\n    }\n    var inRecovery = false;\n    do {\n      var hasMatch = false;\n      do {\n        hasMatch = false;\n        var statement = this._parseStylesheetStatement();\n        if (statement) {\n          node.addChild(statement);\n          hasMatch = true;\n          inRecovery = false;\n          if (!this.peek(TokenType.EOF) && this._needsSemicolonAfter(statement) && !this.accept(TokenType.SemiColon)) {\n            this.markError(node, ParseError.SemiColonExpected);\n          }\n        }\n        while (this.accept(TokenType.SemiColon) || this.accept(TokenType.CDO) || this.accept(TokenType.CDC)) {\n          // accept empty statements\n          hasMatch = true;\n          inRecovery = false;\n        }\n      } while (hasMatch);\n      if (this.peek(TokenType.EOF)) {\n        break;\n      }\n      if (!inRecovery) {\n        if (this.peek(TokenType.AtKeyword)) {\n          this.markError(node, ParseError.UnknownAtRule);\n        } else {\n          this.markError(node, ParseError.RuleOrSelectorExpected);\n        }\n        inRecovery = true;\n      }\n      this.consumeToken();\n    } while (!this.peek(TokenType.EOF));\n    return this.finish(node);\n  };\n  Parser.prototype._parseStylesheetStart = function () {\n    return this._parseCharset();\n  };\n  Parser.prototype._parseStylesheetStatement = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseStylesheetAtStatement(isNested);\n    }\n    return this._parseRuleset(isNested);\n  };\n  Parser.prototype._parseStylesheetAtStatement = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    return this._parseImport() || this._parseMedia(isNested) || this._parsePage() || this._parseFontFace() || this._parseKeyframe() || this._parseSupports(isNested) || this._parseViewPort() || this._parseNamespace() || this._parseDocument() || this._parseUnknownAtRule();\n  };\n  Parser.prototype._tryParseRuleset = function (isNested) {\n    var mark = this.mark();\n    if (this._parseSelector(isNested)) {\n      while (this.accept(TokenType.Comma) && this._parseSelector(isNested)) {\n        // loop\n      }\n      if (this.accept(TokenType.CurlyL)) {\n        this.restoreAtMark(mark);\n        return this._parseRuleset(isNested);\n      }\n    }\n    this.restoreAtMark(mark);\n    return null;\n  };\n  Parser.prototype._parseRuleset = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    var node = this.create(nodes.RuleSet);\n    var selectors = node.getSelectors();\n    if (!selectors.addChild(this._parseSelector(isNested))) {\n      return null;\n    }\n    while (this.accept(TokenType.Comma)) {\n      if (!selectors.addChild(this._parseSelector(isNested))) {\n        return this.finish(node, ParseError.SelectorExpected);\n      }\n    }\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n  Parser.prototype._parseRuleSetDeclaration = function () {\n    // https://www.w3.org/TR/css-syntax-3/#consume-a-list-of-declarations0\n    return this._parseAtApply() || this._tryParseCustomPropertyDeclaration() || this._parseDeclaration() || this._parseUnknownAtRule();\n  };\n  /**\n   * Parses declarations like:\n   *   @apply --my-theme;\n   *\n   * Follows https://tabatkins.github.io/specs/css-apply-rule/#using\n   */\n  Parser.prototype._parseAtApply = function () {\n    if (!this.peekKeyword('@apply')) {\n      return null;\n    }\n    var node = this.create(nodes.AtApplyRule);\n    this.consumeToken();\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Variable]))) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._needsSemicolonAfter = function (node) {\n    switch (node.type) {\n      case nodes.NodeType.Keyframe:\n      case nodes.NodeType.ViewPort:\n      case nodes.NodeType.Media:\n      case nodes.NodeType.Ruleset:\n      case nodes.NodeType.Namespace:\n      case nodes.NodeType.If:\n      case nodes.NodeType.For:\n      case nodes.NodeType.Each:\n      case nodes.NodeType.While:\n      case nodes.NodeType.MixinDeclaration:\n      case nodes.NodeType.FunctionDeclaration:\n        return false;\n      case nodes.NodeType.ExtendsReference:\n      case nodes.NodeType.MixinContent:\n      case nodes.NodeType.ReturnStatement:\n      case nodes.NodeType.MediaQuery:\n      case nodes.NodeType.Debug:\n      case nodes.NodeType.Import:\n      case nodes.NodeType.AtApplyRule:\n      case nodes.NodeType.CustomPropertyDeclaration:\n        return true;\n      case nodes.NodeType.VariableDeclaration:\n        return node.needsSemicolon;\n      case nodes.NodeType.MixinReference:\n        return !node.getContent();\n      case nodes.NodeType.Declaration:\n        return !node.getNestedProperties();\n    }\n    return false;\n  };\n  Parser.prototype._parseDeclarations = function (parseDeclaration) {\n    var node = this.create(nodes.Declarations);\n    if (!this.accept(TokenType.CurlyL)) {\n      return null;\n    }\n    var decl = parseDeclaration();\n    while (node.addChild(decl)) {\n      if (this.peek(TokenType.CurlyR)) {\n        break;\n      }\n      if (this._needsSemicolonAfter(decl) && !this.accept(TokenType.SemiColon)) {\n        return this.finish(node, ParseError.SemiColonExpected, [TokenType.SemiColon, TokenType.CurlyR]);\n      }\n      // We accepted semicolon token. Link it to declaration.\n      if (decl && this.prevToken && this.prevToken.type === TokenType.SemiColon) {\n        decl.semicolonPosition = this.prevToken.offset;\n      }\n      while (this.accept(TokenType.SemiColon)) {\n        // accept empty statements\n      }\n      decl = parseDeclaration();\n    }\n    if (!this.accept(TokenType.CurlyR)) {\n      return this.finish(node, ParseError.RightCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseBody = function (node, parseDeclaration) {\n    if (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n      return this.finish(node, ParseError.LeftCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseSelector = function (isNested) {\n    var node = this.create(nodes.Selector);\n    var hasContent = false;\n    if (isNested) {\n      // nested selectors can start with a combinator\n      hasContent = node.addChild(this._parseCombinator());\n    }\n    while (node.addChild(this._parseSimpleSelector())) {\n      hasContent = true;\n      node.addChild(this._parseCombinator()); // optional\n    }\n\n    return hasContent ? this.finish(node) : null;\n  };\n  Parser.prototype._parseDeclaration = function (resyncStopTokens) {\n    var node = this.create(nodes.Declaration);\n    if (!node.setProperty(this._parseProperty())) {\n      return null;\n    }\n    if (!this.accept(TokenType.Colon)) {\n      var stopTokens = resyncStopTokens ? __spreadArrays(resyncStopTokens, [TokenType.SemiColon]) : [TokenType.SemiColon];\n      return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], stopTokens);\n    }\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n    if (!node.setValue(this._parseExpr())) {\n      return this.finish(node, ParseError.PropertyValueExpected);\n    }\n    node.addChild(this._parsePrio());\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n  Parser.prototype._tryParseCustomPropertyDeclaration = function () {\n    if (!this.peekRegExp(TokenType.Ident, /^--/)) {\n      return null;\n    }\n    var node = this.create(nodes.CustomPropertyDeclaration);\n    if (!node.setProperty(this._parseProperty())) {\n      return null;\n    }\n    if (!this.accept(TokenType.Colon)) {\n      return this.finish(node, ParseError.ColonExpected, [TokenType.Colon]);\n    }\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n    var mark = this.mark();\n    if (this.peek(TokenType.CurlyL)) {\n      // try to parse it as nested declaration\n      var propertySet = this.create(nodes.CustomPropertySet);\n      var declarations = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));\n      if (propertySet.setDeclarations(declarations) && !declarations.isErroneous(true)) {\n        propertySet.addChild(this._parsePrio());\n        if (this.peek(TokenType.SemiColon)) {\n          this.finish(propertySet);\n          node.setPropertySet(propertySet);\n          node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n          return this.finish(node);\n        }\n      }\n      this.restoreAtMark(mark);\n    }\n    // try tp parse as expression\n    var expression = this._parseExpr();\n    if (expression && !expression.isErroneous(true)) {\n      this._parsePrio();\n      if (this.peek(TokenType.SemiColon)) {\n        node.setValue(expression);\n        node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        return this.finish(node);\n      }\n    }\n    this.restoreAtMark(mark);\n    node.addChild(this._parseCustomPropertyValue());\n    node.addChild(this._parsePrio());\n    if (isDefined(node.colonPosition) && this.token.offset === node.colonPosition + 1) {\n      return this.finish(node, ParseError.PropertyValueExpected);\n    }\n    return this.finish(node);\n  };\n  /**\n   * Parse custom property values.\n   *\n   * Based on https://www.w3.org/TR/css-variables/#syntax\n   *\n   * This code is somewhat unusual, as the allowed syntax is incredibly broad,\n   * parsing almost any sequence of tokens, save for a small set of exceptions.\n   * Unbalanced delimitors, invalid tokens, and declaration\n   * terminators like semicolons and !important directives (when not inside\n   * of delimitors).\n   */\n  Parser.prototype._parseCustomPropertyValue = function () {\n    var node = this.create(nodes.Node);\n    var isTopLevel = function isTopLevel() {\n      return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0;\n    };\n    var curlyDepth = 0;\n    var parensDepth = 0;\n    var bracketsDepth = 0;\n    done: while (true) {\n      switch (this.token.type) {\n        case TokenType.SemiColon:\n          // A semicolon only ends things if we're not inside a delimitor.\n          if (isTopLevel()) {\n            break done;\n          }\n          break;\n        case TokenType.Exclamation:\n          // An exclamation ends the value if we're not inside delims.\n          if (isTopLevel()) {\n            break done;\n          }\n          break;\n        case TokenType.CurlyL:\n          curlyDepth++;\n          break;\n        case TokenType.CurlyR:\n          curlyDepth--;\n          if (curlyDepth < 0) {\n            // The property value has been terminated without a semicolon, and\n            // this is the last declaration in the ruleset.\n            if (parensDepth === 0 && bracketsDepth === 0) {\n              break done;\n            }\n            return this.finish(node, ParseError.LeftCurlyExpected);\n          }\n          break;\n        case TokenType.ParenthesisL:\n          parensDepth++;\n          break;\n        case TokenType.ParenthesisR:\n          parensDepth--;\n          if (parensDepth < 0) {\n            return this.finish(node, ParseError.LeftParenthesisExpected);\n          }\n          break;\n        case TokenType.BracketL:\n          bracketsDepth++;\n          break;\n        case TokenType.BracketR:\n          bracketsDepth--;\n          if (bracketsDepth < 0) {\n            return this.finish(node, ParseError.LeftSquareBracketExpected);\n          }\n          break;\n        case TokenType.BadString:\n          // fall through\n          break done;\n        case TokenType.EOF:\n          // We shouldn't have reached the end of input, something is\n          // unterminated.\n          var error = ParseError.RightCurlyExpected;\n          if (bracketsDepth > 0) {\n            error = ParseError.RightSquareBracketExpected;\n          } else if (parensDepth > 0) {\n            error = ParseError.RightParenthesisExpected;\n          }\n          return this.finish(node, error);\n      }\n      this.consumeToken();\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._tryToParseDeclaration = function () {\n    var mark = this.mark();\n    if (this._parseProperty() && this.accept(TokenType.Colon)) {\n      // looks like a declaration, go ahead\n      this.restoreAtMark(mark);\n      return this._parseDeclaration();\n    }\n    this.restoreAtMark(mark);\n    return null;\n  };\n  Parser.prototype._parseProperty = function () {\n    var node = this.create(nodes.Property);\n    var mark = this.mark();\n    if (this.acceptDelim('*') || this.acceptDelim('_')) {\n      // support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n      if (this.hasWhitespace()) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n    if (node.setIdentifier(this._parsePropertyIdentifier())) {\n      return this.finish(node);\n    }\n    return null;\n  };\n  Parser.prototype._parsePropertyIdentifier = function () {\n    return this._parseIdent();\n  };\n  Parser.prototype._parseCharset = function () {\n    if (!this.peek(TokenType.Charset)) {\n      return null;\n    }\n    var node = this.create(nodes.Node);\n    this.consumeToken(); // charset\n    if (!this.accept(TokenType.String)) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n    if (!this.accept(TokenType.SemiColon)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseImport = function () {\n    if (!this.peekKeyword('@import')) {\n      return null;\n    }\n    var node = this.create(nodes.Import);\n    this.consumeToken(); // @import\n    if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.URIOrStringExpected);\n    }\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      node.setMedialist(this._parseMediaQueryList());\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseNamespace = function () {\n    // http://www.w3.org/TR/css3-namespace/\n    // namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n    if (!this.peekKeyword('@namespace')) {\n      return null;\n    }\n    var node = this.create(nodes.Namespace);\n    this.consumeToken(); // @namespace\n    if (!node.addChild(this._parseURILiteral())) {\n      // url literal also starts with ident\n      node.addChild(this._parseIdent()); // optional prefix\n      if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n        return this.finish(node, ParseError.URIExpected, [TokenType.SemiColon]);\n      }\n    }\n    if (!this.accept(TokenType.SemiColon)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseFontFace = function () {\n    if (!this.peekKeyword('@font-face')) {\n      return null;\n    }\n    var node = this.create(nodes.FontFace);\n    this.consumeToken(); // @font-face\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n  Parser.prototype._parseViewPort = function () {\n    if (!this.peekKeyword('@-ms-viewport') && !this.peekKeyword('@-o-viewport') && !this.peekKeyword('@viewport')) {\n      return null;\n    }\n    var node = this.create(nodes.ViewPort);\n    this.consumeToken(); // @-ms-viewport\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n  Parser.prototype._parseKeyframe = function () {\n    if (!this.peekRegExp(TokenType.AtKeyword, this.keyframeRegex)) {\n      return null;\n    }\n    var node = this.create(nodes.Keyframe);\n    var atNode = this.create(nodes.Node);\n    this.consumeToken(); // atkeyword\n    node.setKeyword(this.finish(atNode));\n    if (atNode.matches('@-ms-keyframes')) {\n      // -ms-keyframes never existed\n      this.markError(atNode, ParseError.UnknownKeyword);\n    }\n    if (!node.setIdentifier(this._parseKeyframeIdent())) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    }\n    return this._parseBody(node, this._parseKeyframeSelector.bind(this));\n  };\n  Parser.prototype._parseKeyframeIdent = function () {\n    return this._parseIdent([nodes.ReferenceType.Keyframe]);\n  };\n  Parser.prototype._parseKeyframeSelector = function () {\n    var node = this.create(nodes.KeyframeSelector);\n    if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n      return null;\n    }\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n        return this.finish(node, ParseError.PercentageExpected);\n      }\n    }\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n  Parser.prototype._tryParseKeyframeSelector = function () {\n    var node = this.create(nodes.KeyframeSelector);\n    var pos = this.mark();\n    if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n      return null;\n    }\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n        this.restoreAtMark(pos);\n        return null;\n      }\n    }\n    if (!this.peek(TokenType.CurlyL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n  Parser.prototype._parseSupports = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    // SUPPORTS_SYM S* supports_condition '{' S* ruleset* '}' S*\n    if (!this.peekKeyword('@supports')) {\n      return null;\n    }\n    var node = this.create(nodes.Supports);\n    this.consumeToken(); // @supports\n    node.addChild(this._parseSupportsCondition());\n    return this._parseBody(node, this._parseSupportsDeclaration.bind(this, isNested));\n  };\n  Parser.prototype._parseSupportsDeclaration = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    if (isNested) {\n      // if nested, the body can contain rulesets, but also declarations\n      return this._tryParseRuleset(true) || this._tryToParseDeclaration() || this._parseStylesheetStatement(true);\n    }\n    return this._parseStylesheetStatement(false);\n  };\n  Parser.prototype._parseSupportsCondition = function () {\n    // supports_condition : supports_negation | supports_conjunction | supports_disjunction | supports_condition_in_parens ;\n    // supports_condition_in_parens: ( '(' S* supports_condition S* ')' ) | supports_declaration_condition | general_enclosed ;\n    // supports_negation: NOT S+ supports_condition_in_parens ;\n    // supports_conjunction: supports_condition_in_parens ( S+ AND S+ supports_condition_in_parens )+;\n    // supports_disjunction: supports_condition_in_parens ( S+ OR S+ supports_condition_in_parens )+;\n    // supports_declaration_condition: '(' S* declaration ')';\n    // general_enclosed: ( FUNCTION | '(' ) ( any | unused )* ')' ;\n    var node = this.create(nodes.SupportsCondition);\n    if (this.acceptIdent('not')) {\n      node.addChild(this._parseSupportsConditionInParens());\n    } else {\n      node.addChild(this._parseSupportsConditionInParens());\n      if (this.peekRegExp(TokenType.Ident, /^(and|or)$/i)) {\n        var text = this.token.text.toLowerCase();\n        while (this.acceptIdent(text)) {\n          node.addChild(this._parseSupportsConditionInParens());\n        }\n      }\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseSupportsConditionInParens = function () {\n    var node = this.create(nodes.SupportsCondition);\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (this.prevToken) {\n        node.lParent = this.prevToken.offset;\n      }\n      if (!node.addChild(this._tryToParseDeclaration())) {\n        if (!this._parseSupportsCondition()) {\n          return this.finish(node, ParseError.ConditionExpected);\n        }\n      }\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.ParenthesisR], []);\n      }\n      if (this.prevToken) {\n        node.rParent = this.prevToken.offset;\n      }\n      return this.finish(node);\n    } else if (this.peek(TokenType.Ident)) {\n      var pos = this.mark();\n      this.consumeToken();\n      if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n        var openParentCount = 1;\n        while (this.token.type !== TokenType.EOF && openParentCount !== 0) {\n          if (this.token.type === TokenType.ParenthesisL) {\n            openParentCount++;\n          } else if (this.token.type === TokenType.ParenthesisR) {\n            openParentCount--;\n          }\n          this.consumeToken();\n        }\n        return this.finish(node);\n      } else {\n        this.restoreAtMark(pos);\n      }\n    }\n    return this.finish(node, ParseError.LeftParenthesisExpected, [], [TokenType.ParenthesisL]);\n  };\n  Parser.prototype._parseMediaDeclaration = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    if (isNested) {\n      // if nested, the body can contain rulesets, but also declarations\n      return this._tryParseRuleset(true) || this._tryToParseDeclaration() || this._parseStylesheetStatement(true);\n    }\n    return this._parseStylesheetStatement(false);\n  };\n  Parser.prototype._parseMedia = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n    // MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n    // media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n    if (!this.peekKeyword('@media')) {\n      return null;\n    }\n    var node = this.create(nodes.Media);\n    this.consumeToken(); // @media\n    if (!node.addChild(this._parseMediaQueryList())) {\n      return this.finish(node, ParseError.MediaQueryExpected);\n    }\n    return this._parseBody(node, this._parseMediaDeclaration.bind(this, isNested));\n  };\n  Parser.prototype._parseMediaQueryList = function () {\n    var node = this.create(nodes.Medialist);\n    if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n      return this.finish(node, ParseError.MediaQueryExpected);\n    }\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n        return this.finish(node, ParseError.MediaQueryExpected);\n      }\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseMediaQuery = function (resyncStopToken) {\n    // http://www.w3.org/TR/css3-mediaqueries/\n    // media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n    // expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n    var node = this.create(nodes.MediaQuery);\n    var parseExpression = true;\n    var hasContent = false;\n    if (!this.peek(TokenType.ParenthesisL)) {\n      if (this.acceptIdent('only') || this.acceptIdent('not')) {\n        // optional\n      }\n      if (!node.addChild(this._parseIdent())) {\n        return null;\n      }\n      hasContent = true;\n      parseExpression = this.acceptIdent('and');\n    }\n    while (parseExpression) {\n      // Allow short-circuting for other language constructs.\n      if (node.addChild(this._parseMediaContentStart())) {\n        parseExpression = this.acceptIdent('and');\n        continue;\n      }\n      if (!this.accept(TokenType.ParenthesisL)) {\n        if (hasContent) {\n          return this.finish(node, ParseError.LeftParenthesisExpected, [], resyncStopToken);\n        }\n        return null;\n      }\n      if (!node.addChild(this._parseMediaFeatureName())) {\n        return this.finish(node, ParseError.IdentifierExpected, [], resyncStopToken);\n      }\n      if (this.accept(TokenType.Colon)) {\n        if (!node.addChild(this._parseExpr())) {\n          return this.finish(node, ParseError.TermExpected, [], resyncStopToken);\n        }\n      }\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [], resyncStopToken);\n      }\n      parseExpression = this.acceptIdent('and');\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseMediaContentStart = function () {\n    return null;\n  };\n  Parser.prototype._parseMediaFeatureName = function () {\n    return this._parseIdent();\n  };\n  Parser.prototype._parseMedium = function () {\n    var node = this.create(nodes.Node);\n    if (node.addChild(this._parseIdent())) {\n      return this.finish(node);\n    } else {\n      return null;\n    }\n  };\n  Parser.prototype._parsePageDeclaration = function () {\n    return this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n  };\n  Parser.prototype._parsePage = function () {\n    // http://www.w3.org/TR/css3-page/\n    // page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n    // page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n    if (!this.peekKeyword('@page')) {\n      return null;\n    }\n    var node = this.create(nodes.Page);\n    this.consumeToken();\n    if (node.addChild(this._parsePageSelector())) {\n      while (this.accept(TokenType.Comma)) {\n        if (!node.addChild(this._parsePageSelector())) {\n          return this.finish(node, ParseError.IdentifierExpected);\n        }\n      }\n    }\n    return this._parseBody(node, this._parsePageDeclaration.bind(this));\n  };\n  Parser.prototype._parsePageMarginBox = function () {\n    // page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n    var node = this.create(nodes.PageBoxMarginBox);\n    if (!this.acceptOneKeyword(languageFacts.pageBoxDirectives)) {\n      this.markError(node, ParseError.UnknownAtRule, [], [TokenType.CurlyL]);\n    }\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n  Parser.prototype._parsePageSelector = function () {\n    // page_selector : pseudo_page+ | IDENT pseudo_page*\n    // pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n    if (!this.peek(TokenType.Ident) && !this.peek(TokenType.Colon)) {\n      return null;\n    }\n    var node = this.create(nodes.Node);\n    node.addChild(this._parseIdent()); // optional ident\n    if (this.accept(TokenType.Colon)) {\n      if (!node.addChild(this._parseIdent())) {\n        // optional ident\n        return this.finish(node, ParseError.IdentifierExpected);\n      }\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseDocument = function () {\n    // -moz-document is experimental but has been pushed to css4\n    if (!this.peekKeyword('@-moz-document')) {\n      return null;\n    }\n    var node = this.create(nodes.Document);\n    this.consumeToken(); // @-moz-document\n    this.resync([], [TokenType.CurlyL]); // ignore all the rules\n    return this._parseBody(node, this._parseStylesheetStatement.bind(this));\n  };\n  // https://www.w3.org/TR/css-syntax-3/#consume-an-at-rule\n  Parser.prototype._parseUnknownAtRule = function () {\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n    var node = this.create(nodes.UnknownAtRule);\n    node.addChild(this._parseUnknownAtRuleName());\n    var isTopLevel = function isTopLevel() {\n      return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0;\n    };\n    var curlyLCount = 0;\n    var curlyDepth = 0;\n    var parensDepth = 0;\n    var bracketsDepth = 0;\n    done: while (true) {\n      switch (this.token.type) {\n        case TokenType.SemiColon:\n          if (isTopLevel()) {\n            break done;\n          }\n          break;\n        case TokenType.EOF:\n          if (curlyDepth > 0) {\n            return this.finish(node, ParseError.RightCurlyExpected);\n          } else if (bracketsDepth > 0) {\n            return this.finish(node, ParseError.RightSquareBracketExpected);\n          } else if (parensDepth > 0) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n          } else {\n            return this.finish(node);\n          }\n        case TokenType.CurlyL:\n          curlyLCount++;\n          curlyDepth++;\n          break;\n        case TokenType.CurlyR:\n          curlyDepth--;\n          // End of at-rule, consume CurlyR and return node\n          if (curlyLCount > 0 && curlyDepth === 0) {\n            this.consumeToken();\n            if (bracketsDepth > 0) {\n              return this.finish(node, ParseError.RightSquareBracketExpected);\n            } else if (parensDepth > 0) {\n              return this.finish(node, ParseError.RightParenthesisExpected);\n            }\n            break done;\n          }\n          if (curlyDepth < 0) {\n            // The property value has been terminated without a semicolon, and\n            // this is the last declaration in the ruleset.\n            if (parensDepth === 0 && bracketsDepth === 0) {\n              break done;\n            }\n            return this.finish(node, ParseError.LeftCurlyExpected);\n          }\n          break;\n        case TokenType.ParenthesisL:\n          parensDepth++;\n          break;\n        case TokenType.ParenthesisR:\n          parensDepth--;\n          if (parensDepth < 0) {\n            return this.finish(node, ParseError.LeftParenthesisExpected);\n          }\n          break;\n        case TokenType.BracketL:\n          bracketsDepth++;\n          break;\n        case TokenType.BracketR:\n          bracketsDepth--;\n          if (bracketsDepth < 0) {\n            return this.finish(node, ParseError.LeftSquareBracketExpected);\n          }\n          break;\n      }\n      this.consumeToken();\n    }\n    return node;\n  };\n  Parser.prototype._parseUnknownAtRuleName = function () {\n    var node = this.create(nodes.Node);\n    if (this.accept(TokenType.AtKeyword)) {\n      return this.finish(node);\n    }\n    return node;\n  };\n  Parser.prototype._parseOperator = function () {\n    // these are operators for binary expressions\n    if (this.peekDelim('/') || this.peekDelim('*') || this.peekDelim('+') || this.peekDelim('-') || this.peek(TokenType.Dashmatch) || this.peek(TokenType.Includes) || this.peek(TokenType.SubstringOperator) || this.peek(TokenType.PrefixOperator) || this.peek(TokenType.SuffixOperator) || this.peekDelim('=')) {\n      // doesn't stick to the standard here\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      return this.finish(node);\n    } else {\n      return null;\n    }\n  };\n  Parser.prototype._parseUnaryOperator = function () {\n    if (!this.peekDelim('+') && !this.peekDelim('-')) {\n      return null;\n    }\n    var node = this.create(nodes.Node);\n    this.consumeToken();\n    return this.finish(node);\n  };\n  Parser.prototype._parseCombinator = function () {\n    if (this.peekDelim('>')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      var mark = this.mark();\n      if (!this.hasWhitespace() && this.acceptDelim('>')) {\n        if (!this.hasWhitespace() && this.acceptDelim('>')) {\n          node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n          return this.finish(node);\n        }\n        this.restoreAtMark(mark);\n      }\n      node.type = nodes.NodeType.SelectorCombinatorParent;\n      return this.finish(node);\n    } else if (this.peekDelim('+')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      node.type = nodes.NodeType.SelectorCombinatorSibling;\n      return this.finish(node);\n    } else if (this.peekDelim('~')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      node.type = nodes.NodeType.SelectorCombinatorAllSiblings;\n      return this.finish(node);\n    } else if (this.peekDelim('/')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      var mark = this.mark();\n      if (!this.hasWhitespace() && this.acceptIdent('deep') && !this.hasWhitespace() && this.acceptDelim('/')) {\n        node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n        return this.finish(node);\n      }\n      this.restoreAtMark(mark);\n    }\n    return null;\n  };\n  Parser.prototype._parseSimpleSelector = function () {\n    // simple_selector\n    //  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n    var node = this.create(nodes.SimpleSelector);\n    var c = 0;\n    if (node.addChild(this._parseElementName())) {\n      c++;\n    }\n    while ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n      c++;\n    }\n    return c > 0 ? this.finish(node) : null;\n  };\n  Parser.prototype._parseSimpleSelectorBody = function () {\n    return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n  };\n  Parser.prototype._parseSelectorIdent = function () {\n    return this._parseIdent();\n  };\n  Parser.prototype._parseHash = function () {\n    if (!this.peek(TokenType.Hash) && !this.peekDelim('#')) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.IdentifierSelector);\n    if (this.acceptDelim('#')) {\n      if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n        return this.finish(node, ParseError.IdentifierExpected);\n      }\n    } else {\n      this.consumeToken(); // TokenType.Hash\n    }\n\n    return this.finish(node);\n  };\n  Parser.prototype._parseClass = function () {\n    // class: '.' IDENT ;\n    if (!this.peekDelim('.')) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.ClassSelector);\n    this.consumeToken(); // '.'\n    if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseElementName = function () {\n    // element_name: (ns? '|')? IDENT | '*';\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.ElementNameSelector);\n    node.addChild(this._parseNamespacePrefix());\n    if (!node.addChild(this._parseSelectorIdent()) && !this.acceptDelim('*')) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseNamespacePrefix = function () {\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.NamespacePrefix);\n    if (!node.addChild(this._parseIdent()) && !this.acceptDelim('*')) {\n      // ns is optional\n    }\n    if (!this.acceptDelim('|')) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseAttrib = function () {\n    // attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n    if (!this.peek(TokenType.BracketL)) {\n      return null;\n    }\n    var node = this.create(nodes.AttributeSelector);\n    this.consumeToken(); // BracketL\n    // Optional attrib namespace\n    node.setNamespacePrefix(this._parseNamespacePrefix());\n    if (!node.setIdentifier(this._parseIdent())) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n    if (node.setOperator(this._parseOperator())) {\n      node.setValue(this._parseBinaryExpr());\n      this.acceptIdent('i'); // case insensitive matching\n    }\n\n    if (!this.accept(TokenType.BracketR)) {\n      return this.finish(node, ParseError.RightSquareBracketExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parsePseudo = function () {\n    var _this = this;\n    // pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n    var node = this._tryParsePseudoIdentifier();\n    if (node) {\n      if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n        var tryAsSelector = function tryAsSelector() {\n          var selectors = _this.create(nodes.Node);\n          if (!selectors.addChild(_this._parseSelector(false))) {\n            return null;\n          }\n          while (_this.accept(TokenType.Comma) && selectors.addChild(_this._parseSelector(false))) {\n            // loop\n          }\n          if (_this.peek(TokenType.ParenthesisR)) {\n            return _this.finish(selectors);\n          }\n          return null;\n        };\n        node.addChild(this.try(tryAsSelector) || this._parseBinaryExpr());\n        if (!this.accept(TokenType.ParenthesisR)) {\n          return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n      }\n      return this.finish(node);\n    }\n    return null;\n  };\n  Parser.prototype._tryParsePseudoIdentifier = function () {\n    if (!this.peek(TokenType.Colon)) {\n      return null;\n    }\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.PseudoSelector);\n    this.consumeToken(); // Colon\n    if (this.hasWhitespace()) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    // optional, support ::\n    if (this.accept(TokenType.Colon) && this.hasWhitespace()) {\n      this.markError(node, ParseError.IdentifierExpected);\n    }\n    if (!node.addChild(this._parseIdent())) {\n      this.markError(node, ParseError.IdentifierExpected);\n    }\n    return node;\n  };\n  Parser.prototype._tryParsePrio = function () {\n    var mark = this.mark();\n    var prio = this._parsePrio();\n    if (prio) {\n      return prio;\n    }\n    this.restoreAtMark(mark);\n    return null;\n  };\n  Parser.prototype._parsePrio = function () {\n    if (!this.peek(TokenType.Exclamation)) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.Prio);\n    if (this.accept(TokenType.Exclamation) && this.acceptIdent('important')) {\n      return this.finish(node);\n    }\n    return null;\n  };\n  Parser.prototype._parseExpr = function (stopOnComma) {\n    if (stopOnComma === void 0) {\n      stopOnComma = false;\n    }\n    var node = this.create(nodes.Expression);\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return null;\n    }\n    while (true) {\n      if (this.peek(TokenType.Comma)) {\n        // optional\n        if (stopOnComma) {\n          return this.finish(node);\n        }\n        this.consumeToken();\n      }\n      if (!node.addChild(this._parseBinaryExpr())) {\n        break;\n      }\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseNamedLine = function () {\n    // https://www.w3.org/TR/css-grid-1/#named-lines\n    if (!this.peek(TokenType.BracketL)) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.GridLine);\n    this.consumeToken();\n    while (node.addChild(this._parseIdent())) {\n      // repeat\n    }\n    if (!this.accept(TokenType.BracketR)) {\n      return this.finish(node, ParseError.RightSquareBracketExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseBinaryExpr = function (preparsedLeft, preparsedOper) {\n    var node = this.create(nodes.BinaryExpression);\n    if (!node.setLeft(preparsedLeft || this._parseTerm())) {\n      return null;\n    }\n    if (!node.setOperator(preparsedOper || this._parseOperator())) {\n      return this.finish(node);\n    }\n    if (!node.setRight(this._parseTerm())) {\n      return this.finish(node, ParseError.TermExpected);\n    }\n    // things needed for multiple binary expressions\n    node = this.finish(node);\n    var operator = this._parseOperator();\n    if (operator) {\n      node = this._parseBinaryExpr(node, operator);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseTerm = function () {\n    var node = this.create(nodes.Term);\n    node.setOperator(this._parseUnaryOperator()); // optional\n    if (node.setExpression(this._parseURILiteral()) ||\n    // url before function\n    node.setExpression(this._parseFunction()) ||\n    // function before ident\n    node.setExpression(this._parseIdent()) || node.setExpression(this._parseStringLiteral()) || node.setExpression(this._parseNumeric()) || node.setExpression(this._parseHexColor()) || node.setExpression(this._parseOperation()) || node.setExpression(this._parseNamedLine())) {\n      return this.finish(node);\n    }\n    return null;\n  };\n  Parser.prototype._parseOperation = function () {\n    if (!this.peek(TokenType.ParenthesisL)) {\n      return null;\n    }\n    var node = this.create(nodes.Node);\n    this.consumeToken(); // ParenthesisL\n    node.addChild(this._parseExpr());\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseNumeric = function () {\n    if (this.peek(TokenType.Num) || this.peek(TokenType.Percentage) || this.peek(TokenType.Resolution) || this.peek(TokenType.Length) || this.peek(TokenType.EMS) || this.peek(TokenType.EXS) || this.peek(TokenType.Angle) || this.peek(TokenType.Time) || this.peek(TokenType.Dimension) || this.peek(TokenType.Freq)) {\n      var node = this.create(nodes.NumericValue);\n      this.consumeToken();\n      return this.finish(node);\n    }\n    return null;\n  };\n  Parser.prototype._parseStringLiteral = function () {\n    if (!this.peek(TokenType.String) && !this.peek(TokenType.BadString)) {\n      return null;\n    }\n    var node = this.createNode(nodes.NodeType.StringLiteral);\n    this.consumeToken();\n    return this.finish(node);\n  };\n  Parser.prototype._parseURILiteral = function () {\n    if (!this.peekRegExp(TokenType.Ident, /^url(-prefix)?$/i)) {\n      return null;\n    }\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.URILiteral);\n    this.accept(TokenType.Ident);\n    if (this.hasWhitespace() || !this.peek(TokenType.ParenthesisL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    this.scanner.inURL = true;\n    this.consumeToken(); // consume ()\n    node.addChild(this._parseURLArgument()); // argument is optional\n    this.scanner.inURL = false;\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseURLArgument = function () {\n    var node = this.create(nodes.Node);\n    if (!this.accept(TokenType.String) && !this.accept(TokenType.BadString) && !this.acceptUnquotedString()) {\n      return null;\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseIdent = function (referenceTypes) {\n    if (!this.peek(TokenType.Ident)) {\n      return null;\n    }\n    var node = this.create(nodes.Identifier);\n    if (referenceTypes) {\n      node.referenceTypes = referenceTypes;\n    }\n    node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n    this.consumeToken();\n    return this.finish(node);\n  };\n  Parser.prototype._parseFunction = function () {\n    var pos = this.mark();\n    var node = this.create(nodes.Function);\n    if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n      return null;\n    }\n    if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n    if (node.getArguments().addChild(this._parseFunctionArgument())) {\n      while (this.accept(TokenType.Comma)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n        if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n          this.markError(node, ParseError.ExpressionExpected);\n        }\n      }\n    }\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n    return this.finish(node);\n  };\n  Parser.prototype._parseFunctionIdentifier = function () {\n    if (!this.peek(TokenType.Ident)) {\n      return null;\n    }\n    var node = this.create(nodes.Identifier);\n    node.referenceTypes = [nodes.ReferenceType.Function];\n    if (this.acceptIdent('progid')) {\n      // support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n      if (this.accept(TokenType.Colon)) {\n        while (this.accept(TokenType.Ident) && this.acceptDelim('.')) {\n          // loop\n        }\n      }\n      return this.finish(node);\n    }\n    this.consumeToken();\n    return this.finish(node);\n  };\n  Parser.prototype._parseFunctionArgument = function () {\n    var node = this.create(nodes.FunctionArgument);\n    if (node.setValue(this._parseExpr(true))) {\n      return this.finish(node);\n    }\n    return null;\n  };\n  Parser.prototype._parseHexColor = function () {\n    if (this.peekRegExp(TokenType.Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {\n      var node = this.create(nodes.HexColorValue);\n      this.consumeToken();\n      return this.finish(node);\n    } else {\n      return null;\n    }\n  };\n  return Parser;\n}();\nexport { Parser };","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","TokenType","Scanner","nodes","ParseError","languageFacts","isDefined","Parser","scnr","keyframeRegex","scanner","token","type","EOF","offset","len","text","prevToken","undefined","prototype","peekIdent","Ident","toLowerCase","peekKeyword","AtKeyword","peekDelim","Delim","peek","peekRegExp","regEx","test","hasWhitespace","consumeToken","scan","mark","prev","curr","pos","restoreAtMark","goBackTo","try","func","node","acceptOneKeyword","keywords","_i","keywords_1","keyword","accept","acceptIdent","acceptKeyword","acceptDelim","acceptRegexp","_parseRegexp","createNode","NodeType","Identifier","finish","acceptUnquotedString","unquoted","scanUnquotedString","resync","resyncTokens","resyncStopTokens","indexOf","nodeType","Node","create","ctor","error","Nodelist","markError","prevEnd","lastErrorToken","addIssue","Marker","Level","Error","parseStylesheet","textDocument","versionId","version","getText","textProvider","substr","internalParse","_parseStylesheet","input","parseFunc","setSource","bind","Stylesheet","addChild","_parseStylesheetStart","inRecovery","hasMatch","statement","_parseStylesheetStatement","_needsSemicolonAfter","SemiColon","SemiColonExpected","CDO","CDC","UnknownAtRule","RuleOrSelectorExpected","_parseCharset","isNested","_parseStylesheetAtStatement","_parseRuleset","_parseImport","_parseMedia","_parsePage","_parseFontFace","_parseKeyframe","_parseSupports","_parseViewPort","_parseNamespace","_parseDocument","_parseUnknownAtRule","_tryParseRuleset","_parseSelector","Comma","CurlyL","RuleSet","selectors","getSelectors","SelectorExpected","_parseBody","_parseRuleSetDeclaration","_parseAtApply","_tryParseCustomPropertyDeclaration","_parseDeclaration","AtApplyRule","setIdentifier","_parseIdent","ReferenceType","Variable","IdentifierExpected","Keyframe","ViewPort","Media","Ruleset","Namespace","If","For","Each","While","MixinDeclaration","FunctionDeclaration","ExtendsReference","MixinContent","ReturnStatement","MediaQuery","Debug","Import","CustomPropertyDeclaration","VariableDeclaration","needsSemicolon","MixinReference","getContent","Declaration","getNestedProperties","_parseDeclarations","parseDeclaration","Declarations","decl","CurlyR","semicolonPosition","RightCurlyExpected","setDeclarations","LeftCurlyExpected","Selector","hasContent","_parseCombinator","_parseSimpleSelector","setProperty","_parseProperty","Colon","stopTokens","ColonExpected","colonPosition","setValue","_parseExpr","PropertyValueExpected","_parsePrio","propertySet","CustomPropertySet","declarations","isErroneous","setPropertySet","expression","_parseCustomPropertyValue","isTopLevel","curlyDepth","parensDepth","bracketsDepth","done","Exclamation","ParenthesisL","ParenthesisR","LeftParenthesisExpected","BracketL","BracketR","LeftSquareBracketExpected","BadString","RightSquareBracketExpected","RightParenthesisExpected","_tryToParseDeclaration","Property","_parsePropertyIdentifier","Charset","String","_parseURILiteral","_parseStringLiteral","URIOrStringExpected","setMedialist","_parseMediaQueryList","URIExpected","FontFace","atNode","setKeyword","matches","UnknownKeyword","_parseKeyframeIdent","_parseKeyframeSelector","KeyframeSelector","Percentage","PercentageExpected","_tryParseKeyframeSelector","Supports","_parseSupportsCondition","_parseSupportsDeclaration","SupportsCondition","_parseSupportsConditionInParens","lParent","ConditionExpected","rParent","openParentCount","_parseMediaDeclaration","MediaQueryExpected","Medialist","_parseMediaQuery","resyncStopToken","parseExpression","_parseMediaContentStart","_parseMediaFeatureName","TermExpected","_parseMedium","_parsePageDeclaration","_parsePageMarginBox","Page","_parsePageSelector","PageBoxMarginBox","pageBoxDirectives","Document","_parseUnknownAtRuleName","curlyLCount","_parseOperator","Dashmatch","Includes","SubstringOperator","PrefixOperator","SuffixOperator","Operator","_parseUnaryOperator","SelectorCombinatorShadowPiercingDescendant","SelectorCombinatorParent","SelectorCombinatorSibling","SelectorCombinatorAllSiblings","SimpleSelector","c","_parseElementName","_parseSimpleSelectorBody","_parsePseudo","_parseHash","_parseClass","_parseAttrib","_parseSelectorIdent","Hash","IdentifierSelector","ClassSelector","ElementNameSelector","_parseNamespacePrefix","NamespacePrefix","AttributeSelector","setNamespacePrefix","setOperator","_parseBinaryExpr","_this","_tryParsePseudoIdentifier","tryAsSelector","PseudoSelector","_tryParsePrio","prio","Prio","stopOnComma","Expression","_parseNamedLine","GridLine","preparsedLeft","preparsedOper","BinaryExpression","setLeft","_parseTerm","setRight","operator","Term","setExpression","_parseFunction","_parseNumeric","_parseHexColor","_parseOperation","Num","Resolution","Length","EMS","EXS","Angle","Time","Dimension","Freq","NumericValue","StringLiteral","URILiteral","inURL","_parseURLArgument","referenceTypes","isCustomProperty","Function","_parseFunctionIdentifier","getArguments","_parseFunctionArgument","ExpressionExpected","FunctionArgument","HexColorValue"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { TokenType, Scanner } from './cssScanner.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js';\nimport * as languageFacts from '../languageFacts/facts.js';\nimport { isDefined } from '../utils/objects.js';\n/// <summary>\n/// A parser for the css core specification. See for reference:\n/// https://www.w3.org/TR/CSS21/grammar.html\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\nvar Parser = /** @class */ (function () {\n    function Parser(scnr) {\n        if (scnr === void 0) { scnr = new Scanner(); }\n        this.keyframeRegex = /^@(\\-(webkit|ms|moz|o)\\-)?keyframes$/i;\n        this.scanner = scnr;\n        this.token = { type: TokenType.EOF, offset: -1, len: 0, text: '' };\n        this.prevToken = undefined;\n    }\n    Parser.prototype.peekIdent = function (text) {\n        return TokenType.Ident === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekKeyword = function (text) {\n        return TokenType.AtKeyword === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekDelim = function (text) {\n        return TokenType.Delim === this.token.type && text === this.token.text;\n    };\n    Parser.prototype.peek = function (type) {\n        return type === this.token.type;\n    };\n    Parser.prototype.peekRegExp = function (type, regEx) {\n        if (type !== this.token.type) {\n            return false;\n        }\n        return regEx.test(this.token.text);\n    };\n    Parser.prototype.hasWhitespace = function () {\n        return !!this.prevToken && (this.prevToken.offset + this.prevToken.len !== this.token.offset);\n    };\n    Parser.prototype.consumeToken = function () {\n        this.prevToken = this.token;\n        this.token = this.scanner.scan();\n    };\n    Parser.prototype.mark = function () {\n        return {\n            prev: this.prevToken,\n            curr: this.token,\n            pos: this.scanner.pos()\n        };\n    };\n    Parser.prototype.restoreAtMark = function (mark) {\n        this.prevToken = mark.prev;\n        this.token = mark.curr;\n        this.scanner.goBackTo(mark.pos);\n    };\n    Parser.prototype.try = function (func) {\n        var pos = this.mark();\n        var node = func();\n        if (!node) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    Parser.prototype.acceptOneKeyword = function (keywords) {\n        if (TokenType.AtKeyword === this.token.type) {\n            for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {\n                var keyword = keywords_1[_i];\n                if (keyword.length === this.token.text.length && keyword === this.token.text.toLowerCase()) {\n                    this.consumeToken();\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Parser.prototype.accept = function (type) {\n        if (type === this.token.type) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptIdent = function (text) {\n        if (this.peekIdent(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptKeyword = function (text) {\n        if (this.peekKeyword(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptDelim = function (text) {\n        if (this.peekDelim(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptRegexp = function (regEx) {\n        if (regEx.test(this.token.text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype._parseRegexp = function (regEx) {\n        var node = this.createNode(nodes.NodeType.Identifier);\n        do { } while (this.acceptRegexp(regEx));\n        return this.finish(node);\n    };\n    Parser.prototype.acceptUnquotedString = function () {\n        var pos = this.scanner.pos();\n        this.scanner.goBackTo(this.token.offset);\n        var unquoted = this.scanner.scanUnquotedString();\n        if (unquoted) {\n            this.token = unquoted;\n            this.consumeToken();\n            return true;\n        }\n        this.scanner.goBackTo(pos);\n        return false;\n    };\n    Parser.prototype.resync = function (resyncTokens, resyncStopTokens) {\n        while (true) {\n            if (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n                this.consumeToken();\n                return true;\n            }\n            else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n                return true;\n            }\n            else {\n                if (this.token.type === TokenType.EOF) {\n                    return false;\n                }\n                this.token = this.scanner.scan();\n            }\n        }\n    };\n    Parser.prototype.createNode = function (nodeType) {\n        return new nodes.Node(this.token.offset, this.token.len, nodeType);\n    };\n    Parser.prototype.create = function (ctor) {\n        return new ctor(this.token.offset, this.token.len);\n    };\n    Parser.prototype.finish = function (node, error, resyncTokens, resyncStopTokens) {\n        // parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n        // + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n        if (!(node instanceof nodes.Nodelist)) {\n            if (error) {\n                this.markError(node, error, resyncTokens, resyncStopTokens);\n            }\n            // set the node end position\n            if (this.prevToken) {\n                // length with more elements belonging together\n                var prevEnd = this.prevToken.offset + this.prevToken.len;\n                node.length = prevEnd > node.offset ? prevEnd - node.offset : 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n            }\n        }\n        return node;\n    };\n    Parser.prototype.markError = function (node, error, resyncTokens, resyncStopTokens) {\n        if (this.token !== this.lastErrorToken) { // do not report twice on the same token\n            node.addIssue(new nodes.Marker(node, error, nodes.Level.Error, undefined, this.token.offset, this.token.len));\n            this.lastErrorToken = this.token;\n        }\n        if (resyncTokens || resyncStopTokens) {\n            this.resync(resyncTokens, resyncStopTokens);\n        }\n    };\n    Parser.prototype.parseStylesheet = function (textDocument) {\n        var versionId = textDocument.version;\n        var text = textDocument.getText();\n        var textProvider = function (offset, length) {\n            if (textDocument.version !== versionId) {\n                throw new Error('Underlying model has changed, AST is no longer valid');\n            }\n            return text.substr(offset, length);\n        };\n        return this.internalParse(text, this._parseStylesheet, textProvider);\n    };\n    Parser.prototype.internalParse = function (input, parseFunc, textProvider) {\n        this.scanner.setSource(input);\n        this.token = this.scanner.scan();\n        var node = parseFunc.bind(this)();\n        if (node) {\n            if (textProvider) {\n                node.textProvider = textProvider;\n            }\n            else {\n                node.textProvider = function (offset, length) { return input.substr(offset, length); };\n            }\n        }\n        return node;\n    };\n    Parser.prototype._parseStylesheet = function () {\n        var node = this.create(nodes.Stylesheet);\n        while (node.addChild(this._parseStylesheetStart())) {\n            // Parse statements only valid at the beginning of stylesheets.\n        }\n        var inRecovery = false;\n        do {\n            var hasMatch = false;\n            do {\n                hasMatch = false;\n                var statement = this._parseStylesheetStatement();\n                if (statement) {\n                    node.addChild(statement);\n                    hasMatch = true;\n                    inRecovery = false;\n                    if (!this.peek(TokenType.EOF) && this._needsSemicolonAfter(statement) && !this.accept(TokenType.SemiColon)) {\n                        this.markError(node, ParseError.SemiColonExpected);\n                    }\n                }\n                while (this.accept(TokenType.SemiColon) || this.accept(TokenType.CDO) || this.accept(TokenType.CDC)) {\n                    // accept empty statements\n                    hasMatch = true;\n                    inRecovery = false;\n                }\n            } while (hasMatch);\n            if (this.peek(TokenType.EOF)) {\n                break;\n            }\n            if (!inRecovery) {\n                if (this.peek(TokenType.AtKeyword)) {\n                    this.markError(node, ParseError.UnknownAtRule);\n                }\n                else {\n                    this.markError(node, ParseError.RuleOrSelectorExpected);\n                }\n                inRecovery = true;\n            }\n            this.consumeToken();\n        } while (!this.peek(TokenType.EOF));\n        return this.finish(node);\n    };\n    Parser.prototype._parseStylesheetStart = function () {\n        return this._parseCharset();\n    };\n    Parser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseStylesheetAtStatement(isNested);\n        }\n        return this._parseRuleset(isNested);\n    };\n    Parser.prototype._parseStylesheetAtStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._parseImport()\n            || this._parseMedia(isNested)\n            || this._parsePage()\n            || this._parseFontFace()\n            || this._parseKeyframe()\n            || this._parseSupports(isNested)\n            || this._parseViewPort()\n            || this._parseNamespace()\n            || this._parseDocument()\n            || this._parseUnknownAtRule();\n    };\n    Parser.prototype._tryParseRuleset = function (isNested) {\n        var mark = this.mark();\n        if (this._parseSelector(isNested)) {\n            while (this.accept(TokenType.Comma) && this._parseSelector(isNested)) {\n                // loop\n            }\n            if (this.accept(TokenType.CurlyL)) {\n                this.restoreAtMark(mark);\n                return this._parseRuleset(isNested);\n            }\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseRuleset = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        var node = this.create(nodes.RuleSet);\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(isNested))) {\n            return null;\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!selectors.addChild(this._parseSelector(isNested))) {\n                return this.finish(node, ParseError.SelectorExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseRuleSetDeclaration = function () {\n        // https://www.w3.org/TR/css-syntax-3/#consume-a-list-of-declarations0\n        return this._parseAtApply()\n            || this._tryParseCustomPropertyDeclaration()\n            || this._parseDeclaration()\n            || this._parseUnknownAtRule();\n    };\n    /**\n     * Parses declarations like:\n     *   @apply --my-theme;\n     *\n     * Follows https://tabatkins.github.io/specs/css-apply-rule/#using\n     */\n    Parser.prototype._parseAtApply = function () {\n        if (!this.peekKeyword('@apply')) {\n            return null;\n        }\n        var node = this.create(nodes.AtApplyRule);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Variable]))) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._needsSemicolonAfter = function (node) {\n        switch (node.type) {\n            case nodes.NodeType.Keyframe:\n            case nodes.NodeType.ViewPort:\n            case nodes.NodeType.Media:\n            case nodes.NodeType.Ruleset:\n            case nodes.NodeType.Namespace:\n            case nodes.NodeType.If:\n            case nodes.NodeType.For:\n            case nodes.NodeType.Each:\n            case nodes.NodeType.While:\n            case nodes.NodeType.MixinDeclaration:\n            case nodes.NodeType.FunctionDeclaration:\n                return false;\n            case nodes.NodeType.ExtendsReference:\n            case nodes.NodeType.MixinContent:\n            case nodes.NodeType.ReturnStatement:\n            case nodes.NodeType.MediaQuery:\n            case nodes.NodeType.Debug:\n            case nodes.NodeType.Import:\n            case nodes.NodeType.AtApplyRule:\n            case nodes.NodeType.CustomPropertyDeclaration:\n                return true;\n            case nodes.NodeType.VariableDeclaration:\n                return node.needsSemicolon;\n            case nodes.NodeType.MixinReference:\n                return !node.getContent();\n            case nodes.NodeType.Declaration:\n                return !node.getNestedProperties();\n        }\n        return false;\n    };\n    Parser.prototype._parseDeclarations = function (parseDeclaration) {\n        var node = this.create(nodes.Declarations);\n        if (!this.accept(TokenType.CurlyL)) {\n            return null;\n        }\n        var decl = parseDeclaration();\n        while (node.addChild(decl)) {\n            if (this.peek(TokenType.CurlyR)) {\n                break;\n            }\n            if (this._needsSemicolonAfter(decl) && !this.accept(TokenType.SemiColon)) {\n                return this.finish(node, ParseError.SemiColonExpected, [TokenType.SemiColon, TokenType.CurlyR]);\n            }\n            // We accepted semicolon token. Link it to declaration.\n            if (decl && this.prevToken && this.prevToken.type === TokenType.SemiColon) {\n                decl.semicolonPosition = this.prevToken.offset;\n            }\n            while (this.accept(TokenType.SemiColon)) {\n                // accept empty statements\n            }\n            decl = parseDeclaration();\n        }\n        if (!this.accept(TokenType.CurlyR)) {\n            return this.finish(node, ParseError.RightCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBody = function (node, parseDeclaration) {\n        if (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n            return this.finish(node, ParseError.LeftCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSelector = function (isNested) {\n        var node = this.create(nodes.Selector);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    Parser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(nodes.Declaration);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            var stopTokens = resyncStopTokens ? __spreadArrays(resyncStopTokens, [TokenType.SemiColon]) : [TokenType.SemiColon];\n            return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], stopTokens);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, ParseError.PropertyValueExpected);\n        }\n        node.addChild(this._parsePrio());\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryParseCustomPropertyDeclaration = function () {\n        if (!this.peekRegExp(TokenType.Ident, /^--/)) {\n            return null;\n        }\n        var node = this.create(nodes.CustomPropertyDeclaration);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            return this.finish(node, ParseError.ColonExpected, [TokenType.Colon]);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        var mark = this.mark();\n        if (this.peek(TokenType.CurlyL)) {\n            // try to parse it as nested declaration\n            var propertySet = this.create(nodes.CustomPropertySet);\n            var declarations = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));\n            if (propertySet.setDeclarations(declarations) && !declarations.isErroneous(true)) {\n                propertySet.addChild(this._parsePrio());\n                if (this.peek(TokenType.SemiColon)) {\n                    this.finish(propertySet);\n                    node.setPropertySet(propertySet);\n                    node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                    return this.finish(node);\n                }\n            }\n            this.restoreAtMark(mark);\n        }\n        // try tp parse as expression\n        var expression = this._parseExpr();\n        if (expression && !expression.isErroneous(true)) {\n            this._parsePrio();\n            if (this.peek(TokenType.SemiColon)) {\n                node.setValue(expression);\n                node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                return this.finish(node);\n            }\n        }\n        this.restoreAtMark(mark);\n        node.addChild(this._parseCustomPropertyValue());\n        node.addChild(this._parsePrio());\n        if (isDefined(node.colonPosition) && this.token.offset === node.colonPosition + 1) {\n            return this.finish(node, ParseError.PropertyValueExpected);\n        }\n        return this.finish(node);\n    };\n    /**\n     * Parse custom property values.\n     *\n     * Based on https://www.w3.org/TR/css-variables/#syntax\n     *\n     * This code is somewhat unusual, as the allowed syntax is incredibly broad,\n     * parsing almost any sequence of tokens, save for a small set of exceptions.\n     * Unbalanced delimitors, invalid tokens, and declaration\n     * terminators like semicolons and !important directives (when not inside\n     * of delimitors).\n     */\n    Parser.prototype._parseCustomPropertyValue = function () {\n        var node = this.create(nodes.Node);\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case TokenType.SemiColon:\n                    // A semicolon only ends things if we're not inside a delimitor.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case TokenType.Exclamation:\n                    // An exclamation ends the value if we're not inside delims.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case TokenType.CurlyL:\n                    curlyDepth++;\n                    break;\n                case TokenType.CurlyR:\n                    curlyDepth--;\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, ParseError.LeftCurlyExpected);\n                    }\n                    break;\n                case TokenType.ParenthesisL:\n                    parensDepth++;\n                    break;\n                case TokenType.ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, ParseError.LeftParenthesisExpected);\n                    }\n                    break;\n                case TokenType.BracketL:\n                    bracketsDepth++;\n                    break;\n                case TokenType.BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, ParseError.LeftSquareBracketExpected);\n                    }\n                    break;\n                case TokenType.BadString: // fall through\n                    break done;\n                case TokenType.EOF:\n                    // We shouldn't have reached the end of input, something is\n                    // unterminated.\n                    var error = ParseError.RightCurlyExpected;\n                    if (bracketsDepth > 0) {\n                        error = ParseError.RightSquareBracketExpected;\n                    }\n                    else if (parensDepth > 0) {\n                        error = ParseError.RightParenthesisExpected;\n                    }\n                    return this.finish(node, error);\n            }\n            this.consumeToken();\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryToParseDeclaration = function () {\n        var mark = this.mark();\n        if (this._parseProperty() && this.accept(TokenType.Colon)) {\n            // looks like a declaration, go ahead\n            this.restoreAtMark(mark);\n            return this._parseDeclaration();\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseProperty = function () {\n        var node = this.create(nodes.Property);\n        var mark = this.mark();\n        if (this.acceptDelim('*') || this.acceptDelim('_')) {\n            // support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (node.setIdentifier(this._parsePropertyIdentifier())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parsePropertyIdentifier = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseCharset = function () {\n        if (!this.peek(TokenType.Charset)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken(); // charset\n        if (!this.accept(TokenType.String)) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        if (!this.accept(TokenType.SemiColon)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(nodes.Import);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.URIOrStringExpected);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespace = function () {\n        // http://www.w3.org/TR/css3-namespace/\n        // namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n        if (!this.peekKeyword('@namespace')) {\n            return null;\n        }\n        var node = this.create(nodes.Namespace);\n        this.consumeToken(); // @namespace\n        if (!node.addChild(this._parseURILiteral())) { // url literal also starts with ident\n            node.addChild(this._parseIdent()); // optional prefix\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, ParseError.URIExpected, [TokenType.SemiColon]);\n            }\n        }\n        if (!this.accept(TokenType.SemiColon)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFontFace = function () {\n        if (!this.peekKeyword('@font-face')) {\n            return null;\n        }\n        var node = this.create(nodes.FontFace);\n        this.consumeToken(); // @font-face\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseViewPort = function () {\n        if (!this.peekKeyword('@-ms-viewport') &&\n            !this.peekKeyword('@-o-viewport') &&\n            !this.peekKeyword('@viewport')) {\n            return null;\n        }\n        var node = this.create(nodes.ViewPort);\n        this.consumeToken(); // @-ms-viewport\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseKeyframe = function () {\n        if (!this.peekRegExp(TokenType.AtKeyword, this.keyframeRegex)) {\n            return null;\n        }\n        var node = this.create(nodes.Keyframe);\n        var atNode = this.create(nodes.Node);\n        this.consumeToken(); // atkeyword\n        node.setKeyword(this.finish(atNode));\n        if (atNode.matches('@-ms-keyframes')) { // -ms-keyframes never existed\n            this.markError(atNode, ParseError.UnknownKeyword);\n        }\n        if (!node.setIdentifier(this._parseKeyframeIdent())) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, this._parseKeyframeSelector.bind(this));\n    };\n    Parser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([nodes.ReferenceType.Keyframe]);\n    };\n    Parser.prototype._parseKeyframeSelector = function () {\n        var node = this.create(nodes.KeyframeSelector);\n        if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n            return null;\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n                return this.finish(node, ParseError.PercentageExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._tryParseKeyframeSelector = function () {\n        var node = this.create(nodes.KeyframeSelector);\n        var pos = this.mark();\n        if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n            return null;\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n                this.restoreAtMark(pos);\n                return null;\n            }\n        }\n        if (!this.peek(TokenType.CurlyL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseSupports = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // SUPPORTS_SYM S* supports_condition '{' S* ruleset* '}' S*\n        if (!this.peekKeyword('@supports')) {\n            return null;\n        }\n        var node = this.create(nodes.Supports);\n        this.consumeToken(); // @supports\n        node.addChild(this._parseSupportsCondition());\n        return this._parseBody(node, this._parseSupportsDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseSupportsDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseSupportsCondition = function () {\n        // supports_condition : supports_negation | supports_conjunction | supports_disjunction | supports_condition_in_parens ;\n        // supports_condition_in_parens: ( '(' S* supports_condition S* ')' ) | supports_declaration_condition | general_enclosed ;\n        // supports_negation: NOT S+ supports_condition_in_parens ;\n        // supports_conjunction: supports_condition_in_parens ( S+ AND S+ supports_condition_in_parens )+;\n        // supports_disjunction: supports_condition_in_parens ( S+ OR S+ supports_condition_in_parens )+;\n        // supports_declaration_condition: '(' S* declaration ')';\n        // general_enclosed: ( FUNCTION | '(' ) ( any | unused )* ')' ;\n        var node = this.create(nodes.SupportsCondition);\n        if (this.acceptIdent('not')) {\n            node.addChild(this._parseSupportsConditionInParens());\n        }\n        else {\n            node.addChild(this._parseSupportsConditionInParens());\n            if (this.peekRegExp(TokenType.Ident, /^(and|or)$/i)) {\n                var text = this.token.text.toLowerCase();\n                while (this.acceptIdent(text)) {\n                    node.addChild(this._parseSupportsConditionInParens());\n                }\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSupportsConditionInParens = function () {\n        var node = this.create(nodes.SupportsCondition);\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (this.prevToken) {\n                node.lParent = this.prevToken.offset;\n            }\n            if (!node.addChild(this._tryToParseDeclaration())) {\n                if (!this._parseSupportsCondition()) {\n                    return this.finish(node, ParseError.ConditionExpected);\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.ParenthesisR], []);\n            }\n            if (this.prevToken) {\n                node.rParent = this.prevToken.offset;\n            }\n            return this.finish(node);\n        }\n        else if (this.peek(TokenType.Ident)) {\n            var pos = this.mark();\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n                var openParentCount = 1;\n                while (this.token.type !== TokenType.EOF && openParentCount !== 0) {\n                    if (this.token.type === TokenType.ParenthesisL) {\n                        openParentCount++;\n                    }\n                    else if (this.token.type === TokenType.ParenthesisR) {\n                        openParentCount--;\n                    }\n                    this.consumeToken();\n                }\n                return this.finish(node);\n            }\n            else {\n                this.restoreAtMark(pos);\n            }\n        }\n        return this.finish(node, ParseError.LeftParenthesisExpected, [], [TokenType.ParenthesisL]);\n    };\n    Parser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseMedia = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n        // media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n        if (!this.peekKeyword('@media')) {\n            return null;\n        }\n        var node = this.create(nodes.Media);\n        this.consumeToken(); // @media\n        if (!node.addChild(this._parseMediaQueryList())) {\n            return this.finish(node, ParseError.MediaQueryExpected);\n        }\n        return this._parseBody(node, this._parseMediaDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseMediaQueryList = function () {\n        var node = this.create(nodes.Medialist);\n        if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n            return this.finish(node, ParseError.MediaQueryExpected);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n                return this.finish(node, ParseError.MediaQueryExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaQuery = function (resyncStopToken) {\n        // http://www.w3.org/TR/css3-mediaqueries/\n        // media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n        // expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n        var node = this.create(nodes.MediaQuery);\n        var parseExpression = true;\n        var hasContent = false;\n        if (!this.peek(TokenType.ParenthesisL)) {\n            if (this.acceptIdent('only') || this.acceptIdent('not')) {\n                // optional\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return null;\n            }\n            hasContent = true;\n            parseExpression = this.acceptIdent('and');\n        }\n        while (parseExpression) {\n            // Allow short-circuting for other language constructs.\n            if (node.addChild(this._parseMediaContentStart())) {\n                parseExpression = this.acceptIdent('and');\n                continue;\n            }\n            if (!this.accept(TokenType.ParenthesisL)) {\n                if (hasContent) {\n                    return this.finish(node, ParseError.LeftParenthesisExpected, [], resyncStopToken);\n                }\n                return null;\n            }\n            if (!node.addChild(this._parseMediaFeatureName())) {\n                return this.finish(node, ParseError.IdentifierExpected, [], resyncStopToken);\n            }\n            if (this.accept(TokenType.Colon)) {\n                if (!node.addChild(this._parseExpr())) {\n                    return this.finish(node, ParseError.TermExpected, [], resyncStopToken);\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [], resyncStopToken);\n            }\n            parseExpression = this.acceptIdent('and');\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaContentStart = function () {\n        return null;\n    };\n    Parser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseMedium = function () {\n        var node = this.create(nodes.Node);\n        if (node.addChild(this._parseIdent())) {\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parsePageDeclaration = function () {\n        return this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n    };\n    Parser.prototype._parsePage = function () {\n        // http://www.w3.org/TR/css3-page/\n        // page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n        // page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n        if (!this.peekKeyword('@page')) {\n            return null;\n        }\n        var node = this.create(nodes.Page);\n        this.consumeToken();\n        if (node.addChild(this._parsePageSelector())) {\n            while (this.accept(TokenType.Comma)) {\n                if (!node.addChild(this._parsePageSelector())) {\n                    return this.finish(node, ParseError.IdentifierExpected);\n                }\n            }\n        }\n        return this._parseBody(node, this._parsePageDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageMarginBox = function () {\n        // page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var node = this.create(nodes.PageBoxMarginBox);\n        if (!this.acceptOneKeyword(languageFacts.pageBoxDirectives)) {\n            this.markError(node, ParseError.UnknownAtRule, [], [TokenType.CurlyL]);\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageSelector = function () {\n        // page_selector : pseudo_page+ | IDENT pseudo_page*\n        // pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n        if (!this.peek(TokenType.Ident) && !this.peek(TokenType.Colon)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        node.addChild(this._parseIdent()); // optional ident\n        if (this.accept(TokenType.Colon)) {\n            if (!node.addChild(this._parseIdent())) { // optional ident\n                return this.finish(node, ParseError.IdentifierExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseDocument = function () {\n        // -moz-document is experimental but has been pushed to css4\n        if (!this.peekKeyword('@-moz-document')) {\n            return null;\n        }\n        var node = this.create(nodes.Document);\n        this.consumeToken(); // @-moz-document\n        this.resync([], [TokenType.CurlyL]); // ignore all the rules\n        return this._parseBody(node, this._parseStylesheetStatement.bind(this));\n    };\n    // https://www.w3.org/TR/css-syntax-3/#consume-an-at-rule\n    Parser.prototype._parseUnknownAtRule = function () {\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var node = this.create(nodes.UnknownAtRule);\n        node.addChild(this._parseUnknownAtRuleName());\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyLCount = 0;\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case TokenType.SemiColon:\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case TokenType.EOF:\n                    if (curlyDepth > 0) {\n                        return this.finish(node, ParseError.RightCurlyExpected);\n                    }\n                    else if (bracketsDepth > 0) {\n                        return this.finish(node, ParseError.RightSquareBracketExpected);\n                    }\n                    else if (parensDepth > 0) {\n                        return this.finish(node, ParseError.RightParenthesisExpected);\n                    }\n                    else {\n                        return this.finish(node);\n                    }\n                case TokenType.CurlyL:\n                    curlyLCount++;\n                    curlyDepth++;\n                    break;\n                case TokenType.CurlyR:\n                    curlyDepth--;\n                    // End of at-rule, consume CurlyR and return node\n                    if (curlyLCount > 0 && curlyDepth === 0) {\n                        this.consumeToken();\n                        if (bracketsDepth > 0) {\n                            return this.finish(node, ParseError.RightSquareBracketExpected);\n                        }\n                        else if (parensDepth > 0) {\n                            return this.finish(node, ParseError.RightParenthesisExpected);\n                        }\n                        break done;\n                    }\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, ParseError.LeftCurlyExpected);\n                    }\n                    break;\n                case TokenType.ParenthesisL:\n                    parensDepth++;\n                    break;\n                case TokenType.ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, ParseError.LeftParenthesisExpected);\n                    }\n                    break;\n                case TokenType.BracketL:\n                    bracketsDepth++;\n                    break;\n                case TokenType.BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, ParseError.LeftSquareBracketExpected);\n                    }\n                    break;\n            }\n            this.consumeToken();\n        }\n        return node;\n    };\n    Parser.prototype._parseUnknownAtRuleName = function () {\n        var node = this.create(nodes.Node);\n        if (this.accept(TokenType.AtKeyword)) {\n            return this.finish(node);\n        }\n        return node;\n    };\n    Parser.prototype._parseOperator = function () {\n        // these are operators for binary expressions\n        if (this.peekDelim('/') ||\n            this.peekDelim('*') ||\n            this.peekDelim('+') ||\n            this.peekDelim('-') ||\n            this.peek(TokenType.Dashmatch) ||\n            this.peek(TokenType.Includes) ||\n            this.peek(TokenType.SubstringOperator) ||\n            this.peek(TokenType.PrefixOperator) ||\n            this.peek(TokenType.SuffixOperator) ||\n            this.peekDelim('=')) { // doesn't stick to the standard here\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parseUnaryOperator = function () {\n        if (!this.peekDelim('+') && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseCombinator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                    node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n                    return this.finish(node);\n                }\n                this.restoreAtMark(mark);\n            }\n            node.type = nodes.NodeType.SelectorCombinatorParent;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('+')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            node.type = nodes.NodeType.SelectorCombinatorSibling;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('~')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            node.type = nodes.NodeType.SelectorCombinatorAllSiblings;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('/')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptIdent('deep') && !this.hasWhitespace() && this.acceptDelim('/')) {\n                node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n                return this.finish(node);\n            }\n            this.restoreAtMark(mark);\n        }\n        return null;\n    };\n    Parser.prototype._parseSimpleSelector = function () {\n        // simple_selector\n        //  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n        var node = this.create(nodes.SimpleSelector);\n        var c = 0;\n        if (node.addChild(this._parseElementName())) {\n            c++;\n        }\n        while ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n            c++;\n        }\n        return c > 0 ? this.finish(node) : null;\n    };\n    Parser.prototype._parseSimpleSelectorBody = function () {\n        return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n    };\n    Parser.prototype._parseSelectorIdent = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseHash = function () {\n        if (!this.peek(TokenType.Hash) && !this.peekDelim('#')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.IdentifierSelector);\n        if (this.acceptDelim('#')) {\n            if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n                return this.finish(node, ParseError.IdentifierExpected);\n            }\n        }\n        else {\n            this.consumeToken(); // TokenType.Hash\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseClass = function () {\n        // class: '.' IDENT ;\n        if (!this.peekDelim('.')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.ClassSelector);\n        this.consumeToken(); // '.'\n        if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseElementName = function () {\n        // element_name: (ns? '|')? IDENT | '*';\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.ElementNameSelector);\n        node.addChild(this._parseNamespacePrefix());\n        if (!node.addChild(this._parseSelectorIdent()) && !this.acceptDelim('*')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespacePrefix = function () {\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.NamespacePrefix);\n        if (!node.addChild(this._parseIdent()) && !this.acceptDelim('*')) {\n            // ns is optional\n        }\n        if (!this.acceptDelim('|')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseAttrib = function () {\n        // attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n        if (!this.peek(TokenType.BracketL)) {\n            return null;\n        }\n        var node = this.create(nodes.AttributeSelector);\n        this.consumeToken(); // BracketL\n        // Optional attrib namespace\n        node.setNamespacePrefix(this._parseNamespacePrefix());\n        if (!node.setIdentifier(this._parseIdent())) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        if (node.setOperator(this._parseOperator())) {\n            node.setValue(this._parseBinaryExpr());\n            this.acceptIdent('i'); // case insensitive matching\n        }\n        if (!this.accept(TokenType.BracketR)) {\n            return this.finish(node, ParseError.RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parsePseudo = function () {\n        var _this = this;\n        // pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n        var node = this._tryParsePseudoIdentifier();\n        if (node) {\n            if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n                var tryAsSelector = function () {\n                    var selectors = _this.create(nodes.Node);\n                    if (!selectors.addChild(_this._parseSelector(false))) {\n                        return null;\n                    }\n                    while (_this.accept(TokenType.Comma) && selectors.addChild(_this._parseSelector(false))) {\n                        // loop\n                    }\n                    if (_this.peek(TokenType.ParenthesisR)) {\n                        return _this.finish(selectors);\n                    }\n                    return null;\n                };\n                node.addChild(this.try(tryAsSelector) || this._parseBinaryExpr());\n                if (!this.accept(TokenType.ParenthesisR)) {\n                    return this.finish(node, ParseError.RightParenthesisExpected);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._tryParsePseudoIdentifier = function () {\n        if (!this.peek(TokenType.Colon)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.PseudoSelector);\n        this.consumeToken(); // Colon\n        if (this.hasWhitespace()) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        // optional, support ::\n        if (this.accept(TokenType.Colon) && this.hasWhitespace()) {\n            this.markError(node, ParseError.IdentifierExpected);\n        }\n        if (!node.addChild(this._parseIdent())) {\n            this.markError(node, ParseError.IdentifierExpected);\n        }\n        return node;\n    };\n    Parser.prototype._tryParsePrio = function () {\n        var mark = this.mark();\n        var prio = this._parsePrio();\n        if (prio) {\n            return prio;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parsePrio = function () {\n        if (!this.peek(TokenType.Exclamation)) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.Prio);\n        if (this.accept(TokenType.Exclamation) && this.acceptIdent('important')) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseExpr = function (stopOnComma) {\n        if (stopOnComma === void 0) { stopOnComma = false; }\n        var node = this.create(nodes.Expression);\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return null;\n        }\n        while (true) {\n            if (this.peek(TokenType.Comma)) { // optional\n                if (stopOnComma) {\n                    return this.finish(node);\n                }\n                this.consumeToken();\n            }\n            if (!node.addChild(this._parseBinaryExpr())) {\n                break;\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamedLine = function () {\n        // https://www.w3.org/TR/css-grid-1/#named-lines\n        if (!this.peek(TokenType.BracketL)) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.GridLine);\n        this.consumeToken();\n        while (node.addChild(this._parseIdent())) {\n            // repeat\n        }\n        if (!this.accept(TokenType.BracketR)) {\n            return this.finish(node, ParseError.RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBinaryExpr = function (preparsedLeft, preparsedOper) {\n        var node = this.create(nodes.BinaryExpression);\n        if (!node.setLeft((preparsedLeft || this._parseTerm()))) {\n            return null;\n        }\n        if (!node.setOperator(preparsedOper || this._parseOperator())) {\n            return this.finish(node);\n        }\n        if (!node.setRight(this._parseTerm())) {\n            return this.finish(node, ParseError.TermExpected);\n        }\n        // things needed for multiple binary expressions\n        node = this.finish(node);\n        var operator = this._parseOperator();\n        if (operator) {\n            node = this._parseBinaryExpr(node, operator);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseTerm = function () {\n        var node = this.create(nodes.Term);\n        node.setOperator(this._parseUnaryOperator()); // optional\n        if (node.setExpression(this._parseURILiteral()) || // url before function\n            node.setExpression(this._parseFunction()) || // function before ident\n            node.setExpression(this._parseIdent()) ||\n            node.setExpression(this._parseStringLiteral()) ||\n            node.setExpression(this._parseNumeric()) ||\n            node.setExpression(this._parseHexColor()) ||\n            node.setExpression(this._parseOperation()) ||\n            node.setExpression(this._parseNamedLine())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseOperation = function () {\n        if (!this.peek(TokenType.ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken(); // ParenthesisL\n        node.addChild(this._parseExpr());\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNumeric = function () {\n        if (this.peek(TokenType.Num) ||\n            this.peek(TokenType.Percentage) ||\n            this.peek(TokenType.Resolution) ||\n            this.peek(TokenType.Length) ||\n            this.peek(TokenType.EMS) ||\n            this.peek(TokenType.EXS) ||\n            this.peek(TokenType.Angle) ||\n            this.peek(TokenType.Time) ||\n            this.peek(TokenType.Dimension) ||\n            this.peek(TokenType.Freq)) {\n            var node = this.create(nodes.NumericValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseStringLiteral = function () {\n        if (!this.peek(TokenType.String) && !this.peek(TokenType.BadString)) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.StringLiteral);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseURILiteral = function () {\n        if (!this.peekRegExp(TokenType.Ident, /^url(-prefix)?$/i)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.URILiteral);\n        this.accept(TokenType.Ident);\n        if (this.hasWhitespace() || !this.peek(TokenType.ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        this.scanner.inURL = true;\n        this.consumeToken(); // consume ()\n        node.addChild(this._parseURLArgument()); // argument is optional\n        this.scanner.inURL = false;\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseURLArgument = function () {\n        var node = this.create(nodes.Node);\n        if (!this.accept(TokenType.String) && !this.accept(TokenType.BadString) && !this.acceptUnquotedString()) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseIdent = function (referenceTypes) {\n        if (!this.peek(TokenType.Ident)) {\n            return null;\n        }\n        var node = this.create(nodes.Identifier);\n        if (referenceTypes) {\n            node.referenceTypes = referenceTypes;\n        }\n        node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(nodes.Function);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseFunctionArgument())) {\n            while (this.accept(TokenType.Comma)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                    this.markError(node, ParseError.ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionIdentifier = function () {\n        if (!this.peek(TokenType.Ident)) {\n            return null;\n        }\n        var node = this.create(nodes.Identifier);\n        node.referenceTypes = [nodes.ReferenceType.Function];\n        if (this.acceptIdent('progid')) {\n            // support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n            if (this.accept(TokenType.Colon)) {\n                while (this.accept(TokenType.Ident) && this.acceptDelim('.')) {\n                    // loop\n                }\n            }\n            return this.finish(node);\n        }\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionArgument = function () {\n        var node = this.create(nodes.FunctionArgument);\n        if (node.setValue(this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseHexColor = function () {\n        if (this.peekRegExp(TokenType.Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {\n            var node = this.create(nodes.HexColorValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    return Parser;\n}());\nexport { Parser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}