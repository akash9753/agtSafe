{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { LineTokens } from '../../common/core/lineTokens.js';\nimport { TokenizationRegistry } from '../../common/modes.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nvar Colorizer = /** @class */function () {\n  function Colorizer() {}\n  Colorizer.colorizeElement = function (themeService, modeService, domNode, options) {\n    options = options || {};\n    var theme = options.theme || 'vs';\n    var mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\n    if (!mimeType) {\n      console.error('Mode not detected');\n      return Promise.resolve();\n    }\n    themeService.setTheme(theme);\n    var text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\n    domNode.className += ' ' + theme;\n    var render = function render(str) {\n      domNode.innerHTML = str;\n    };\n    return this.colorize(modeService, text || '', mimeType, options).then(render, function (err) {\n      return console.error(err);\n    });\n  };\n  Colorizer.colorize = function (modeService, text, mimeType, options) {\n    var tabSize = 4;\n    if (options && typeof options.tabSize === 'number') {\n      tabSize = options.tabSize;\n    }\n    if (strings.startsWithUTF8BOM(text)) {\n      text = text.substr(1);\n    }\n    var lines = text.split(/\\r\\n|\\r|\\n/);\n    var language = modeService.getModeId(mimeType);\n    if (!language) {\n      return Promise.resolve(_fakeColorize(lines, tabSize));\n    }\n    // Send out the event to create the mode\n    modeService.triggerMode(language);\n    var tokenizationSupport = TokenizationRegistry.get(language);\n    if (tokenizationSupport) {\n      return _colorize(lines, tabSize, tokenizationSupport);\n    }\n    var tokenizationSupportPromise = TokenizationRegistry.getPromise(language);\n    if (tokenizationSupportPromise) {\n      // A tokenizer will be registered soon\n      return new Promise(function (resolve, reject) {\n        tokenizationSupportPromise.then(function (tokenizationSupport) {\n          _colorize(lines, tabSize, tokenizationSupport).then(resolve, reject);\n        }, reject);\n      });\n    }\n    return new Promise(function (resolve, reject) {\n      var listener = null;\n      var timeout = null;\n      var execute = function execute() {\n        if (listener) {\n          listener.dispose();\n          listener = null;\n        }\n        if (timeout) {\n          timeout.dispose();\n          timeout = null;\n        }\n        var tokenizationSupport = TokenizationRegistry.get(language);\n        if (tokenizationSupport) {\n          _colorize(lines, tabSize, tokenizationSupport).then(resolve, reject);\n          return;\n        }\n        resolve(_fakeColorize(lines, tabSize));\n      };\n      // wait 500ms for mode to load, then give up\n      timeout = new TimeoutTimer();\n      timeout.cancelAndSet(execute, 500);\n      listener = TokenizationRegistry.onDidChange(function (e) {\n        if (e.changedLanguages.indexOf(language) >= 0) {\n          execute();\n        }\n      });\n    });\n  };\n  Colorizer.colorizeLine = function (line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize) {\n    if (tabSize === void 0) {\n      tabSize = 4;\n    }\n    var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\n    var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\n    var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, -1, 'none', false, false, null));\n    return renderResult.html;\n  };\n  Colorizer.colorizeModelLine = function (model, lineNumber, tabSize) {\n    if (tabSize === void 0) {\n      tabSize = 4;\n    }\n    var content = model.getLineContent(lineNumber);\n    model.forceTokenization(lineNumber);\n    var tokens = model.getLineTokens(lineNumber);\n    var inflatedTokens = tokens.inflate();\n    return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\n  };\n  return Colorizer;\n}();\nexport { Colorizer };\nfunction _colorize(lines, tabSize, tokenizationSupport) {\n  return new Promise(function (c, e) {\n    var execute = function execute() {\n      var result = _actualColorize(lines, tabSize, tokenizationSupport);\n      if (tokenizationSupport instanceof MonarchTokenizer) {\n        var status_1 = tokenizationSupport.getLoadStatus();\n        if (status_1.loaded === false) {\n          status_1.promise.then(execute, e);\n          return;\n        }\n      }\n      c(result);\n    };\n    execute();\n  });\n}\nfunction _fakeColorize(lines, tabSize) {\n  var html = [];\n  var defaultMetadata = (0 /* None */ << 11 /* FONT_STYLE_OFFSET */ | 1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */ | 2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */) >>> 0;\n  var tokens = new Uint32Array(2);\n  tokens[0] = 0;\n  tokens[1] = defaultMetadata;\n  for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n    var line = lines[i];\n    tokens[0] = line.length;\n    var lineTokens = new LineTokens(tokens, line);\n    var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */true);\n    var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */true);\n    var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n  }\n  return html.join('');\n}\nfunction _actualColorize(lines, tabSize, tokenizationSupport) {\n  var html = [];\n  var state = tokenizationSupport.getInitialState();\n  for (var i = 0, length_2 = lines.length; i < length_2; i++) {\n    var line = lines[i];\n    var tokenizeResult = tokenizationSupport.tokenize2(line, state, 0);\n    LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\n    var lineTokens = new LineTokens(tokenizeResult.tokens, line);\n    var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */true);\n    var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */true);\n    var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n    state = tokenizeResult.endState;\n  }\n  return html.join('');\n}","map":{"version":3,"names":["TimeoutTimer","strings","LineTokens","TokenizationRegistry","RenderLineInput","renderViewLine2","renderViewLine","ViewLineRenderingData","MonarchTokenizer","Colorizer","colorizeElement","themeService","modeService","domNode","options","theme","mimeType","getAttribute","console","error","Promise","resolve","setTheme","text","firstChild","nodeValue","className","render","str","innerHTML","colorize","then","err","tabSize","startsWithUTF8BOM","substr","lines","split","language","getModeId","_fakeColorize","triggerMode","tokenizationSupport","get","_colorize","tokenizationSupportPromise","getPromise","reject","listener","timeout","execute","dispose","cancelAndSet","onDidChange","e","changedLanguages","indexOf","colorizeLine","line","mightContainNonBasicASCII","mightContainRTL","tokens","isBasicASCII","containsRTL","renderResult","html","colorizeModelLine","model","lineNumber","content","getLineContent","forceTokenization","getLineTokens","inflatedTokens","inflate","c","result","_actualColorize","status_1","getLoadStatus","loaded","promise","defaultMetadata","Uint32Array","i","length_1","length","lineTokens","concat","push","join","state","getInitialState","length_2","tokenizeResult","tokenize2","convertToEndOffset","endState"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/standalone/browser/colorizer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\r\nvar Colorizer = /** @class */ (function () {\r\n    function Colorizer() {\r\n    }\r\n    Colorizer.colorizeElement = function (themeService, modeService, domNode, options) {\r\n        options = options || {};\r\n        var theme = options.theme || 'vs';\r\n        var mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\r\n        if (!mimeType) {\r\n            console.error('Mode not detected');\r\n            return Promise.resolve();\r\n        }\r\n        themeService.setTheme(theme);\r\n        var text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\r\n        domNode.className += ' ' + theme;\r\n        var render = function (str) {\r\n            domNode.innerHTML = str;\r\n        };\r\n        return this.colorize(modeService, text || '', mimeType, options).then(render, function (err) { return console.error(err); });\r\n    };\r\n    Colorizer.colorize = function (modeService, text, mimeType, options) {\r\n        var tabSize = 4;\r\n        if (options && typeof options.tabSize === 'number') {\r\n            tabSize = options.tabSize;\r\n        }\r\n        if (strings.startsWithUTF8BOM(text)) {\r\n            text = text.substr(1);\r\n        }\r\n        var lines = text.split(/\\r\\n|\\r|\\n/);\r\n        var language = modeService.getModeId(mimeType);\r\n        if (!language) {\r\n            return Promise.resolve(_fakeColorize(lines, tabSize));\r\n        }\r\n        // Send out the event to create the mode\r\n        modeService.triggerMode(language);\r\n        var tokenizationSupport = TokenizationRegistry.get(language);\r\n        if (tokenizationSupport) {\r\n            return _colorize(lines, tabSize, tokenizationSupport);\r\n        }\r\n        var tokenizationSupportPromise = TokenizationRegistry.getPromise(language);\r\n        if (tokenizationSupportPromise) {\r\n            // A tokenizer will be registered soon\r\n            return new Promise(function (resolve, reject) {\r\n                tokenizationSupportPromise.then(function (tokenizationSupport) {\r\n                    _colorize(lines, tabSize, tokenizationSupport).then(resolve, reject);\r\n                }, reject);\r\n            });\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var listener = null;\r\n            var timeout = null;\r\n            var execute = function () {\r\n                if (listener) {\r\n                    listener.dispose();\r\n                    listener = null;\r\n                }\r\n                if (timeout) {\r\n                    timeout.dispose();\r\n                    timeout = null;\r\n                }\r\n                var tokenizationSupport = TokenizationRegistry.get(language);\r\n                if (tokenizationSupport) {\r\n                    _colorize(lines, tabSize, tokenizationSupport).then(resolve, reject);\r\n                    return;\r\n                }\r\n                resolve(_fakeColorize(lines, tabSize));\r\n            };\r\n            // wait 500ms for mode to load, then give up\r\n            timeout = new TimeoutTimer();\r\n            timeout.cancelAndSet(execute, 500);\r\n            listener = TokenizationRegistry.onDidChange(function (e) {\r\n                if (e.changedLanguages.indexOf(language) >= 0) {\r\n                    execute();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Colorizer.colorizeLine = function (line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize) {\r\n        if (tabSize === void 0) { tabSize = 4; }\r\n        var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\r\n        var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\r\n        var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, -1, 'none', false, false, null));\r\n        return renderResult.html;\r\n    };\r\n    Colorizer.colorizeModelLine = function (model, lineNumber, tabSize) {\r\n        if (tabSize === void 0) { tabSize = 4; }\r\n        var content = model.getLineContent(lineNumber);\r\n        model.forceTokenization(lineNumber);\r\n        var tokens = model.getLineTokens(lineNumber);\r\n        var inflatedTokens = tokens.inflate();\r\n        return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\r\n    };\r\n    return Colorizer;\r\n}());\r\nexport { Colorizer };\r\nfunction _colorize(lines, tabSize, tokenizationSupport) {\r\n    return new Promise(function (c, e) {\r\n        var execute = function () {\r\n            var result = _actualColorize(lines, tabSize, tokenizationSupport);\r\n            if (tokenizationSupport instanceof MonarchTokenizer) {\r\n                var status_1 = tokenizationSupport.getLoadStatus();\r\n                if (status_1.loaded === false) {\r\n                    status_1.promise.then(execute, e);\r\n                    return;\r\n                }\r\n            }\r\n            c(result);\r\n        };\r\n        execute();\r\n    });\r\n}\r\nfunction _fakeColorize(lines, tabSize) {\r\n    var html = [];\r\n    var defaultMetadata = ((0 /* None */ << 11 /* FONT_STYLE_OFFSET */)\r\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\r\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    var tokens = new Uint32Array(2);\r\n    tokens[0] = 0;\r\n    tokens[1] = defaultMetadata;\r\n    for (var i = 0, length_1 = lines.length; i < length_1; i++) {\r\n        var line = lines[i];\r\n        tokens[0] = line.length;\r\n        var lineTokens = new LineTokens(tokens, line);\r\n        var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\r\n        var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\r\n        var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, -1, 'none', false, false, null));\r\n        html = html.concat(renderResult.html);\r\n        html.push('<br/>');\r\n    }\r\n    return html.join('');\r\n}\r\nfunction _actualColorize(lines, tabSize, tokenizationSupport) {\r\n    var html = [];\r\n    var state = tokenizationSupport.getInitialState();\r\n    for (var i = 0, length_2 = lines.length; i < length_2; i++) {\r\n        var line = lines[i];\r\n        var tokenizeResult = tokenizationSupport.tokenize2(line, state, 0);\r\n        LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\r\n        var lineTokens = new LineTokens(tokenizeResult.tokens, line);\r\n        var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\r\n        var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\r\n        var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, -1, 'none', false, false, null));\r\n        html = html.concat(renderResult.html);\r\n        html.push('<br/>');\r\n        state = tokenizeResult.endState;\r\n    }\r\n    return html.join('');\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}