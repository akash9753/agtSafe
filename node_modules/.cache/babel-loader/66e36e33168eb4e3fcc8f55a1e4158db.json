{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport './quickopen.css';\nimport * as nls from '../../../../nls.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport { Filter, Renderer, DataSource, AccessibilityProvider } from './quickOpenViewer.js';\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\nimport { Tree } from '../../tree/browser/treeImpl.js';\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { DefaultController } from '../../tree/browser/treeDefaults.js';\nimport * as DOM from '../../../browser/dom.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\nvar QuickOpenController = /** @class */function (_super) {\n  __extends(QuickOpenController, _super);\n  function QuickOpenController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  QuickOpenController.prototype.onContextMenu = function (tree, element, event) {\n    if (platform.isMacintosh) {\n      return this.onLeftClick(tree, element, event); // https://github.com/Microsoft/vscode/issues/1011\n    }\n\n    return _super.prototype.onContextMenu.call(this, tree, element, event);\n  };\n  return QuickOpenController;\n}(DefaultController);\nexport { QuickOpenController };\nvar defaultStyles = {\n  background: Color.fromHex('#1E1E1E'),\n  foreground: Color.fromHex('#CCCCCC'),\n  pickerGroupForeground: Color.fromHex('#0097FB'),\n  pickerGroupBorder: Color.fromHex('#3F3F46'),\n  widgetShadow: Color.fromHex('#000000'),\n  progressBarBackground: Color.fromHex('#0E70C0')\n};\nvar DEFAULT_INPUT_ARIA_LABEL = nls.localize('quickOpenAriaLabel', \"Quick picker. Type to narrow down results.\");\nvar QuickOpenWidget = /** @class */function (_super) {\n  __extends(QuickOpenWidget, _super);\n  function QuickOpenWidget(container, callbacks, options) {\n    var _this = _super.call(this) || this;\n    _this.isDisposed = false;\n    _this.container = container;\n    _this.callbacks = callbacks;\n    _this.options = options;\n    _this.styles = options || Object.create(null);\n    mixin(_this.styles, defaultStyles, false);\n    _this.model = null;\n    return _this;\n  }\n  QuickOpenWidget.prototype.getModel = function () {\n    return this.model;\n  };\n  QuickOpenWidget.prototype.create = function () {\n    var _this = this;\n    // Container\n    this.element = document.createElement('div');\n    DOM.addClass(this.element, 'monaco-quick-open-widget');\n    this.container.appendChild(this.element);\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.CONTEXT_MENU, function (e) {\n      return DOM.EventHelper.stop(e, true);\n    })); // Do this to fix an issue on Mac where the menu goes into the way\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.FOCUS, function (e) {\n      return _this.gainingFocus();\n    }, true));\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.BLUR, function (e) {\n      return _this.loosingFocus(e);\n    }, true));\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n      if (keyboardEvent.keyCode === 9 /* Escape */) {\n        DOM.EventHelper.stop(e, true);\n        _this.hide(2 /* CANCELED */);\n      } else if (keyboardEvent.keyCode === 2 /* Tab */ && !keyboardEvent.altKey && !keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n        var stops = e.currentTarget.querySelectorAll('input, .monaco-tree, .monaco-tree-row.focused .action-label.icon');\n        if (keyboardEvent.shiftKey && keyboardEvent.target === stops[0]) {\n          DOM.EventHelper.stop(e, true);\n          stops[stops.length - 1].focus();\n        } else if (!keyboardEvent.shiftKey && keyboardEvent.target === stops[stops.length - 1]) {\n          DOM.EventHelper.stop(e, true);\n          stops[0].focus();\n        }\n      }\n    }));\n    // Progress Bar\n    this.progressBar = this._register(new ProgressBar(this.element, {\n      progressBarBackground: this.styles.progressBarBackground\n    }));\n    this.progressBar.hide();\n    // Input Field\n    this.inputContainer = document.createElement('div');\n    DOM.addClass(this.inputContainer, 'quick-open-input');\n    this.element.appendChild(this.inputContainer);\n    this.inputBox = this._register(new InputBox(this.inputContainer, undefined, {\n      placeholder: this.options.inputPlaceHolder || '',\n      ariaLabel: DEFAULT_INPUT_ARIA_LABEL,\n      inputBackground: this.styles.inputBackground,\n      inputForeground: this.styles.inputForeground,\n      inputBorder: this.styles.inputBorder,\n      inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\n      inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\n      inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\n      inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\n      inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\n      inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\n      inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\n      inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\n      inputValidationErrorBorder: this.styles.inputValidationErrorBorder\n    }));\n    this.inputElement = this.inputBox.inputElement;\n    this.inputElement.setAttribute('role', 'combobox');\n    this.inputElement.setAttribute('aria-haspopup', 'false');\n    this.inputElement.setAttribute('aria-autocomplete', 'list');\n    this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.INPUT, function (e) {\n      return _this.onType();\n    }));\n    this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n      var shouldOpenInBackground = _this.shouldOpenInBackground(keyboardEvent);\n      // Do not handle Tab: It is used to navigate between elements without mouse\n      if (keyboardEvent.keyCode === 2 /* Tab */) {\n        return;\n      }\n      // Pass tree navigation keys to the tree but leave focus in input field\n      else if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\n        DOM.EventHelper.stop(e, true);\n        _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey);\n        // Position cursor at the end of input to allow right arrow (open in background)\n        // to function immediately unless the user has made a selection\n        if (_this.inputBox.inputElement.selectionStart === _this.inputBox.inputElement.selectionEnd) {\n          _this.inputBox.inputElement.selectionStart = _this.inputBox.value.length;\n        }\n      }\n      // Select element on Enter or on Arrow-Right if we are at the end of the input\n      else if (keyboardEvent.keyCode === 3 /* Enter */ || shouldOpenInBackground) {\n        DOM.EventHelper.stop(e, true);\n        var focus_1 = _this.tree.getFocus();\n        if (focus_1) {\n          _this.elementSelected(focus_1, e, shouldOpenInBackground ? 2 /* OPEN_IN_BACKGROUND */ : 1 /* OPEN */);\n        }\n      }\n    }));\n    // Result count for screen readers\n    this.resultCount = document.createElement('div');\n    DOM.addClass(this.resultCount, 'quick-open-result-count');\n    this.resultCount.setAttribute('aria-live', 'polite');\n    this.resultCount.setAttribute('aria-atomic', 'true');\n    this.element.appendChild(this.resultCount);\n    // Tree\n    this.treeContainer = document.createElement('div');\n    DOM.addClass(this.treeContainer, 'quick-open-tree');\n    this.element.appendChild(this.treeContainer);\n    var createTree = this.options.treeCreator || function (container, config, opts) {\n      return new Tree(container, config, opts);\n    };\n    this.tree = this._register(createTree(this.treeContainer, {\n      dataSource: new DataSource(this),\n      controller: new QuickOpenController({\n        clickBehavior: 1 /* ON_MOUSE_UP */,\n        keyboardSupport: this.options.keyboardSupport\n      }),\n      renderer: this.renderer = new Renderer(this, this.styles),\n      filter: new Filter(this),\n      accessibilityProvider: new AccessibilityProvider(this)\n    }, {\n      twistiePixels: 11,\n      indentPixels: 0,\n      alwaysFocused: true,\n      verticalScrollMode: 3 /* Visible */,\n      horizontalScrollMode: 2 /* Hidden */,\n      ariaLabel: nls.localize('treeAriaLabel', \"Quick Picker\"),\n      keyboardSupport: this.options.keyboardSupport,\n      preventRootFocus: false\n    }));\n    this.treeElement = this.tree.getHTMLElement();\n    // Handle Focus and Selection event\n    this._register(this.tree.onDidChangeFocus(function (event) {\n      _this.elementFocused(event.focus, event);\n    }));\n    this._register(this.tree.onDidChangeSelection(function (event) {\n      if (event.selection && event.selection.length > 0) {\n        var mouseEvent = event.payload && event.payload.originalEvent instanceof StandardMouseEvent ? event.payload.originalEvent : undefined;\n        var shouldOpenInBackground = mouseEvent ? _this.shouldOpenInBackground(mouseEvent) : false;\n        _this.elementSelected(event.selection[0], event, shouldOpenInBackground ? 2 /* OPEN_IN_BACKGROUND */ : 1 /* OPEN */);\n      }\n    }));\n\n    this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n      // Only handle when in quick navigation mode\n      if (!_this.quickNavigateConfiguration) {\n        return;\n      }\n      // Support keyboard navigation in quick navigation mode\n      if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\n        DOM.EventHelper.stop(e, true);\n        _this.navigateInTree(keyboardEvent.keyCode);\n      }\n      // Support to open item with Enter still even in quick nav mode\n      else if (keyboardEvent.keyCode === 3 /* Enter */) {\n        DOM.EventHelper.stop(e, true);\n        var focus_2 = _this.tree.getFocus();\n        if (focus_2) {\n          _this.elementSelected(focus_2, e);\n        }\n      }\n    }));\n    this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_UP, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n      var keyCode = keyboardEvent.keyCode;\n      // Only handle when in quick navigation mode\n      if (!_this.quickNavigateConfiguration) {\n        return;\n      }\n      // Select element when keys are pressed that signal it\n      var quickNavKeys = _this.quickNavigateConfiguration.keybindings;\n      var wasTriggerKeyPressed = quickNavKeys.some(function (k) {\n        var _a = k.getParts(),\n          firstPart = _a[0],\n          chordPart = _a[1];\n        if (chordPart) {\n          return false;\n        }\n        if (firstPart.shiftKey && keyCode === 4 /* Shift */) {\n          if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n            return false; // this is an optimistic check for the shift key being used to navigate back in quick open\n          }\n\n          return true;\n        }\n        if (firstPart.altKey && keyCode === 6 /* Alt */) {\n          return true;\n        }\n        if (firstPart.ctrlKey && keyCode === 5 /* Ctrl */) {\n          return true;\n        }\n        if (firstPart.metaKey && keyCode === 57 /* Meta */) {\n          return true;\n        }\n        return false;\n      });\n      if (wasTriggerKeyPressed) {\n        var focus_3 = _this.tree.getFocus();\n        if (focus_3) {\n          _this.elementSelected(focus_3, e);\n        }\n      }\n    }));\n    // Support layout\n    if (this.layoutDimensions) {\n      this.layout(this.layoutDimensions);\n    }\n    this.applyStyles();\n    // Allows focus to switch to next/previous entry after tab into an actionbar item\n    this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n      // Only handle when not in quick navigation mode\n      if (_this.quickNavigateConfiguration) {\n        return;\n      }\n      if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\n        DOM.EventHelper.stop(e, true);\n        _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey);\n        _this.treeElement.focus();\n      }\n    }));\n    return this.element;\n  };\n  QuickOpenWidget.prototype.style = function (styles) {\n    this.styles = styles;\n    this.applyStyles();\n  };\n  QuickOpenWidget.prototype.applyStyles = function () {\n    if (this.element) {\n      var foreground = this.styles.foreground ? this.styles.foreground.toString() : '';\n      var background = this.styles.background ? this.styles.background.toString() : '';\n      var borderColor = this.styles.borderColor ? this.styles.borderColor.toString() : '';\n      var widgetShadow = this.styles.widgetShadow ? this.styles.widgetShadow.toString() : '';\n      this.element.style.color = foreground;\n      this.element.style.backgroundColor = background;\n      this.element.style.borderColor = borderColor;\n      this.element.style.borderWidth = borderColor ? '1px' : '';\n      this.element.style.borderStyle = borderColor ? 'solid' : '';\n      this.element.style.boxShadow = widgetShadow ? \"0 5px 8px \" + widgetShadow : '';\n    }\n    if (this.progressBar) {\n      this.progressBar.style({\n        progressBarBackground: this.styles.progressBarBackground\n      });\n    }\n    if (this.inputBox) {\n      this.inputBox.style({\n        inputBackground: this.styles.inputBackground,\n        inputForeground: this.styles.inputForeground,\n        inputBorder: this.styles.inputBorder,\n        inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\n        inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\n        inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\n        inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\n        inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\n        inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\n        inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\n        inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\n        inputValidationErrorBorder: this.styles.inputValidationErrorBorder\n      });\n    }\n    if (this.tree && !this.options.treeCreator) {\n      this.tree.style(this.styles);\n    }\n    if (this.renderer) {\n      this.renderer.updateStyles(this.styles);\n    }\n  };\n  QuickOpenWidget.prototype.shouldOpenInBackground = function (e) {\n    // Keyboard\n    if (e instanceof StandardKeyboardEvent) {\n      if (e.keyCode !== 17 /* RightArrow */) {\n        return false; // only for right arrow\n      }\n\n      if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) {\n        return false; // no modifiers allowed\n      }\n      // validate the cursor is at the end of the input and there is no selection,\n      // and if not prevent opening in the background such as the selection can be changed\n      var element = this.inputBox.inputElement;\n      return element.selectionEnd === this.inputBox.value.length && element.selectionStart === element.selectionEnd;\n    }\n    // Mouse\n    return e.middleButton;\n  };\n  QuickOpenWidget.prototype.onType = function () {\n    var value = this.inputBox.value;\n    // Adjust help text as needed if present\n    if (this.helpText) {\n      if (value) {\n        DOM.hide(this.helpText);\n      } else {\n        DOM.show(this.helpText);\n      }\n    }\n    // Send to callbacks\n    this.callbacks.onType(value);\n  };\n  QuickOpenWidget.prototype.navigateInTree = function (keyCode, isShift) {\n    var model = this.tree.getInput();\n    var entries = model ? model.entries : [];\n    var oldFocus = this.tree.getFocus();\n    // Normal Navigation\n    switch (keyCode) {\n      case 18 /* DownArrow */:\n        this.tree.focusNext();\n        break;\n      case 16 /* UpArrow */:\n        this.tree.focusPrevious();\n        break;\n      case 12 /* PageDown */:\n        this.tree.focusNextPage();\n        break;\n      case 11 /* PageUp */:\n        this.tree.focusPreviousPage();\n        break;\n      case 2 /* Tab */:\n        if (isShift) {\n          this.tree.focusPrevious();\n        } else {\n          this.tree.focusNext();\n        }\n        break;\n    }\n    var newFocus = this.tree.getFocus();\n    // Support cycle-through navigation if focus did not change\n    if (entries.length > 1 && oldFocus === newFocus) {\n      // Up from no entry or first entry goes down to last\n      if (keyCode === 16 /* UpArrow */ || keyCode === 2 /* Tab */ && isShift) {\n        this.tree.focusLast();\n      }\n      // Down from last entry goes to up to first\n      else if (keyCode === 18 /* DownArrow */ || keyCode === 2 /* Tab */ && !isShift) {\n        this.tree.focusFirst();\n      }\n    }\n    // Reveal\n    newFocus = this.tree.getFocus();\n    if (newFocus) {\n      this.tree.reveal(newFocus);\n    }\n  };\n  QuickOpenWidget.prototype.elementFocused = function (value, event) {\n    if (!value || !this.isVisible()) {\n      return;\n    }\n    // ARIA\n    var arivaActiveDescendant = this.treeElement.getAttribute('aria-activedescendant');\n    if (arivaActiveDescendant) {\n      this.inputElement.setAttribute('aria-activedescendant', arivaActiveDescendant);\n    } else {\n      this.inputElement.removeAttribute('aria-activedescendant');\n    }\n    var context = {\n      event: event,\n      keymods: this.extractKeyMods(event),\n      quickNavigateConfiguration: this.quickNavigateConfiguration\n    };\n    this.model.runner.run(value, 0 /* PREVIEW */, context);\n  };\n  QuickOpenWidget.prototype.elementSelected = function (value, event, preferredMode) {\n    var hide = true;\n    // Trigger open of element on selection\n    if (this.isVisible()) {\n      var mode = preferredMode || 1 /* OPEN */;\n      var context = {\n        event: event,\n        keymods: this.extractKeyMods(event),\n        quickNavigateConfiguration: this.quickNavigateConfiguration\n      };\n      hide = this.model.runner.run(value, mode, context);\n    }\n    // Hide if command was run successfully\n    if (hide) {\n      this.hide(0 /* ELEMENT_SELECTED */);\n    }\n  };\n\n  QuickOpenWidget.prototype.extractKeyMods = function (event) {\n    return {\n      ctrlCmd: event && (event.ctrlKey || event.metaKey || event.payload && event.payload.originalEvent && (event.payload.originalEvent.ctrlKey || event.payload.originalEvent.metaKey)),\n      alt: event && (event.altKey || event.payload && event.payload.originalEvent && event.payload.originalEvent.altKey)\n    };\n  };\n  QuickOpenWidget.prototype.show = function (param, options) {\n    this.visible = true;\n    this.isLoosingFocus = false;\n    this.quickNavigateConfiguration = options ? options.quickNavigateConfiguration : undefined;\n    // Adjust UI for quick navigate mode\n    if (this.quickNavigateConfiguration) {\n      DOM.hide(this.inputContainer);\n      DOM.show(this.element);\n      this.tree.domFocus();\n    }\n    // Otherwise use normal UI\n    else {\n      DOM.show(this.inputContainer);\n      DOM.show(this.element);\n      this.inputBox.focus();\n    }\n    // Adjust Help text for IE\n    if (this.helpText) {\n      if (this.quickNavigateConfiguration || types.isString(param)) {\n        DOM.hide(this.helpText);\n      } else {\n        DOM.show(this.helpText);\n      }\n    }\n    // Show based on param\n    if (types.isString(param)) {\n      this.doShowWithPrefix(param);\n    } else {\n      if (options && options.value) {\n        this.restoreLastInput(options.value);\n      }\n      this.doShowWithInput(param, options && options.autoFocus ? options.autoFocus : {});\n    }\n    // Respect selectAll option\n    if (options && options.inputSelection && !this.quickNavigateConfiguration) {\n      this.inputBox.select(options.inputSelection);\n    }\n    if (this.callbacks.onShow) {\n      this.callbacks.onShow();\n    }\n  };\n  QuickOpenWidget.prototype.restoreLastInput = function (lastInput) {\n    this.inputBox.value = lastInput;\n    this.inputBox.select();\n    this.callbacks.onType(lastInput);\n  };\n  QuickOpenWidget.prototype.doShowWithPrefix = function (prefix) {\n    this.inputBox.value = prefix;\n    this.callbacks.onType(prefix);\n  };\n  QuickOpenWidget.prototype.doShowWithInput = function (input, autoFocus) {\n    this.setInput(input, autoFocus);\n  };\n  QuickOpenWidget.prototype.setInputAndLayout = function (input, autoFocus) {\n    var _this = this;\n    this.treeContainer.style.height = this.getHeight(input) + \"px\";\n    this.tree.setInput(null).then(function () {\n      _this.model = input;\n      // ARIA\n      _this.inputElement.setAttribute('aria-haspopup', String(input && input.entries && input.entries.length > 0));\n      return _this.tree.setInput(input);\n    }).then(function () {\n      // Indicate entries to tree\n      _this.tree.layout();\n      var entries = input ? input.entries.filter(function (e) {\n        return _this.isElementVisible(input, e);\n      }) : [];\n      _this.updateResultCount(entries.length);\n      // Handle auto focus\n      if (entries.length) {\n        _this.autoFocus(input, entries, autoFocus);\n      }\n    });\n  };\n  QuickOpenWidget.prototype.isElementVisible = function (input, e) {\n    if (!input.filter) {\n      return true;\n    }\n    return input.filter.isVisible(e);\n  };\n  QuickOpenWidget.prototype.autoFocus = function (input, entries, autoFocus) {\n    if (autoFocus === void 0) {\n      autoFocus = {};\n    }\n    // First check for auto focus of prefix matches\n    if (autoFocus.autoFocusPrefixMatch) {\n      var caseSensitiveMatch = void 0;\n      var caseInsensitiveMatch = void 0;\n      var prefix = autoFocus.autoFocusPrefixMatch;\n      var lowerCasePrefix = prefix.toLowerCase();\n      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n        var entry = entries_1[_i];\n        var label = input.dataSource.getLabel(entry) || '';\n        if (!caseSensitiveMatch && label.indexOf(prefix) === 0) {\n          caseSensitiveMatch = entry;\n        } else if (!caseInsensitiveMatch && label.toLowerCase().indexOf(lowerCasePrefix) === 0) {\n          caseInsensitiveMatch = entry;\n        }\n        if (caseSensitiveMatch && caseInsensitiveMatch) {\n          break;\n        }\n      }\n      var entryToFocus = caseSensitiveMatch || caseInsensitiveMatch;\n      if (entryToFocus) {\n        this.tree.setFocus(entryToFocus);\n        this.tree.reveal(entryToFocus, 0.5);\n        return;\n      }\n    }\n    // Second check for auto focus of first entry\n    if (autoFocus.autoFocusFirstEntry) {\n      this.tree.focusFirst();\n      this.tree.reveal(this.tree.getFocus());\n    }\n    // Third check for specific index option\n    else if (typeof autoFocus.autoFocusIndex === 'number') {\n      if (entries.length > autoFocus.autoFocusIndex) {\n        this.tree.focusNth(autoFocus.autoFocusIndex);\n        this.tree.reveal(this.tree.getFocus());\n      }\n    }\n    // Check for auto focus of second entry\n    else if (autoFocus.autoFocusSecondEntry) {\n      if (entries.length > 1) {\n        this.tree.focusNth(1);\n      }\n    }\n    // Finally check for auto focus of last entry\n    else if (autoFocus.autoFocusLastEntry) {\n      if (entries.length > 1) {\n        this.tree.focusLast();\n        this.tree.reveal(this.tree.getFocus());\n      }\n    }\n  };\n  QuickOpenWidget.prototype.getHeight = function (input) {\n    var _this = this;\n    var renderer = input.renderer;\n    if (!input) {\n      var itemHeight = renderer.getHeight(null);\n      return this.options.minItemsToShow ? this.options.minItemsToShow * itemHeight : 0;\n    }\n    var height = 0;\n    var preferredItemsHeight;\n    if (this.layoutDimensions && this.layoutDimensions.height) {\n      preferredItemsHeight = (this.layoutDimensions.height - 50 /* subtract height of input field (30px) and some spacing (drop shadow) to fit */) * 0.4 /* max 40% of screen */;\n    }\n\n    if (!preferredItemsHeight || preferredItemsHeight > QuickOpenWidget.MAX_ITEMS_HEIGHT) {\n      preferredItemsHeight = QuickOpenWidget.MAX_ITEMS_HEIGHT;\n    }\n    var entries = input.entries.filter(function (e) {\n      return _this.isElementVisible(input, e);\n    });\n    var maxEntries = this.options.maxItemsToShow || entries.length;\n    for (var i = 0; i < maxEntries && i < entries.length; i++) {\n      var entryHeight = renderer.getHeight(entries[i]);\n      if (height + entryHeight <= preferredItemsHeight) {\n        height += entryHeight;\n      } else {\n        break;\n      }\n    }\n    return height;\n  };\n  QuickOpenWidget.prototype.updateResultCount = function (count) {\n    this.resultCount.textContent = nls.localize({\n      key: 'quickInput.visibleCount',\n      comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n    }, \"{0} Results\", count);\n  };\n  QuickOpenWidget.prototype.hide = function (reason) {\n    if (!this.isVisible()) {\n      return;\n    }\n    this.visible = false;\n    DOM.hide(this.element);\n    this.element.blur();\n    // Clear input field and clear tree\n    this.inputBox.value = '';\n    this.tree.setInput(null);\n    // ARIA\n    this.inputElement.setAttribute('aria-haspopup', 'false');\n    // Reset Tree Height\n    this.treeContainer.style.height = (this.options.minItemsToShow ? this.options.minItemsToShow * 22 : 0) + \"px\";\n    // Clear any running Progress\n    this.progressBar.stop().hide();\n    // Clear Focus\n    if (this.tree.isDOMFocused()) {\n      this.tree.domBlur();\n    } else if (this.inputBox.hasFocus()) {\n      this.inputBox.blur();\n    }\n    // Callbacks\n    if (reason === 0 /* ELEMENT_SELECTED */) {\n      this.callbacks.onOk();\n    } else {\n      this.callbacks.onCancel();\n    }\n    if (this.callbacks.onHide) {\n      this.callbacks.onHide(reason);\n    }\n  };\n  QuickOpenWidget.prototype.setInput = function (input, autoFocus, ariaLabel) {\n    if (!this.isVisible()) {\n      return;\n    }\n    // If the input changes, indicate this to the tree\n    if (!!this.getInput()) {\n      this.onInputChanging();\n    }\n    // Adapt tree height to entries and apply input\n    this.setInputAndLayout(input, autoFocus);\n    // Apply ARIA\n    if (this.inputBox) {\n      this.inputBox.setAriaLabel(ariaLabel || DEFAULT_INPUT_ARIA_LABEL);\n    }\n  };\n  QuickOpenWidget.prototype.onInputChanging = function () {\n    var _this = this;\n    if (this.inputChangingTimeoutHandle) {\n      clearTimeout(this.inputChangingTimeoutHandle);\n      this.inputChangingTimeoutHandle = null;\n    }\n    // when the input is changing in quick open, we indicate this as CSS class to the widget\n    // for a certain timeout. this helps reducing some hectic UI updates when input changes quickly\n    DOM.addClass(this.element, 'content-changing');\n    this.inputChangingTimeoutHandle = setTimeout(function () {\n      DOM.removeClass(_this.element, 'content-changing');\n    }, 500);\n  };\n  QuickOpenWidget.prototype.getInput = function () {\n    return this.tree.getInput();\n  };\n  QuickOpenWidget.prototype.isVisible = function () {\n    return this.visible;\n  };\n  QuickOpenWidget.prototype.layout = function (dimension) {\n    this.layoutDimensions = dimension;\n    // Apply to quick open width (height is dynamic by number of items to show)\n    var quickOpenWidth = Math.min(this.layoutDimensions.width * 0.62 /* golden cut */, QuickOpenWidget.MAX_WIDTH);\n    if (this.element) {\n      // quick open\n      this.element.style.width = quickOpenWidth + \"px\";\n      this.element.style.marginLeft = \"-\" + quickOpenWidth / 2 + \"px\";\n      // input field\n      this.inputContainer.style.width = quickOpenWidth - 12 + \"px\";\n    }\n  };\n  QuickOpenWidget.prototype.gainingFocus = function () {\n    this.isLoosingFocus = false;\n  };\n  QuickOpenWidget.prototype.loosingFocus = function (e) {\n    var _this = this;\n    if (!this.isVisible()) {\n      return;\n    }\n    var relatedTarget = e.relatedTarget;\n    if (!this.quickNavigateConfiguration && DOM.isAncestor(relatedTarget, this.element)) {\n      return; // user clicked somewhere into quick open widget, do not close thereby\n    }\n\n    this.isLoosingFocus = true;\n    setTimeout(function () {\n      if (!_this.isLoosingFocus || _this.isDisposed) {\n        return;\n      }\n      var veto = _this.callbacks.onFocusLost && _this.callbacks.onFocusLost();\n      if (!veto) {\n        _this.hide(1 /* FOCUS_LOST */);\n      }\n    }, 0);\n  };\n  QuickOpenWidget.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n    this.isDisposed = true;\n  };\n  QuickOpenWidget.MAX_WIDTH = 600; // Max total width of quick open widget\n  QuickOpenWidget.MAX_ITEMS_HEIGHT = 20 * 22; // Max height of item list below input field\n  return QuickOpenWidget;\n}(Disposable);\nexport { QuickOpenWidget };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","platform","types","Filter","Renderer","DataSource","AccessibilityProvider","InputBox","Tree","ProgressBar","StandardKeyboardEvent","DefaultController","DOM","Disposable","Color","mixin","StandardMouseEvent","QuickOpenController","_super","apply","arguments","onContextMenu","tree","element","event","isMacintosh","onLeftClick","call","defaultStyles","background","fromHex","foreground","pickerGroupForeground","pickerGroupBorder","widgetShadow","progressBarBackground","DEFAULT_INPUT_ARIA_LABEL","localize","QuickOpenWidget","container","callbacks","options","_this","isDisposed","styles","model","getModel","document","createElement","addClass","appendChild","_register","addDisposableListener","EventType","CONTEXT_MENU","e","EventHelper","stop","FOCUS","gainingFocus","BLUR","loosingFocus","KEY_DOWN","keyboardEvent","keyCode","hide","altKey","ctrlKey","metaKey","stops","currentTarget","querySelectorAll","shiftKey","target","length","focus","progressBar","inputContainer","inputBox","undefined","placeholder","inputPlaceHolder","ariaLabel","inputBackground","inputForeground","inputBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","inputElement","setAttribute","INPUT","onType","shouldOpenInBackground","navigateInTree","selectionStart","selectionEnd","value","focus_1","getFocus","elementSelected","resultCount","treeContainer","createTree","treeCreator","config","opts","dataSource","controller","clickBehavior","keyboardSupport","renderer","filter","accessibilityProvider","twistiePixels","indentPixels","alwaysFocused","verticalScrollMode","horizontalScrollMode","preventRootFocus","treeElement","getHTMLElement","onDidChangeFocus","elementFocused","onDidChangeSelection","selection","mouseEvent","payload","originalEvent","quickNavigateConfiguration","focus_2","KEY_UP","quickNavKeys","keybindings","wasTriggerKeyPressed","some","k","_a","getParts","firstPart","chordPart","focus_3","layoutDimensions","layout","applyStyles","style","toString","borderColor","color","backgroundColor","borderWidth","borderStyle","boxShadow","updateStyles","middleButton","helpText","show","isShift","getInput","entries","oldFocus","focusNext","focusPrevious","focusNextPage","focusPreviousPage","newFocus","focusLast","focusFirst","reveal","isVisible","arivaActiveDescendant","getAttribute","removeAttribute","context","keymods","extractKeyMods","runner","run","preferredMode","mode","ctrlCmd","alt","param","visible","isLoosingFocus","domFocus","isString","doShowWithPrefix","restoreLastInput","doShowWithInput","autoFocus","inputSelection","select","onShow","lastInput","prefix","input","setInput","setInputAndLayout","height","getHeight","then","String","isElementVisible","updateResultCount","autoFocusPrefixMatch","caseSensitiveMatch","caseInsensitiveMatch","lowerCasePrefix","toLowerCase","_i","entries_1","entry","label","getLabel","indexOf","entryToFocus","setFocus","autoFocusFirstEntry","autoFocusIndex","focusNth","autoFocusSecondEntry","autoFocusLastEntry","itemHeight","minItemsToShow","preferredItemsHeight","MAX_ITEMS_HEIGHT","maxEntries","maxItemsToShow","i","entryHeight","count","textContent","key","comment","reason","blur","isDOMFocused","domBlur","hasFocus","onOk","onCancel","onHide","onInputChanging","setAriaLabel","inputChangingTimeoutHandle","clearTimeout","setTimeout","removeClass","dimension","quickOpenWidth","Math","min","width","MAX_WIDTH","marginLeft","relatedTarget","isAncestor","veto","onFocusLost","dispose"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/parts/quickopen/browser/quickOpenWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './quickopen.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport * as platform from '../../../common/platform.js';\r\nimport * as types from '../../../common/types.js';\r\nimport { Filter, Renderer, DataSource, AccessibilityProvider } from './quickOpenViewer.js';\r\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\r\nimport { Tree } from '../../tree/browser/treeImpl.js';\r\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\r\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\r\nimport { DefaultController } from '../../tree/browser/treeDefaults.js';\r\nimport * as DOM from '../../../browser/dom.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\r\nvar QuickOpenController = /** @class */ (function (_super) {\r\n    __extends(QuickOpenController, _super);\r\n    function QuickOpenController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QuickOpenController.prototype.onContextMenu = function (tree, element, event) {\r\n        if (platform.isMacintosh) {\r\n            return this.onLeftClick(tree, element, event); // https://github.com/Microsoft/vscode/issues/1011\r\n        }\r\n        return _super.prototype.onContextMenu.call(this, tree, element, event);\r\n    };\r\n    return QuickOpenController;\r\n}(DefaultController));\r\nexport { QuickOpenController };\r\nvar defaultStyles = {\r\n    background: Color.fromHex('#1E1E1E'),\r\n    foreground: Color.fromHex('#CCCCCC'),\r\n    pickerGroupForeground: Color.fromHex('#0097FB'),\r\n    pickerGroupBorder: Color.fromHex('#3F3F46'),\r\n    widgetShadow: Color.fromHex('#000000'),\r\n    progressBarBackground: Color.fromHex('#0E70C0')\r\n};\r\nvar DEFAULT_INPUT_ARIA_LABEL = nls.localize('quickOpenAriaLabel', \"Quick picker. Type to narrow down results.\");\r\nvar QuickOpenWidget = /** @class */ (function (_super) {\r\n    __extends(QuickOpenWidget, _super);\r\n    function QuickOpenWidget(container, callbacks, options) {\r\n        var _this = _super.call(this) || this;\r\n        _this.isDisposed = false;\r\n        _this.container = container;\r\n        _this.callbacks = callbacks;\r\n        _this.options = options;\r\n        _this.styles = options || Object.create(null);\r\n        mixin(_this.styles, defaultStyles, false);\r\n        _this.model = null;\r\n        return _this;\r\n    }\r\n    QuickOpenWidget.prototype.getModel = function () {\r\n        return this.model;\r\n    };\r\n    QuickOpenWidget.prototype.create = function () {\r\n        var _this = this;\r\n        // Container\r\n        this.element = document.createElement('div');\r\n        DOM.addClass(this.element, 'monaco-quick-open-widget');\r\n        this.container.appendChild(this.element);\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.CONTEXT_MENU, function (e) { return DOM.EventHelper.stop(e, true); })); // Do this to fix an issue on Mac where the menu goes into the way\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.FOCUS, function (e) { return _this.gainingFocus(); }, true));\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.BLUR, function (e) { return _this.loosingFocus(e); }, true));\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            if (keyboardEvent.keyCode === 9 /* Escape */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.hide(2 /* CANCELED */);\r\n            }\r\n            else if (keyboardEvent.keyCode === 2 /* Tab */ && !keyboardEvent.altKey && !keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\r\n                var stops = e.currentTarget.querySelectorAll('input, .monaco-tree, .monaco-tree-row.focused .action-label.icon');\r\n                if (keyboardEvent.shiftKey && keyboardEvent.target === stops[0]) {\r\n                    DOM.EventHelper.stop(e, true);\r\n                    stops[stops.length - 1].focus();\r\n                }\r\n                else if (!keyboardEvent.shiftKey && keyboardEvent.target === stops[stops.length - 1]) {\r\n                    DOM.EventHelper.stop(e, true);\r\n                    stops[0].focus();\r\n                }\r\n            }\r\n        }));\r\n        // Progress Bar\r\n        this.progressBar = this._register(new ProgressBar(this.element, { progressBarBackground: this.styles.progressBarBackground }));\r\n        this.progressBar.hide();\r\n        // Input Field\r\n        this.inputContainer = document.createElement('div');\r\n        DOM.addClass(this.inputContainer, 'quick-open-input');\r\n        this.element.appendChild(this.inputContainer);\r\n        this.inputBox = this._register(new InputBox(this.inputContainer, undefined, {\r\n            placeholder: this.options.inputPlaceHolder || '',\r\n            ariaLabel: DEFAULT_INPUT_ARIA_LABEL,\r\n            inputBackground: this.styles.inputBackground,\r\n            inputForeground: this.styles.inputForeground,\r\n            inputBorder: this.styles.inputBorder,\r\n            inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.styles.inputValidationErrorBorder\r\n        }));\r\n        this.inputElement = this.inputBox.inputElement;\r\n        this.inputElement.setAttribute('role', 'combobox');\r\n        this.inputElement.setAttribute('aria-haspopup', 'false');\r\n        this.inputElement.setAttribute('aria-autocomplete', 'list');\r\n        this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.INPUT, function (e) { return _this.onType(); }));\r\n        this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            var shouldOpenInBackground = _this.shouldOpenInBackground(keyboardEvent);\r\n            // Do not handle Tab: It is used to navigate between elements without mouse\r\n            if (keyboardEvent.keyCode === 2 /* Tab */) {\r\n                return;\r\n            }\r\n            // Pass tree navigation keys to the tree but leave focus in input field\r\n            else if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey);\r\n                // Position cursor at the end of input to allow right arrow (open in background)\r\n                // to function immediately unless the user has made a selection\r\n                if (_this.inputBox.inputElement.selectionStart === _this.inputBox.inputElement.selectionEnd) {\r\n                    _this.inputBox.inputElement.selectionStart = _this.inputBox.value.length;\r\n                }\r\n            }\r\n            // Select element on Enter or on Arrow-Right if we are at the end of the input\r\n            else if (keyboardEvent.keyCode === 3 /* Enter */ || shouldOpenInBackground) {\r\n                DOM.EventHelper.stop(e, true);\r\n                var focus_1 = _this.tree.getFocus();\r\n                if (focus_1) {\r\n                    _this.elementSelected(focus_1, e, shouldOpenInBackground ? 2 /* OPEN_IN_BACKGROUND */ : 1 /* OPEN */);\r\n                }\r\n            }\r\n        }));\r\n        // Result count for screen readers\r\n        this.resultCount = document.createElement('div');\r\n        DOM.addClass(this.resultCount, 'quick-open-result-count');\r\n        this.resultCount.setAttribute('aria-live', 'polite');\r\n        this.resultCount.setAttribute('aria-atomic', 'true');\r\n        this.element.appendChild(this.resultCount);\r\n        // Tree\r\n        this.treeContainer = document.createElement('div');\r\n        DOM.addClass(this.treeContainer, 'quick-open-tree');\r\n        this.element.appendChild(this.treeContainer);\r\n        var createTree = this.options.treeCreator || (function (container, config, opts) { return new Tree(container, config, opts); });\r\n        this.tree = this._register(createTree(this.treeContainer, {\r\n            dataSource: new DataSource(this),\r\n            controller: new QuickOpenController({ clickBehavior: 1 /* ON_MOUSE_UP */, keyboardSupport: this.options.keyboardSupport }),\r\n            renderer: (this.renderer = new Renderer(this, this.styles)),\r\n            filter: new Filter(this),\r\n            accessibilityProvider: new AccessibilityProvider(this)\r\n        }, {\r\n            twistiePixels: 11,\r\n            indentPixels: 0,\r\n            alwaysFocused: true,\r\n            verticalScrollMode: 3 /* Visible */,\r\n            horizontalScrollMode: 2 /* Hidden */,\r\n            ariaLabel: nls.localize('treeAriaLabel', \"Quick Picker\"),\r\n            keyboardSupport: this.options.keyboardSupport,\r\n            preventRootFocus: false\r\n        }));\r\n        this.treeElement = this.tree.getHTMLElement();\r\n        // Handle Focus and Selection event\r\n        this._register(this.tree.onDidChangeFocus(function (event) {\r\n            _this.elementFocused(event.focus, event);\r\n        }));\r\n        this._register(this.tree.onDidChangeSelection(function (event) {\r\n            if (event.selection && event.selection.length > 0) {\r\n                var mouseEvent = event.payload && event.payload.originalEvent instanceof StandardMouseEvent ? event.payload.originalEvent : undefined;\r\n                var shouldOpenInBackground = mouseEvent ? _this.shouldOpenInBackground(mouseEvent) : false;\r\n                _this.elementSelected(event.selection[0], event, shouldOpenInBackground ? 2 /* OPEN_IN_BACKGROUND */ : 1 /* OPEN */);\r\n            }\r\n        }));\r\n        this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            // Only handle when in quick navigation mode\r\n            if (!_this.quickNavigateConfiguration) {\r\n                return;\r\n            }\r\n            // Support keyboard navigation in quick navigation mode\r\n            if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.navigateInTree(keyboardEvent.keyCode);\r\n            }\r\n            // Support to open item with Enter still even in quick nav mode\r\n            else if (keyboardEvent.keyCode === 3 /* Enter */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                var focus_2 = _this.tree.getFocus();\r\n                if (focus_2) {\r\n                    _this.elementSelected(focus_2, e);\r\n                }\r\n            }\r\n        }));\r\n        this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_UP, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            var keyCode = keyboardEvent.keyCode;\r\n            // Only handle when in quick navigation mode\r\n            if (!_this.quickNavigateConfiguration) {\r\n                return;\r\n            }\r\n            // Select element when keys are pressed that signal it\r\n            var quickNavKeys = _this.quickNavigateConfiguration.keybindings;\r\n            var wasTriggerKeyPressed = quickNavKeys.some(function (k) {\r\n                var _a = k.getParts(), firstPart = _a[0], chordPart = _a[1];\r\n                if (chordPart) {\r\n                    return false;\r\n                }\r\n                if (firstPart.shiftKey && keyCode === 4 /* Shift */) {\r\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\r\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick open\r\n                    }\r\n                    return true;\r\n                }\r\n                if (firstPart.altKey && keyCode === 6 /* Alt */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.ctrlKey && keyCode === 5 /* Ctrl */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.metaKey && keyCode === 57 /* Meta */) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (wasTriggerKeyPressed) {\r\n                var focus_3 = _this.tree.getFocus();\r\n                if (focus_3) {\r\n                    _this.elementSelected(focus_3, e);\r\n                }\r\n            }\r\n        }));\r\n        // Support layout\r\n        if (this.layoutDimensions) {\r\n            this.layout(this.layoutDimensions);\r\n        }\r\n        this.applyStyles();\r\n        // Allows focus to switch to next/previous entry after tab into an actionbar item\r\n        this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            // Only handle when not in quick navigation mode\r\n            if (_this.quickNavigateConfiguration) {\r\n                return;\r\n            }\r\n            if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey);\r\n                _this.treeElement.focus();\r\n            }\r\n        }));\r\n        return this.element;\r\n    };\r\n    QuickOpenWidget.prototype.style = function (styles) {\r\n        this.styles = styles;\r\n        this.applyStyles();\r\n    };\r\n    QuickOpenWidget.prototype.applyStyles = function () {\r\n        if (this.element) {\r\n            var foreground = this.styles.foreground ? this.styles.foreground.toString() : '';\r\n            var background = this.styles.background ? this.styles.background.toString() : '';\r\n            var borderColor = this.styles.borderColor ? this.styles.borderColor.toString() : '';\r\n            var widgetShadow = this.styles.widgetShadow ? this.styles.widgetShadow.toString() : '';\r\n            this.element.style.color = foreground;\r\n            this.element.style.backgroundColor = background;\r\n            this.element.style.borderColor = borderColor;\r\n            this.element.style.borderWidth = borderColor ? '1px' : '';\r\n            this.element.style.borderStyle = borderColor ? 'solid' : '';\r\n            this.element.style.boxShadow = widgetShadow ? \"0 5px 8px \" + widgetShadow : '';\r\n        }\r\n        if (this.progressBar) {\r\n            this.progressBar.style({\r\n                progressBarBackground: this.styles.progressBarBackground\r\n            });\r\n        }\r\n        if (this.inputBox) {\r\n            this.inputBox.style({\r\n                inputBackground: this.styles.inputBackground,\r\n                inputForeground: this.styles.inputForeground,\r\n                inputBorder: this.styles.inputBorder,\r\n                inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.styles.inputValidationErrorBorder\r\n            });\r\n        }\r\n        if (this.tree && !this.options.treeCreator) {\r\n            this.tree.style(this.styles);\r\n        }\r\n        if (this.renderer) {\r\n            this.renderer.updateStyles(this.styles);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.shouldOpenInBackground = function (e) {\r\n        // Keyboard\r\n        if (e instanceof StandardKeyboardEvent) {\r\n            if (e.keyCode !== 17 /* RightArrow */) {\r\n                return false; // only for right arrow\r\n            }\r\n            if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                return false; // no modifiers allowed\r\n            }\r\n            // validate the cursor is at the end of the input and there is no selection,\r\n            // and if not prevent opening in the background such as the selection can be changed\r\n            var element = this.inputBox.inputElement;\r\n            return element.selectionEnd === this.inputBox.value.length && element.selectionStart === element.selectionEnd;\r\n        }\r\n        // Mouse\r\n        return e.middleButton;\r\n    };\r\n    QuickOpenWidget.prototype.onType = function () {\r\n        var value = this.inputBox.value;\r\n        // Adjust help text as needed if present\r\n        if (this.helpText) {\r\n            if (value) {\r\n                DOM.hide(this.helpText);\r\n            }\r\n            else {\r\n                DOM.show(this.helpText);\r\n            }\r\n        }\r\n        // Send to callbacks\r\n        this.callbacks.onType(value);\r\n    };\r\n    QuickOpenWidget.prototype.navigateInTree = function (keyCode, isShift) {\r\n        var model = this.tree.getInput();\r\n        var entries = model ? model.entries : [];\r\n        var oldFocus = this.tree.getFocus();\r\n        // Normal Navigation\r\n        switch (keyCode) {\r\n            case 18 /* DownArrow */:\r\n                this.tree.focusNext();\r\n                break;\r\n            case 16 /* UpArrow */:\r\n                this.tree.focusPrevious();\r\n                break;\r\n            case 12 /* PageDown */:\r\n                this.tree.focusNextPage();\r\n                break;\r\n            case 11 /* PageUp */:\r\n                this.tree.focusPreviousPage();\r\n                break;\r\n            case 2 /* Tab */:\r\n                if (isShift) {\r\n                    this.tree.focusPrevious();\r\n                }\r\n                else {\r\n                    this.tree.focusNext();\r\n                }\r\n                break;\r\n        }\r\n        var newFocus = this.tree.getFocus();\r\n        // Support cycle-through navigation if focus did not change\r\n        if (entries.length > 1 && oldFocus === newFocus) {\r\n            // Up from no entry or first entry goes down to last\r\n            if (keyCode === 16 /* UpArrow */ || (keyCode === 2 /* Tab */ && isShift)) {\r\n                this.tree.focusLast();\r\n            }\r\n            // Down from last entry goes to up to first\r\n            else if (keyCode === 18 /* DownArrow */ || keyCode === 2 /* Tab */ && !isShift) {\r\n                this.tree.focusFirst();\r\n            }\r\n        }\r\n        // Reveal\r\n        newFocus = this.tree.getFocus();\r\n        if (newFocus) {\r\n            this.tree.reveal(newFocus);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.elementFocused = function (value, event) {\r\n        if (!value || !this.isVisible()) {\r\n            return;\r\n        }\r\n        // ARIA\r\n        var arivaActiveDescendant = this.treeElement.getAttribute('aria-activedescendant');\r\n        if (arivaActiveDescendant) {\r\n            this.inputElement.setAttribute('aria-activedescendant', arivaActiveDescendant);\r\n        }\r\n        else {\r\n            this.inputElement.removeAttribute('aria-activedescendant');\r\n        }\r\n        var context = { event: event, keymods: this.extractKeyMods(event), quickNavigateConfiguration: this.quickNavigateConfiguration };\r\n        this.model.runner.run(value, 0 /* PREVIEW */, context);\r\n    };\r\n    QuickOpenWidget.prototype.elementSelected = function (value, event, preferredMode) {\r\n        var hide = true;\r\n        // Trigger open of element on selection\r\n        if (this.isVisible()) {\r\n            var mode = preferredMode || 1 /* OPEN */;\r\n            var context = { event: event, keymods: this.extractKeyMods(event), quickNavigateConfiguration: this.quickNavigateConfiguration };\r\n            hide = this.model.runner.run(value, mode, context);\r\n        }\r\n        // Hide if command was run successfully\r\n        if (hide) {\r\n            this.hide(0 /* ELEMENT_SELECTED */);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.extractKeyMods = function (event) {\r\n        return {\r\n            ctrlCmd: event && (event.ctrlKey || event.metaKey || (event.payload && event.payload.originalEvent && (event.payload.originalEvent.ctrlKey || event.payload.originalEvent.metaKey))),\r\n            alt: event && (event.altKey || (event.payload && event.payload.originalEvent && event.payload.originalEvent.altKey))\r\n        };\r\n    };\r\n    QuickOpenWidget.prototype.show = function (param, options) {\r\n        this.visible = true;\r\n        this.isLoosingFocus = false;\r\n        this.quickNavigateConfiguration = options ? options.quickNavigateConfiguration : undefined;\r\n        // Adjust UI for quick navigate mode\r\n        if (this.quickNavigateConfiguration) {\r\n            DOM.hide(this.inputContainer);\r\n            DOM.show(this.element);\r\n            this.tree.domFocus();\r\n        }\r\n        // Otherwise use normal UI\r\n        else {\r\n            DOM.show(this.inputContainer);\r\n            DOM.show(this.element);\r\n            this.inputBox.focus();\r\n        }\r\n        // Adjust Help text for IE\r\n        if (this.helpText) {\r\n            if (this.quickNavigateConfiguration || types.isString(param)) {\r\n                DOM.hide(this.helpText);\r\n            }\r\n            else {\r\n                DOM.show(this.helpText);\r\n            }\r\n        }\r\n        // Show based on param\r\n        if (types.isString(param)) {\r\n            this.doShowWithPrefix(param);\r\n        }\r\n        else {\r\n            if (options && options.value) {\r\n                this.restoreLastInput(options.value);\r\n            }\r\n            this.doShowWithInput(param, options && options.autoFocus ? options.autoFocus : {});\r\n        }\r\n        // Respect selectAll option\r\n        if (options && options.inputSelection && !this.quickNavigateConfiguration) {\r\n            this.inputBox.select(options.inputSelection);\r\n        }\r\n        if (this.callbacks.onShow) {\r\n            this.callbacks.onShow();\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.restoreLastInput = function (lastInput) {\r\n        this.inputBox.value = lastInput;\r\n        this.inputBox.select();\r\n        this.callbacks.onType(lastInput);\r\n    };\r\n    QuickOpenWidget.prototype.doShowWithPrefix = function (prefix) {\r\n        this.inputBox.value = prefix;\r\n        this.callbacks.onType(prefix);\r\n    };\r\n    QuickOpenWidget.prototype.doShowWithInput = function (input, autoFocus) {\r\n        this.setInput(input, autoFocus);\r\n    };\r\n    QuickOpenWidget.prototype.setInputAndLayout = function (input, autoFocus) {\r\n        var _this = this;\r\n        this.treeContainer.style.height = this.getHeight(input) + \"px\";\r\n        this.tree.setInput(null).then(function () {\r\n            _this.model = input;\r\n            // ARIA\r\n            _this.inputElement.setAttribute('aria-haspopup', String(input && input.entries && input.entries.length > 0));\r\n            return _this.tree.setInput(input);\r\n        }).then(function () {\r\n            // Indicate entries to tree\r\n            _this.tree.layout();\r\n            var entries = input ? input.entries.filter(function (e) { return _this.isElementVisible(input, e); }) : [];\r\n            _this.updateResultCount(entries.length);\r\n            // Handle auto focus\r\n            if (entries.length) {\r\n                _this.autoFocus(input, entries, autoFocus);\r\n            }\r\n        });\r\n    };\r\n    QuickOpenWidget.prototype.isElementVisible = function (input, e) {\r\n        if (!input.filter) {\r\n            return true;\r\n        }\r\n        return input.filter.isVisible(e);\r\n    };\r\n    QuickOpenWidget.prototype.autoFocus = function (input, entries, autoFocus) {\r\n        if (autoFocus === void 0) { autoFocus = {}; }\r\n        // First check for auto focus of prefix matches\r\n        if (autoFocus.autoFocusPrefixMatch) {\r\n            var caseSensitiveMatch = void 0;\r\n            var caseInsensitiveMatch = void 0;\r\n            var prefix = autoFocus.autoFocusPrefixMatch;\r\n            var lowerCasePrefix = prefix.toLowerCase();\r\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n                var entry = entries_1[_i];\r\n                var label = input.dataSource.getLabel(entry) || '';\r\n                if (!caseSensitiveMatch && label.indexOf(prefix) === 0) {\r\n                    caseSensitiveMatch = entry;\r\n                }\r\n                else if (!caseInsensitiveMatch && label.toLowerCase().indexOf(lowerCasePrefix) === 0) {\r\n                    caseInsensitiveMatch = entry;\r\n                }\r\n                if (caseSensitiveMatch && caseInsensitiveMatch) {\r\n                    break;\r\n                }\r\n            }\r\n            var entryToFocus = caseSensitiveMatch || caseInsensitiveMatch;\r\n            if (entryToFocus) {\r\n                this.tree.setFocus(entryToFocus);\r\n                this.tree.reveal(entryToFocus, 0.5);\r\n                return;\r\n            }\r\n        }\r\n        // Second check for auto focus of first entry\r\n        if (autoFocus.autoFocusFirstEntry) {\r\n            this.tree.focusFirst();\r\n            this.tree.reveal(this.tree.getFocus());\r\n        }\r\n        // Third check for specific index option\r\n        else if (typeof autoFocus.autoFocusIndex === 'number') {\r\n            if (entries.length > autoFocus.autoFocusIndex) {\r\n                this.tree.focusNth(autoFocus.autoFocusIndex);\r\n                this.tree.reveal(this.tree.getFocus());\r\n            }\r\n        }\r\n        // Check for auto focus of second entry\r\n        else if (autoFocus.autoFocusSecondEntry) {\r\n            if (entries.length > 1) {\r\n                this.tree.focusNth(1);\r\n            }\r\n        }\r\n        // Finally check for auto focus of last entry\r\n        else if (autoFocus.autoFocusLastEntry) {\r\n            if (entries.length > 1) {\r\n                this.tree.focusLast();\r\n                this.tree.reveal(this.tree.getFocus());\r\n            }\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.getHeight = function (input) {\r\n        var _this = this;\r\n        var renderer = input.renderer;\r\n        if (!input) {\r\n            var itemHeight = renderer.getHeight(null);\r\n            return this.options.minItemsToShow ? this.options.minItemsToShow * itemHeight : 0;\r\n        }\r\n        var height = 0;\r\n        var preferredItemsHeight;\r\n        if (this.layoutDimensions && this.layoutDimensions.height) {\r\n            preferredItemsHeight = (this.layoutDimensions.height - 50 /* subtract height of input field (30px) and some spacing (drop shadow) to fit */) * 0.4 /* max 40% of screen */;\r\n        }\r\n        if (!preferredItemsHeight || preferredItemsHeight > QuickOpenWidget.MAX_ITEMS_HEIGHT) {\r\n            preferredItemsHeight = QuickOpenWidget.MAX_ITEMS_HEIGHT;\r\n        }\r\n        var entries = input.entries.filter(function (e) { return _this.isElementVisible(input, e); });\r\n        var maxEntries = this.options.maxItemsToShow || entries.length;\r\n        for (var i = 0; i < maxEntries && i < entries.length; i++) {\r\n            var entryHeight = renderer.getHeight(entries[i]);\r\n            if (height + entryHeight <= preferredItemsHeight) {\r\n                height += entryHeight;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return height;\r\n    };\r\n    QuickOpenWidget.prototype.updateResultCount = function (count) {\r\n        this.resultCount.textContent = nls.localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\", count);\r\n    };\r\n    QuickOpenWidget.prototype.hide = function (reason) {\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        this.visible = false;\r\n        DOM.hide(this.element);\r\n        this.element.blur();\r\n        // Clear input field and clear tree\r\n        this.inputBox.value = '';\r\n        this.tree.setInput(null);\r\n        // ARIA\r\n        this.inputElement.setAttribute('aria-haspopup', 'false');\r\n        // Reset Tree Height\r\n        this.treeContainer.style.height = (this.options.minItemsToShow ? this.options.minItemsToShow * 22 : 0) + \"px\";\r\n        // Clear any running Progress\r\n        this.progressBar.stop().hide();\r\n        // Clear Focus\r\n        if (this.tree.isDOMFocused()) {\r\n            this.tree.domBlur();\r\n        }\r\n        else if (this.inputBox.hasFocus()) {\r\n            this.inputBox.blur();\r\n        }\r\n        // Callbacks\r\n        if (reason === 0 /* ELEMENT_SELECTED */) {\r\n            this.callbacks.onOk();\r\n        }\r\n        else {\r\n            this.callbacks.onCancel();\r\n        }\r\n        if (this.callbacks.onHide) {\r\n            this.callbacks.onHide(reason);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.setInput = function (input, autoFocus, ariaLabel) {\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        // If the input changes, indicate this to the tree\r\n        if (!!this.getInput()) {\r\n            this.onInputChanging();\r\n        }\r\n        // Adapt tree height to entries and apply input\r\n        this.setInputAndLayout(input, autoFocus);\r\n        // Apply ARIA\r\n        if (this.inputBox) {\r\n            this.inputBox.setAriaLabel(ariaLabel || DEFAULT_INPUT_ARIA_LABEL);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.onInputChanging = function () {\r\n        var _this = this;\r\n        if (this.inputChangingTimeoutHandle) {\r\n            clearTimeout(this.inputChangingTimeoutHandle);\r\n            this.inputChangingTimeoutHandle = null;\r\n        }\r\n        // when the input is changing in quick open, we indicate this as CSS class to the widget\r\n        // for a certain timeout. this helps reducing some hectic UI updates when input changes quickly\r\n        DOM.addClass(this.element, 'content-changing');\r\n        this.inputChangingTimeoutHandle = setTimeout(function () {\r\n            DOM.removeClass(_this.element, 'content-changing');\r\n        }, 500);\r\n    };\r\n    QuickOpenWidget.prototype.getInput = function () {\r\n        return this.tree.getInput();\r\n    };\r\n    QuickOpenWidget.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n    QuickOpenWidget.prototype.layout = function (dimension) {\r\n        this.layoutDimensions = dimension;\r\n        // Apply to quick open width (height is dynamic by number of items to show)\r\n        var quickOpenWidth = Math.min(this.layoutDimensions.width * 0.62 /* golden cut */, QuickOpenWidget.MAX_WIDTH);\r\n        if (this.element) {\r\n            // quick open\r\n            this.element.style.width = quickOpenWidth + \"px\";\r\n            this.element.style.marginLeft = \"-\" + quickOpenWidth / 2 + \"px\";\r\n            // input field\r\n            this.inputContainer.style.width = quickOpenWidth - 12 + \"px\";\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.gainingFocus = function () {\r\n        this.isLoosingFocus = false;\r\n    };\r\n    QuickOpenWidget.prototype.loosingFocus = function (e) {\r\n        var _this = this;\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        var relatedTarget = e.relatedTarget;\r\n        if (!this.quickNavigateConfiguration && DOM.isAncestor(relatedTarget, this.element)) {\r\n            return; // user clicked somewhere into quick open widget, do not close thereby\r\n        }\r\n        this.isLoosingFocus = true;\r\n        setTimeout(function () {\r\n            if (!_this.isLoosingFocus || _this.isDisposed) {\r\n                return;\r\n            }\r\n            var veto = _this.callbacks.onFocusLost && _this.callbacks.onFocusLost();\r\n            if (!veto) {\r\n                _this.hide(1 /* FOCUS_LOST */);\r\n            }\r\n        }, 0);\r\n    };\r\n    QuickOpenWidget.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.isDisposed = true;\r\n    };\r\n    QuickOpenWidget.MAX_WIDTH = 600; // Max total width of quick open widget\r\n    QuickOpenWidget.MAX_ITEMS_HEIGHT = 20 * 22; // Max height of item list below input field\r\n    return QuickOpenWidget;\r\n}(Disposable));\r\nexport { QuickOpenWidget };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}