{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Study\\\\index.js\";\nimport React, { Component } from 'react';\nimport { validJSON, showProgress, hideProgress, CallServerPost, errorModal, errorModalCallback, successModalCallback, successModal, PostCallWithZone, DownloadFileWithPostData, checkPermission, getProjectRole, dynamicModal, getUserID } from '../Utility/sharedUtility';\nimport { Modal, Icon, Breadcrumb, Form, Skeleton, Divider, Menu, Dropdown, Button, message } from 'antd';\nimport ConfirmModal from '../Utility/ConfirmModal';\nimport ReactTable from '../Utility/reactTable';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport UpdateStudyModal from './editStudy';\nimport Version from './versionjs';\nimport { stringSorter } from '../Utility/htmlUtility';\nimport ImportFile from './import.js';\nimport XMLGeneration from './xmlGenerationVersionModal';\nimport Create from './Create';\nimport RoleAssignment from './roleAssignment';\nimport WorkFlow from './workFlow';\nimport { WorkflowDropdown } from './workflowDropdown';\nimport ActivityConfiguration from './ActivityConfig/ActivityConfiguration';\nimport StudyConfigModal from './StudyConfig';\nimport StudyInfo from './StudyConfig/StudyInfo';\n//Importing ButtonWithToolTip for Actions\nimport { CSSTransition } from \"react-transition-group\";\nimport { setHeader } from '../Topbar/Topbar';\nimport moment from 'moment-timezone';\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\n//SwitchToolTip Importing\nimport SwitchToolTip from '../Tooltip/SwitchToolTip';\nimport ConfirmWithEsign from './confirmationWithEsign';\nimport TreeView from '../TreeView';\nimport { createBrowserHistory } from 'history';\nimport Progress from '../Utility/ProgressBar';\nimport { ActivityWorkspace } from './ActivityWorkspace';\nimport { NOTYETCONFIGURED } from '../Utility/appConstants';\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }\n});\nvar margin = {\n  margin: '0 3px 0 0'\n};\nvar schemavalidation = [];\nvar metadatavalidation = [];\nvar datavalidation = [];\nvar studyID;\nvar showEditModal, showEditStudy, showAddStudyModal, ShowStudyList, showSchemaValidation;\nvar showConfirmModalForStudyLockStatus, ProjectID, Locked;\nvar thisObj = {};\nvar projectRole = getProjectRole();\nvar StudyIndex = /*#__PURE__*/function (_Component) {\n  _inherits(StudyIndex, _Component);\n  var _super = _createSuper(StudyIndex);\n  function StudyIndex(_props) {\n    var _this;\n    _classCallCheck(this, StudyIndex);\n    _this = _super.call(this, _props);\n    _this.refreshList = function () {\n      _this.getList(_this.props);\n    };\n    _this.permissionCheck = function (btnName, study, permissions) {\n      if (checkPermission(permissions, [btnName]) >= 1) {\n        if (!study.locked) {\n          return true;\n        }\n      }\n      return false;\n    };\n    _this.getList = function (props) {\n      showProgress();\n      CallServerPost('Study/GetStudyByProjectRoleUser ', {\n        UserID: JSON.parse(sessionStorage.userProfile).userID,\n        ProjectID: props.projectId,\n        RoleID: JSON.parse(sessionStorage.role).RoleID\n      }).then(function (response) {\n        var _this2 = this;\n        hideProgress();\n        var isProjectInActive = props.isProjectInActive;\n        //console.log(response);\n        if (response.value !== null) {\n          var resObj = response.value;\n          var datas = [];\n          var StudyList = resObj.StudyList,\n            StudyWorkflow = resObj.StudyWorkflow,\n            WorkflowActivityStatusTransition = resObj.WorkflowActivityStatusTransition,\n            ActivityWorkflowByProject = resObj.ActivityWorkflowByProject;\n\n          //get studyWorkFlow for the study \n\n          var permissions = thisObj.props.permissions;\n          var _loop = function _loop() {\n            var study = StudyList[i];\n            var studyid = study.studyID;\n            var studyWorkFlow = StudyWorkflow.find(function (wrkFlo) {\n              return wrkFlo.studyID === studyid;\n            });\n            var standardName = study.standardText; //to pass standardName to workspace\n            var studyLocked = StudyList[i].locked;\n            var studyName = StudyList[i].studyName;\n            var workflowActivityStatusID = StudyList[i].workflowActivityStatusID;\n            var directoryName = StudyList[i].projectText + \"_\" + StudyList[i].studyName;\n\n            //Filter Activity Workflow By Study\n            // Variable ActivityWorkflowByProject contains all WFS by project\n            var ActivityWorkStatusflowByStudy = ActivityWorkflowByProject.filter(function (wf) {\n              return wf.studyID === studyid;\n            });\n\n            //Get the current WF status\n            var status = {\n              Annotation: NOTYETCONFIGURED,\n              Mapping: NOTYETCONFIGURED,\n              Program: NOTYETCONFIGURED,\n              Define: NOTYETCONFIGURED\n            };\n            var workspcaePermission = permissions.StudyWorkSpace;\n            ActivityWorkStatusflowByStudy.map(function (wfs) {\n              switch (wfs.workflowActivityID) {\n                //Annotation\n                case 2:\n                  status.Annotation = wfs.studyText;\n                  return;\n                //Transformation\n                case 3:\n                  status.Mapping = wfs.studyText;\n                  status.Program = wfs.studyText;\n                  return;\n                //Define\n                case 4:\n                  status.Define = wfs.studyText;\n                  return;\n              }\n            });\n            var workspaceMenu = /*#__PURE__*/React.createElement(Menu, {\n              onClick: function onClick(e) {\n                if (status[e.key] !== NOTYETCONFIGURED) {\n                  thisObj.CheckAndGoToWorkSpace(study, ActivityWorkStatusflowByStudy, e.key);\n                } else {\n                  message.destroy();\n                  message.error(\"Activity not configured!\");\n                }\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }\n            }, study.annotationRequired && checkPermission(workspcaePermission, ['Annotation']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Annotation\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"file-text\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 45\n              }\n            }), \"Annotation - \", status.Annotation), study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Mapping\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"code\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 49\n              }\n            }), \"Mapping -  \", status.Mapping), study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Program\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"file-done\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 49\n              }\n            }), \"Output Generation -  \", status.Mapping), study.defineRequired && checkPermission(workspcaePermission, ['Define']) >= 1 && /*#__PURE__*/React.createElement(Menu.Item, {\n              key: \"Define\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              type: \"read\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 45\n              }\n            }), \"Define XML -  \", status.Define));\n            var editCell = /*#__PURE__*/React.createElement(\"div\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 46\n              }\n            }, checkPermission(permissions, ['StudyWorkSpace']) >= 1 ?\n            /*#__PURE__*/\n            //<ButtonWithToolTip\n            //    size=\"small\"\n            //    shape=\"round\"\n            //    style={margin}\n            //    tooltip=\"Study Workspace\"\n            //    classname=\"fas fa-external-link-alt\"\n            //    name={StudyList[i].studyName + \"_StudyWorkSpace\"}\n            //    onClick={() => thisObj.studyActions(study, JSON.parse(props.isProjectInActive), studyLocked, standardName, workflowActivityStatusID)}\n            ///> : null}\n            React.createElement(Dropdown, {\n              overlay: workspaceMenu,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              size: \"small\",\n              shape: \"round\",\n              style: margin,\n              name: StudyList[i].studyName + \"_StudyWorkSpace\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fas fa-external-link-alt\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 45\n              }\n            }))) : null, /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n              tooltip: \"Study Configuration\",\n              shape: \"round\",\n              size: \"small\",\n              style: margin,\n              classname: \"fa fa-cogs\",\n              onClick: function onClick() {\n                return thisObj.studyConfiguration(study, studyName);\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 34\n              }\n            }), /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n              tooltip: \"Study Info\",\n              shape: \"round\",\n              size: \"small\",\n              style: margin,\n              classname: \"fa fa-chart-line\",\n              onClick: function onClick() {\n                return thisObj.studyInfo(study, studyName);\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 34\n              }\n            }), checkPermission(permissions, ['AuditLog']) >= 1 ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n              name: StudyList[i].studyName + \"_AuditLogDownload\",\n              tooltip: \"Auditlog Download\",\n              shape: \"round\",\n              icon: \"audit\",\n              size: \"small\",\n              style: margin,\n              onClick: function onClick() {\n                return thisObj.fnToDownloadAuditLog(studyid, directoryName);\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 37\n              }\n            }) : null, checkPermission(permissions, ['self']) >= 4 ? /*#__PURE__*/React.createElement(ButtonWithToolTip, {\n              name: StudyList[i].studyName + \"_Delete\",\n              tooltip: \"Delete\",\n              shape: \"round\",\n              classname: \"fas fa-trash-alt\",\n              size: \"small\",\n              disabled: workflowActivityStatusID !== 1 && workflowActivityStatusID !== 15,\n              style: margin,\n              onClick: function onClick() {\n                return thisObj.deleteStudy(studyid);\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 37\n              }\n            }) : null, checkPermission(permissions, ['StudyLock']) >= 2 ? /*#__PURE__*/React.createElement(SwitchToolTip, {\n              name: StudyList[i].studyName + \"_Unlock\",\n              switchtooltip: StudyList[i].locked == 1 ? \"Lock\" : \"Unlock\",\n              onChange: function onChange(e) {\n                thisObj.updateStudyLockStatus(studyid, props.projectId, e);\n              },\n              studyID: studyid,\n              thisObj: thisObj,\n              checkedChildren: /*#__PURE__*/React.createElement(Icon, {\n                type: \"check\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 90\n                }\n              }),\n              unCheckedChildren: /*#__PURE__*/React.createElement(Icon, {\n                type: \"cross\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 56\n                }\n              }),\n              checked: StudyList[i].locked == 1 ? false : true,\n              style: margin,\n              disabled: JSON.parse(props.isProjectInActive),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 85\n              }\n            }) : null);\n\n            //Get Workflow Column actions\n            var _thisObj = thisObj,\n              updateWorkFlow = _thisObj.updateWorkFlow;\n            //Paremeters\n            //Study\n            //StudyWorkflow,\n            //WorkflowActivityStatusTransition\n            //Fn for both workflow onchange and comment click\n            var getFieldDecorator = thisObj.props.form.getFieldDecorator;\n            var parameters = {\n              study: study,\n              permissions: permissions,\n              studyWorkFlow: studyWorkFlow,\n              getFieldDecorator: getFieldDecorator,\n              isProjectInActive: props.isProjectInActive,\n              WorkflowActivityStatusTransition: WorkflowActivityStatusTransition,\n              fnForWorkflow: thisObj.beforeUpdateTheWorkFlow\n            };\n            var workflowCell = WorkflowDropdown(parameters);\n            datas.push({\n              key: StudyList[i].studyID,\n              actions: editCell,\n              studyName: StudyList[i].studyName,\n              studyStatus: StudyList[i].workflowActivityStatusText,\n              sponsorName: StudyList[i].sponsorName,\n              standardText: StudyList[i].standardText + \" \" + StudyList[i].standardVersionText,\n              workflowActions: workflowCell\n            });\n          };\n          for (var i = 0; i < StudyList.length; i++) {\n            _loop();\n          }\n          thisObj.setState({\n            datas: datas,\n            dataSource: datas,\n            modalLoad: false,\n            WorkFlowModal: false,\n            showEditStudy: false,\n            actionName: \"Index\",\n            workflowObj: {\n              StudyWorkflow: StudyWorkflow,\n              WorkflowActivityStatusTransition: WorkflowActivityStatusTransition\n            },\n            RoleAssignmentModal: false,\n            showAddStudyModalNew: false,\n            showConfirmModalForStudyLockStatus: false\n          });\n        } else {\n          thisObj.setState({\n            RoleAssignmentModal: false,\n            WorkFlowModal: false,\n            showEditStudy: false,\n            showAddStudyModalNew: false,\n            actionName: \"Index\",\n            dataSource: [],\n            datas: [],\n            loading: false,\n            modalLoad: false,\n            showConfirmModalForStudyLockStatus: false\n          });\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.editStudy = function (studyID) {\n      _this.setState({\n        showEditStudy: true,\n        studyID: studyID,\n        actionName: \"Update\"\n      });\n    };\n    _this.addStudy = function () {\n      // if (JSON.parse(sessionStorage.userProfile).userID === 20124) {\n      _this.showNewAddStudyModal();\n      //} else {\n      //    this.setState({ showAddStudyModal: true, actionName: \"Create\" });\n      //}\n    };\n    _this.deleteStudy = function (studyID) {\n      var configCallBack = function configCallBack(valueObj) {\n        thisObj.setState({\n          actionName: \"Delete\",\n          showEditModal: true,\n          studyID: valueObj.studyID\n        });\n      };\n      _this.CheckStudyFolderPermissions(configCallBack, {\n        studyID: studyID\n      });\n    };\n    _this.CheckAndGoToWorkSpace = function (study, ActivityWorkFlowStatus, ActivityName) {\n      var configCallBack = function configCallBack(valueObj) {\n        thisObj.workspace(valueObj.study, valueObj.ActivityWorkFlowStatus, valueObj.ActivityName);\n      };\n      _this.CheckStudyFolderPermissions(configCallBack, {\n        study: study,\n        ActivityWorkFlowStatus: ActivityWorkFlowStatus,\n        ActivityName: ActivityName\n      });\n    };\n    _this.workspace = function (study, ActivityWorkFlowStatus, ActivityName) {\n      //Is project active or inactive\n      var projectStatus = JSON.parse(_this.props.isProjectInActive);\n      //Session storage\n      sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\n      sessionStorage.setItem(\"standard\", study.standardName);\n      sessionStorage.setItem(\"projectStudyLockStatus\", projectStatus || study.locked);\n      sessionStorage.setItem(\"workflowActivityStatusID\", study.workflowActivityStatusID);\n      var permissions = _this.props.permissions;\n      var projectStudyLockStatus = projectStatus ? true : study.locked ? true : false;\n      try {\n        //Loader\n        showProgress();\n        CallServerPost('ActivityConfiguration/GetActivityConfigurationDetailsByStudyID', {\n          FormName: \"Study\",\n          ActionName: \"Create\",\n          ProjectID: study.projectID,\n          StudyID: study.studyID\n        }).then(function (res) {\n          if (res.status === 1) {\n            var ActivityConfigList = res.value.ActivityConfigList;\n            var ActivityWorkSpace = new ActivityWorkspace(ActivityName);\n            ActivityWorkSpace.history = thisObj.props.history;\n            ActivityWorkSpace.data = {\n              study: study,\n              by: \"manual\",\n              from: \"Project\",\n              projectInActive: projectStatus,\n              allActivityDetails: ActivityConfigList,\n              ActivityWorkFlowStatus: ActivityWorkFlowStatus,\n              permissions: permissions.StudyWorkSpace[ActivityName],\n              projectStudyLockStatus: projectStudyLockStatus\n            };\n\n            //Here functionn will fire\n            ActivityWorkSpace.GoToActivityWorkspace();\n\n            //set topbar header\n            setHeader();\n            //end\n          } else {\n            hideProgress();\n          }\n        });\n      } catch (e) {\n        hideProgress();\n      }\n    };\n    _this.updateStudyLockStatus = function (studyID, projectID, isLocked) {\n      var configCallBack = function configCallBack(valueObj) {\n        thisObj.setState({\n          actionName: \"LockStatus\",\n          showConfirmModalForStudyLockStatus: true,\n          studyID: valueObj.studyID,\n          ProjectID: valueObj.projectID,\n          Locked: valueObj.isLocked ? false : true\n        });\n      };\n      _this.CheckStudyFolderPermissions(configCallBack, {\n        studyID: studyID,\n        projectID: projectID,\n        isLocked: isLocked\n      });\n    };\n    _this.fnForVersionList = function (studyID) {\n      _this.setState({\n        actionName: \"Version\",\n        studyID: studyID\n      });\n    };\n    _this.cancelPops = function () {\n      _this.setState({\n        actionName: \"Index\",\n        RoleAssignmentModal: false,\n        WorkFlowModal: false,\n        activityModal: false,\n        studyConfigModal: false,\n        studyInfoModal: false\n      });\n    };\n    _this.showRoleAssignModal = function (studyID, projectId, isLocked, workflowActivityStatusID, studyName) {\n      showProgress();\n      CallServerPost('ActivityConfiguration/CheckAllActivityConfiguredByStudyID', {\n        StudyID: studyID\n      }).then(function (res) {\n        if (res.status === 1) {\n          CallServerPost('ActivityConfiguration/GetActivityConfigurationByStudyID', {\n            FormName: \"Study\",\n            ActionName: \"Create\",\n            StudyID: studyID,\n            ProjectID: projectId\n          }).then(function (response) {\n            hideProgress();\n            if (response.status === 1) {\n              var activity = response.value.ActivityConfigList || [];\n              if (activity.length > 0) {\n                thisObj.setState({\n                  studyName: studyName,\n                  actionName: \"RoleAssignment\",\n                  ProjectID: projectId,\n                  RoleAssignmentModal: true,\n                  studyID: studyID,\n                  Locked: isLocked ? true : false,\n                  workflowActivityStatusID: workflowActivityStatusID\n                });\n              } else {\n                hideProgress();\n                errorModal(\"Please configure the study activities before going into user assignment!\");\n              }\n            } else {\n              hideProgress();\n              errorModal(\"Please configure the study activities before going into user assignment!\");\n            }\n          });\n        } else {\n          hideProgress();\n          errorModal(res.message);\n        }\n      });\n    };\n    _this.activityConfiguration = function (study, studyName) {\n      _this.setState({\n        study: study,\n        activityModal: true,\n        actionName: \"ActivityConfiguration\",\n        studyName: studyName\n      });\n    };\n    _this.CheckStudyFolderPermissions = function (callback, valueObj) {\n      var thisObj = _assertThisInitialized(_this);\n      CallServerPost('Users/CheckUserPermissions', {\n        ProjectID: thisObj.props.projectId,\n        UserText: JSON.parse(sessionStorage.userProfile).emailAddress\n      }).then(function (response) {\n        hideProgress();\n        if (response.status === 1) {\n          hideProgress();\n          callback(valueObj);\n        } else {\n          hideProgress();\n          errorModal(response.message);\n        }\n      });\n    };\n    _this.studyConfiguration = function (study, studyName) {\n      var thisObj = _assertThisInitialized(_this);\n      var configCallBack = function configCallBack(valueObj) {\n        sessionStorage.setItem(\"studyDetails\", JSON.stringify(valueObj.study));\n        thisObj.setState({\n          study: valueObj.study,\n          studyConfigModal: true,\n          actionName: \"StudyConfiguration\",\n          studyName: valueObj.studyName\n        });\n      };\n      _this.CheckStudyFolderPermissions(configCallBack, {\n        study: study,\n        studyName: studyName\n      });\n    };\n    _this.studyInfo = function (study, studyName) {\n      var thisObj = _assertThisInitialized(_this);\n      var configCallBack = function configCallBack(valueObj) {\n        sessionStorage.setItem(\"studyDetails\", JSON.stringify(valueObj.study));\n        thisObj.setState({\n          study: valueObj.study,\n          studyInfoModal: true,\n          actionName: \"StudyInfo\",\n          studyName: valueObj.studyName\n        });\n      };\n      _this.CheckStudyFolderPermissions(configCallBack, {\n        study: study,\n        studyName: studyName\n      });\n    };\n    _this.workFlow = function (studyID, projectId, studyName) {\n      _this.setState({\n        actionName: \"WorkFlow\",\n        WorkFlowModal: true,\n        ProjectID: projectId,\n        studyID: studyID,\n        studyName: studyName\n      });\n    };\n    _this.generateXMLPopUpCancel = function () {\n      thisObj.setState({\n        generateXMLPopUp: false\n      });\n    };\n    _this.beforeUpdateTheWorkFlow = function (targetStatusID, study, studyWorkFlow, availableWorkflows) {\n      //studyWorkFlow parameter means current workflow of study\n      //Current study workflowActivityID, workflowActivityStatusID\n      var workflowActivityID = studyWorkFlow.workflowActivityID,\n        workflowActivityStatusID = studyWorkFlow.workflowActivityStatusID;\n\n      //Changed worflow by selected workflow in Dropdown\n      //following variable is object of selected workflow in dropn\n      //Get workflowActivityStatusTransitionID\n      //wrkflo.sourceStatusID means workflowActivityStatusID\n      var changedWorkflowToUpdate = availableWorkflows.find(function (wrkflo) {\n        return wrkflo.targetStatusID === targetStatusID;\n      });\n      var data = {\n        studyID: study.studyID,\n        projectID: study.projectID,\n        workflowActivityID: workflowActivityID,\n        //targetStatusID means  workflowActivityStatusID of selected Workflow in dropdown\n        workflowActivityStatusID: targetStatusID,\n        changeReason: changedWorkflowToUpdate.targetStatusText,\n        workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID,\n        updatedDateTime: studyWorkFlow.updatedDateTime,\n        StudyWorkFlowID: studyWorkFlow.studyWorkflowID\n      };\n      dynamicModal({\n        title: \"Confirmation\",\n        icon: \"exclamation-circle\",\n        msg: \"Do you want to change the status?\",\n        onOk: function onOk() {\n          if (changedWorkflowToUpdate.eSignRequired) {\n            showProgress();\n            thisObj.setState({\n              esign: true,\n              actionName: \"UpdateStatus\",\n              workFlowDataToUpdate: data,\n              esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\n            });\n            hideProgress();\n          } else {\n            thisObj.updateWorkFlow(data);\n          }\n        },\n        onCancel: function onCancel() {\n          new Promise(function (res, rej) {\n            thisObj.setState({\n              esign: false,\n              dataSource: []\n            }, res());\n          }).then(function () {\n            thisObj.setState({\n              dataSource: thisObj.state.datas\n            });\n          });\n        }\n      });\n    };\n    _this.afterEsignVerfied = function () {\n      var workFlowDataToUpdate = thisObj.state.workFlowDataToUpdate;\n      thisObj.updateWorkFlow(workFlowDataToUpdate);\n    };\n    _this.deleteStudyAfterEsignVerified = function () {\n      var values = {};\n      thisObj.setState({\n        modalLoad: true\n      });\n      values[\"StudyID\"] = thisObj.state.studyID;\n      values[\"ChangeReason\"] = thisObj.state.changeReason;\n      values[\"TimeZone\"] = \"IST\";\n      showProgress();\n      CallServerPost('Study/Delete', values).then(function (response) {\n        hideProgress();\n        if (response.status === 1) {\n          thisObj.setState({\n            actionName: \"index\",\n            modalLoad: false,\n            showEditModal: false,\n            esign: false\n          });\n          successModalCallback(response.message, thisObj.getList(thisObj.props));\n        } else {\n          thisObj.setState({\n            modalLoad: false,\n            showEditModal: false,\n            esign: false\n          });\n          errorModal(response.message);\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.cancelEsign = function (studyID) {\n      var datas = _this.state.datas;\n      new Promise(function (res, rej) {\n        thisObj.setState({\n          esign: false,\n          showEditModal: false,\n          dataSource: []\n        }, res());\n      }).then(function () {\n        thisObj.setState({\n          dataSource: datas\n        });\n      });\n    };\n    _this.updateWorkFlow = function (data) {\n      var zones = moment.tz.guess();\n      var timezone = moment.tz(zones).zoneAbbr();\n      var updatedBy = projectRole.userProfile.userID;\n      data.TimeZone = timezone;\n      data.UpdatedBy = updatedBy;\n      showProgress();\n      PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(function (response) {\n        hideProgress();\n        if (response.status == 1) {\n          thisObj.setState({\n            esign: false,\n            dataSource: []\n          });\n          successModalCallback(response.message, thisObj.getList(thisObj.props));\n        } else {\n          errorModalCallback(response.message, function () {\n            new Promise(function (res, rej) {\n              thisObj.setState({\n                esign: false,\n                dataSource: []\n              }, res());\n            }).then(function () {\n              thisObj.setState({\n                dataSource: thisObj.state.datas\n              });\n            });\n          });\n        }\n      });\n    };\n    _this.esignText = function (WorkFlow) {\n      var text = {\n        StudyInProgress: \"I am fully aware of my actions to make changes in a study that is already completed.\",\n        StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\"\n      };\n      return text[WorkFlow];\n    };\n    _this.fnToDownloadAuditLog = function (studyID, directoryName) {\n      var configCallBack = function configCallBack(valueObj) {\n        var today = new Date(),\n          date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + '_' + today.getHours() + ':' + today.getMinutes();\n        //showProgress();\n        thisObj.socket_open();\n        DownloadFileWithPostData('Study/GetAuditLogReport', valueObj.directoryName + \"_AuditLog_\" + date + \".pdf\", {\n          StudyID: valueObj.studyID\n        }, \"application/pdf\").then(function () {\n          thisObj.setState({\n            progress: \"exception\"\n          });\n          /* hideProgress();*/\n        });\n      };\n\n      _this.CheckStudyFolderPermissions(configCallBack, {\n        studyID: studyID,\n        directoryName: directoryName\n      });\n\n      //thisObj.setState({ loading: true });\n    };\n    _this.socket_open = function () {\n      thisObj.setState({\n        progress: \"active\"\n      });\n    };\n    _this.handleDelete = function (changeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      thisObj.setState({\n        esign: true,\n        changeReason: changeReason,\n        showEditModal: false,\n        esignText: \"I have confirmed that this study needs to be deleted!\"\n      });\n    };\n    _this.handleCancel = function () {\n      _this.setState({\n        showImport: false,\n        showEditModal: false,\n        showAddStudyModal: false,\n        showEditStudy: false,\n        showSchemaValidation: false,\n        showConfirmModalForStudyLockStatus: false,\n        commentFlag: false\n      });\n    };\n    _this.stopLoading = function () {\n      _this.setState({\n        loading: false,\n        load: -1\n      });\n    };\n    _this.refresh = function () {\n      thisObj.getList(thisObj.props);\n    };\n    _this.handleUpdateStudyLock = function (ChangeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      var values = {};\n      values[\"ProjectID\"] = _this.state.ProjectID;\n      values[\"StudyID\"] = _this.state.studyID;\n      values[\"Locked\"] = _this.state.Locked;\n      values[\"ChangeReason\"] = ChangeReason;\n      values[\"UpdatedBy\"] = projectRole.userProfile.userID;\n      ;\n      thisObj.setState({\n        modalLoad: true\n      });\n      PostCallWithZone('Study/UpdateStudyLockStatus', values).then(function (response) {\n        if (response.status == 1) {\n          successModalCallback(response.message, thisObj.getList(thisObj.props));\n        } else {\n          thisObj.setState({\n            modalLoad: false,\n            showConfirmModalForStudyLockStatus: false\n          });\n          errorModal(response.message);\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.showNewAddStudyModal = function () {\n      _this.setState({\n        showAddStudyModalNew: true,\n        actionName: \"Create\"\n      });\n    };\n    _this.cancelNewAddStudyModal = function () {\n      _this.setState({\n        showAddStudyModalNew: false\n      });\n    };\n    _this.setModalCancel = function (enable) {\n      _this.setState({\n        disableBtn: enable\n      });\n    };\n    _this.fnTreeViewCancel = function () {\n      var isAutoOpen = thisObj.props.isAutoOpen;\n\n      //set topbar header\n      sessionStorage.removeItem(\"studyDetails\");\n      setHeader();\n      //end\n      if (isAutoOpen) {\n        _this.props.isAutoOpenUpdate();\n      }\n      _this.setState({\n        TreeViewVisble: !_this.state.TreeViewVisble,\n        study: {}\n      });\n    };\n    _this.StudyConfigPage_UpdateStudyList = function () {\n      thisObj.getList(thisObj.props);\n    };\n    _this.state = {\n      generateXMLPopUp: false,\n      popUpLoading: false,\n      dataSource: [],\n      showEditModal: false,\n      studyID: studyID,\n      showEditStudy: false,\n      showAddStudyModal: false,\n      ShowStudyList: false,\n      showSchemaValidation: false,\n      schemaDataSource: [],\n      schemaValidationTitle: \"\",\n      dataValidationDataSource: [],\n      dataValidationTitle: \"\",\n      metaDataSource: [],\n      metaDataValidationTitle: \"\",\n      showConfirmModalForStudyLockStatus: false,\n      ProjectID: ProjectID,\n      Locked: Locked,\n      actionName: \"index\",\n      modalLoad: false,\n      showImport: false,\n      loading: false,\n      load: 1,\n      projectStudyName: \"\",\n      showAddStudyModalNew: false,\n      commentFlag: false,\n      esign: false,\n      esignText: \"\",\n      defaultValue: \"\",\n      mappingRequired: false,\n      annotationRequired: false,\n      defineRequired: false,\n      disableBtn: false,\n      adamEnabled: false,\n      TreeViewVisble: false,\n      projectStatus: false,\n      studyStatus: 0,\n      standardName: \"\",\n      fromDashBoard: false,\n      workflowActivityStatusID: -1,\n      isAnnotVisible: false,\n      studyName: \"\",\n      study: {},\n      autoOpenTreeview: false,\n      workflowObj: [],\n      studyConfigModal: false,\n      progress: false,\n      studyInfoModal: false\n    };\n    _this.addStudy = _this.addStudy.bind(_assertThisInitialized(_this));\n    //this.editStudy = this.editStudy.bind(this);\n    ShowStudyList = _this.props.visible;\n    thisObj = _assertThisInitialized(_this);\n    thisObj.getList(_this.props);\n\n    ////If from mapping \n    //if (props.from === \"mapping\") {\n    //    let study = JSON.parse(sessionStorage.getItem(\"studyDetails\"));\n\n    //    thisObj.studyActions(study.studyID, JSON.parse(props.isProjectInActive), study.studyLocked, study.standardName, study.workflowActivityStatusID);\n    //}\n    window.addEventListener('resize', _this.Render);\n    return _this;\n  }\n  _createClass(StudyIndex, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var isProjectInActive = this.props.isProjectInActive;\n      var _this$state = this.state,\n        esign = _this$state.esign,\n        progress = _this$state.progress,\n        esignText = _this$state.esignText,\n        workflowObj = _this$state.workflowObj,\n        defaultValue = _this$state.defaultValue,\n        RoleAssignmentModal = _this$state.RoleAssignmentModal,\n        WorkFlowModal = _this$state.WorkFlowModal,\n        activityModal = _this$state.activityModal,\n        studyID = _this$state.studyID,\n        dataSource = _this$state.dataSource,\n        Locked = _this$state.Locked,\n        workflowActivityStatusID = _this$state.workflowActivityStatusID,\n        isAnnotVisible = _this$state.isAnnotVisible,\n        study = _this$state.study,\n        studyName = _this$state.studyName,\n        studyConfigModal = _this$state.studyConfigModal;\n      var permissions = this.props.permissions;\n      var columns = [{\n        title: 'Study Name',\n        dataIndex: 'studyName',\n        key: 'studyName',\n        width: 50,\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'studyName');\n        }\n      }, {\n        title: 'Standard',\n        dataIndex: 'standardText',\n        key: 'standardText',\n        width: 50,\n        sorter: function sorter(a, b) {\n          return stringSorter(a, b, 'standardText');\n        }\n      },\n      //{\n      //    title: 'Study Status',\n      //    dataIndex: 'studyStatus',\n      //    key: 'studyStatus',\n      //    width: 170,\n      //    sorter: (a, b) => stringSorter(a, b, 'studyStatus')\n\n      //},\n\n      {\n        title: 'Study Workflow Status',\n        dataIndex: 'workflowActions',\n        width: 50,\n        key: 'workflowActions'\n      }, {\n        title: 'Study Actions',\n        dataIndex: 'actions',\n        width: 100,\n        key: 'actions'\n      }];\n      var showActions = true;\n      //if (dataSource.length > 0) {\n      //    dataSource.map(value => {\n      //        value.actions.props.children.props.children.map(actions => {\n      //            if (actions !== null) {\n      //                showActions = true;\n      //                return;\n      //            }\n      //        });\n      //        if (showActions) {\n      //            return;\n      //        }\n      //    });\n      //}\n      if (!showActions) {\n        columns.shift(); // Removes Actions Co which contains all define actions\n      }\n\n      return ShowStudyList ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        style: {\n          display: isAnnotVisible ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-clipboard-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 33\n        }\n      }, this.state.actionName != \"Version\" ? \"Study\" : \"Version\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 29\n        }\n      }, \"List\")), /*#__PURE__*/React.createElement(Divider, {\n        className: \"divider-cs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(LayoutContent, {\n        className: 'studyList',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 25\n        }\n      }, this.state.actionName != \"Version\" && this.state.actionName != \"Reload\" && /*#__PURE__*/React.createElement(ReactTable, {\n        searchText: \"\",\n        columns: columns,\n        dataSource: dataSource,\n        id: \"studyList\",\n        addAction: isProjectInActive ? null : JSON.parse(sessionStorage.role).RoleID > 3 ? null : this.addStudy,\n        scroll: {\n          y: \"calc(100vh - 314px)\",\n          x: columns.length * 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 33\n        }\n      }), this.state.actionName == \"Reload\" && /*#__PURE__*/React.createElement(Skeleton, {\n        active: true,\n        paragraph: {\n          rows: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 33\n        }\n      }), this.state.showAddStudyModalNew && /*#__PURE__*/React.createElement(Create, {\n        title: \"Add Study\",\n        action: this.state.actionName,\n        studyListRefresh: this.refresh,\n        projectId: this.props.projectId,\n        parentRootProps: this.props.rootprops,\n        visible: this.state.showAddStudyModalNew,\n        handleCancel: this.cancelNewAddStudyModal,\n        projectName: this.props.projectName,\n        sponsorName: this.props.sponsorName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 33\n        }\n      }), this.state.actionName === \"Delete\" ? /*#__PURE__*/React.createElement(ConfirmModal, {\n        loading: this.state.modalLoad,\n        title: \"Delete Study\",\n        SubmitButtonName: \"Delete\",\n        onSubmit: this.handleDelete,\n        visible: this.state.showEditModal,\n        handleCancel: this.handleCancel,\n        getFieldDecorator: getFieldDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 72\n        }\n      }) : this.state.actionName === \"LockStatus\" ? /*#__PURE__*/React.createElement(ConfirmModal, {\n        loading: this.state.modalLoad,\n        title: \"Update Study Lock Status\",\n        SubmitButtonName: \"Update\",\n        onSubmit: this.handleUpdateStudyLock,\n        visible: this.state.showConfirmModalForStudyLockStatus,\n        handleCancel: this.handleCancel,\n        getFieldDecorator: getFieldDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 80\n        }\n      }) : \"\", studyConfigModal && /*#__PURE__*/React.createElement(StudyConfigModal, {\n        study: study,\n        isProjectInActive: this.props.isProjectInActive,\n        configVisible: studyConfigModal,\n        workflowObj: workflowObj,\n        handleCancel: this.cancelPops,\n        form: this.props.form,\n        projectID: this.props.projectId,\n        studyName: thisObj.state.studyName,\n        refreshList: this.refreshList,\n        permissions: this.props.permissions,\n        UpdateStudyList: this.StudyConfigPage_UpdateStudyList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 33\n        }\n      }), this.state.studyInfoModal && /*#__PURE__*/React.createElement(StudyInfo, {\n        study: study,\n        isProjectInActive: this.props.isProjectInActive,\n        configVisible: this.state.studyInfoModal,\n        workflowObj: workflowObj,\n        handleCancel: this.cancelPops,\n        form: this.props.form,\n        projectID: this.props.projectId,\n        studyName: thisObj.state.studyName,\n        refreshList: this.refreshList,\n        permissions: this.props.permissions,\n        UpdateStudyList: this.StudyConfigPage_UpdateStudyList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 33\n        }\n      }), esign && /*#__PURE__*/React.createElement(ConfirmWithEsign, {\n        esignText: esignText,\n        studyPage: this,\n        defaultValue: defaultValue,\n        cancelEsign: this.cancelEsign,\n        visible: esign,\n        buttonName: this.state.actionName,\n        onSubmit: this.state.actionName === \"Delete\" ? this.deleteStudyAfterEsignVerified : this.afterEsignVerfied,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 39\n        }\n      }), /*#__PURE__*/React.createElement(Progress, {\n        progress: progress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 30\n        }\n      })))) : null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value:\n    //Second time render\n    //Update\n    function getDerivedStateFromProps(nextProps) {\n      var _thisObj$props = thisObj.props,\n        isAutoOpen = _thisObj$props.isAutoOpen,\n        isProjectInActive = _thisObj$props.isProjectInActive;\n      var _thisObj$state = thisObj.state,\n        TreeViewVisble = _thisObj$state.TreeViewVisble,\n        autoOpenTreeview = _thisObj$state.autoOpenTreeview;\n      if (typeof nextProps.projectId != \"undefined\" && nextProps.projectId != null && thisObj.props.projectId != nextProps.projectId || thisObj.state.actionName == \"Version\") {\n        thisObj.props = nextProps;\n        thisObj.setState({\n          actionName: \"Reload\"\n        });\n        thisObj.getList(nextProps);\n      } else if (isAutoOpen && !TreeViewVisble && !autoOpenTreeview) {\n        //autoOpenTreeview for open the pop up when from workspace\n        var study = JSON.parse(sessionStorage.getItem(\"studyDetails\"));\n        var standardName = sessionStorage.setItem(\"standard\", standardName);\n        thisObj.setState({\n          autoOpenTreeview: true,\n          study: study,\n          TreeViewVisble: true,\n          standardName: standardName,\n          workflowActivityStatusID: study.workflowActivityStatusID,\n          projectStudyLockStatus: isProjectInActive ? true : study.locked ? true : false\n        });\n      }\n    }\n\n    //Edit Study\n  }]);\n  return StudyIndex;\n}(Component);\nvar WrappedApp = Form.create()(StudyIndex);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","validJSON","showProgress","hideProgress","CallServerPost","errorModal","errorModalCallback","successModalCallback","successModal","PostCallWithZone","DownloadFileWithPostData","checkPermission","getProjectRole","dynamicModal","getUserID","Modal","Icon","Breadcrumb","Form","Skeleton","Divider","Menu","Dropdown","Button","message","ConfirmModal","ReactTable","LayoutContent","LayoutContentWrapper","UpdateStudyModal","Version","stringSorter","ImportFile","XMLGeneration","Create","RoleAssignment","WorkFlow","WorkflowDropdown","ActivityConfiguration","StudyConfigModal","StudyInfo","CSSTransition","setHeader","moment","ButtonWithToolTip","SwitchToolTip","ConfirmWithEsign","TreeView","createBrowserHistory","Progress","ActivityWorkspace","NOTYETCONFIGURED","antIcon","fontSize","color","margin","schemavalidation","metadatavalidation","datavalidation","studyID","showEditModal","showEditStudy","showAddStudyModal","ShowStudyList","showSchemaValidation","showConfirmModalForStudyLockStatus","ProjectID","Locked","thisObj","projectRole","StudyIndex","props","refreshList","getList","permissionCheck","btnName","study","permissions","locked","UserID","JSON","parse","sessionStorage","userProfile","userID","projectId","RoleID","role","then","response","isProjectInActive","value","resObj","datas","StudyList","StudyWorkflow","WorkflowActivityStatusTransition","ActivityWorkflowByProject","i","studyid","studyWorkFlow","find","wrkFlo","standardName","standardText","studyLocked","studyName","workflowActivityStatusID","directoryName","projectText","ActivityWorkStatusflowByStudy","filter","wf","status","Annotation","Mapping","Program","Define","workspcaePermission","StudyWorkSpace","map","wfs","workflowActivityID","studyText","workspaceMenu","e","key","CheckAndGoToWorkSpace","destroy","error","annotationRequired","mappingRequried","defineRequired","editCell","studyConfiguration","studyInfo","fnToDownloadAuditLog","deleteStudy","updateStudyLockStatus","updateWorkFlow","getFieldDecorator","form","parameters","fnForWorkflow","beforeUpdateTheWorkFlow","workflowCell","push","actions","studyStatus","workflowActivityStatusText","sponsorName","standardVersionText","workflowActions","length","setState","dataSource","modalLoad","WorkFlowModal","actionName","workflowObj","RoleAssignmentModal","showAddStudyModalNew","loading","catch","editStudy","addStudy","showNewAddStudyModal","configCallBack","valueObj","CheckStudyFolderPermissions","ActivityWorkFlowStatus","ActivityName","workspace","projectStatus","setItem","stringify","projectStudyLockStatus","FormName","ActionName","projectID","StudyID","res","ActivityConfigList","ActivityWorkSpace","history","data","by","from","projectInActive","allActivityDetails","GoToActivityWorkspace","isLocked","fnForVersionList","cancelPops","activityModal","studyConfigModal","studyInfoModal","showRoleAssignModal","activity","activityConfiguration","callback","UserText","emailAddress","workFlow","generateXMLPopUpCancel","generateXMLPopUp","targetStatusID","availableWorkflows","changedWorkflowToUpdate","wrkflo","changeReason","targetStatusText","workflowActivityStatusTransitionID","updatedDateTime","StudyWorkFlowID","studyWorkflowID","title","icon","msg","onOk","eSignRequired","esign","workFlowDataToUpdate","esignText","replace","onCancel","Promise","rej","state","afterEsignVerfied","deleteStudyAfterEsignVerified","values","cancelEsign","zones","tz","guess","timezone","zoneAbbr","updatedBy","TimeZone","UpdatedBy","text","StudyInProgress","StudyCompleted","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","socket_open","progress","handleDelete","handleCancel","showImport","commentFlag","stopLoading","load","refresh","handleUpdateStudyLock","ChangeReason","cancelNewAddStudyModal","setModalCancel","enable","disableBtn","fnTreeViewCancel","isAutoOpen","removeItem","isAutoOpenUpdate","TreeViewVisble","StudyConfigPage_UpdateStudyList","popUpLoading","schemaDataSource","schemaValidationTitle","dataValidationDataSource","dataValidationTitle","metaDataSource","metaDataValidationTitle","projectStudyName","defaultValue","mappingRequired","adamEnabled","fromDashBoard","isAnnotVisible","autoOpenTreeview","bind","visible","window","addEventListener","Render","columns","dataIndex","width","sorter","a","b","showActions","shift","display","y","x","rows","rootprops","projectName","nextProps","getItem","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Study/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    validJSON,\r\n    showProgress,\r\n    hideProgress,\r\n    CallServerPost,\r\n    errorModal,\r\n    errorModalCallback,\r\n    successModalCallback,\r\n    successModal,\r\n    PostCallWithZone,\r\n    DownloadFileWithPostData,\r\n    checkPermission,\r\n    getProjectRole,\r\n    dynamicModal,\r\n    getUserID,\r\n} from '../Utility/sharedUtility';\r\nimport { Modal, Icon, Breadcrumb, Form, Skeleton, Divider, Menu, Dropdown, Button, message } from 'antd';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\nimport ReactTable from '../Utility/reactTable';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\r\nimport UpdateStudyModal from './editStudy';\r\nimport Version from './versionjs';\r\nimport { stringSorter } from '../Utility/htmlUtility';\r\nimport ImportFile from './import.js';\r\nimport XMLGeneration from './xmlGenerationVersionModal';\r\nimport Create from './Create';\r\nimport RoleAssignment from './roleAssignment';\r\nimport WorkFlow from './workFlow';\r\nimport { WorkflowDropdown } from './workflowDropdown'\r\nimport ActivityConfiguration from './ActivityConfig/ActivityConfiguration';\r\nimport StudyConfigModal from './StudyConfig';\r\nimport StudyInfo from './StudyConfig/StudyInfo';\r\n//Importing ButtonWithToolTip for Actions\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { setHeader } from '../Topbar/Topbar';\r\nimport moment from 'moment-timezone';\r\n\r\nimport ButtonWithToolTip from '../Tooltip/ButtonWithToolTip';\r\n//SwitchToolTip Importing\r\nimport SwitchToolTip from '../Tooltip/SwitchToolTip';\r\nimport ConfirmWithEsign from './confirmationWithEsign';\r\nimport TreeView from '../TreeView';\r\nimport { createBrowserHistory } from 'history';\r\nimport Progress from '../Utility/ProgressBar';\r\nimport { ActivityWorkspace } from './ActivityWorkspace';\r\nimport { NOTYETCONFIGURED } from '../Utility/appConstants';\r\n\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\r\nconst margin = {\r\n    margin: '0 3px 0 0'\r\n};\r\n\r\nlet schemavalidation = [];\r\nlet metadatavalidation = [];\r\nlet datavalidation = [];\r\nvar studyID;\r\nvar showEditModal, showEditStudy, showAddStudyModal, ShowStudyList, showSchemaValidation;\r\nvar showConfirmModalForStudyLockStatus, ProjectID, Locked;\r\n\r\nlet thisObj = {};\r\nconst projectRole = getProjectRole();\r\nclass StudyIndex extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            generateXMLPopUp: false,\r\n            popUpLoading: false,\r\n            dataSource: [],\r\n            showEditModal: false,\r\n            studyID,\r\n            showEditStudy: false,\r\n            showAddStudyModal: false,\r\n            ShowStudyList: false,\r\n            showSchemaValidation: false,\r\n            schemaDataSource: [],\r\n            schemaValidationTitle: \"\",\r\n            dataValidationDataSource: [],\r\n            dataValidationTitle: \"\",\r\n            metaDataSource: [],\r\n            metaDataValidationTitle: \"\",\r\n            showConfirmModalForStudyLockStatus: false,\r\n            ProjectID,\r\n            Locked,\r\n            actionName: \"index\",\r\n            modalLoad: false,\r\n            showImport: false,\r\n            loading: false,\r\n            load: 1,\r\n            projectStudyName: \"\",\r\n            showAddStudyModalNew: false,\r\n            commentFlag: false,\r\n            esign: false,\r\n            esignText: \"\",\r\n            defaultValue: \"\",\r\n            mappingRequired: false,\r\n            annotationRequired: false,\r\n            defineRequired: false,\r\n            disableBtn: false,\r\n            adamEnabled: false,\r\n            TreeViewVisble: false,\r\n            projectStatus: false,\r\n            studyStatus: 0,\r\n            standardName: \"\",\r\n            fromDashBoard: false,\r\n            workflowActivityStatusID: -1,\r\n            isAnnotVisible: false,\r\n            studyName: \"\",\r\n            study: {},\r\n            autoOpenTreeview: false,\r\n            workflowObj: [],\r\n            studyConfigModal: false,\r\n            progress: false,\r\n            studyInfoModal: false\r\n        };\r\n\r\n        this.addStudy = this.addStudy.bind(this);\r\n        //this.editStudy = this.editStudy.bind(this);\r\n        ShowStudyList = this.props.visible;\r\n        thisObj = this;\r\n\r\n        thisObj.getList(this.props);\r\n\r\n        ////If from mapping \r\n        //if (props.from === \"mapping\") {\r\n        //    let study = JSON.parse(sessionStorage.getItem(\"studyDetails\"));\r\n\r\n        //    thisObj.studyActions(study.studyID, JSON.parse(props.isProjectInActive), study.studyLocked, study.standardName, study.workflowActivityStatusID);\r\n        //}\r\n        window.addEventListener('resize', this.Render);\r\n\r\n    }\r\n\r\n   \r\n \r\n    \r\n    refreshList = () => {\r\n        this.getList(this.props);\r\n    }\r\n\r\n    permissionCheck = (btnName, study, permissions) => {\r\n        if (checkPermission(permissions, [btnName]) >= 1) {\r\n            if (!study.locked) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    //Study List from controller\r\n    getList = (props) =>\r\n    {\r\n        showProgress();\r\n        CallServerPost('Study/GetStudyByProjectRoleUser ',\r\n            {\r\n                UserID: JSON.parse(sessionStorage.userProfile).userID,\r\n                ProjectID: props.projectId,\r\n                RoleID: JSON.parse(sessionStorage.role).RoleID\r\n            })\r\n            .then(\r\n                function (response)\r\n                {\r\n                    hideProgress();\r\n                    let isProjectInActive = props.isProjectInActive;\r\n                    //console.log(response);\r\n                    if (response.value !== null) {\r\n                        const resObj = response.value\r\n                        var datas = [];\r\n                        const {\r\n                            StudyList,\r\n                            StudyWorkflow,\r\n                            WorkflowActivityStatusTransition,\r\n                            ActivityWorkflowByProject\r\n                        } = resObj;\r\n\r\n                        //get studyWorkFlow for the study \r\n\r\n                        const permissions = thisObj.props.permissions;\r\n\r\n                        for (var i = 0; i < StudyList.length; i++) {\r\n                            const study = StudyList[i];\r\n                            const studyid = study.studyID;\r\n                            const studyWorkFlow = StudyWorkflow.find(wrkFlo => wrkFlo.studyID === studyid);\r\n\r\n                            const standardName = study.standardText;  //to pass standardName to workspace\r\n                            const studyLocked = StudyList[i].locked;\r\n                            const studyName = StudyList[i].studyName;\r\n                            const workflowActivityStatusID = StudyList[i].workflowActivityStatusID;\r\n                            const directoryName = StudyList[i].projectText + \"_\" + StudyList[i].studyName;\r\n\r\n                            //Filter Activity Workflow By Study\r\n                            // Variable ActivityWorkflowByProject contains all WFS by project\r\n                            const ActivityWorkStatusflowByStudy = ActivityWorkflowByProject.filter(wf => wf.studyID === studyid);\r\n\r\n                            //Get the current WF status\r\n                            let status =\r\n                            {\r\n                                Annotation: NOTYETCONFIGURED,\r\n                                Mapping: NOTYETCONFIGURED,\r\n                                Program: NOTYETCONFIGURED,\r\n                                Define: NOTYETCONFIGURED\r\n                            }\r\n\r\n                            let workspcaePermission = permissions.StudyWorkSpace;\r\n\r\n                            ActivityWorkStatusflowByStudy.map(wfs =>\r\n                            {\r\n                                switch (wfs.workflowActivityID)\r\n                                {\r\n                                    //Annotation\r\n                                    case 2:\r\n                                        status.Annotation = wfs.studyText;\r\n                                        return;\r\n                                    //Transformation\r\n                                    case 3:\r\n                                        status.Mapping = wfs.studyText;\r\n                                        status.Program = wfs.studyText;\r\n                                        return;\r\n                                    //Define\r\n                                    case 4:\r\n                                        status.Define = wfs.studyText;\r\n                                        return;\r\n                                }\r\n                            });\r\n\r\n                            const workspaceMenu = (\r\n                                <Menu onClick={(e) => {\r\n                                    if (status[e.key] !== NOTYETCONFIGURED) {\r\n                                        thisObj.CheckAndGoToWorkSpace(study, ActivityWorkStatusflowByStudy, e.key);\r\n                                    } else {\r\n                                        message.destroy();\r\n                                        message.error(\"Activity not configured!\");\r\n                                    }\r\n                                }}>\r\n                                    {\r\n                                        study.annotationRequired && checkPermission(workspcaePermission, ['Annotation']) >= 1 &&\r\n                                        <Menu.Item key=\"Annotation\">\r\n                                            <Icon type=\"file-text\" />\r\n                                            Annotation - {status.Annotation}\r\n                                        </Menu.Item>\r\n                                    }\r\n                                    {\r\n                                        study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 &&\r\n                                            <Menu.Item key=\"Mapping\">\r\n                                                <Icon type=\"code\" />\r\n                                                Mapping -  {status.Mapping}\r\n                                            </Menu.Item>\r\n                                    }\r\n                                    {\r\n                                        study.mappingRequried && checkPermission(workspcaePermission, ['Mapping']) >= 1 &&\r\n                                            <Menu.Item key=\"Program\">\r\n                                                <Icon type=\"file-done\" />\r\n                                                Output Generation -  {status.Mapping}\r\n                                            </Menu.Item>\r\n                                    }\r\n                                    {\r\n                                        study.defineRequired && checkPermission(workspcaePermission, ['Define']) >= 1 &&\r\n                                        <Menu.Item key=\"Define\">\r\n                                            <Icon type=\"read\" />\r\n                                            Define XML -  {status.Define}\r\n                                        </Menu.Item>\r\n                                    }\r\n                                    </Menu>\r\n                                \r\n                            );\r\n                            const editCell = <div /*style={{ margin: '0 auto', display: 'table' }}*/>\r\n\r\n                                {checkPermission(permissions, ['StudyWorkSpace']) >= 1 ?\r\n                                    //<ButtonWithToolTip\r\n                                    //    size=\"small\"\r\n                                    //    shape=\"round\"\r\n                                    //    style={margin}\r\n                                    //    tooltip=\"Study Workspace\"\r\n                                    //    classname=\"fas fa-external-link-alt\"\r\n                                    //    name={StudyList[i].studyName + \"_StudyWorkSpace\"}\r\n                                    //    onClick={() => thisObj.studyActions(study, JSON.parse(props.isProjectInActive), studyLocked, standardName, workflowActivityStatusID)}\r\n                                    ///> : null}\r\n                                    <Dropdown overlay={workspaceMenu}>\r\n                                        <Button\r\n                                            size=\"small\"\r\n                                            shape=\"round\"\r\n                                            style={margin}\r\n                                            name={StudyList[i].studyName + \"_StudyWorkSpace\"}\r\n                                        >\r\n                                            <i className=\"fas fa-external-link-alt\" />\r\n                                        </Button>\r\n                                    </Dropdown> : null\r\n\r\n                                }\r\n\r\n                                {<ButtonWithToolTip\r\n                                    tooltip=\"Study Configuration\"\r\n                                    shape=\"round\"\r\n                                    size=\"small\"\r\n                                    style={margin}\r\n                                    classname=\"fa fa-cogs\"\r\n                                    onClick={() => thisObj.studyConfiguration(study, studyName)}\r\n                                />}\r\n\r\n                                {<ButtonWithToolTip\r\n                                    tooltip=\"Study Info\"\r\n                                    shape=\"round\"\r\n                                    size=\"small\"\r\n                                    style={margin}\r\n                                    classname=\"fa fa-chart-line\"\r\n                                    onClick={() => thisObj.studyInfo(study, studyName)}\r\n                                />}\r\n\r\n                                {checkPermission(permissions, ['AuditLog']) >= 1 ?\r\n                                    <ButtonWithToolTip\r\n                                        name={StudyList[i].studyName + \"_AuditLogDownload\"}\r\n                                        tooltip=\"Auditlog Download\"\r\n                                        shape=\"round\"\r\n                                        icon=\"audit\"\r\n                                        size=\"small\"\r\n                                        style={margin}\r\n                                        onClick={() => thisObj.fnToDownloadAuditLog(studyid, directoryName)}\r\n                                    /> : null}\r\n\r\n\r\n                                {checkPermission(permissions, ['self']) >= 4 ?\r\n                                    <ButtonWithToolTip\r\n                                        name={StudyList[i].studyName + \"_Delete\"}\r\n                                        tooltip=\"Delete\"\r\n                                        shape=\"round\"\r\n                                        classname=\"fas fa-trash-alt\"\r\n                                        size=\"small\"\r\n                                        disabled={workflowActivityStatusID !== 1 && workflowActivityStatusID !== 15}\r\n                                        style={margin}\r\n                                        onClick={() => thisObj.deleteStudy(studyid)}\r\n                                    /> : null\r\n                                }\r\n\r\n                                {checkPermission(permissions, ['StudyLock']) >= 2 ? <SwitchToolTip\r\n                                    name={StudyList[i].studyName + \"_Unlock\"}\r\n                                    switchtooltip={StudyList[i].locked == 1 ? \"Lock\" : \"Unlock\"}\r\n                                    onChange={(e) => { thisObj.updateStudyLockStatus(studyid, props.projectId, e) }}\r\n                                    studyID={studyid} thisObj={thisObj} checkedChildren={<Icon type=\"check\" />}\r\n                                    unCheckedChildren={<Icon type=\"cross\" />}\r\n                                    checked={StudyList[i].locked == 1 ? false : true}\r\n                                    style={margin}\r\n                                    disabled={JSON.parse(props.isProjectInActive)}\r\n\r\n                                /> : null}\r\n\r\n\r\n\r\n\r\n\r\n                            </div>;\r\n\r\n                            //Get Workflow Column actions\r\n                            const { updateWorkFlow } = thisObj;\r\n                            //Paremeters\r\n                            //Study\r\n                            //StudyWorkflow,\r\n                            //WorkflowActivityStatusTransition\r\n                            //Fn for both workflow onchange and comment click\r\n                            const { getFieldDecorator } = thisObj.props.form;\r\n\r\n                            let parameters = {\r\n                                study: study,\r\n                                permissions: permissions,\r\n                                studyWorkFlow: studyWorkFlow,\r\n                                getFieldDecorator: getFieldDecorator,\r\n                                isProjectInActive: props.isProjectInActive,\r\n                                WorkflowActivityStatusTransition: WorkflowActivityStatusTransition,\r\n                                fnForWorkflow: thisObj.beforeUpdateTheWorkFlow,\r\n                            };\r\n\r\n                            const workflowCell = WorkflowDropdown(parameters);\r\n\r\n                            datas.push({\r\n                                key: StudyList[i].studyID,\r\n                                actions: editCell,\r\n                                studyName: StudyList[i].studyName,\r\n                                studyStatus: StudyList[i].workflowActivityStatusText,\r\n                                sponsorName: StudyList[i].sponsorName,\r\n                                standardText: StudyList[i].standardText + \" \" + StudyList[i].standardVersionText,\r\n                                workflowActions: workflowCell\r\n                            });\r\n\r\n                        }\r\n\r\n                        thisObj.setState({\r\n                            datas: datas,\r\n                            dataSource: datas,\r\n                            modalLoad: false,\r\n                            WorkFlowModal: false,\r\n                            showEditStudy: false,\r\n                            actionName: \"Index\",\r\n                            workflowObj:\r\n                            {\r\n                                StudyWorkflow: StudyWorkflow,\r\n                                WorkflowActivityStatusTransition: WorkflowActivityStatusTransition\r\n                            },\r\n                            RoleAssignmentModal: false,\r\n                            showAddStudyModalNew: false,\r\n                            showConfirmModalForStudyLockStatus: false,\r\n\r\n                        });\r\n\r\n                    }\r\n                    else {\r\n                        thisObj.setState({\r\n                            RoleAssignmentModal: false,\r\n                            WorkFlowModal: false,\r\n                            showEditStudy: false,\r\n                            showAddStudyModalNew: false,\r\n                            actionName: \"Index\",\r\n                            dataSource: [],\r\n                            datas: [],\r\n                            loading: false,\r\n                            modalLoad: false,\r\n                            showConfirmModalForStudyLockStatus: false\r\n                        });\r\n                    }\r\n\r\n\r\n                }).catch(error => error\r\n                );\r\n    }\r\n\r\n    //Second time render\r\n    //Update\r\n    static getDerivedStateFromProps(nextProps) {\r\n        let { isAutoOpen, isProjectInActive } = thisObj.props;\r\n        let { TreeViewVisble, autoOpenTreeview } = thisObj.state;\r\n\r\n        if ((typeof nextProps.projectId != \"undefined\" &&\r\n            nextProps.projectId != null &&\r\n            thisObj.props.projectId != nextProps.projectId) ||\r\n            thisObj.state.actionName == \"Version\") {\r\n            thisObj.props = nextProps;\r\n            thisObj.setState({\r\n                actionName: \"Reload\"\r\n            })\r\n            thisObj.getList(nextProps);\r\n        } else if (isAutoOpen && !TreeViewVisble && !autoOpenTreeview) {\r\n            //autoOpenTreeview for open the pop up when from workspace\r\n            let study = JSON.parse(sessionStorage.getItem(\"studyDetails\"));\r\n            let standardName = sessionStorage.setItem(\"standard\", standardName);\r\n            thisObj.setState({\r\n                autoOpenTreeview: true,\r\n                study: study,\r\n                TreeViewVisble: true,\r\n                standardName: standardName,\r\n                workflowActivityStatusID: study.workflowActivityStatusID,\r\n                projectStudyLockStatus: isProjectInActive ? true : (study.locked ? true : false),\r\n            });\r\n        }\r\n    }\r\n\r\n    //Edit Study\r\n    editStudy = (studyID) => {\r\n        this.setState({ showEditStudy: true, studyID: studyID, actionName: \"Update\" });\r\n    }\r\n\r\n    //Add study\r\n    addStudy = () => {\r\n        // if (JSON.parse(sessionStorage.userProfile).userID === 20124) {\r\n        this.showNewAddStudyModal();\r\n        //} else {\r\n        //    this.setState({ showAddStudyModal: true, actionName: \"Create\" });\r\n        //}\r\n\r\n    }\r\n\r\n    //Delete Study\r\n    deleteStudy = (studyID) =>\r\n    {\r\n        const configCallBack = (valueObj) => {\r\n            thisObj.setState({ actionName: \"Delete\", showEditModal: true, studyID: valueObj.studyID });\r\n        }\r\n        this.CheckStudyFolderPermissions(configCallBack, { studyID: studyID});\r\n\r\n        \r\n    }\r\n\r\n\r\n    CheckAndGoToWorkSpace = (study, ActivityWorkFlowStatus, ActivityName) => {\r\n        \r\n\r\n        const configCallBack = (valueObj) => {\r\n            thisObj.workspace(valueObj.study, valueObj.ActivityWorkFlowStatus, valueObj.ActivityName);\r\n        }\r\n        this.CheckStudyFolderPermissions(configCallBack, { study: study, ActivityWorkFlowStatus: ActivityWorkFlowStatus, ActivityName: ActivityName });\r\n    }\r\n\r\n    //open workspace pop\r\n    workspace = (study, ActivityWorkFlowStatus,ActivityName) =>\r\n    {\r\n        //Is project active or inactive\r\n        let projectStatus = JSON.parse(this.props.isProjectInActive);\r\n       //Session storage\r\n        sessionStorage.setItem(\"studyDetails\", JSON.stringify(study));\r\n        sessionStorage.setItem(\"standard\", study.standardName);\r\n        sessionStorage.setItem(\"projectStudyLockStatus\", projectStatus || study.locked);\r\n        sessionStorage.setItem(\"workflowActivityStatusID\", study.workflowActivityStatusID);\r\n        const permissions = this.props.permissions;\r\n\r\n        let projectStudyLockStatus = projectStatus ? true : (study.locked ? true : false);\r\n        try\r\n        {\r\n                //Loader\r\n                showProgress();\r\n                CallServerPost('ActivityConfiguration/GetActivityConfigurationDetailsByStudyID',\r\n                    {\r\n                        FormName: \"Study\",\r\n                        ActionName: \"Create\",\r\n                        ProjectID: study.projectID,\r\n                        StudyID: study.studyID,\r\n                    })\r\n                    .then(function (res)\r\n                    {\r\n                        if (res.status === 1)\r\n                            {\r\n                                let { ActivityConfigList } = res.value;\r\n\r\n                                let ActivityWorkSpace = new ActivityWorkspace(ActivityName);\r\n                                ActivityWorkSpace.history = thisObj.props.history;\r\n\r\n                                ActivityWorkSpace.data =\r\n                                {\r\n                                    study: study,\r\n                                    by: \"manual\",\r\n                                    from: \"Project\",\r\n                                    projectInActive: projectStatus,\r\n                                    allActivityDetails: ActivityConfigList,\r\n                                    ActivityWorkFlowStatus: ActivityWorkFlowStatus,\r\n                                    permissions: permissions.StudyWorkSpace[ActivityName],\r\n                                    projectStudyLockStatus: projectStudyLockStatus\r\n                                }\r\n\r\n                                //Here functionn will fire\r\n                                ActivityWorkSpace.GoToActivityWorkspace();\r\n\r\n                                //set topbar header\r\n                                setHeader();\r\n                                //end\r\n                        }\r\n                        else \r\n                        {\r\n                            hideProgress();\r\n                        }\r\n                });\r\n        }\r\n        catch (e)\r\n        {\r\n            hideProgress();\r\n        }\r\n    }\r\n    //Lock\r\n    updateStudyLockStatus = (studyID, projectID, isLocked) => {\r\n\r\n        const configCallBack = (valueObj) => {\r\n            thisObj.setState({ actionName: \"LockStatus\", showConfirmModalForStudyLockStatus: true, studyID: valueObj.studyID, ProjectID: valueObj.projectID, Locked: valueObj.isLocked ? false : true });\r\n        }\r\n        this.CheckStudyFolderPermissions(configCallBack, { studyID: studyID, projectID: projectID, isLocked: isLocked });\r\n\r\n    }\r\n    //Version list\r\n    fnForVersionList = (studyID) => {\r\n        this.setState({ actionName: \"Version\", studyID: studyID });\r\n\r\n    }\r\n    //Cacel pop\r\n    cancelPops = () => {\r\n        this.setState({\r\n            actionName: \"Index\",\r\n            RoleAssignmentModal: false,\r\n            WorkFlowModal: false,\r\n            activityModal: false,\r\n            studyConfigModal: false,\r\n            studyInfoModal: false\r\n        });\r\n\r\n    }\r\n\r\n    //Role Assignment\r\n    showRoleAssignModal = (studyID, projectId, isLocked, workflowActivityStatusID, studyName) => {\r\n        showProgress();\r\n        CallServerPost('ActivityConfiguration/CheckAllActivityConfiguredByStudyID', { StudyID: studyID }).then(function (res) {\r\n            if (res.status === 1) {\r\n                CallServerPost('ActivityConfiguration/GetActivityConfigurationByStudyID',\r\n                    {\r\n                        FormName: \"Study\",\r\n                        ActionName: \"Create\",\r\n                        StudyID: studyID,\r\n                        ProjectID: projectId\r\n                    }).then(function (response) {\r\n                        hideProgress();\r\n                        if (response.status === 1) {\r\n\r\n                            let activity = response.value.ActivityConfigList || [];\r\n                            if (activity.length > 0) {\r\n                                thisObj.setState({\r\n                                    studyName: studyName,\r\n                                    actionName: \"RoleAssignment\",\r\n                                    ProjectID: projectId,\r\n                                    RoleAssignmentModal: true,\r\n                                    studyID: studyID,\r\n                                    Locked: isLocked ? true : false,\r\n                                    workflowActivityStatusID: workflowActivityStatusID\r\n                                });\r\n\r\n                            }\r\n                            else {\r\n                                hideProgress();\r\n\r\n                                errorModal(\"Please configure the study activities before going into user assignment!\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            hideProgress();\r\n                            errorModal(\"Please configure the study activities before going into user assignment!\");\r\n                        }\r\n                    });\r\n            } else {\r\n                hideProgress();\r\n                errorModal(res.message);\r\n            }\r\n        }\r\n        );\r\n    }\r\n\r\n    //Activity config\r\n    activityConfiguration = (study, studyName) => {\r\n        this.setState({\r\n            study: study,\r\n            activityModal: true,\r\n            actionName: \"ActivityConfiguration\",\r\n            studyName: studyName\r\n        })\r\n    }\r\n\r\n    CheckStudyFolderPermissions = (callback, valueObj) => {\r\n        const thisObj = this;\r\n        CallServerPost('Users/CheckUserPermissions',\r\n            {\r\n                ProjectID: thisObj.props.projectId,\r\n                UserText: JSON.parse(sessionStorage.userProfile).emailAddress\r\n            }).then(function (response) {\r\n                hideProgress();\r\n                if (response.status === 1) {\r\n                    hideProgress();\r\n                    callback(valueObj);\r\n                }\r\n                else {\r\n                    hideProgress();\r\n                    errorModal(response.message);\r\n                }\r\n            });\r\n    }\r\n\r\n    //Study config\r\n    studyConfiguration = (study, studyName) =>\r\n    {\r\n        const thisObj = this;\r\n\r\n        const configCallBack = (valueObj) => {\r\n            sessionStorage.setItem(\"studyDetails\", JSON.stringify(valueObj.study));\r\n            thisObj.setState({\r\n                study: valueObj.study,\r\n                studyConfigModal: true,\r\n                actionName: \"StudyConfiguration\",\r\n                studyName: valueObj.studyName\r\n            });\r\n        }\r\n        this.CheckStudyFolderPermissions(configCallBack, { study: study, studyName: studyName });\r\n    }\r\n\r\n    //Study info\r\n    studyInfo = (study, studyName) => {\r\n\r\n        const thisObj = this;\r\n\r\n        const configCallBack = (valueObj) => {\r\n            sessionStorage.setItem(\"studyDetails\", JSON.stringify(valueObj.study));\r\n\r\n            thisObj.setState({\r\n                study: valueObj.study,\r\n                studyInfoModal: true,\r\n                actionName: \"StudyInfo\",\r\n                studyName: valueObj.studyName\r\n            })\r\n        }\r\n        this.CheckStudyFolderPermissions(configCallBack, { study: study, studyName: studyName });\r\n        \r\n    }\r\n\r\n    workFlow = (studyID, projectId, studyName) =>\r\n    {\r\n        this.setState({\r\n            actionName: \"WorkFlow\",\r\n            WorkFlowModal: true,\r\n            ProjectID: projectId,\r\n            studyID: studyID,\r\n            studyName: studyName\r\n        });\r\n    }\r\n\r\n\r\n    generateXMLPopUpCancel = () => {\r\n        thisObj.setState({ generateXMLPopUp: false });\r\n    }\r\n\r\n\r\n    //workflow Start\r\n    //Before update\r\n    beforeUpdateTheWorkFlow = (targetStatusID, study, studyWorkFlow, availableWorkflows) => {\r\n        //studyWorkFlow parameter means current workflow of study\r\n        //Current study workflowActivityID, workflowActivityStatusID\r\n        let { workflowActivityID, workflowActivityStatusID } = studyWorkFlow;\r\n\r\n        //Changed worflow by selected workflow in Dropdown\r\n        //following variable is object of selected workflow in dropn\r\n        //Get workflowActivityStatusTransitionID\r\n        //wrkflo.sourceStatusID means workflowActivityStatusID\r\n        let changedWorkflowToUpdate = availableWorkflows.find(wrkflo => wrkflo.targetStatusID === targetStatusID);\r\n\r\n\r\n        let data =\r\n        {\r\n            studyID: study.studyID,\r\n            projectID: study.projectID,\r\n            workflowActivityID: workflowActivityID,\r\n            //targetStatusID means  workflowActivityStatusID of selected Workflow in dropdown\r\n            workflowActivityStatusID: targetStatusID,\r\n            changeReason: changedWorkflowToUpdate.targetStatusText,\r\n            workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID,\r\n            updatedDateTime: studyWorkFlow.updatedDateTime,\r\n            StudyWorkFlowID: studyWorkFlow.studyWorkflowID\r\n        }\r\n        dynamicModal({\r\n            title: \"Confirmation\",\r\n            icon: \"exclamation-circle\",\r\n            msg: \"Do you want to change the status?\",\r\n            onOk: () => {\r\n                if (changedWorkflowToUpdate.eSignRequired) {\r\n                    showProgress();\r\n                    thisObj.setState({\r\n                        esign: true,\r\n                        actionName: \"UpdateStatus\",\r\n                        workFlowDataToUpdate: data,\r\n                        esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\r\n                    })\r\n                    hideProgress();\r\n\r\n                } else {\r\n                    thisObj.updateWorkFlow(data);\r\n                }\r\n            },\r\n            onCancel: () => {\r\n                new Promise((res, rej) => {\r\n                    thisObj.setState({ esign: false, dataSource: [] }, res());\r\n                }).then(() => {\r\n                    thisObj.setState({ dataSource: thisObj.state.datas });\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //After Esifn verify\r\n    afterEsignVerfied = () => {\r\n        let { workFlowDataToUpdate } = thisObj.state;\r\n        thisObj.updateWorkFlow(workFlowDataToUpdate);\r\n    }\r\n\r\n    deleteStudyAfterEsignVerified = () => {\r\n        let values = {};\r\n        thisObj.setState({ modalLoad: true });\r\n        values[\"StudyID\"] = thisObj.state.studyID;\r\n        values[\"ChangeReason\"] = thisObj.state.changeReason;\r\n        values[\"TimeZone\"] = \"IST\";\r\n        showProgress();\r\n        CallServerPost('Study/Delete', values)\r\n            .then(\r\n                function (response) {\r\n                    hideProgress();\r\n                    if (response.status === 1) {\r\n                        thisObj.setState({ actionName: \"index\", modalLoad: false, showEditModal: false, esign: false });\r\n\r\n                        successModalCallback(response.message, thisObj.getList(thisObj.props));\r\n                    } else {\r\n                        thisObj.setState({ modalLoad: false, showEditModal: false, esign: false });\r\n                        errorModal(response.message);\r\n                    }\r\n                }).catch(error => error);\r\n    }\r\n\r\n    //Cancel Esign pop\r\n    cancelEsign = (studyID) => {\r\n        const { datas } = this.state;\r\n\r\n        new Promise((res, rej) => {\r\n            thisObj.setState({ esign: false, showEditModal: false, dataSource: [] }, res());\r\n        }).then(() => {\r\n            thisObj.setState({ dataSource: datas });\r\n        });\r\n    }\r\n    //Final\r\n    updateWorkFlow = (data) => {\r\n        const zones = moment.tz.guess();\r\n        const timezone = moment.tz(zones).zoneAbbr();\r\n        let updatedBy = projectRole.userProfile.userID;\r\n        data.TimeZone = timezone;\r\n        data.UpdatedBy = updatedBy;\r\n\r\n        showProgress();\r\n        PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(\r\n            function (response) {\r\n                hideProgress();\r\n                if (response.status == 1) {\r\n                    thisObj.setState({ esign: false, dataSource: [] });\r\n                    successModalCallback(response.message, thisObj.getList(thisObj.props));\r\n                }\r\n                else {\r\n                    errorModalCallback(response.message, () => {\r\n                        new Promise((res, rej) => {\r\n                            thisObj.setState({ esign: false, dataSource: [] }, res());\r\n                        }).then(() => {\r\n                            thisObj.setState({ dataSource: thisObj.state.datas });\r\n                        });\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n    //Get Manual Esign text\r\n    esignText = (WorkFlow) => {\r\n        let text = {\r\n\r\n            StudyInProgress: \"I am fully aware of my actions to make changes in a study that is already completed.\",\r\n            StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\"\r\n        }\r\n        return text[WorkFlow];\r\n    }\r\n\r\n    //END\r\n\r\n    //Auditlog\r\n    fnToDownloadAuditLog = (studyID, directoryName) => {\r\n\r\n      \r\n\r\n        const configCallBack = (valueObj) => {\r\n            var today = new Date(),\r\n                date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + '_' + today.getHours() + ':' + today.getMinutes();\r\n            //showProgress();\r\n            thisObj.socket_open();\r\n            DownloadFileWithPostData('Study/GetAuditLogReport', valueObj.directoryName + \"_AuditLog_\" + date + \".pdf\", { StudyID: valueObj.studyID }, \"application/pdf\").then(function () {\r\n                thisObj.setState({ progress: \"exception\" });\r\n                /* hideProgress();*/\r\n\r\n            });\r\n        }\r\n        this.CheckStudyFolderPermissions(configCallBack, { studyID: studyID, directoryName: directoryName });\r\n\r\n\r\n        //thisObj.setState({ loading: true });\r\n        \r\n    }\r\n\r\n\r\n    socket_open = () => {\r\n        thisObj.setState({ progress: \"active\" })\r\n    }\r\n\r\n\r\n    handleDelete = (changeReason) => {\r\n        const thisObj = this;\r\n        thisObj.setState({\r\n            esign: true,\r\n            changeReason: changeReason,\r\n            showEditModal: false,\r\n            esignText: \"I have confirmed that this study needs to be deleted!\"\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleCancel = () => {\r\n        this.setState({ showImport: false, showEditModal: false, showAddStudyModal: false, showEditStudy: false, showSchemaValidation: false, showConfirmModalForStudyLockStatus: false, commentFlag: false });\r\n    }\r\n\r\n    stopLoading = () => {\r\n        this.setState({\r\n            loading: false,\r\n            load: -1\r\n        });\r\n    }\r\n    refresh = () => {\r\n        thisObj.getList(thisObj.props);\r\n\r\n    }\r\n    handleUpdateStudyLock = (ChangeReason) => {\r\n        const thisObj = this;\r\n        let values = {};\r\n\r\n        values[\"ProjectID\"] = this.state.ProjectID;\r\n        values[\"StudyID\"] = this.state.studyID;\r\n        values[\"Locked\"] = this.state.Locked;\r\n        values[\"ChangeReason\"] = ChangeReason;\r\n        values[\"UpdatedBy\"] = projectRole.userProfile.userID;;\r\n\r\n        thisObj.setState({ modalLoad: true });\r\n        PostCallWithZone('Study/UpdateStudyLockStatus', values)\r\n            .then(\r\n                function (response) {\r\n                    if (response.status == 1) {\r\n                        successModalCallback(response.message, thisObj.getList(thisObj.props));\r\n                    } else {\r\n                        thisObj.setState({ modalLoad: false, showConfirmModalForStudyLockStatus: false });\r\n                        errorModal(response.message);\r\n                    }\r\n                }).catch(error => error);\r\n\r\n    }\r\n\r\n    showNewAddStudyModal = () => {\r\n        this.setState({\r\n            showAddStudyModalNew: true,\r\n            actionName: \"Create\"\r\n        });\r\n\r\n    }\r\n\r\n    cancelNewAddStudyModal = () => {\r\n        this.setState({\r\n            showAddStudyModalNew: false\r\n        });\r\n    }\r\n\r\n    setModalCancel = (enable) => {\r\n        this.setState({ disableBtn: enable });\r\n    }\r\n\r\n    fnTreeViewCancel = () => {\r\n        let { isAutoOpen } = thisObj.props;\r\n\r\n        //set topbar header\r\n        sessionStorage.removeItem(\"studyDetails\")\r\n        setHeader();\r\n        //end\r\n        if (isAutoOpen) {\r\n            this.props.isAutoOpenUpdate();\r\n        }\r\n\r\n        this.setState({\r\n            TreeViewVisble: !this.state.TreeViewVisble,\r\n            study: {}\r\n        });\r\n    }\r\n\r\n    //Study Configuration \r\n    //When we successfully configured have to update study list\r\n    //When we successfully change the status have to update study list\r\n    StudyConfigPage_UpdateStudyList = () =>\r\n    {\r\n        thisObj.getList(thisObj.props);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { isProjectInActive } = this.props;\r\n        const {\r\n            esign,\r\n            progress,\r\n            esignText,\r\n            workflowObj,\r\n            defaultValue,\r\n            RoleAssignmentModal,\r\n            WorkFlowModal,\r\n            activityModal,\r\n            studyID,\r\n            dataSource,\r\n            Locked,\r\n            workflowActivityStatusID,\r\n            isAnnotVisible,\r\n            study,\r\n            studyName,\r\n            studyConfigModal\r\n        } = this.state;\r\n        const permissions = this.props.permissions;\r\n\r\n        const columns = [\r\n\r\n            {\r\n                title: 'Study Name',\r\n                dataIndex: 'studyName',\r\n                key: 'studyName',\r\n                width: 50,\r\n                sorter: (a, b) => stringSorter(a, b, 'studyName')\r\n            },\r\n            {\r\n                title: 'Standard',\r\n                dataIndex: 'standardText',\r\n                key: 'standardText',\r\n                width: 50,\r\n                sorter: (a, b) => stringSorter(a, b, 'standardText')\r\n            },\r\n            //{\r\n            //    title: 'Study Status',\r\n            //    dataIndex: 'studyStatus',\r\n            //    key: 'studyStatus',\r\n            //    width: 170,\r\n            //    sorter: (a, b) => stringSorter(a, b, 'studyStatus')\r\n\r\n            //},\r\n\r\n            {\r\n                title: 'Study Workflow Status',\r\n                dataIndex: 'workflowActions',\r\n                width: 50,\r\n                key: 'workflowActions'\r\n            },\r\n            {\r\n                title: 'Study Actions',\r\n                dataIndex: 'actions',\r\n                width: 100,\r\n                key: 'actions'\r\n            }\r\n        ];\r\n        var showActions = true;\r\n        //if (dataSource.length > 0) {\r\n        //    dataSource.map(value => {\r\n        //        value.actions.props.children.props.children.map(actions => {\r\n        //            if (actions !== null) {\r\n        //                showActions = true;\r\n        //                return;\r\n        //            }\r\n        //        });\r\n        //        if (showActions) {\r\n        //            return;\r\n        //        }\r\n        //    });\r\n        //}\r\n        if (!showActions) {\r\n            columns.shift(); // Removes Actions Co which contains all define actions\r\n        }\r\n\r\n        return (\r\n            ShowStudyList ? (\r\n                <React.Fragment>\r\n                    <LayoutContentWrapper style={{ display: isAnnotVisible ? \"none\" : \"block\" }} >\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>\r\n                                <i className=\"fas fa-clipboard-list\" />\r\n                                <span>{(this.state.actionName != \"Version\") ? \"Study\" : \"Version\"}</span>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                                List\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <Divider className=\"divider-cs\" />\r\n                        <LayoutContent className={'studyList'}>\r\n\r\n                            {\r\n                                (this.state.actionName != \"Version\" && this.state.actionName != \"Reload\") &&\r\n                                <ReactTable\r\n                                    searchText=\"\"\r\n                                    columns={columns}\r\n                                    dataSource={dataSource}\r\n                                    id={\"studyList\"}\r\n                                    addAction={(isProjectInActive) ? null : JSON.parse(sessionStorage.role).RoleID > 3 ? null : this.addStudy}\r\n                                    scroll={{ y: \"calc(100vh - 314px)\", x: columns.length * 200 }}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.actionName == \"Reload\" &&\r\n                                <Skeleton\r\n                                    active\r\n                                    paragraph={{ rows: 10 }}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.showAddStudyModalNew &&\r\n                                <Create title=\"Add Study\" action={this.state.actionName} studyListRefresh={this.refresh} projectId={this.props.projectId} parentRootProps={this.props.rootprops} visible={this.state.showAddStudyModalNew} handleCancel={this.cancelNewAddStudyModal} projectName={this.props.projectName} sponsorName={this.props.sponsorName} />\r\n                            }\r\n                            \r\n                            {\r\n                                (this.state.actionName === \"Delete\") ? <ConfirmModal loading={this.state.modalLoad} title=\"Delete Study\" SubmitButtonName=\"Delete\" onSubmit={this.handleDelete} visible={this.state.showEditModal} handleCancel={this.handleCancel} getFieldDecorator={getFieldDecorator} /> :\r\n                                    (this.state.actionName === \"LockStatus\") ? < ConfirmModal loading={this.state.modalLoad} title=\"Update Study Lock Status\" SubmitButtonName=\"Update\" onSubmit={this.handleUpdateStudyLock} visible={this.state.showConfirmModalForStudyLockStatus} handleCancel={this.handleCancel} getFieldDecorator={getFieldDecorator} /> : \"\"\r\n\r\n                            }\r\n                           \r\n                            {\r\n                                (studyConfigModal) &&\r\n                                <StudyConfigModal\r\n                                    study={study}\r\n                                    isProjectInActive={this.props.isProjectInActive}\r\n                                    configVisible={studyConfigModal}\r\n                                    workflowObj={workflowObj}\r\n                                    handleCancel={this.cancelPops}\r\n                                    form={this.props.form}\r\n                                    projectID={this.props.projectId}\r\n                                    studyName={thisObj.state.studyName}\r\n                                    refreshList={this.refreshList}\r\n                                    permissions={this.props.permissions}\r\n                                    UpdateStudyList={this.StudyConfigPage_UpdateStudyList}\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                (this.state.studyInfoModal) &&\r\n                                <StudyInfo\r\n                                    study={study}\r\n                                    isProjectInActive={this.props.isProjectInActive}\r\n                                    configVisible={this.state.studyInfoModal}\r\n                                    workflowObj={workflowObj}\r\n                                    handleCancel={this.cancelPops}\r\n                                    form={this.props.form}\r\n                                    projectID={this.props.projectId}\r\n                                    studyName={thisObj.state.studyName}\r\n                                    refreshList={this.refreshList}\r\n                                    permissions={this.props.permissions}\r\n                                    UpdateStudyList={this.StudyConfigPage_UpdateStudyList}\r\n                                />\r\n                            }\r\n\r\n                            \r\n                            {esign && <ConfirmWithEsign\r\n                                esignText={esignText}\r\n                                studyPage={this}\r\n                                defaultValue={defaultValue}\r\n                                cancelEsign={this.cancelEsign}\r\n                                visible={esign}\r\n                                buttonName={this.state.actionName}\r\n                                onSubmit={this.state.actionName === \"Delete\" ? this.deleteStudyAfterEsignVerified : this.afterEsignVerfied}\r\n                            />}\r\n\r\n                            {<Progress progress={progress}/>}\r\n\r\n\r\n                        </LayoutContent>\r\n\r\n                    </LayoutContentWrapper>\r\n\r\n                </React.Fragment>) : (null)\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst WrappedApp = Form.create()(StudyIndex);\r\n\r\nexport default WrappedApp;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}