{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Study\\\\Create.js\";\nimport React from 'react';\nimport { Modal, Row, Col, Form, Input, Select, TreeSelect, Button, Divider } from 'antd';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport { getRules } from '../Utility/htmlUtility';\nimport { validJSON, errorModal, showProgress, hideProgress, getProjectRole, CallServerPost, PostCallWithZone, successModalCallback } from '../Utility/sharedUtility';\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\nimport moment from 'moment-timezone';\nimport { errorMessageTooltip } from '../Utility/errorMessageUtility.js';\nvar TreeNode = TreeSelect.TreeNode;\nvar splitClass = 12;\nvar Fields = {\n  ProjectID: 'ProjectID',\n  ProtocolName: 'ProtocolName',\n  SponsorName: 'SponsorName',\n  ProtocolDocument: 'ProtocolDocument',\n  StudyName: 'StudyName',\n  StandardID: 'StandardID',\n  StudyCode: 'StudyCode',\n  StandardVersionID: 'StandardVersionID',\n  CodelistVersionID: 'CodelistVersionID',\n  AnnotationType: 'AnnotationType',\n  StudyDescription: 'StudyDescription',\n  Activitie: \"Activities\"\n};\nvar projectNameField = {\n  controlTypeText: \"TextBox\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Optional\",\n  requirementErrorMessage: \"Project Name is mandatory\",\n  inputTypeErrorMessage: \"Project Name should contain only alphanumeric values\",\n  validationErrorMessage: \"Project Name should be between 2-255 characters\",\n  regExText: \"/^[a-zA-Z0-9-_]+$/\",\n  minValue: 2,\n  maxValue: 255\n};\nvar protocolNameField = {\n  controlTypeText: \"TextBox\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Mandatory\",\n  requirementErrorMessage: \"Protocol Name is mandatory\",\n  inputTypeErrorMessage: \"Protocol Name should contain only alphanumeric values\",\n  validationErrorMessage: \"Protocol Name should be between 2-255 characters\",\n  regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\n  minValue: 2,\n  maxValue: 255\n};\nvar sponsorNameField = {\n  controlTypeText: \"TextBox\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Optional\",\n  inputTypeErrorMessage: \"Sponsor Name should contain only alphanumeric values and special characters(._-)\",\n  validationErrorMessage: \"Sponsor Name should be between 2-100 characters\",\n  requirementErrorMessage: \"Sponsor Name is mandatory\",\n  regExText: \"/^(?!.*  )[a-zA-Z0-9-_\\. ]+$/\",\n  minValue: 2,\n  maxValue: 100\n};\nvar protocolDocumentField = {\n  controlTypeText: \"FileSelect\",\n  inputTypeText: \"ServerBrowse\",\n  inputRequirementText: \"Optional\",\n  inputTypeErrorMessage: \"\",\n  validationErrorMessage: \"\",\n  requirementErrorMessage: \"Protocol Document should be selected\",\n  regExText: null,\n  minValue: null,\n  maxValue: null\n};\nvar studyNameField = {\n  attributeName: \"StudyName\",\n  controlTypeText: \"TextBox\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Mandatory\",\n  inputTypeErrorMessage: \"Study Name should contain only alphanumeric values and underscore\",\n  validationErrorMessage: \"Study Name should be between 2-20 characters\",\n  requirementErrorMessage: \"Study Name is mandatory\",\n  regExText: \"/^[a-zA-Z0-9_]*$/\",\n  minValue: 2,\n  maxValue: 20\n};\nvar standardNameField = {\n  controlTypeText: \"MultipleDropdown\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Mandatory\",\n  inputTypeErrorMessage: \"\",\n  validationErrorMessage: \"\",\n  requirementErrorMessage: \"Standard Name should be selected\",\n  regExText: null,\n  minValue: null,\n  maxValue: null\n};\nvar Activitie = {\n  controlTypeText: \"MultipleDropdown\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Mandatory\",\n  inputTypeErrorMessage: \"\",\n  validationErrorMessage: \"\",\n  requirementErrorMessage: \"Activities should be selected\",\n  regExText: null,\n  minValue: null,\n  maxValue: null\n};\nvar studyCodeField = {\n  controlTypeText: \"TextBox\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Optional\",\n  inputTypeErrorMessage: \"Study Code should contain only alphanumeric values\",\n  validationErrorMessage: \"Study Code should be between 2-20 characters\",\n  requirementErrorMessage: \"\",\n  regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\n  minValue: 2,\n  maxValue: 20\n};\nvar studyDescriptionField = {\n  controlTypeText: \"TextBox\",\n  inputTypeText: \"Alphanumeric\",\n  inputRequirementText: \"Optional\",\n  inputTypeErrorMessage: \"Study Description should contain only alphanumeric values\",\n  validationErrorMessage: \"Study Description should be between 2-255 characters\",\n  requirementErrorMessage: \"\",\n  regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\n  minValue: 2,\n  maxValue: 255\n};\nvar thisObj = {};\nvar Create = /*#__PURE__*/function (_React$Component) {\n  _inherits(Create, _React$Component);\n  var _super = _createSuper(Create);\n  function Create(props) {\n    var _this;\n    _classCallCheck(this, Create);\n    _this = _super.call(this, props);\n    _this.initStudyCreateForm = function () {\n      var thisObj = _assertThisInitialized(_this);\n      showProgress();\n      CallServerPost('Study/GetValuesForCreateStudy', {\n        FormName: \"Study\",\n        ActionName: \"Create\",\n        ProjectID: _this.props.projectId\n      }).then(function (response) {\n        var _this2 = this;\n        hideProgress();\n        if (response.status === 0) {\n          errorModal(response.message);\n        } else {\n          var studyData = response.value;\n          var sdtm = 1;\n          var adam = 2;\n          var send = 10;\n          for (var i = 0; i < studyData.cDISCDataStandards.length; i++) {\n            if (studyData.cDISCDataStandards[i].standardName.toLowerCase().includes('sdtm')) {\n              sdtm = studyData.cDISCDataStandards[i].cdiscDataStandardID;\n            } else if (studyData.cDISCDataStandards[i].standardName.toLowerCase().includes('adam')) {\n              adam = studyData.cDISCDataStandards[i].cdiscDataStandardID;\n            } else if (studyData.cDISCDataStandards[i].standardName.toLowerCase().includes('send')) {\n              send = studyData.cDISCDataStandards[i].cdiscDataStandardID;\n            }\n          }\n          var standardOptions = studyData[\"cDISCDataStandards\"].map(function (option) {\n            return /*#__PURE__*/React.createElement(Select.Option, {\n              name: \"Standard Name_Option\",\n              key: option['cdiscDataStandardID'],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }\n            }, option['standardName']);\n          });\n          ;\n          var treeLoop = function treeLoop(data, folderOnly) {\n            return data.map(function (item) {\n              if (item.children) {\n                return /*#__PURE__*/React.createElement(TreeNode, {\n                  selectable: folderOnly && item.folder,\n                  key: item.key,\n                  value: item.key,\n                  title: item.title,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 41\n                  }\n                }, treeLoop(item.children, folderOnly));\n              } else {\n                var selectable = true;\n                if (folderOnly && !item.folder) {\n                  selectable = false;\n                }\n                return /*#__PURE__*/React.createElement(TreeNode, {\n                  selectable: selectable,\n                  key: item.key,\n                  value: item.key,\n                  title: item.title,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 44\n                  }\n                });\n              }\n            });\n          };\n          var protocolDocumentData = treeLoop([studyData[\"DocumentsTree\"].pdfLocation], false);\n          var sdtmVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\n            if (option['cdiscDataStandardID'] === 1) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"SDTM Standard Version_Option\",\n                key: option['cdiscDataStdVersionID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }\n              }, option['stdVersionName']);\n            }\n          });\n          var adamVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\n            if (option['cdiscDataStandardID'] === 2) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"ADAM Standard Version_Option\",\n                key: option['cdiscDataStdVersionID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }\n              }, option['stdVersionName']);\n            }\n          });\n          var sendVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\n            if (option['cdiscDataStandardID'] === 3) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"SEND Standard Version_Option\",\n                key: option['cdiscDataStdVersionID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }\n              }, option['stdVersionName']);\n            }\n          });\n          var omopVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\n            if (option['cdiscDataStandardID'] === 4) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"ADAM Standard Version_Option\",\n                key: option['cdiscDataStdVersionID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }\n              }, option['stdVersionName']);\n            }\n          });\n          var sdtmCodeLists = studyData[\"nCICodeLists\"].map(function (option) {\n            if (option['cdiscDataStandardID'] === 1) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"SDTM CodeList Version_Option\",\n                key: option['nciCodeListID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }\n              }, option['codeListVersion']);\n            }\n          });\n\n          //values for Annotation Type DDL\n          var annotationTypeCRF = studyData[\"annotationType\"].map(function (option) {\n            if (option['longValue'] == \"CRF Annotation\") {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"AnnotaionType_Option\",\n                key: option['productcontrolledTermID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 37\n                }\n              }, option['longValue']);\n            }\n          });\n          var annotationType = studyData[\"annotationType\"].map(function (option) {\n            return /*#__PURE__*/React.createElement(Select.Option, {\n              name: \"AnnotaionType_Option\",\n              key: option['productcontrolledTermID'],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }\n            }, option['longValue']);\n          });\n          var adamCodeLists = studyData[\"nCICodeLists\"].map(function (option) {\n            if (option['cdiscDataStandardID'] === 2) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"ADAM CodeList Version_Option\",\n                key: option['nciCodeListID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 37\n                }\n              }, option['codeListVersion']);\n            }\n          });\n          var sendCodeLists = studyData[\"nCICodeLists\"].map(function (option) {\n            if (option['cdiscDataStandardID'] === 3) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"SEND CodeList Version_Option\",\n                key: option['nciCodeListID'],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 37\n                }\n              }, option['codeListVersion']);\n            }\n          });\n          thisObj.setState({\n            studyData: studyData,\n            sdtmStandardID: sdtm,\n            adamStandardID: adam,\n            sendStandardID: send,\n            sendCodeLists: sendCodeLists,\n            adamCodeLists: adamCodeLists,\n            sdtmCodeLists: sdtmCodeLists,\n            omopVersionOptions: omopVersionOptions,\n            sendVersionOptions: sendVersionOptions,\n            adamVersionOptions: adamVersionOptions,\n            sdtmVersionOptions: sdtmVersionOptions,\n            protocolDocumentData: protocolDocumentData,\n            standardOptions: standardOptions,\n            annotationType: annotationType,\n            annotationTypeCRF: annotationTypeCRF\n          });\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.onStandardNameChange = function (value, option) {\n      var _this$state = _this.state,\n        sdtmCodeLists = _this$state.sdtmCodeLists,\n        adamCodeLists = _this$state.adamCodeLists,\n        sendCodeLists = _this$state.sendCodeLists,\n        sdtmVersionOptions = _this$state.sdtmVersionOptions,\n        adamVersionOptions = _this$state.adamVersionOptions,\n        sendVersionOptions = _this$state.sendVersionOptions,\n        omopVersionOptions = _this$state.omopVersionOptions;\n      var resetfield = [Fields.CodelistVersionID, Fields.StandardVersionID];\n\n      //filter activity option based on CDISC Standards\n      var activityOptions = [];\n      var ddl = {\n        codeList: [],\n        stdVersions: []\n      };\n      switch (value) {\n        case -1:\n        case \"\":\n          {\n            activityOptions = [];\n            //have to set Activitie Field to Mandatory if StandardName field have some values\n            Activitie.inputRequirementText = \"Optional\";\n            _this.props.form.resetFields([\"Activities\"]);\n          }\n          break;\n        //SDTM\n        case \"1\":\n        default:\n          {\n            activityOptions = [\"Annotation\", \"Transformation\", \"Define XML\"].map(function (option) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"Standard Name_Option\",\n                key: option === \"Define XML\" ? \"Define\" : option,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 32\n                }\n              }, option);\n            });\n            ddl = {\n              codeList: sdtmCodeLists,\n              stdVersions: sdtmVersionOptions\n            };\n            //have to set Activitie Field to Mandatory if StandardName field have some values\n            Activitie.inputRequirementText = \"Mandatory\";\n            _this.props.form.resetFields([\"Activities\"]);\n          }\n          break;\n        //ADAM\n        case \"2\":\n          {\n            activityOptions = [\"Transformation\", \"Define XML\"].map(function (option) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"Standard Name_Option\",\n                key: option === \"Define XML\" ? \"Define\" : option,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 28\n                }\n              }, option);\n            });\n            ddl = {\n              codeList: adamCodeLists,\n              stdVersions: adamVersionOptions\n            };\n            //have to set Activitie Field to Mandatory if StandardName field have some values\n            Activitie.inputRequirementText = \"Mandatory\";\n            _this.props.form.setFieldsValue({\n              Activities: []\n            });\n          }\n          break;\n        //SEND\n        case \"3\":\n          {\n            activityOptions = [\"Transformation\", \"Define XML\"].map(function (option) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"Standard Name_Option\",\n                key: option === \"Define XML\" ? \"Define\" : option,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 32\n                }\n              }, option);\n            });\n            ddl = {\n              codeList: sendCodeLists,\n              stdVersions: sendVersionOptions\n            };\n            //have to set Activitie Field to Mandatory if StandardName field have some values\n            Activitie.inputRequirementText = \"Mandatory\";\n            _this.props.form.setFieldsValue({\n              Activities: []\n            });\n          }\n          break;\n        // OMOP\n        case \"4\":\n          {\n            activityOptions = [\"Transformation\"].map(function (option) {\n              return /*#__PURE__*/React.createElement(Select.Option, {\n                name: \"Standard Name_Option\",\n                key: option,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 32\n                }\n              }, option);\n            });\n            ddl = {\n              stdVersions: omopVersionOptions\n            };\n            //have to set Activitie Field to Mandatory if StandardName field have some values\n            Activitie.inputRequirementText = \"Mandatory\";\n            _this.props.form.setFieldsValue({\n              Activities: []\n            });\n          }\n          break;\n      }\n      _this.props.form.resetFields(resetfield);\n      _this.setState(_objectSpread(_objectSpread({}, ddl), {}, {\n        CDISCStandards: value,\n        activityOptions: activityOptions\n      }));\n    };\n    _this.onActivitiesChange = function (value, option) {\n      if (!value.some(function (va) {\n        return va === \"Annotation\";\n      })) {\n        thisObj.props.form.resetFields([Fields.AnnotationType]);\n      }\n    };\n    _this.getInt = function (value) {\n      var rv = parseInt(value);\n      if (isNaN(rv)) {\n        return 0;\n      }\n      return rv;\n    };\n    _this.setValues = function (values) {\n      var project = _this.state.studyData.project;\n      var projectRole = getProjectRole();\n      var zones = moment.tz.guess();\n      var timezone = moment.tz(zones).zoneAbbr();\n      var updatedBy = projectRole.userProfile.userID;\n      values.ProjectID = project.projectID;\n      values.Locked = false;\n      values.StudyStatusID = 138;\n      values.TimeZone = timezone;\n      values.UpdatedBy = updatedBy;\n      values.AnnotationType = parseInt(values.AnnotationType);\n      // values.Activities = values.Activities;\n\n      //set CDISC Standards\n      //switch (values.StandardID)\n      //{\n      //    //SDTM\n      //    case \"1\":\n      //            values.SDTMEnabled = true;\n      //        break;\n      //    //ADAM\n      //    case \"2\":\n      //            values.ADAMEnabled = true;\n      //        break\n      //    //SEND\n      //    case \"3\":\n      //            values.SENDEnabled = true;\n      //        break;\n      //    case \"4\":\n\n      //            values.OMOPEnabled = true;\n      //        break;\n      //}\n\n      values.StandardVersionID = _this.getInt(values.StandardVersionID);\n      values.CodelistVersionID = _this.getInt(values.CodelistVersionID);\n      return values;\n    };\n    _this.create = function () {\n      showProgress();\n      var thisObj = _assertThisInitialized(_this);\n      thisObj.props.form.validateFields(function (err, values) {\n        if (!err) {\n          try {\n            values.AnnotationType = values.AnnotationType ? values.AnnotationType : -1;\n            showProgress();\n            values = _this.setValues(values);\n            CallServerPost('Study/CreateStudy', values).then(function (response) {\n              hideProgress();\n              if (response.status === 0) {\n                errorModal(response.message);\n              } else {\n                successModalCallback(response.message, thisObj.reload);\n              }\n            });\n          } catch (e) {\n            hideProgress();\n            //console.log(e);\n          }\n        } else {\n          hideProgress();\n        }\n      });\n    };\n    _this.reload = function () {\n      thisObj.setState({\n        stateVisible: false\n      });\n      thisObj.props.studyListRefresh();\n    };\n    _this.handleClear = function () {\n      var thisObj = _assertThisInitialized(_this);\n      thisObj.props.form.resetFields();\n      thisObj.onStandardNameChange(-1);\n    };\n    _this.changeEvent = function (rule, value, callback) {\n      if (!value.some(function (va) {\n        return va === \"Annotation\";\n      })) {\n        //Activitie.inputRequirementText = \"Optional\";\n        thisObj.props.form.resetFields([Fields.AnnotationType]);\n        callback();\n        return;\n      }\n      callback();\n      return;\n    };\n    _this.state = {\n      CDISCStandards: -1,\n      codeList: [],\n      stdVersionOptions: [],\n      sendCodeLists: [],\n      adamCodeLists: [],\n      sdtmCodeLists: [],\n      activityOptions: [],\n      standardOptions: [],\n      omopVersionOptions: [],\n      sendVersionOptions: [],\n      adamVersionOptions: [],\n      sdtmVersionOptions: [],\n      annotationType: [],\n      annotationTypeCRF: [],\n      stateVisible: true,\n      studyData: \"Not Loaded\"\n    };\n\n    //have to set Activitie Field to Mandatory if StandardName field have some values\n    Activitie.inputRequirementText = \"Optional\";\n    _this.initStudyCreateForm();\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(Create, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      errorMessageTooltip(this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var props = this.props;\n      var stateVisible = this.state.stateVisible;\n      var visible = props.visible,\n        handleCancel = props.handleCancel,\n        projectName = props.projectName;\n      var getFieldDecorator = props.form.getFieldDecorator;\n      var _this$state2 = this.state,\n        codeList = _this$state2.codeList,\n        stdVersions = _this$state2.stdVersions,\n        studyData = _this$state2.studyData,\n        CDISCStandards = _this$state2.CDISCStandards,\n        activityOptions = _this$state2.activityOptions,\n        standardOptions = _this$state2.standardOptions,\n        protocolDocumentData = _this$state2.protocolDocumentData,\n        annotationType = _this$state2.annotationType,\n        annotationTypeCRF = _this$state2.annotationTypeCRF;\n      var ActivitiesField = this.props.form.getFieldValue(\"Activities\");\n      var isAnnot = ActivitiesField && ActivitiesField.indexOf('Annotation') !== -1;\n      var project = studyData[\"project\"];\n      var standardVersion = {\n        controlTypeText: \"DropDownWithSearch\",\n        inputTypeText: \"Alphanumeric\",\n        inputRequirementText: CDISCStandards !== -1 ? \"Mandatory\" : \"Optional\",\n        inputTypeErrorMessage: \"\",\n        validationErrorMessage: \"\",\n        requirementErrorMessage: \"Standard Version should be selected\",\n        regExText: null,\n        minValue: null,\n        maxValue: null\n      };\n      var codeListVersion = {\n        controlTypeText: \"DropDownWithSearch\",\n        inputTypeText: \"Alphanumeric\",\n        inputRequirementText: CDISCStandards !== -1 && CDISCStandards !== \"4\" ? \"Mandatory\" : \"Optional\",\n        inputTypeErrorMessage: \"\",\n        validationErrorMessage: \"\",\n        requirementErrorMessage: \"CodeList Version should be selected\",\n        regExText: null,\n        minValue: null,\n        maxValue: null\n      };\n      var annotationTypes = {\n        controlTypeText: \"DropDownWithSearch\",\n        inputTypeText: \"Alphanumeric\",\n        inputRequirementText: CDISCStandards === 2 && CDISCStandards === 3 || isAnnot ? \"Mandatory\" : \"Optional\",\n        inputTypeErrorMessage: \"\",\n        validationErrorMessage: \"\",\n        requirementErrorMessage: \"Annotation Type should be selected\",\n        regExText: null,\n        minValue: null,\n        maxValue: null\n      };\n      var thisObj = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, studyData !== \"Not Loaded\" && /*#__PURE__*/React.createElement(Modal, {\n        className: \"studyModal\",\n        visible: visible && stateVisible,\n        title: \"Create Study\",\n        style: {\n          top: 20,\n          minHeight: 'calc(100vh - 100px)'\n        },\n        onCancel: handleCancel,\n        width: '80%',\n        maskClosable: false,\n        footer: [/*#__PURE__*/React.createElement(Button, {\n          key: \"back\",\n          name: \"PopupCancel\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-danger\",\n          style: {\n            float: 'left'\n          },\n          onClick: handleCancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 25\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          name: \"Clear\",\n          onClick: function onClick() {\n            return _this3.handleClear();\n          },\n          style: {\n            marginLeft: 8,\n            textAlign: 'left',\n            float: 'left'\n          },\n          type: \"default\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 25\n          }\n        }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n          key: \"submit\",\n          name: \"PopupConfirm\",\n          className: \"ant-btn sc-ifAKCX fcfmNQ ant-btn-primary\",\n          onClick: function onClick() {\n            return _this3.create();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 25\n          }\n        }, \"Create\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        layout: \"vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Project Name\",\n        key: \"ProjectIDItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 33\n        }\n      }, \"               \", getFieldDecorator(Fields.ProjectID, {\n        rules: getRules(projectNameField, props),\n        initialValue: project ? project.projectName : \"\"\n      })( /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Project Name\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 41\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Protocol Name\",\n        key: \"protocolNameItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 33\n        }\n      }, \"                                    \", getFieldDecorator(Fields.ProtocolName, {\n        rules: getRules(protocolNameField, props),\n        initialValue: ''\n      })( /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Protocol Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Sponsor Name\",\n        key: \"SponsorNameItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 33\n        }\n      }, \"               \", getFieldDecorator(Fields.SponsorName, {\n        rules: getRules(sponsorNameField, props),\n        initialValue: project ? project.sponsorName : \"\"\n      })( /*#__PURE__*/React.createElement(Input, {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 41\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Protocol Document\",\n        key: \"ProtocolDocumentItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 33\n        }\n      }, \"                                   \", getFieldDecorator(Fields.ProtocolDocument, {\n        rules: getRules(protocolDocumentField, props)\n      })( /*#__PURE__*/React.createElement(TreeSelect, {\n        style: {\n          width: \"100%\"\n        },\n        tabIndex: 0,\n        showSearch: true,\n        autoBlur: true,\n        mode: \"single\",\n        allowClear: true,\n        dropdownStyle: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        placeholder: \"Please Select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 41\n        }\n      }, protocolDocumentData))))), /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 6,\n        xs: 6,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Study Name\",\n        key: \"StudyNameItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 33\n        }\n      }, \"                     \", getFieldDecorator(Fields.StudyName, {\n        rules: getRules(studyNameField, {\n          studyData: studyData\n        }),\n        initialValue: ''\n      })( /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Study Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 41\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 6,\n        xs: 6,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Study Code\",\n        key: \"StudyCodeItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 33\n        }\n      }, \"                                          \", getFieldDecorator(Fields.StudyCode, {\n        rules: getRules(studyCodeField, props),\n        initialValue: ''\n      })( /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Study Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 41\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Study Description\",\n        key: \"StudyDescriptionItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 37\n        }\n      }, \"              \", getFieldDecorator(Fields.StudyDescription, {\n        rules: getRules(studyDescriptionField, props),\n        initialValue: ''\n      })( /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Study Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Standard Name\",\n        key: \"StandardNameItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 37\n        }\n      }, \"              \", getFieldDecorator(Fields.StandardID, {\n        rules: getRules(standardNameField, props),\n        initialValue: \"\"\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: \"100%\"\n        },\n        placeholder: \"Please select\",\n        onChange: this.onStandardNameChange,\n        \"aria-name\": \"Standard Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Select.Option, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 49\n        }\n      }, \"--Select--\"), standardOptions)))), /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Activities\",\n        key: \"Activitie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 37\n        }\n      }, getFieldDecorator(Fields.Activitie, {\n        rules: [{\n          required: Activitie.inputRequirementText === \"Mandatory\" ? true : false,\n          message: \"Activities should be selected\"\n        }],\n        initialValue: []\n      })( /*#__PURE__*/React.createElement(Select, {\n        mode: \"multiple\",\n        style: {\n          width: \"100%\"\n        },\n        placeholder: \"Please Select\",\n        \"aria-name\": \"Test Name\",\n        onChange: this.onActivitiesChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 45\n        }\n      }, activityOptions))))), /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 12,\n        xs: 12,\n        style: {\n          paddingRight: \"10px\",\n          display: CDISCStandards === -1 || CDISCStandards === \"\" ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Standard Version\",\n        key: \"StandardVersion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 37\n        }\n      }, \"             \", getFieldDecorator(Fields.StandardVersionID, {\n        rules: getRules(standardVersion, props),\n        initialValue: \"\"\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: \"100%\"\n        },\n        mode: \"single\",\n        \"aria-name\": \"Standard Version\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Select.Option, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 49\n        }\n      }, \"--Select--\"), stdVersions)))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 12,\n        xs: 12,\n        style: {\n          paddingRight: \"10px\",\n          display: CDISCStandards === -1 || CDISCStandards === \"4\" || CDISCStandards === \"\" ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"CodeList Version\",\n        key: \"codeListVersion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 37\n        }\n      }, \"             \", getFieldDecorator(Fields.CodelistVersionID, {\n        rules: getRules(codeListVersion, props),\n        initialValue: \"\"\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: \"100%\"\n        },\n        mode: \"single\",\n        \"aria-name\": \"CodeList Version\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Select.Option, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 49\n        }\n      }, \"--Select--\"), codeList)))), /*#__PURE__*/React.createElement(Col, {\n        md: splitClass,\n        sm: 24,\n        xs: 24,\n        style: {\n          paddingRight: \"10px\",\n          display: thisObj.props.form.getFieldValue(\"Activities\").indexOf('Annotation') === -1 ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Annotation Type\",\n        key: \"AnnotationType\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 37\n        }\n      }, \"                     \", getFieldDecorator(Fields.AnnotationType, {\n        rules: getRules(annotationTypes, props),\n        initialValue: ''\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: \"100%\"\n        },\n        mode: \"single\",\n        \"aria-name\": \"Annotaion Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Select.Option, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 49\n        }\n      }, \"--Select--\"), thisObj.props.form.getFieldValue(\"Activities\").indexOf(\"Transformation\") === -1 ? annotationTypeCRF : annotationType)))))))));\n    }\n  }]);\n  return Create;\n}(React.Component);\nvar WrappedApp = Form.create()(Create);\nexport default WrappedApp;","map":{"version":3,"names":["React","Modal","Row","Col","Form","Input","Select","TreeSelect","Button","Divider","LayoutContent","getRules","validJSON","errorModal","showProgress","hideProgress","getProjectRole","CallServerPost","PostCallWithZone","successModalCallback","rowStyle","moment","errorMessageTooltip","TreeNode","splitClass","Fields","ProjectID","ProtocolName","SponsorName","ProtocolDocument","StudyName","StandardID","StudyCode","StandardVersionID","CodelistVersionID","AnnotationType","StudyDescription","Activitie","projectNameField","controlTypeText","inputTypeText","inputRequirementText","requirementErrorMessage","inputTypeErrorMessage","validationErrorMessage","regExText","minValue","maxValue","protocolNameField","sponsorNameField","protocolDocumentField","studyNameField","attributeName","standardNameField","studyCodeField","studyDescriptionField","thisObj","Create","props","initStudyCreateForm","FormName","ActionName","projectId","then","response","status","message","studyData","value","sdtm","adam","send","i","cDISCDataStandards","length","standardName","toLowerCase","includes","cdiscDataStandardID","standardOptions","map","option","treeLoop","data","folderOnly","item","children","folder","key","title","selectable","protocolDocumentData","pdfLocation","sdtmVersionOptions","adamVersionOptions","sendVersionOptions","omopVersionOptions","sdtmCodeLists","annotationTypeCRF","annotationType","adamCodeLists","sendCodeLists","setState","sdtmStandardID","adamStandardID","sendStandardID","catch","error","onStandardNameChange","state","resetfield","activityOptions","ddl","codeList","stdVersions","form","resetFields","setFieldsValue","Activities","CDISCStandards","onActivitiesChange","some","va","getInt","rv","parseInt","isNaN","setValues","values","project","projectRole","zones","tz","guess","timezone","zoneAbbr","updatedBy","userProfile","userID","projectID","Locked","StudyStatusID","TimeZone","UpdatedBy","create","validateFields","err","reload","e","stateVisible","studyListRefresh","handleClear","changeEvent","rule","callback","stdVersionOptions","visible","handleCancel","projectName","getFieldDecorator","ActivitiesField","getFieldValue","isAnnot","indexOf","standardVersion","codeListVersion","annotationTypes","top","minHeight","float","marginLeft","textAlign","paddingRight","rules","initialValue","sponsorName","width","maxHeight","overflow","required","display","Component","WrappedApp"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Study/Create.js"],"sourcesContent":["import React from 'react';\r\nimport { Modal, Row, Col, Form, Input, Select, TreeSelect, Button, Divider } from 'antd';\r\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport { getRules } from '../Utility/htmlUtility';\r\nimport {\r\n    validJSON,\r\n    errorModal,\r\n    showProgress,\r\n    hideProgress,\r\n    getProjectRole,\r\n    CallServerPost,\r\n    PostCallWithZone,\r\n    successModalCallback\r\n} from '../Utility/sharedUtility';\r\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\r\nimport moment from 'moment-timezone';\r\nimport { errorMessageTooltip } from '../Utility/errorMessageUtility.js';\r\n\r\nconst TreeNode = TreeSelect.TreeNode;\r\n\r\nconst splitClass = 12;\r\n\r\nconst Fields = {\r\n    ProjectID: 'ProjectID',\r\n    ProtocolName: 'ProtocolName',\r\n    SponsorName: 'SponsorName',\r\n    ProtocolDocument: 'ProtocolDocument',\r\n    StudyName: 'StudyName',\r\n    StandardID: 'StandardID',\r\n    StudyCode: 'StudyCode',\r\n    StandardVersionID: 'StandardVersionID',\r\n    CodelistVersionID: 'CodelistVersionID',\r\n    AnnotationType: 'AnnotationType',\r\n    StudyDescription: 'StudyDescription',\r\n    Activitie: \"Activities\"\r\n};\r\n\r\nconst projectNameField = {\r\n    controlTypeText: \"TextBox\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Optional\",\r\n    requirementErrorMessage: \"Project Name is mandatory\",\r\n    inputTypeErrorMessage: \"Project Name should contain only alphanumeric values\",\r\n    validationErrorMessage: \"Project Name should be between 2-255 characters\",\r\n    regExText: \"/^[a-zA-Z0-9-_]+$/\",\r\n    minValue: 2,\r\n    maxValue: 255\r\n};\r\nconst protocolNameField = {\r\n    controlTypeText: \"TextBox\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Mandatory\",\r\n    requirementErrorMessage: \"Protocol Name is mandatory\",\r\n    inputTypeErrorMessage: \"Protocol Name should contain only alphanumeric values\",\r\n    validationErrorMessage: \"Protocol Name should be between 2-255 characters\",\r\n    regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\r\n    minValue: 2,\r\n    maxValue: 255\r\n};\r\n\r\nconst sponsorNameField = {\r\n    controlTypeText: \"TextBox\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Optional\",\r\n    inputTypeErrorMessage: \"Sponsor Name should contain only alphanumeric values and special characters(._-)\",\r\n    validationErrorMessage: \"Sponsor Name should be between 2-100 characters\",\r\n    requirementErrorMessage: \"Sponsor Name is mandatory\",\r\n    regExText: \"/^(?!.*  )[a-zA-Z0-9-_\\. ]+$/\",\r\n    minValue: 2,\r\n    maxValue: 100\r\n};\r\n\r\nconst protocolDocumentField = {\r\n    controlTypeText: \"FileSelect\",\r\n    inputTypeText: \"ServerBrowse\",\r\n    inputRequirementText: \"Optional\",\r\n    inputTypeErrorMessage: \"\",\r\n    validationErrorMessage: \"\",\r\n    requirementErrorMessage: \"Protocol Document should be selected\",\r\n    regExText: null,\r\n    minValue: null,\r\n    maxValue: null\r\n};\r\n\r\nconst studyNameField = {\r\n    attributeName: \"StudyName\",\r\n    controlTypeText: \"TextBox\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Mandatory\",\r\n    inputTypeErrorMessage: \"Study Name should contain only alphanumeric values and underscore\",\r\n    validationErrorMessage: \"Study Name should be between 2-20 characters\",\r\n    requirementErrorMessage: \"Study Name is mandatory\",\r\n    regExText: \"/^[a-zA-Z0-9_]*$/\",\r\n    minValue: 2,\r\n    maxValue: 20\r\n};\r\n\r\nconst standardNameField = {\r\n    controlTypeText: \"MultipleDropdown\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Mandatory\",\r\n    inputTypeErrorMessage: \"\",\r\n    validationErrorMessage: \"\",\r\n    requirementErrorMessage: \"Standard Name should be selected\",\r\n    regExText: null,\r\n    minValue: null,\r\n    maxValue: null\r\n};\r\n\r\nlet Activitie = {\r\n    controlTypeText: \"MultipleDropdown\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Mandatory\",\r\n    inputTypeErrorMessage: \"\",\r\n    validationErrorMessage: \"\",\r\n    requirementErrorMessage: \"Activities should be selected\",\r\n    regExText: null,\r\n    minValue: null,\r\n    maxValue: null\r\n};\r\nconst studyCodeField = {\r\n    controlTypeText: \"TextBox\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Optional\",\r\n    inputTypeErrorMessage: \"Study Code should contain only alphanumeric values\",\r\n    validationErrorMessage: \"Study Code should be between 2-20 characters\",\r\n    requirementErrorMessage: \"\",\r\n    regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\r\n    minValue: 2,\r\n    maxValue: 20\r\n};\r\n\r\n\r\n\r\nconst studyDescriptionField = {\r\n    controlTypeText: \"TextBox\",\r\n    inputTypeText: \"Alphanumeric\",\r\n    inputRequirementText: \"Optional\",\r\n    inputTypeErrorMessage: \"Study Description should contain only alphanumeric values\",\r\n    validationErrorMessage: \"Study Description should be between 2-255 characters\",\r\n    requirementErrorMessage: \"\",\r\n    regExText: \"/^(?!.*  )[A-Za-z0-9 ]+$/\",\r\n    minValue: 2,\r\n    maxValue: 255\r\n};\r\n\r\nlet thisObj = {};\r\nclass Create extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            CDISCStandards: -1,\r\n            codeList: [],\r\n            stdVersionOptions: [],\r\n            sendCodeLists: [],\r\n            adamCodeLists: [],\r\n            sdtmCodeLists: [],\r\n            activityOptions: [],\r\n            standardOptions: [],\r\n            omopVersionOptions: [],\r\n            sendVersionOptions: [],\r\n            adamVersionOptions: [],\r\n            sdtmVersionOptions: [],\r\n            annotationType: [],\r\n            annotationTypeCRF:[],\r\n            stateVisible: true,\r\n            studyData: \"Not Loaded\",\r\n        }\r\n\r\n        //have to set Activitie Field to Mandatory if StandardName field have some values\r\n        Activitie.inputRequirementText = \"Optional\";\r\n\r\n        this.initStudyCreateForm();\r\n        thisObj = this;\r\n    }\r\n\r\n    initStudyCreateForm = () => {\r\n        const thisObj = this;\r\n        showProgress();\r\n        CallServerPost('Study/GetValuesForCreateStudy',\r\n            {\r\n                FormName: \"Study\",\r\n                ActionName: \"Create\",\r\n                ProjectID: this.props.projectId\r\n            }).then(\r\n                function (response) {\r\n                    hideProgress();\r\n                    if (response.status === 0) {\r\n                        errorModal(response.message);\r\n                    }\r\n                    else {\r\n                        const studyData = response.value;\r\n                        var sdtm = 1;\r\n                        var adam = 2;\r\n                        var send = 10;\r\n                        for (var i = 0; i < studyData.cDISCDataStandards.length; i++) {\r\n                            if (studyData.cDISCDataStandards[i].standardName.toLowerCase().includes('sdtm')) {\r\n                                sdtm = studyData.cDISCDataStandards[i].cdiscDataStandardID;\r\n                            } else if (studyData.cDISCDataStandards[i].standardName.toLowerCase().includes('adam')) {\r\n                                adam = studyData.cDISCDataStandards[i].cdiscDataStandardID;\r\n                            } else if (studyData.cDISCDataStandards[i].standardName.toLowerCase().includes('send')) {\r\n                                send = studyData.cDISCDataStandards[i].cdiscDataStandardID;\r\n                            }\r\n                        }\r\n\r\n                        const standardOptions = studyData[\"cDISCDataStandards\"].map(function (option) {\r\n\r\n                            return (\r\n                                <Select.Option name=\"Standard Name_Option\" key={option['cdiscDataStandardID']}>\r\n                                    {option['standardName']}\r\n                                </Select.Option>\r\n                            );\r\n\r\n                        });;\r\n                        const treeLoop = (data, folderOnly) =>\r\n                            data.map(item => {\r\n                                if (item.children) {\r\n                                    return (\r\n                                        <TreeNode selectable={folderOnly && item.folder} key={item.key} value={item.key} title={item.title}>\r\n                                            {treeLoop(item.children, folderOnly)}\r\n                                        </TreeNode>\r\n                                    );\r\n                                }\r\n                                else {\r\n                                    var selectable = true;\r\n                                    if (folderOnly && !item.folder) {\r\n                                        selectable = false;\r\n                                    }\r\n                                    return <TreeNode selectable={selectable} key={item.key} value={item.key} title={item.title} />;\r\n                                }\r\n                            });\r\n\r\n                        const protocolDocumentData = treeLoop([studyData[\"DocumentsTree\"].pdfLocation], false);\r\n\r\n                        const sdtmVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\r\n                            if (option['cdiscDataStandardID'] === 1) {\r\n                                return (\r\n                                    <Select.Option name=\"SDTM Standard Version_Option\" key={option['cdiscDataStdVersionID']}>\r\n                                        {option['stdVersionName']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n\r\n                        const adamVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\r\n                            if (option['cdiscDataStandardID'] === 2) {\r\n                                return (\r\n                                    <Select.Option name=\"ADAM Standard Version_Option\" key={option['cdiscDataStdVersionID']}>\r\n                                        {option['stdVersionName']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n\r\n\r\n\r\n                        const sendVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\r\n                            if (option['cdiscDataStandardID'] === 3) {\r\n                                return (\r\n                                    <Select.Option name=\"SEND Standard Version_Option\" key={option['cdiscDataStdVersionID']}>\r\n                                        {option['stdVersionName']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n\r\n                        const omopVersionOptions = studyData[\"cDISCDataStdVersions\"].map(function (option) {\r\n                            if (option['cdiscDataStandardID'] === 4) {\r\n                                return (\r\n                                    <Select.Option name=\"ADAM Standard Version_Option\" key={option['cdiscDataStdVersionID']}>\r\n                                        {option['stdVersionName']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n\r\n                        const sdtmCodeLists = studyData[\"nCICodeLists\"].map(function (option) {\r\n                            if (option['cdiscDataStandardID'] === 1) {\r\n                                return (\r\n                                    <Select.Option name=\"SDTM CodeList Version_Option\" key={option['nciCodeListID']}>\r\n                                        {option['codeListVersion']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n\r\n                        //values for Annotation Type DDL\r\n                        const annotationTypeCRF = studyData[\"annotationType\"].map(function (option) {\r\n                            if (option['longValue'] == \"CRF Annotation\") {\r\n                                return (\r\n\r\n                                    <Select.Option name=\"AnnotaionType_Option\" key={option['productcontrolledTermID']}>\r\n                                        {option['longValue']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n                        });\r\n\r\n                        const annotationType = studyData[\"annotationType\"].map(function (option) {\r\n                            return (\r\n                                <Select.Option name=\"AnnotaionType_Option\" key={option['productcontrolledTermID']}>\r\n                                    {option['longValue']}\r\n                                </Select.Option>\r\n                            );\r\n                        });\r\n\r\n                        const adamCodeLists = studyData[\"nCICodeLists\"].map(function (option) {\r\n                            if (option['cdiscDataStandardID'] === 2) {\r\n                                return (\r\n                                    <Select.Option name=\"ADAM CodeList Version_Option\" key={option['nciCodeListID']}>\r\n                                        {option['codeListVersion']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n                        const sendCodeLists = studyData[\"nCICodeLists\"].map(function (option) {\r\n                            if (option['cdiscDataStandardID'] === 3) {\r\n                                return (\r\n                                    <Select.Option name=\"SEND CodeList Version_Option\" key={option['nciCodeListID']}>\r\n                                        {option['codeListVersion']}\r\n                                    </Select.Option>\r\n                                );\r\n                            }\r\n\r\n                        });\r\n\r\n                        thisObj.setState({\r\n                            studyData: studyData,\r\n                            sdtmStandardID: sdtm,\r\n                            adamStandardID: adam,\r\n                            sendStandardID: send,\r\n                            sendCodeLists: sendCodeLists,\r\n                            adamCodeLists: adamCodeLists,\r\n                            sdtmCodeLists: sdtmCodeLists,\r\n                            omopVersionOptions: omopVersionOptions,\r\n                            sendVersionOptions: sendVersionOptions,\r\n                            adamVersionOptions: adamVersionOptions,\r\n                            sdtmVersionOptions: sdtmVersionOptions,\r\n                            protocolDocumentData: protocolDocumentData,\r\n                            standardOptions: standardOptions,\r\n                            annotationType: annotationType,\r\n                            annotationTypeCRF: annotationTypeCRF\r\n                        });\r\n                    }\r\n\r\n                }).catch(error => error);\r\n    }\r\n\r\n \r\n\r\n    //Standard on change\r\n    onStandardNameChange = (value, option) => {\r\n        let {\r\n            sdtmCodeLists,\r\n            adamCodeLists,\r\n            sendCodeLists,\r\n            sdtmVersionOptions,\r\n            adamVersionOptions,\r\n            sendVersionOptions,\r\n            omopVersionOptions\r\n        } = this.state;\r\n\r\n\r\n        let resetfield = [\r\n            Fields.CodelistVersionID,\r\n            Fields.StandardVersionID,\r\n\r\n        ];\r\n\r\n        //filter activity option based on CDISC Standards\r\n        let activityOptions = [];\r\n\r\n        let ddl = {\r\n            codeList: [],\r\n            stdVersions: []\r\n        };\r\n\r\n        switch (value)\r\n        {\r\n            case -1 :\r\n            case \"\":\r\n            {\r\n                    activityOptions = [];\r\n                    //have to set Activitie Field to Mandatory if StandardName field have some values\r\n                    Activitie.inputRequirementText = \"Optional\";\r\n                    this.props.form.resetFields([\"Activities\"]);\r\n            }\r\n            \r\n            break;\r\n            //SDTM\r\n            case \"1\":\r\n            default:\r\n                {\r\n                    activityOptions = [\"Annotation\", \"Transformation\", \"Define XML\"].map(option => {\r\n                        return <Select.Option\r\n                            name=\"Standard Name_Option\"\r\n                            key={option === \"Define XML\" ? \"Define\" : option}\r\n                                  >\r\n                            {option}\r\n                        </Select.Option>\r\n                    });\r\n\r\n                    ddl = {\r\n                        codeList: sdtmCodeLists,\r\n                        stdVersions: sdtmVersionOptions\r\n                    }\r\n                    //have to set Activitie Field to Mandatory if StandardName field have some values\r\n                    Activitie.inputRequirementText = \"Mandatory\";\r\n\r\n                    this.props.form.resetFields([\"Activities\"]);\r\n                }\r\n                break;\r\n            //ADAM\r\n            case \"2\": {\r\n                activityOptions = [\"Transformation\", \"Define XML\"].map(option => {\r\n                    return <Select.Option\r\n                        name=\"Standard Name_Option\"\r\n                        key={option === \"Define XML\" ? \"Define\" : option}\r\n                    >\r\n                        {option}\r\n                    </Select.Option>\r\n                });\r\n                ddl = {\r\n                    codeList: adamCodeLists,\r\n                    stdVersions: adamVersionOptions\r\n                }\r\n                //have to set Activitie Field to Mandatory if StandardName field have some values\r\n                Activitie.inputRequirementText = \"Mandatory\";\r\n                this.props.form.setFieldsValue({ Activities: [] });\r\n            }\r\n                break;\r\n            //SEND\r\n            case \"3\":\r\n                {\r\n                    activityOptions = [\"Transformation\", \"Define XML\"].map(option => {\r\n                        return <Select.Option\r\n                            name=\"Standard Name_Option\"\r\n                            key={option === \"Define XML\" ? \"Define\" : option }\r\n                        >\r\n                            {option}\r\n                        </Select.Option>\r\n                    });\r\n                    ddl = {\r\n                        codeList: sendCodeLists,\r\n                        stdVersions: sendVersionOptions\r\n                    }\r\n                    //have to set Activitie Field to Mandatory if StandardName field have some values\r\n                    Activitie.inputRequirementText = \"Mandatory\";\r\n                    this.props.form.setFieldsValue({ Activities: [] });\r\n                }\r\n                break;\r\n            // OMOP\r\n            case \"4\":\r\n                {\r\n                    activityOptions = [\"Transformation\"].map(option => {\r\n                        return <Select.Option\r\n                            name=\"Standard Name_Option\"\r\n                            key={option}\r\n                        >\r\n                            {option}\r\n                        </Select.Option>\r\n                    });\r\n                    ddl = {\r\n                        stdVersions: omopVersionOptions\r\n                    }\r\n                    //have to set Activitie Field to Mandatory if StandardName field have some values\r\n                    Activitie.inputRequirementText = \"Mandatory\";\r\n                    this.props.form.setFieldsValue({ Activities: [] });\r\n                }\r\n                break;\r\n           \r\n        }\r\n\r\n        this.props.form.resetFields(resetfield);\r\n               \r\n        this.setState({\r\n            ...ddl,\r\n            CDISCStandards: value,\r\n            activityOptions: activityOptions,\r\n        })\r\n    }\r\n\r\n    //Activities onCHange\r\n    onActivitiesChange = (value, option) =>\r\n    {\r\n\r\n        if (!value.some(va => va === \"Annotation\"))\r\n        {\r\n            thisObj.props.form.resetFields([Fields.AnnotationType]);\r\n        }\r\n    }\r\n\r\n    //set values    \r\n    getInt = (value) => {\r\n        var rv = parseInt(value);\r\n        if (isNaN(rv)) {\r\n            return 0;\r\n        }\r\n        return rv;\r\n    }\r\n\r\n    setValues = (values) => {\r\n\r\n        let { project } = this.state.studyData;\r\n        const projectRole = getProjectRole();\r\n        const zones = moment.tz.guess();\r\n        const timezone = moment.tz(zones).zoneAbbr();\r\n        let updatedBy = projectRole.userProfile.userID;\r\n        values.ProjectID = project.projectID;\r\n        values.Locked = false;\r\n        values.StudyStatusID = 138;\r\n        values.TimeZone = timezone;\r\n        values.UpdatedBy = updatedBy;\r\n        values.AnnotationType = parseInt(values.AnnotationType);\r\n        // values.Activities = values.Activities;\r\n\r\n\r\n        //set CDISC Standards\r\n        //switch (values.StandardID)\r\n        //{\r\n        //    //SDTM\r\n        //    case \"1\":\r\n        //            values.SDTMEnabled = true;\r\n        //        break;\r\n        //    //ADAM\r\n        //    case \"2\":\r\n        //            values.ADAMEnabled = true;\r\n        //        break\r\n        //    //SEND\r\n        //    case \"3\":\r\n        //            values.SENDEnabled = true;\r\n        //        break;\r\n        //    case \"4\":\r\n\r\n        //            values.OMOPEnabled = true;\r\n        //        break;\r\n        //}\r\n\r\n        values.StandardVersionID = this.getInt(values.StandardVersionID);\r\n        values.CodelistVersionID = this.getInt(values.CodelistVersionID);\r\n\r\n        return values;\r\n    }\r\n\r\n    //Create Function\r\n    create = () =>\r\n    {\r\n        showProgress();\r\n        const thisObj = this;\r\n        thisObj.props.form.validateFields((err, values) =>\r\n        {\r\n            if (!err)\r\n            {\r\n                try\r\n                {\r\n                    values.AnnotationType = values.AnnotationType ? values.AnnotationType : -1;\r\n                    showProgress();\r\n                    values = this.setValues(values);\r\n                    CallServerPost('Study/CreateStudy', values).then(\r\n                        function (response)\r\n                        {\r\n                            hideProgress();\r\n                            if (response.status === 0)\r\n                            {\r\n                                errorModal(response.message);\r\n                            } else {\r\n                                successModalCallback(response.message, thisObj.reload);\r\n                            }\r\n                        });\r\n                }\r\n                catch (e)\r\n                {\r\n                    hideProgress();\r\n                    //console.log(e);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                hideProgress();\r\n            }\r\n        });\r\n    }\r\n\r\n    reload = () =>\r\n    {\r\n        thisObj.setState({stateVisible :false})\r\n        thisObj.props.studyListRefresh();\r\n\r\n    }\r\n    handleClear = () => {\r\n        var thisObj = this;\r\n        thisObj.props.form.resetFields();\r\n        thisObj.onStandardNameChange(-1);\r\n    }\r\n    changeEvent = (rule, value, callback) =>\r\n    {\r\n     \r\n        if (!value.some(va => va === \"Annotation\"))\r\n        {\r\n            //Activitie.inputRequirementText = \"Optional\";\r\n            thisObj.props.form.resetFields([Fields.AnnotationType]);\r\n            callback();\r\n            return;\r\n        } \r\n        callback();\r\n        return;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        errorMessageTooltip(this.props);\r\n    }\r\n\r\n    render() {\r\n        const { props } = this;\r\n        let { stateVisible } = this.state;\r\n        const { visible, handleCancel, projectName } = props;\r\n        const { getFieldDecorator } = props.form;\r\n\r\n        const {\r\n            codeList,\r\n            stdVersions,\r\n            studyData,\r\n            CDISCStandards,\r\n            activityOptions,\r\n            standardOptions,\r\n            protocolDocumentData,\r\n            annotationType,\r\n            annotationTypeCRF\r\n        } = this.state;\r\n\r\n        let ActivitiesField = this.props.form.getFieldValue(\"Activities\");\r\n        let isAnnot = ActivitiesField && ActivitiesField.indexOf('Annotation') !== -1;\r\n        const project = studyData[\"project\"];\r\n\r\n        const standardVersion = {\r\n            controlTypeText: \"DropDownWithSearch\",\r\n            inputTypeText: \"Alphanumeric\",\r\n            inputRequirementText: CDISCStandards !== -1 ? \"Mandatory\" : \"Optional\",\r\n            inputTypeErrorMessage: \"\",\r\n            validationErrorMessage: \"\",\r\n            requirementErrorMessage: \"Standard Version should be selected\",\r\n            regExText: null,\r\n            minValue: null,\r\n            maxValue: null\r\n        };\r\n\r\n        const codeListVersion = {\r\n            controlTypeText: \"DropDownWithSearch\",\r\n            inputTypeText: \"Alphanumeric\",\r\n            inputRequirementText: ((CDISCStandards !== -1 && CDISCStandards !== \"4\")) ? \"Mandatory\" : \"Optional\",\r\n            inputTypeErrorMessage: \"\",\r\n            validationErrorMessage: \"\",\r\n            requirementErrorMessage: \"CodeList Version should be selected\",\r\n            regExText: null,\r\n            minValue: null,\r\n            maxValue: null\r\n        };\r\n\r\n        const annotationTypes = {\r\n            controlTypeText: \"DropDownWithSearch\",\r\n            inputTypeText: \"Alphanumeric\",\r\n            inputRequirementText: ((CDISCStandards === 2 && CDISCStandards === 3) || isAnnot) ? \"Mandatory\" : \"Optional\",\r\n            inputTypeErrorMessage: \"\",\r\n            validationErrorMessage: \"\",\r\n            requirementErrorMessage: \"Annotation Type should be selected\",\r\n            regExText: null,\r\n            minValue: null,\r\n            maxValue: null\r\n        };\r\n\r\n        let thisObj = this;\r\n        return <>\r\n            {\r\n                studyData !== \"Not Loaded\" &&\r\n                <Modal\r\n                    className={ \"studyModal\"}\r\n                    visible={visible && stateVisible}\r\n                    title={\"Create Study\"}\r\n                    style={{ top: 20, minHeight: 'calc(100vh - 100px)' }}\r\n                    onCancel={handleCancel}\r\n                    width={'80%'}\r\n                    maskClosable={false}\r\n                    footer={[\r\n                        <Button\r\n                            key=\"back\"\r\n                            name=\"PopupCancel\"\r\n                            className='ant-btn sc-ifAKCX fcfmNQ ant-btn-danger' style={{ float: 'left' }}\r\n                            onClick={handleCancel}\r\n                        >\r\n                            Cancel\r\n                            </Button>,\r\n\r\n                        <Button name=\"Clear\" onClick={() => this.handleClear()} style={{ marginLeft: 8, textAlign: 'left', float: 'left' }} type=\"default\" >\r\n                            Clear\r\n                           </Button>,\r\n\r\n                        <Button\r\n                            key=\"submit\"\r\n                            name=\"PopupConfirm\"\r\n                            className='ant-btn sc-ifAKCX fcfmNQ ant-btn-primary'\r\n                            onClick={() => this.create()}>\r\n                            Create\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <React.Fragment>\r\n                        <Form layout=\"vertical\">\r\n                        <Row style={rowStyle} justify=\"space-between\">\r\n                            <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                                <Form.Item label=\"Project Name\" key={\"ProjectIDItem\"}>               {/* Project Name Field */}\r\n                                    {getFieldDecorator(Fields.ProjectID, {\r\n                                        rules: getRules(projectNameField, props),\r\n                                        initialValue: project ? project.projectName : \"\"\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"Project Name\"\r\n                                            disabled\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                                <Form.Item label=\"Protocol Name\" key={\"protocolNameItem\"}>                                    {/* Protocol Name Field */}\r\n                                    {getFieldDecorator(Fields.ProtocolName, {\r\n                                        rules: getRules(protocolNameField, props),\r\n                                        initialValue: ''\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"Protocol Name\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={rowStyle} justify=\"space-between\">\r\n                            <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                                <Form.Item label=\"Sponsor Name\" key={\"SponsorNameItem\"}>               {/* Sponsor Name Field */}\r\n                                    {getFieldDecorator(Fields.SponsorName, {\r\n                                        rules: getRules(sponsorNameField, props),\r\n                                        initialValue: project ? project.sponsorName : \"\"\r\n                                    })(\r\n                                        <Input\r\n                                            disabled\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                                <Form.Item label=\"Protocol Document\" key={\"ProtocolDocumentItem\"}>                                   {/* Protocol Document Field */}\r\n                                    {getFieldDecorator(Fields.ProtocolDocument, {\r\n                                        rules: getRules(protocolDocumentField, props),\r\n                                    })(\r\n                                        <TreeSelect\r\n                                            style={{\r\n                                                width: \"100%\"\r\n                                            }}\r\n                                            tabIndex={0}\r\n                                            showSearch\r\n                                            autoBlur\r\n                                            mode=\"single\"\r\n                                            allowClear\r\n                                            dropdownStyle={{ maxHeight: 300, overflow: 'auto' }}\r\n                                            placeholder=\"Please Select\"\r\n                                        >\r\n                                            {protocolDocumentData}\r\n                                        </TreeSelect>,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={rowStyle} justify=\"space-between\">\r\n                            <Col md={6} sm={6} xs={6} style={{ paddingRight: \"10px\" }}>\r\n                                <Form.Item label=\"Study Name\" key={\"StudyNameItem\"}>                     {/* Study Name Field */}\r\n                                    {getFieldDecorator(Fields.StudyName, {\r\n                                        rules: getRules(studyNameField, { studyData: studyData }),\r\n                                        initialValue: ''\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"Study Name\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col md={6} sm={6} xs={6} style={{ paddingRight: \"10px\" }}>\r\n                                <Form.Item label=\"Study Code\" key={\"StudyCodeItem\"}>                                          {/* Study Code Field */}\r\n                                    {getFieldDecorator(Fields.StudyCode, {\r\n                                        rules: getRules(studyCodeField, props),\r\n                                        initialValue: ''\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"Study Code\"\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                                </Col>\r\n                                <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                                    <Form.Item label=\"Study Description\" key={\"StudyDescriptionItem\"}>              {/* Study Description Field */}\r\n                                        {getFieldDecorator(Fields.StudyDescription, {\r\n                                            rules: getRules(studyDescriptionField, props),\r\n                                            initialValue: ''\r\n                                        })(\r\n                                            <Input\r\n                                                placeholder={\"Study Description\"}\r\n                                            />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row style={rowStyle} justify=\"space-between\">\r\n                            \r\n                                <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                                    <Form.Item label=\"Standard Name\" key={\"StandardNameItem\"}>              {/* Standard Name Field */}\r\n                                        {getFieldDecorator(Fields.StandardID, {\r\n                                            rules: getRules(standardNameField, props),\r\n                                            initialValue: \"\"\r\n                                        })(\r\n                                            <Select\r\n                                                style={{ width: \"100%\" }}\r\n                                                placeholder=\"Please select\"\r\n                                                onChange={this.onStandardNameChange}\r\n                                                aria-name=\"Standard Name\"\r\n                                            >\r\n                                                <Select.Option value={\"\"}>--Select--</Select.Option>\r\n                                                {standardOptions}\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col md={splitClass} sm={24} xs={24} style={{ paddingRight: \"10px\" }}>\r\n                                    <Form.Item label=\"Activities\" key={\"Activitie\"}>\r\n                                        {getFieldDecorator(Fields.Activitie, {\r\n                                            rules: [{\r\n                                                required: Activitie.inputRequirementText === \"Mandatory\" ? true : false,\r\n                                                message: \"Activities should be selected\"\r\n                                            }                                        \r\n                                            ],\r\n                                            initialValue: []\r\n                                        })(\r\n                                            <Select\r\n                                                mode=\"multiple\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                placeholder=\"Please Select\"\r\n                                                aria-name=\"Test Name\"\r\n                                                onChange={this.onActivitiesChange}\r\n                                            >\r\n                                                {activityOptions}\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                           \r\n                        </Row>\r\n                        <Row style={rowStyle} justify=\"space-between\">\r\n                                \r\n\r\n                                <Col md={6} sm={12} xs={12} style={{\r\n                                    paddingRight: \"10px\",\r\n                                    display: CDISCStandards === -1 || CDISCStandards === \"\" ? \"none\" : \"block\"\r\n                                }}>\r\n                                    <Form.Item\r\n                                        label=\"Standard Version\"\r\n                                        key={\"StandardVersion\"}\r\n                                    >             {/*Standard Version Field */}\r\n                                        {getFieldDecorator(Fields.StandardVersionID, {\r\n                                            rules: getRules(standardVersion, props),\r\n                                            initialValue: \"\"\r\n                                        })(\r\n                                            <Select\r\n                                                style={{ width: \"100%\" }}\r\n                                                mode=\"single\"\r\n                                                aria-name=\"Standard Version\"\r\n                                            >\r\n                                                <Select.Option value={\"\"}>--Select--</Select.Option>\r\n                                                {stdVersions}\r\n                                            </Select>,\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col md={6} sm={12} xs={12}\r\n                                    style={{\r\n                                        paddingRight: \"10px\",\r\n                                        display: (CDISCStandards === -1 || CDISCStandards === \"4\" || CDISCStandards === \"\") ? \"none\" : \"block\"\r\n                                    }}>\r\n                                    <Form.Item label=\"CodeList Version\" key={\"codeListVersion\"}>             {/*CodeList Version Field */}\r\n                                        {getFieldDecorator(Fields.CodelistVersionID, {\r\n                                            rules: getRules(codeListVersion, props),\r\n                                            initialValue: \"\"\r\n                                        })(\r\n                                            <Select\r\n                                                style={{ width: \"100%\" }}\r\n                                                mode=\"single\"\r\n                                                aria-name=\"CodeList Version\"\r\n                                            >\r\n                                                <Select.Option value={\"\"}>--Select--</Select.Option>\r\n                                                {codeList}\r\n                                            </Select>,\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col md={splitClass} sm={24} xs={24}\r\n                                    style={{\r\n                                        paddingRight: \"10px\",\r\n                                        display: thisObj.props.form.getFieldValue(\"Activities\").indexOf('Annotation') === -1 ? \"none\" : \"block\"\r\n                                    }} >\r\n                                    <Form.Item label=\"Annotation Type\" key={\"AnnotationType\"}>                     {/* Study Name Field */}\r\n                                        {getFieldDecorator(Fields.AnnotationType, {\r\n                                            rules: getRules(annotationTypes, props),\r\n                                            initialValue: ''\r\n                                        })(\r\n                                            <Select\r\n                                                style={{ width: \"100%\" }}\r\n                                                mode=\"single\"\r\n                                                aria-name=\"Annotaion Type\"\r\n                                            >\r\n                                                <Select.Option value={\"\"}>--Select--</Select.Option>\r\n                                                {thisObj.props.form.getFieldValue(\"Activities\").indexOf(\"Transformation\") === -1 ? annotationTypeCRF : annotationType}\r\n                                            </Select>,\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                             </Row>\r\n                        </Form>\r\n                    </React.Fragment>\r\n                </Modal>\r\n            }\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nconst WrappedApp = Form.create()(Create);\r\n\r\nexport default WrappedApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}