{"ast":null,"code":"function _typeof(e) {\n  return (_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(e);\n}\nfunction _classCallCheck(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _defineProperties(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var i = t[n];\n    i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n  }\n}\nfunction _createClass(e, t, n) {\n  return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;\n}\nfunction _defineProperty(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nfunction _inherits(e, t) {\n  if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(t && t.prototype, {\n    constructor: {\n      value: e,\n      writable: !0,\n      configurable: !0\n    }\n  }), t && _setPrototypeOf(e, t);\n}\nfunction _getPrototypeOf(e) {\n  return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  })(e);\n}\nfunction _setPrototypeOf(e, t) {\n  return (_setPrototypeOf = Object.setPrototypeOf || function (e, t) {\n    return e.__proto__ = t, e;\n  })(e, t);\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _possibleConstructorReturn(e, t) {\n  return !t || \"object\" != typeof t && \"function\" != typeof t ? _assertThisInitialized(e) : t;\n}\nfunction debounced(e, t) {\n  var n;\n  return function () {\n    for (var i = arguments.length, o = new Array(i), r = 0; r < i; r++) {\n      o[r] = arguments[r];\n    }\n    n && clearTimeout(n), n = setTimeout(function () {\n      e.apply(void 0, o), n = null;\n    }, t);\n  };\n}\nfunction throttled(e, t) {\n  var n = 0;\n  return function () {\n    var i = new Date().getTime();\n    if (!(i - n < t)) return n = i, e.apply(void 0, arguments);\n  };\n}\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nvar IS_BROWSER = \"object\" === (\"undefined\" == typeof window ? \"undefined\" : \"undefined\" == typeof window ? \"undefined\" : _typeof(window)),\n  DEFAULT_ELEMENT = IS_BROWSER ? document : {},\n  DEFAULT_EVENTS = [\"mousemove\", \"keydown\", \"wheel\", \"DOMMouseScroll\", \"mouseWheel\", \"mousedown\", \"touchstart\", \"touchmove\", \"MSPointerDown\", \"MSPointerMove\"],\n  IdleTimer = function (e) {\n    function t(e) {\n      var n;\n      if (_classCallCheck(this, t), n = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e)), _defineProperty(_assertThisInitialized(n), \"state\", {\n        idle: !1,\n        oldDate: +new Date(),\n        lastActive: +new Date(),\n        remaining: null,\n        pageX: null,\n        pageY: null\n      }), _defineProperty(_assertThisInitialized(n), \"tId\", null), _defineProperty(_assertThisInitialized(n), \"_handleEvent\", function (e) {\n        var t = n.state,\n          i = t.remaining,\n          o = t.pageX,\n          r = t.pageY,\n          s = t.idle,\n          a = n.props,\n          u = a.timeout,\n          l = a.onAction,\n          p = a.debounce,\n          d = a.throttle,\n          c = a.stopOnIdle;\n        if (p > 0 ? n.debouncedAction(e) : d > 0 ? n.throttledAction(e) : l(e), !i) {\n          if (\"mousemove\" === e.type) {\n            if (e.pageX === o && e.pageY === r) return;\n            if (void 0 === e.pageX && void 0 === e.pageY) return;\n            if (n.getElapsedTime() < 200) return;\n          }\n          clearTimeout(n.tId), n.tId = null;\n          var f = new Date() - n.getLastActiveTime();\n          (s && !c || !s && f > u) && n.toggleIdleState(e), n.setState({\n            lastActive: +new Date(),\n            pageX: e.pageX,\n            pageY: e.pageY\n          }), s ? c || (n.tId = setTimeout(n.toggleIdleState, u)) : n.tId = setTimeout(n.toggleIdleState, u);\n        }\n      }), e.debounce > 0 && e.throttle > 0) throw new Error(\"onAction can either be throttled or debounced (not both)\");\n      return e.debounce > 0 && (n.debouncedAction = debounced(e.onAction, e.debounce)), e.throttle > 0 && (n.throttledAction = throttled(e.onAction, e.throttle)), e.startOnMount || (n.state.idle = !0), n.toggleIdleState = n._toggleIdleState.bind(_assertThisInitialized(n)), n.reset = n.reset.bind(_assertThisInitialized(n)), n.pause = n.pause.bind(_assertThisInitialized(n)), n.resume = n.resume.bind(_assertThisInitialized(n)), n.getRemainingTime = n.getRemainingTime.bind(_assertThisInitialized(n)), n.getElapsedTime = n.getElapsedTime.bind(_assertThisInitialized(n)), n.getLastActiveTime = n.getLastActiveTime.bind(_assertThisInitialized(n)), n.isIdle = n._isIdle.bind(_assertThisInitialized(n)), n;\n    }\n    return _inherits(t, e), _createClass(t, [{\n      key: \"componentDidMount\",\n      value: function value() {\n        this._bindEvents(), this.props.startOnMount && this.reset();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function value(e) {\n        e.debounce !== this.props.debounce && (this.debouncedAction = debounced(this.props.onAction, this.props.debounce)), e.throttle !== this.props.throttle && (this.throttledAction = throttled(this.props.onAction, this.props.throttle));\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function value() {\n        clearTimeout(this.tId), this._unbindEvents(!0);\n      }\n    }, {\n      key: \"render\",\n      value: function value() {\n        return this.props.children || null;\n      }\n    }, {\n      key: \"_bindEvents\",\n      value: function value() {\n        var e = this;\n        if (IS_BROWSER) {\n          var t = this.state.eventsBound,\n            n = this.props,\n            i = n.element,\n            o = n.events,\n            r = n.passive,\n            s = n.capture;\n          t || (o.forEach(function (t) {\n            i.addEventListener(t, e._handleEvent, {\n              capture: s,\n              passive: r\n            });\n          }), this.setState({\n            eventsBound: !0\n          }));\n        }\n      }\n    }, {\n      key: \"_unbindEvents\",\n      value: function value() {\n        var e = this,\n          t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (IS_BROWSER) {\n          var n = this.props,\n            i = n.element,\n            o = n.events,\n            r = n.passive,\n            s = n.capture;\n          (this.state.eventsBound || t) && (o.forEach(function (t) {\n            i.removeEventListener(t, e._handleEvent, {\n              capture: s,\n              passive: r\n            });\n          }), this.setState({\n            eventsBound: !1\n          }));\n        }\n      }\n    }, {\n      key: \"_toggleIdleState\",\n      value: function value(e) {\n        var t = this;\n        this.setState(function (e) {\n          return {\n            idle: !e.idle\n          };\n        }, function () {\n          var n = t.props,\n            i = n.onActive,\n            o = n.onIdle,\n            r = n.stopOnIdle;\n          t.state.idle ? (r && (clearTimeout(t.tId), t.tId = null, t._unbindEvents()), o(e)) : r || (t._bindEvents(), i(e));\n        });\n      }\n    }, {\n      key: \"reset\",\n      value: function value() {\n        clearTimeout(this.tId), this.tId = null, this._bindEvents(), this.setState({\n          idle: !1,\n          oldDate: +new Date(),\n          lastActive: +new Date(),\n          remaining: null\n        });\n        var e = this.props.timeout;\n        this.tId = setTimeout(this.toggleIdleState, e);\n      }\n    }, {\n      key: \"pause\",\n      value: function value() {\n        null === this.state.remaining && (this._unbindEvents(), clearTimeout(this.tId), this.tId = null, this.setState({\n          remaining: this.getRemainingTime()\n        }));\n      }\n    }, {\n      key: \"resume\",\n      value: function value() {\n        var e = this.state,\n          t = e.remaining,\n          n = e.idle;\n        null !== t && (this._bindEvents(), n || (this.setState({\n          remaining: null,\n          lastActive: +new Date()\n        }), this.tId = setTimeout(this.toggleIdleState, t)));\n      }\n    }, {\n      key: \"getRemainingTime\",\n      value: function value() {\n        var e = this.state,\n          t = e.remaining,\n          n = e.lastActive,\n          i = this.props.timeout;\n        if (null !== t) return t < 0 ? 0 : t;\n        var o = i - (+new Date() - n);\n        return o < 0 ? 0 : o;\n      }\n    }, {\n      key: \"getElapsedTime\",\n      value: function value() {\n        var e = this.state.oldDate;\n        return +new Date() - e;\n      }\n    }, {\n      key: \"getLastActiveTime\",\n      value: function value() {\n        return this.state.lastActive;\n      }\n    }, {\n      key: \"_isIdle\",\n      value: function value() {\n        return this.state.idle;\n      }\n    }]), t;\n  }(Component);\n_defineProperty(IdleTimer, \"propTypes\", {\n  timeout: PropTypes.number,\n  events: PropTypes.arrayOf(PropTypes.string),\n  onIdle: PropTypes.func,\n  onActive: PropTypes.func,\n  onAction: PropTypes.func,\n  debounce: PropTypes.number,\n  throttle: PropTypes.number,\n  element: PropTypes.oneOfType([PropTypes.object, PropTypes.element]),\n  startOnMount: PropTypes.bool,\n  stopOnIdle: PropTypes.bool,\n  passive: PropTypes.bool,\n  capture: PropTypes.bool\n}), _defineProperty(IdleTimer, \"defaultProps\", {\n  timeout: 12e5,\n  element: DEFAULT_ELEMENT,\n  events: DEFAULT_EVENTS,\n  onIdle: function onIdle() {},\n  onActive: function onActive() {},\n  onAction: function onAction() {},\n  debounce: 0,\n  throttle: 0,\n  startOnMount: !0,\n  stopOnIdle: !1,\n  capture: !0,\n  passive: !0\n});\nexport default IdleTimer;","map":{"version":3,"sources":["../src/index.js"],"names":["IS_BROWSER","window","DEFAULT_ELEMENT","document","DEFAULT_EVENTS","IdleTimer","Component","timeout","PropTypes","number","events","arrayOf","string","onIdle","func","onActive","onAction","debounce","throttle","element","oneOfType","object","startOnMount","bool","stopOnIdle","passive","capture","idle","oldDate","Date","lastActive","remaining","pageX","pageY","props","Error","debouncedAction","debounced","throttledAction","throttled","state","toggleIdleState","_this","_toggleIdleState","bind","reset","pause","resume","getRemainingTime","getElapsedTime","getLastActiveTime","isIdle","_isIdle","_bindEvents","this","prevProps","clearTimeout","tId","_unbindEvents","children","eventsBound","forEach","addEventListener","e","_this2","_handleEvent","setState","force","removeEventListener","_this3","prevState","_this4","type","elapsedTimeSinceLastActive","setTimeout","timeLeft","fn","delay","timerId","args","lastCall","now","getTime"],"mappings":"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","sourcesContent":["/**\n *  ___    _ _     _____ _\n * |_ _|__| | | __|_   _(_)_ __ ___   ___ _ __\n *  | |/ _` | |/ _ \\| | | | '_ ` _ \\ / _ \\ '__|\n *  | | (_| | |  __/| | | | | | | | |  __/ |\n * |___\\__,_|_|\\___||_| |_|_| |_| |_|\\___|_|\n *\n * @name IdleTimer\n * @author Randy Lebeau\n * @private\n */\n\nimport { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * Determine if we are in a browser\n * or a server environment\n * @type {Boolean}\n * @private\n */\nconst IS_BROWSER = (typeof window === 'undefined' ? 'undefined' : typeof (window)) === 'object'\n\n/**\n * Default element to listen for events on\n * @type {Object}\n * @private\n */\nconst DEFAULT_ELEMENT = IS_BROWSER ? document : {}\n\n/**\n * The default events to determine activity\n * @type {Array}\n * @private\n */\nconst DEFAULT_EVENTS = [\n  'mousemove',\n  'keydown',\n  'wheel',\n  'DOMMouseScroll',\n  'mouseWheel',\n  'mousedown',\n  'touchstart',\n  'touchmove',\n  'MSPointerDown',\n  'MSPointerMove'\n]\n\n/**\n * Detects when your user is idle\n * @class IdleTimer\n * @private\n */\nexport default class IdleTimer extends Component {\n  /**\n   * Type checks for every property\n   * @type {Object}\n   * @private\n   */\n  static propTypes = {\n    /**\n     * Activity Timeout in milliseconds\n     * default: 1200000\n     * @type {Number}\n     */\n    timeout: PropTypes.number,\n    /**\n     * DOM events to listen to\n     * default: see [default events](https://github.com/SupremeTechnopriest/react-idle-timer#default-events)\n     * @type {Array}\n     */\n    events: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Function to call when user is idle\n     * default: () => {}\n     * @type {Function}\n     */\n    onIdle: PropTypes.func,\n    /**\n     * Function to call when user becomes active\n     * default: () => {}\n     * @type {Function}\n     */\n    onActive: PropTypes.func,\n    /**\n     * Function to call on user actions\n     * default: () => {}\n     * @type {Function}\n     */\n    onAction: PropTypes.func,\n    /**\n     * Debounce the onAction function by setting delay in milliseconds\n     * default: 0\n     * @type {Number}\n     */\n    debounce: PropTypes.number,\n    /**\n     * Throttle the onAction function by setting delay in milliseconds\n     * default: 0\n     * @type {Number}\n     */\n    throttle: PropTypes.number,\n    /**\n     * Element reference to bind activity listeners to\n     * default: document\n     * @type {Object}\n     */\n    element: PropTypes.oneOfType([PropTypes.object, PropTypes.element]),\n    /**\n     * Start the timer on mount\n     * default: true\n     * @type {Boolean}\n     */\n    startOnMount: PropTypes.bool,\n    /**\n     * Once the user goes idle the IdleTimer will not\n     * reset on user input instead, reset() must be\n     * called manually to restart the timer\n     * default: false\n     * @type {Boolean}\n     */\n    stopOnIdle: PropTypes.bool,\n    /**\n     * Bind events passively\n     * default: true\n     * @type {Boolean}\n     */\n    passive: PropTypes.bool,\n    /**\n     * Capture events\n     * default: true\n     * @type {Boolean}\n     */\n    capture: PropTypes.bool\n  }\n\n  /**\n   * Sets default property values\n   * @type {Object}\n   * @private\n   */\n  static defaultProps = {\n    timeout: 1000 * 60 * 20,\n    element: DEFAULT_ELEMENT,\n    events: DEFAULT_EVENTS,\n    onIdle: () => {},\n    onActive: () => {},\n    onAction: () => {},\n    debounce: 0,\n    throttle: 0,\n    startOnMount: true,\n    stopOnIdle: false,\n    capture: true,\n    passive: true\n  }\n\n  /**\n   * Sets initial component state\n   * @type {Object}\n   * @private\n   */\n  state = {\n    idle: false,\n    oldDate: +new Date(),\n    lastActive: +new Date(),\n    remaining: null,\n    pageX: null,\n    pageY: null\n  }\n\n  /**\n   * The timer instance\n   * @type {Timeout}\n   * @private\n   */\n  tId = null\n\n  /**\n   * Creates an instance of IdleTimer\n   * bind all of our internal events here\n   * for best performance\n   * @param {Object} props\n   * @return {IdleTimer}\n   * @private\n   */\n  constructor (props) {\n    super(props)\n\n    // Debounce and throttle cant both be set\n    if (props.debounce > 0 && props.throttle > 0) {\n      throw new Error('onAction can either be throttled or debounced (not both)')\n    }\n\n    // Create debounced action if applicable\n    if (props.debounce > 0) {\n      this.debouncedAction = debounced(props.onAction, props.debounce)\n    }\n\n    // Create throttled action if applicable\n    if (props.throttle > 0) {\n      this.throttledAction = throttled(props.onAction, props.throttle)\n    }\n\n    // If startOnMount is set, idle state defaults to true\n    if (!props.startOnMount) {\n      this.state.idle = true\n    }\n\n    // Bind all events to component scope, built for speed 🚀\n    this.toggleIdleState = this._toggleIdleState.bind(this)\n    this.reset = this.reset.bind(this)\n    this.pause = this.pause.bind(this)\n    this.resume = this.resume.bind(this)\n    this.getRemainingTime = this.getRemainingTime.bind(this)\n    this.getElapsedTime = this.getElapsedTime.bind(this)\n    this.getLastActiveTime = this.getLastActiveTime.bind(this)\n    this.isIdle = this._isIdle.bind(this)\n  }\n\n  /**\n   * Runs once the component has mounted\n   * here we handle automatically starting\n   * the idletimer\n   * @private\n   */\n  componentDidMount () {\n    // Bind the event listeners\n    this._bindEvents()\n    // If startOnMount is enabled start the timer\n    const { startOnMount } = this.props\n    if (startOnMount) {\n      this.reset()\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    // Update debounce function\n    if (prevProps.debounce !== this.props.debounce) {\n      this.debouncedAction = debounced(this.props.onAction, this.props.debounce)\n    }\n    // Update throttle function\n    if (prevProps.throttle !== this.props.throttle) {\n      this.throttledAction = throttled(this.props.onAction, this.props.throttle)\n    }\n  }\n\n  /**\n   * Called before the component unmounts\n   * here we clear the timer and remove\n   * all the event listeners\n   * @private\n   */\n  componentWillUnmount () {\n    // Clear timeout to prevent delayed state changes\n    clearTimeout(this.tId)\n    this._unbindEvents(true)\n  }\n\n  /**\n   * Render children if IdleTimer is used as a wrapper\n   * @return {Component} children\n   * @private\n   */\n  render () {\n    const { children } = this.props\n    return children || null\n  }\n\n  /**\n   * Binds the specified events\n   * @private\n   */\n  _bindEvents () {\n    // Dont bind events if\n    // we are not in a browser\n    if (!IS_BROWSER) return\n    // Otherwise we bind all the events\n    // to the supplied element\n    const { eventsBound } = this.state\n    const { element, events, passive, capture } = this.props\n    if (!eventsBound) {\n      events.forEach(e => {\n        element.addEventListener(e, this._handleEvent, {\n          capture,\n          passive\n        })\n      })\n      this.setState({ eventsBound: true })\n    }\n  }\n\n  /**\n   * Unbinds all the bound events\n   * @private\n   */\n  _unbindEvents (force = false) {\n    // If we are not in a browser\n    // we dont need to unbind events\n    if (!IS_BROWSER) return\n    // Unbind all events\n    const { element, events, passive, capture } = this.props\n    const { eventsBound } = this.state\n    if (eventsBound || force) {\n      events.forEach(e => {\n        element.removeEventListener(e, this._handleEvent, {\n          capture,\n          passive\n        })\n      })\n      this.setState({ eventsBound: false })\n    }\n  }\n\n  /**\n   * Toggles the idle state and calls\n   * the correct action function\n   * @private\n   */\n  _toggleIdleState (e) {\n    // Fire the appropriate action\n    // and pass the event through\n    // Toggle the idle state\n    this.setState((prevState) => ({\n      idle: !prevState.idle\n    }), () => {\n      const { onActive, onIdle, stopOnIdle } = this.props\n      const { idle } = this.state\n      if (!idle) {\n        if (!stopOnIdle) {\n          this._bindEvents()\n          onActive(e)\n        }\n      } else {\n        if (stopOnIdle) {\n          // Clear any existing timeout\n          clearTimeout(this.tId)\n          this.tId = null\n          // Unbind events\n          this._unbindEvents()\n        }\n        onIdle(e)\n      }\n    })\n  }\n\n  /**\n   * Event handler for supported event types\n   * @param  {Object} e event object\n   * @private\n   */\n  _handleEvent = (e) => {\n    const { remaining, pageX, pageY, idle } = this.state\n    const { timeout, onAction, debounce, throttle, stopOnIdle } = this.props\n\n    // Fire debounced, throttled or raw onAction callback with event\n    if (debounce > 0) {\n      this.debouncedAction(e)\n    } else if (throttle > 0) {\n      this.throttledAction(e)\n    } else {\n      onAction(e)\n    }\n\n    // Already active, ignore events\n    if (remaining) return\n\n    // Mousemove event\n    if (e.type === 'mousemove') {\n      // If coord are same, it didn't move\n      if (e.pageX === pageX && e.pageY === pageY) {\n        return\n      }\n      // If coord don't exist how could it move\n      if (typeof e.pageX === 'undefined' && typeof e.pageY === 'undefined') {\n        return\n      }\n      // Under 200 ms is hard to do\n      // continuous activity will bypass this\n      //\n      // TODO: Cant seem to simulate this event with pageX and pageY for testing\n      // making this block of code unreachable by test suite\n      // opened an issue here https://github.com/Rich-Harris/simulant/issues/19\n      const elapsed = this.getElapsedTime()\n      if (elapsed < 200) {\n        return\n      }\n    }\n\n    // Clear any existing timeout\n    clearTimeout(this.tId)\n    this.tId = null\n\n    // Determine last time User was active, as can't rely on setTimeout ticking at the correct interval\n    const elapsedTimeSinceLastActive = new Date() - this.getLastActiveTime()\n\n    // If the user is idle or last active time is more than timeout, flip the idle state\n    if ((idle && !stopOnIdle) || (!idle && elapsedTimeSinceLastActive > timeout)) {\n      this.toggleIdleState(e)\n    }\n\n    // Store when the user was last active\n    // and update the mouse coordinates\n    this.setState({\n      lastActive: +new Date(), // store when user was last active\n      pageX: e.pageX, // update mouse coord\n      pageY: e.pageY\n    })\n\n    // If the user is idle and stopOnIdle flag is not set\n    // set a new timeout\n    if (idle) {\n      if (!stopOnIdle) {\n        this.tId = setTimeout(this.toggleIdleState, timeout)\n      }\n    } else {\n      this.tId = setTimeout(this.toggleIdleState, timeout)\n    }\n  }\n\n  /**\n   * Restore initial state and restart timer\n   * @name reset\n   */\n  reset () {\n    // Clear timeout\n    clearTimeout(this.tId)\n    this.tId = null\n\n    // Bind the events\n    this._bindEvents()\n\n    // Reset state\n    this.setState({\n      idle: false,\n      oldDate: +new Date(),\n      lastActive: +new Date(),\n      remaining: null\n    })\n\n    // Set new timeout\n    const { timeout } = this.props\n    this.tId = setTimeout(this.toggleIdleState, timeout)\n  }\n\n  /**\n   * Store remaining time and stop timer\n   * @name pause\n   */\n  pause () {\n    // Timer is already paused\n    const { remaining } = this.state\n    if (remaining !== null) {\n      return\n    }\n\n    // Unbind events\n    this._unbindEvents()\n\n    // Clear existing timeout\n    clearTimeout(this.tId)\n    this.tId = null\n\n    // Define how much is left on the timer\n    this.setState({\n      remaining: this.getRemainingTime()\n    })\n  }\n\n  /**\n   * Resumes a paused timer\n   * @name resume\n   */\n  resume () {\n    // Timer is not paused\n    const { remaining, idle } = this.state\n    if (remaining === null) {\n      return\n    }\n\n    // Bind events\n    this._bindEvents()\n\n    // Start timer and clear remaining\n    // if we are in the idle state\n    if (!idle) {\n      this.setState({ remaining: null, lastActive: +new Date() })\n      // Set a new timeout\n      this.tId = setTimeout(this.toggleIdleState, remaining)\n    }\n  }\n\n  /**\n   * Time remaining before idle\n   * @name getRemainingTime\n   * @return {Number} Milliseconds remaining\n   */\n  getRemainingTime () {\n    const { remaining, lastActive } = this.state\n    const { timeout } = this.props\n\n    // If idle there is no time remaining\n    if (remaining !== null) {\n      return remaining < 0 ? 0 : remaining\n    }\n\n    // Determine remaining, if negative idle didn't finish flipping, just return 0\n    let timeLeft = timeout - ((+new Date()) - lastActive)\n    return timeLeft < 0 ? 0 : timeLeft\n  }\n\n  /**\n   * How much time has elapsed\n   * @name getElapsedTime\n   * @return {Timestamp}\n   */\n  getElapsedTime () {\n    const { oldDate } = this.state\n    return (+new Date()) - oldDate\n  }\n\n  /**\n   * Last time the user was active\n   * @name getLastActiveTime\n   * @return {Timestamp}\n   */\n  getLastActiveTime () {\n    const { lastActive } = this.state\n    return lastActive\n  }\n\n  /**\n   * Returns wether or not the user is idle\n   * @name isIdle\n   * @return {Boolean}\n   */\n  _isIdle () {\n    const { idle } = this.state\n    return idle\n  }\n}\n\n/**\n * Creates a debounced function that delays invoking func until\n * after delay milliseconds has elapsed since the last time the\n * debounced function was invoked.\n * @name debounced\n * @param  {Function} fn   Function to debounce\n * @param  {Number} delay  How long to wait\n * @return {Function}      Executed Function\n**/\nfunction debounced (fn, delay) {\n  let timerId\n  return function (...args) {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n\n/**\n * Creates a throttled function that only invokes func at most\n * once per every wait milliseconds.\n * @name throttled\n * @param  {Function} fn   Function to debounce\n * @param  {Number} delay  How long to wait\n * @return {Function}      Executed Function\n**/\nfunction throttled (fn, delay) {\n  let lastCall = 0\n  return function (...args) {\n    const now = new Date().getTime()\n    if (now - lastCall < delay) {\n      return\n    }\n    lastCall = now\n    return fn(...args)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}