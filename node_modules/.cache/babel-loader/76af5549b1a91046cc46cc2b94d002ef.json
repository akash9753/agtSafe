{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\FormAction\\\\editFormAction.js\";\nimport React, { Component } from 'react';\nimport { Breadcrumb, Icon, Col, Row, Select, Form, Modal, Spin } from 'antd';\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\nimport Button from '../../components/uielements/button';\nimport { CallServerPost, PostCallWithZone, errorModal, successModal } from '../Utility/sharedUtility';\nimport { getFormItemsLeft, getFormItemsRight } from '../Utility/htmlUtility';\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\nimport ConfirmModal from '../Utility/ConfirmModal';\nimport SingleForm from '../Utility/SingleForm';\nvar formID = null;\nvar antIcon = /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24,\n    color: '#17242c'\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 17\n  }\n});\nvar UpdateFormAction = /*#__PURE__*/function (_Component) {\n  _inherits(UpdateFormAction, _Component);\n  var _super = _createSuper(UpdateFormAction);\n  function UpdateFormAction(_props) {\n    var _this;\n    _classCallCheck(this, UpdateFormAction);\n    _this = _super.call(this, _props);\n    _this.getFormData = function (props) {\n      var thisObj = _assertThisInitialized(_this);\n      if (typeof props.FormID != \"undefined\" && props.FormID != null && props.action === \"Update\" && props.visible) {\n        CallServerPost('FormAction/GetFormActionFormData', {\n          FormName: \"FormAction\",\n          ActionName: \"Update\",\n          ID: props.FormActionID,\n          Editable: props.readOnly\n        }).then(function (response) {\n          var responseData = response.value;\n          if (response.status == 0) {\n            errorModal(responseData.message);\n          } else {\n            thisObj.setState({\n              responseData: responseData,\n              formActionID: props.FormActionID,\n              formID: props.FormID\n            });\n          }\n        }).catch(function (error) {\n          return error;\n        });\n      }\n    };\n    _this.handleUpdate = function (ChangeReason) {\n      var thisObj = _assertThisInitialized(_this);\n      var _this$state = _this.state,\n        formActionID = _this$state.formActionID,\n        formID = _this$state.formID;\n      var values = thisObj.state.allValues;\n      values[\"FormID\"] = formID;\n      values[\"FormActionID\"] = formActionID;\n      values[\"ChangeReason\"] = ChangeReason;\n      values[\"UpdatedDateTimeText\"] = thisObj.state.responseData.updatedDateTimeText;\n      thisObj.setState({\n        loading: true\n      });\n      PostCallWithZone('FormAction/Update', values).then(function (response) {\n        thisObj.setState({\n          loading: false\n        });\n        if (response.status == 1) {\n          successModal(response.message, thisObj.props, \"/trans/formAction\");\n        } else {\n          errorModal(response.message);\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.handleSubmit = function () {\n      var thisObj = _assertThisInitialized(_this);\n      thisObj.props.form.validateFields(function (err, values) {\n        if (!err) {\n          thisObj.setState({\n            showEditModal: true,\n            allValues: values\n          });\n        }\n      });\n    };\n    _this.handleCancel = function () {\n      _this.props.handleCancel();\n    };\n    _this.handleConfirmModalCancel = function () {\n      _this.props.form.resetFields(['Change Reason']);\n      _this.setState({\n        showEditModal: false,\n        loading: false\n      });\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_this));\n    var _thisObj = _assertThisInitialized(_this);\n    _this.state = {\n      loading: false,\n      responseData: {\n        formData: {},\n        selectOptions: {}\n      },\n      formActionID: null,\n      formID: null,\n      allValues: {},\n      showEditModal: false\n    };\n    _this.getFormData(_this.props);\n    return _this;\n  }\n  _createClass(UpdateFormAction, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n        responseData = _this$state2.responseData,\n        loading = _this$state2.loading;\n      var _this$props$form = this.props.form,\n        getFieldDecorator = _this$props$form.getFieldDecorator,\n        setFieldsValue = _this$props$form.setFieldsValue;\n      return /*#__PURE__*/React.createElement(Modal, {\n        visible: this.props.visible,\n        title: \"Edit Form Action\",\n        style: {\n          top: 20\n        },\n        onCancel: this.handleCancel,\n        width: '80%',\n        maskClosable: false,\n        footer: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: antIcon,\n        spinning: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, Object.keys(responseData.formData).length > 0 && /*#__PURE__*/React.createElement(SingleForm, {\n        Editable: this.props.readOnly,\n        responseData: responseData,\n        getFieldDecorator: getFieldDecorator,\n        handleCancel: this.handleCancel,\n        setFieldsValue: setFieldsValue,\n        handleSubmit: this.handleSubmit,\n        property: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ConfirmModal, {\n        loading: loading,\n        title: \"Update Form Action\",\n        SubmitButtonName: \"Update\",\n        onSubmit: this.handleUpdate,\n        visible: this.state.showEditModal,\n        handleCancel: this.handleConfirmModalCancel,\n        getFieldDecorator: getFieldDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return UpdateFormAction;\n}(Component);\nvar WrappedApp = Form.create()(UpdateFormAction);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Breadcrumb","Icon","Col","Row","Select","Form","Modal","Spin","LayoutContentWrapper","LayoutContent","Button","CallServerPost","PostCallWithZone","errorModal","successModal","getFormItemsLeft","getFormItemsRight","rowStyle","ConfirmModal","SingleForm","formID","antIcon","fontSize","color","UpdateFormAction","props","getFormData","thisObj","FormID","action","visible","FormName","ActionName","ID","FormActionID","Editable","readOnly","then","response","responseData","value","status","message","setState","formActionID","catch","error","handleUpdate","ChangeReason","state","values","allValues","updatedDateTimeText","loading","handleSubmit","form","validateFields","err","showEditModal","handleCancel","handleConfirmModalCancel","resetFields","bind","formData","selectOptions","getFieldDecorator","setFieldsValue","top","Object","keys","length","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/FormAction/editFormAction.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Breadcrumb, Icon, Col, Row, Select, Form, Modal, Spin } from 'antd';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper';\nimport LayoutContent from '../../components/utility/layoutContent';\r\nimport Button from '../../components/uielements/button';\r\nimport { CallServerPost, PostCallWithZone, errorModal, successModal } from '../Utility/sharedUtility';\r\nimport { getFormItemsLeft, getFormItemsRight } from '../Utility/htmlUtility';\r\nimport { rowStyle } from '../../styles/JsStyles/CommonStyles';\r\nimport ConfirmModal from '../Utility/ConfirmModal';\r\nimport SingleForm from '../Utility/SingleForm';\r\n\r\n\r\nvar formID = null;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24, color: '#17242c' }} spin />;\r\n\r\nclass UpdateFormAction extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        const thisObj = this;\r\n\r\n        this.state = {\r\n            loading: false,\r\n            responseData: {\r\n                formData: {},\r\n                selectOptions: {}\r\n            },\r\n            formActionID: null,\r\n            formID: null,\r\n            allValues: {},\r\n            showEditModal: false\r\n        };\r\n\r\n        this.getFormData(this.props);\r\n    }\r\n\r\n    getFormData = (props) => {\r\n        const thisObj = this;\r\n        if (typeof props.FormID != \"undefined\" && props.FormID != null && props.action === \"Update\" && props.visible) {\n            CallServerPost('FormAction/GetFormActionFormData', { FormName: \"FormAction\", ActionName: \"Update\", ID: props.FormActionID, Editable: props.readOnly }).then(\r\n                function (response) {\r\n                    const responseData = response.value;\r\n                    if (response.status == 0) {\r\n                        errorModal(responseData.message);\r\n                    }\r\n                    else {\r\n                        thisObj.setState({ responseData: responseData, formActionID: props.FormActionID, formID: props.FormID});\r\n                    }\r\n                }).catch(error => error);\r\n        }\r\n    }\r\n\r\n    handleUpdate = (ChangeReason) => {\r\n        const thisObj = this;\r\n        const { formActionID, formID } = this.state;\r\n        let values = thisObj.state.allValues;\r\n        values[\"FormID\"] = formID;\r\n        values[\"FormActionID\"] = formActionID;\r\n        values[\"ChangeReason\"] = ChangeReason;\r\n        values[\"UpdatedDateTimeText\"] = thisObj.state.responseData.updatedDateTimeText;\r\n        thisObj.setState({ loading: true });\r\n        PostCallWithZone('FormAction/Update', values)\r\n            .then(\r\n                function (response) {\r\n                    thisObj.setState({ loading: false });\r\n                    if (response.status == 1) {\r\n                        successModal(response.message, thisObj.props, \"/trans/formAction\");\r\n                    } else {\r\n                        errorModal(response.message);\r\n                    }\r\n                }).catch(error => error);\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const thisObj = this;\r\n        thisObj.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                thisObj.setState({ showEditModal: true, allValues: values });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.props.handleCancel();\r\n    }\r\n\r\n    handleConfirmModalCancel = () => {\r\n        this.props.form.resetFields(['Change Reason']);\r\n        this.setState({ showEditModal: false, loading: false });\r\n    }\r\n\r\n    render() {\r\n        const { responseData, loading } = this.state;\r\n        const { getFieldDecorator, setFieldsValue } = this.props.form;\r\n\r\n        return (\r\n\r\n            <Modal\r\n                visible={this.props.visible}\r\n                title={\"Edit Form Action\"}\r\n                style={{ top: 20 }}\r\n                onCancel={this.handleCancel}\r\n                width={'80%'}\r\n                maskClosable={false}\r\n                footer={null}\r\n            >\r\n\r\n                <Spin indicator={antIcon} spinning={loading}>\r\n                    {Object.keys(responseData.formData).length > 0 &&\n                        <SingleForm Editable={this.props.readOnly} responseData={responseData} getFieldDecorator={getFieldDecorator} handleCancel={this.handleCancel} setFieldsValue={setFieldsValue} handleSubmit={this.handleSubmit} property={this} />\n                    }\n                    <ConfirmModal loading={loading} title=\"Update Form Action\" SubmitButtonName=\"Update\" onSubmit={this.handleUpdate} visible={this.state.showEditModal} handleCancel={this.handleConfirmModalCancel} getFieldDecorator={getFieldDecorator} />\r\n                </Spin>\r\n\r\n            </Modal>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedApp = Form.create()(UpdateFormAction);\r\n\r\nexport default WrappedApp;"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI,QAAQ,MAAM;AAC5E,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,OAAOC,aAAa,MAAM,wCAAwC;AAClE,OAAOC,MAAM,MAAM,oCAAoC;AACvD,SAASC,cAAc,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,YAAY,QAAQ,0BAA0B;AACrG,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,wBAAwB;AAC5E,SAASC,QAAQ,QAAQ,oCAAoC;AAC7D,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,UAAU,MAAM,uBAAuB;AAG9C,IAAIC,MAAM,GAAG,IAAI;AACjB,IAAMC,OAAO,gBAAG,oBAAC,IAAI;EAAC,IAAI,EAAC,SAAS;EAAC,KAAK,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAU,CAAE;EAAC,IAAI;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG;AAAC,IAElFC,gBAAgB;EAAA;EAAA;EAGlB,0BAAYC,MAAK,EAAE;IAAA;IAAA;IACf,0BAAMA,MAAK;IAAE,MAoBjBC,WAAW,GAAG,UAACD,KAAK,EAAK;MACrB,IAAME,OAAO,gCAAO;MACpB,IAAI,OAAOF,KAAK,CAACG,MAAM,IAAI,WAAW,IAAIH,KAAK,CAACG,MAAM,IAAI,IAAI,IAAIH,KAAK,CAACI,MAAM,KAAK,QAAQ,IAAIJ,KAAK,CAACK,OAAO,EAAE;QAC1GnB,cAAc,CAAC,kCAAkC,EAAE;UAAEoB,QAAQ,EAAE,YAAY;UAAEC,UAAU,EAAE,QAAQ;UAAEC,EAAE,EAAER,KAAK,CAACS,YAAY;UAAEC,QAAQ,EAAEV,KAAK,CAACW;QAAS,CAAC,CAAC,CAACC,IAAI,CACvJ,UAAUC,QAAQ,EAAE;UAChB,IAAMC,YAAY,GAAGD,QAAQ,CAACE,KAAK;UACnC,IAAIF,QAAQ,CAACG,MAAM,IAAI,CAAC,EAAE;YACtB5B,UAAU,CAAC0B,YAAY,CAACG,OAAO,CAAC;UACpC,CAAC,MACI;YACDf,OAAO,CAACgB,QAAQ,CAAC;cAAEJ,YAAY,EAAEA,YAAY;cAAEK,YAAY,EAAEnB,KAAK,CAACS,YAAY;cAAEd,MAAM,EAAEK,KAAK,CAACG;YAAM,CAAC,CAAC;UAC3G;QACJ,CAAC,CAAC,CAACiB,KAAK,CAAC,UAAAC,KAAK;UAAA,OAAIA,KAAK;QAAA,EAAC;MAChC;IACJ,CAAC;IAAA,MAEDC,YAAY,GAAG,UAACC,YAAY,EAAK;MAC7B,IAAMrB,OAAO,gCAAO;MACpB,kBAAiC,MAAKsB,KAAK;QAAnCL,YAAY,eAAZA,YAAY;QAAExB,MAAM,eAANA,MAAM;MAC5B,IAAI8B,MAAM,GAAGvB,OAAO,CAACsB,KAAK,CAACE,SAAS;MACpCD,MAAM,CAAC,QAAQ,CAAC,GAAG9B,MAAM;MACzB8B,MAAM,CAAC,cAAc,CAAC,GAAGN,YAAY;MACrCM,MAAM,CAAC,cAAc,CAAC,GAAGF,YAAY;MACrCE,MAAM,CAAC,qBAAqB,CAAC,GAAGvB,OAAO,CAACsB,KAAK,CAACV,YAAY,CAACa,mBAAmB;MAC9EzB,OAAO,CAACgB,QAAQ,CAAC;QAAEU,OAAO,EAAE;MAAK,CAAC,CAAC;MACnCzC,gBAAgB,CAAC,mBAAmB,EAAEsC,MAAM,CAAC,CACxCb,IAAI,CACD,UAAUC,QAAQ,EAAE;QAChBX,OAAO,CAACgB,QAAQ,CAAC;UAAEU,OAAO,EAAE;QAAM,CAAC,CAAC;QACpC,IAAIf,QAAQ,CAACG,MAAM,IAAI,CAAC,EAAE;UACtB3B,YAAY,CAACwB,QAAQ,CAACI,OAAO,EAAEf,OAAO,CAACF,KAAK,EAAE,mBAAmB,CAAC;QACtE,CAAC,MAAM;UACHZ,UAAU,CAACyB,QAAQ,CAACI,OAAO,CAAC;QAChC;MACJ,CAAC,CAAC,CAACG,KAAK,CAAC,UAAAC,KAAK;QAAA,OAAIA,KAAK;MAAA,EAAC;IACpC,CAAC;IAAA,MAEDQ,YAAY,GAAG,YAAM;MACjB,IAAM3B,OAAO,gCAAO;MACpBA,OAAO,CAACF,KAAK,CAAC8B,IAAI,CAACC,cAAc,CAAC,UAACC,GAAG,EAAEP,MAAM,EAAK;QAC/C,IAAI,CAACO,GAAG,EAAE;UACN9B,OAAO,CAACgB,QAAQ,CAAC;YAAEe,aAAa,EAAE,IAAI;YAAEP,SAAS,EAAED;UAAO,CAAC,CAAC;QAChE;MACJ,CAAC,CAAC;IACN,CAAC;IAAA,MAEDS,YAAY,GAAG,YAAM;MACjB,MAAKlC,KAAK,CAACkC,YAAY,EAAE;IAC7B,CAAC;IAAA,MAEDC,wBAAwB,GAAG,YAAM;MAC7B,MAAKnC,KAAK,CAAC8B,IAAI,CAACM,WAAW,CAAC,CAAC,eAAe,CAAC,CAAC;MAC9C,MAAKlB,QAAQ,CAAC;QAAEe,aAAa,EAAE,KAAK;QAAEL,OAAO,EAAE;MAAM,CAAC,CAAC;IAC3D,CAAC;IAxEG,MAAKC,YAAY,GAAG,MAAKA,YAAY,CAACQ,IAAI,+BAAM;IAChD,MAAKH,YAAY,GAAG,MAAKA,YAAY,CAACG,IAAI,+BAAM;IAChD,IAAMnC,QAAO,gCAAO;IAEpB,MAAKsB,KAAK,GAAG;MACTI,OAAO,EAAE,KAAK;MACdd,YAAY,EAAE;QACVwB,QAAQ,EAAE,CAAC,CAAC;QACZC,aAAa,EAAE,CAAC;MACpB,CAAC;MACDpB,YAAY,EAAE,IAAI;MAClBxB,MAAM,EAAE,IAAI;MACZ+B,SAAS,EAAE,CAAC,CAAC;MACbO,aAAa,EAAE;IACnB,CAAC;IAED,MAAKhC,WAAW,CAAC,MAAKD,KAAK,CAAC;IAAC;EACjC;EAAC;IAAA;IAAA,OAyDD,kBAAS;MACL,mBAAkC,IAAI,CAACwB,KAAK;QAApCV,YAAY,gBAAZA,YAAY;QAAEc,OAAO,gBAAPA,OAAO;MAC7B,uBAA8C,IAAI,CAAC5B,KAAK,CAAC8B,IAAI;QAArDU,iBAAiB,oBAAjBA,iBAAiB;QAAEC,cAAc,oBAAdA,cAAc;MAEzC,oBAEI,oBAAC,KAAK;QACF,OAAO,EAAE,IAAI,CAACzC,KAAK,CAACK,OAAQ;QAC5B,KAAK,EAAE,kBAAmB;QAC1B,KAAK,EAAE;UAAEqC,GAAG,EAAE;QAAG,CAAE;QACnB,QAAQ,EAAE,IAAI,CAACR,YAAa;QAC5B,KAAK,EAAE,KAAM;QACb,YAAY,EAAE,KAAM;QACpB,MAAM,EAAE,IAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAGb,oBAAC,IAAI;QAAC,SAAS,EAAEtC,OAAQ;QAAC,QAAQ,EAAEgC,OAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACvCe,MAAM,CAACC,IAAI,CAAC9B,YAAY,CAACwB,QAAQ,CAAC,CAACO,MAAM,GAAG,CAAC,iBAC1C,oBAAC,UAAU;QAAC,QAAQ,EAAE,IAAI,CAAC7C,KAAK,CAACW,QAAS;QAAC,YAAY,EAAEG,YAAa;QAAC,iBAAiB,EAAE0B,iBAAkB;QAAC,YAAY,EAAE,IAAI,CAACN,YAAa;QAAC,cAAc,EAAEO,cAAe;QAAC,YAAY,EAAE,IAAI,CAACZ,YAAa;QAAC,QAAQ,EAAE,IAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,eAErO,oBAAC,YAAY;QAAC,OAAO,EAAED,OAAQ;QAAC,KAAK,EAAC,oBAAoB;QAAC,gBAAgB,EAAC,QAAQ;QAAC,QAAQ,EAAE,IAAI,CAACN,YAAa;QAAC,OAAO,EAAE,IAAI,CAACE,KAAK,CAACS,aAAc;QAAC,YAAY,EAAE,IAAI,CAACE,wBAAyB;QAAC,iBAAiB,EAAEK,iBAAkB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACvO,CAEH;IAGhB;EAAC;EAAA;AAAA,EAzG0BlE,SAAS;AA4GxC,IAAMwE,UAAU,GAAGlE,IAAI,CAACmE,MAAM,EAAE,CAAChD,gBAAgB,CAAC;AAElD,eAAe+C,UAAU"},"metadata":{},"sourceType":"module"}