{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n// BEGIN MONACOCHANGE\nvar __marked_exports;\n// END MONACOCHANGE\n\n;\n(function (root) {\n  'use strict';\n\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    nptable: noop,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block.paragraph).replace('hr', block.hr).replace('heading', block.heading).replace('lheading', block.lheading).replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n  block.gfm.paragraph = edit(block.paragraph).replace('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|').getRegex();\n\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n    table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n  });\n\n  /**\n   * Pedantic grammar\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n  });\n\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n\n  Lexer.rules = block;\n\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n\n  Lexer.prototype.token = function (src, top) {\n    src = src.replace(/^ +$/gm, '');\n    var next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? rtrim(cap, '\\n') : cap\n        });\n        continue;\n      }\n\n      // fences (gfm)\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n          this.tokens.push(item);\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n          this.tokens.push(item);\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n    return this.tokens;\n  };\n\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noop,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noop,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  };\n\n  // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n  inline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\n  inline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).getRegex();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n\n  InlineLexer.rules = inline;\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n\n  /**\n   * Lexing/Compiling\n   */\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        var lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n    return out;\n  };\n  InlineLexer.escapes = function (text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  };\n\n  /**\n   * Compile Link\n   */\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = link.href,\n      title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n\n  /**\n   * Smartypants Transformations\n   */\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text\n    // em-dashes\n    .replace(/---/g, \"\\u2014\")\n    // en-dashes\n    .replace(/--/g, \"\\u2013\")\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\")\n    // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\")\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\")\n    // closing doubles\n    .replace(/\"/g, \"\\u201D\")\n    // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  };\n\n  /**\n   * Mangle Links\n   */\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n    return out;\n  };\n\n  /**\n   * Renderer\n   */\n\n  function Renderer(options) {\n    this.options = options || marked.defaults;\n  }\n  Renderer.prototype.code = function (code, infostring, escaped) {\n    var lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '</code></pre>';\n    }\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '</code></pre>\\n';\n  };\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n  Renderer.prototype.heading = function (text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n  Renderer.prototype.list = function (body, ordered, start) {\n    var type = ordered ? 'ol' : 'ul',\n      startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n  Renderer.prototype.checkbox = function (checked) {\n    return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n  };\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n  Renderer.prototype.table = function (header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n  };\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n  Renderer.prototype.link = function (href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    var out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n  Renderer.prototype.image = function (href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  function TextRenderer() {}\n\n  // no need for block level renderers\n\n  TextRenderer.prototype.strong = TextRenderer.prototype.em = TextRenderer.prototype.codespan = TextRenderer.prototype.del = TextRenderer.prototype.text = function (text) {\n    return text;\n  };\n  TextRenderer.prototype.link = TextRenderer.prototype.image = function (href, title, text) {\n    return '' + text;\n  };\n  TextRenderer.prototype.br = function () {\n    return '';\n  };\n\n  /**\n   * Parsing & Compiling\n   */\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n\n  Parser.parse = function (src, options) {\n    var parser = new Parser(options);\n    return parser.parse(src);\n  };\n\n  /**\n   * Parse Loop\n   */\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(src.links, merge({}, this.options, {\n      renderer: new TextRenderer()\n    }));\n    this.tokens = src.reverse();\n    var out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n\n  /**\n   * Preview Next Token\n   */\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape(this.inlineText.output(this.token.text)), this.slugger);\n        }\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n      case 'table':\n        {\n          var header = '',\n            body = '',\n            i,\n            row,\n            cell,\n            j;\n\n          // header\n          cell = '';\n          for (i = 0; i < this.token.header.length; i++) {\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            });\n          }\n          header += this.renderer.tablerow(cell);\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              });\n            }\n            body += this.renderer.tablerow(cell);\n          }\n          return this.renderer.table(header, body);\n        }\n      case 'blockquote_start':\n        {\n          body = '';\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n          return this.renderer.blockquote(body);\n        }\n      case 'list_start':\n        {\n          body = '';\n          var ordered = this.token.ordered,\n            start = this.token.start;\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n          return this.renderer.list(body, ordered, start);\n        }\n      case 'list_item_start':\n        {\n          body = '';\n          var loose = this.token.loose;\n          var checked = this.token.checked;\n          var task = this.token.task;\n          if (this.token.task) {\n            body += this.renderer.checkbox(checked);\n          }\n          while (this.next().type !== 'list_item_end') {\n            body += !loose && this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n          return this.renderer.listitem(body, task, checked);\n        }\n      case 'html':\n        {\n          // TODO parse inline content if parameter markdown=1\n          return this.renderer.html(this.token.text);\n        }\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n      default:\n        {\n          var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.log(errMsg);\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n    }\n  };\n\n  /**\n   * Slugger generates header id\n   */\n\n  function Slugger() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n\n  Slugger.prototype.slug = function (value) {\n    var slug = value.toLowerCase().trim().replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    if (this.seen.hasOwnProperty(slug)) {\n      var originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n    return slug;\n  };\n\n  /**\n   * Helpers\n   */\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escape.escapeTest.test(html)) {\n        return html.replace(escape.escapeReplace, function (ch) {\n          return escape.replacements[ch];\n        });\n      }\n    } else {\n      if (escape.escapeTestNoEncode.test(html)) {\n        return html.replace(escape.escapeReplaceNoEncode, function (ch) {\n          return escape.replacements[ch];\n        });\n      }\n    }\n    return html;\n  }\n  escape.escapeTest = /[&<>\"']/;\n  escape.escapeReplace = /[&<>\"']/g;\n  escape.replacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  escape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  escape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    return {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(/(^|[^\\[])\\^/g, '$1');\n        regex = regex.replace(name, val);\n        return this;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n  }\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n    return href;\n  }\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n    base = baseUrls[' ' + base];\n    if (href.slice(0, 2) === '//') {\n      return base.replace(/:[\\s\\S]*/, ':') + href;\n    } else if (href.charAt(0) === '/') {\n      return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var baseUrls = {};\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  function noop() {}\n  noop.exec = noop;\n  function merge(obj) {\n    var i = 1,\n      target,\n      key;\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n          curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') {\n          escaped = !escaped;\n        }\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n  }\n\n  // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n  function rtrim(str, c, invert) {\n    if (str.length === 0) {\n      return '';\n    }\n\n    // Length of suffix matching the invert condition.\n    var suffLen = 0;\n\n    // Step left until we fail to match the invert condition.\n    while (suffLen < str.length) {\n      var currChar = str.charAt(str.length - suffLen - 1);\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n    return str.substr(0, str.length - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n    var level = 0;\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n      opt = merge({}, marked.defaults, opt || {});\n      var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n      pending = tokens.length;\n      var done = function done(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n        var out;\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n      delete opt.highlight;\n      if (!pending) return done();\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n      return;\n    }\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n  marked.getDefaults = function () {\n    return {\n      baseUrl: null,\n      breaks: false,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: new Renderer(),\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tables: true,\n      xhtml: false\n    };\n  };\n  marked.defaults = marked.getDefaults();\n\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n\n  // BEGIN MONACOCHANGE\n  // if (typeof module !== 'undefined' && typeof exports === 'object') {\n  //   module.exports = marked;\n  // } else if (typeof define === 'function' && define.amd) {\n  //   define(function() { return marked; });\n  // } else {\n  //   root.marked = marked;\n  // }\n  // })(this || (typeof window !== 'undefined' ? window : global));\n  __marked_exports = marked;\n}).call(this);\n\n// ESM-comment-begin\n// define(function() { return __marked_exports; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport var marked = __marked_exports;\nexport var Parser = __marked_exports.Parser;\nexport var parser = __marked_exports.parser;\nexport var Renderer = __marked_exports.Renderer;\nexport var TextRenderer = __marked_exports.TextRenderer;\nexport var Lexer = __marked_exports.Lexer;\nexport var lexer = __marked_exports.lexer;\nexport var InlineLexer = __marked_exports.InlineLexer;\nexport var inlineLexer = __marked_exports.inlineLexer;\nexport var parse = __marked_exports.parse;\n// ESM-uncomment-end\n// END MONACOCHANGE","map":{"version":3,"names":["__marked_exports","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","normal","merge","gfm","tables","pedantic","Lexer","options","tokens","links","Object","create","marked","defaults","rules","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","push","type","rtrim","lang","trim","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","breaks","InlineLexer","renderer","Renderer","output","out","prevCapZero","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","ch","Math","random","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","slugger","headerIds","headerPrefix","slug","xhtml","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","cleanUrl","baseUrl","TextRenderer","Parser","Slugger","parse","parser","inlineText","reverse","tok","pop","peek","parseText","unescape","row","cell","j","errMsg","silent","console","log","seen","value","hasOwnProperty","originalSlug","encode","escapeTest","escapeReplace","replacements","escapeTestNoEncode","escapeReplaceNoEncode","_","n","String","fromCharCode","parseInt","regex","opt","name","val","base","prot","decodeURIComponent","e","originIndependentUrl","resolveUrl","encodeURI","baseUrls","obj","target","key","arguments","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","callback","pending","done","err","message","setOptions","getDefaults","inlineLexer"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/marked/marked.js"],"sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n// BEGIN MONACOCHANGE\nvar __marked_exports;\n// END MONACOCHANGE\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\n// BEGIN MONACOCHANGE\n// if (typeof module !== 'undefined' && typeof exports === 'object') {\n//   module.exports = marked;\n// } else if (typeof define === 'function' && define.amd) {\n//   define(function() { return marked; });\n// } else {\n//   root.marked = marked;\n// }\n// })(this || (typeof window !== 'undefined' ? window : global));\n__marked_exports = marked;\n}).call(this);\n\n// ESM-comment-begin\n// define(function() { return __marked_exports; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport var marked = __marked_exports;\nexport var Parser = __marked_exports.Parser;\nexport var parser = __marked_exports.parser;\nexport var Renderer = __marked_exports.Renderer;\nexport var TextRenderer = __marked_exports.TextRenderer;\nexport var Lexer = __marked_exports.Lexer;\nexport var lexer = __marked_exports.lexer;\nexport var InlineLexer = __marked_exports.InlineLexer;\nexport var inlineLexer = __marked_exports.inlineLexer;\nexport var parse = __marked_exports.parse;\n// ESM-uncomment-end\n// END MONACOCHANGE\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}