{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport './folding.css';\nimport * as nls from '../../../nls.js';\nimport * as types from '../../../base/common/types.js';\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\nimport { RunOnceScheduler, Delayer, createCancelablePromise } from '../../../base/common/async.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { registerEditorAction, registerEditorContribution, EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\nimport { FoldingModel, setCollapseStateAtLevel, setCollapseStateLevelsDown, setCollapseStateLevelsUp, setCollapseStateForMatchingLines, setCollapseStateForType, toggleCollapseState, setCollapseStateUp } from './foldingModel.js';\nimport { FoldingDecorationProvider } from './foldingDecorations.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { HiddenRangeModel } from './hiddenRangeModel.js';\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\nimport { IndentRangeProvider } from './indentRangeProvider.js';\nimport { FoldingRangeProviderRegistry, FoldingRangeKind } from '../../common/modes.js';\nimport { SyntaxRangeProvider, ID_SYNTAX_PROVIDER } from './syntaxRangeProvider.js';\nimport { InitializingRangeProvider, ID_INIT_PROVIDER } from './intializingRangeProvider.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { registerColor, editorSelectionBackground, transparent } from '../../../platform/theme/common/colorRegistry.js';\nvar CONTEXT_FOLDING_ENABLED = new RawContextKey('foldingEnabled', false);\nvar FoldingController = /** @class */function (_super) {\n  __extends(FoldingController, _super);\n  function FoldingController(editor, contextKeyService) {\n    var _this = _super.call(this) || this;\n    _this.contextKeyService = contextKeyService;\n    _this.localToDispose = _this._register(new DisposableStore());\n    _this.editor = editor;\n    var options = _this.editor.getOptions();\n    _this._isEnabled = options.get(30 /* folding */);\n    _this._useFoldingProviders = options.get(31 /* foldingStrategy */) !== 'indentation';\n    _this.foldingModel = null;\n    _this.hiddenRangeModel = null;\n    _this.rangeProvider = null;\n    _this.foldingRegionPromise = null;\n    _this.foldingStateMemento = null;\n    _this.foldingModelPromise = null;\n    _this.updateScheduler = null;\n    _this.cursorChangedScheduler = null;\n    _this.mouseDownInfo = null;\n    _this.foldingDecorationProvider = new FoldingDecorationProvider(editor);\n    _this.foldingDecorationProvider.autoHideFoldingControls = options.get(84 /* showFoldingControls */) === 'mouseover';\n    _this.foldingDecorationProvider.showFoldingHighlights = options.get(32 /* foldingHighlight */);\n    _this.foldingEnabled = CONTEXT_FOLDING_ENABLED.bindTo(_this.contextKeyService);\n    _this.foldingEnabled.set(_this._isEnabled);\n    _this._register(_this.editor.onDidChangeModel(function () {\n      return _this.onModelChanged();\n    }));\n    _this._register(_this.editor.onDidChangeConfiguration(function (e) {\n      if (e.hasChanged(30 /* folding */)) {\n        var options_1 = _this.editor.getOptions();\n        _this._isEnabled = options_1.get(30 /* folding */);\n        _this.foldingEnabled.set(_this._isEnabled);\n        _this.onModelChanged();\n      }\n      if (e.hasChanged(84 /* showFoldingControls */) || e.hasChanged(32 /* foldingHighlight */)) {\n        var options_2 = _this.editor.getOptions();\n        _this.foldingDecorationProvider.autoHideFoldingControls = options_2.get(84 /* showFoldingControls */) === 'mouseover';\n        _this.foldingDecorationProvider.showFoldingHighlights = options_2.get(32 /* foldingHighlight */);\n        _this.onModelContentChanged();\n      }\n      if (e.hasChanged(31 /* foldingStrategy */)) {\n        var options_3 = _this.editor.getOptions();\n        _this._useFoldingProviders = options_3.get(31 /* foldingStrategy */) !== 'indentation';\n        _this.onFoldingStrategyChanged();\n      }\n    }));\n    _this.onModelChanged();\n    return _this;\n  }\n  FoldingController.get = function (editor) {\n    return editor.getContribution(FoldingController.ID);\n  };\n  /**\r\n   * Store view state.\r\n   */\n  FoldingController.prototype.saveViewState = function () {\n    var model = this.editor.getModel();\n    if (!model || !this._isEnabled || model.isTooLargeForTokenization()) {\n      return {};\n    }\n    if (this.foldingModel) {\n      // disposed ?\n      var collapsedRegions = this.foldingModel.isInitialized ? this.foldingModel.getMemento() : this.hiddenRangeModel.getMemento();\n      var provider = this.rangeProvider ? this.rangeProvider.id : undefined;\n      return {\n        collapsedRegions: collapsedRegions,\n        lineCount: model.getLineCount(),\n        provider: provider\n      };\n    }\n    return undefined;\n  };\n  /**\r\n   * Restore view state.\r\n   */\n  FoldingController.prototype.restoreViewState = function (state) {\n    var model = this.editor.getModel();\n    if (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) {\n      return;\n    }\n    if (!state || !state.collapsedRegions || state.lineCount !== model.getLineCount()) {\n      return;\n    }\n    if (state.provider === ID_SYNTAX_PROVIDER || state.provider === ID_INIT_PROVIDER) {\n      this.foldingStateMemento = state;\n    }\n    var collapsedRegions = state.collapsedRegions;\n    // set the hidden ranges right away, before waiting for the folding model.\n    if (this.hiddenRangeModel.applyMemento(collapsedRegions)) {\n      var foldingModel = this.getFoldingModel();\n      if (foldingModel) {\n        foldingModel.then(function (foldingModel) {\n          if (foldingModel) {\n            foldingModel.applyMemento(collapsedRegions);\n          }\n        }).then(undefined, onUnexpectedError);\n      }\n    }\n  };\n  FoldingController.prototype.onModelChanged = function () {\n    var _this = this;\n    this.localToDispose.clear();\n    var model = this.editor.getModel();\n    if (!this._isEnabled || !model || model.isTooLargeForTokenization()) {\n      // huge files get no view model, so they cannot support hidden areas\n      return;\n    }\n    this.foldingModel = new FoldingModel(model, this.foldingDecorationProvider);\n    this.localToDispose.add(this.foldingModel);\n    this.hiddenRangeModel = new HiddenRangeModel(this.foldingModel);\n    this.localToDispose.add(this.hiddenRangeModel);\n    this.localToDispose.add(this.hiddenRangeModel.onDidChange(function (hr) {\n      return _this.onHiddenRangesChanges(hr);\n    }));\n    this.updateScheduler = new Delayer(200);\n    this.cursorChangedScheduler = new RunOnceScheduler(function () {\n      return _this.revealCursor();\n    }, 200);\n    this.localToDispose.add(this.cursorChangedScheduler);\n    this.localToDispose.add(FoldingRangeProviderRegistry.onDidChange(function () {\n      return _this.onFoldingStrategyChanged();\n    }));\n    this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(function () {\n      return _this.onFoldingStrategyChanged();\n    })); // covers model language changes as well\n    this.localToDispose.add(this.editor.onDidChangeModelContent(function () {\n      return _this.onModelContentChanged();\n    }));\n    this.localToDispose.add(this.editor.onDidChangeCursorPosition(function () {\n      return _this.onCursorPositionChanged();\n    }));\n    this.localToDispose.add(this.editor.onMouseDown(function (e) {\n      return _this.onEditorMouseDown(e);\n    }));\n    this.localToDispose.add(this.editor.onMouseUp(function (e) {\n      return _this.onEditorMouseUp(e);\n    }));\n    this.localToDispose.add({\n      dispose: function dispose() {\n        if (_this.foldingRegionPromise) {\n          _this.foldingRegionPromise.cancel();\n          _this.foldingRegionPromise = null;\n        }\n        if (_this.updateScheduler) {\n          _this.updateScheduler.cancel();\n        }\n        _this.updateScheduler = null;\n        _this.foldingModel = null;\n        _this.foldingModelPromise = null;\n        _this.hiddenRangeModel = null;\n        _this.cursorChangedScheduler = null;\n        _this.foldingStateMemento = null;\n        if (_this.rangeProvider) {\n          _this.rangeProvider.dispose();\n        }\n        _this.rangeProvider = null;\n      }\n    });\n    this.onModelContentChanged();\n  };\n  FoldingController.prototype.onFoldingStrategyChanged = function () {\n    if (this.rangeProvider) {\n      this.rangeProvider.dispose();\n    }\n    this.rangeProvider = null;\n    this.onModelContentChanged();\n  };\n  FoldingController.prototype.getRangeProvider = function (editorModel) {\n    var _this = this;\n    if (this.rangeProvider) {\n      return this.rangeProvider;\n    }\n    this.rangeProvider = new IndentRangeProvider(editorModel); // fallback\n    if (this._useFoldingProviders && this.foldingModel) {\n      var foldingProviders = FoldingRangeProviderRegistry.ordered(this.foldingModel.textModel);\n      if (foldingProviders.length === 0 && this.foldingStateMemento && this.foldingStateMemento.collapsedRegions) {\n        var rangeProvider = this.rangeProvider = new InitializingRangeProvider(editorModel, this.foldingStateMemento.collapsedRegions, function () {\n          // if after 30 the InitializingRangeProvider is still not replaced, force a refresh\n          _this.foldingStateMemento = null;\n          _this.onFoldingStrategyChanged();\n        }, 30000);\n        return rangeProvider; // keep memento in case there are still no foldingProviders on the next request.\n      } else if (foldingProviders.length > 0) {\n        this.rangeProvider = new SyntaxRangeProvider(editorModel, foldingProviders);\n      }\n    }\n    this.foldingStateMemento = null;\n    return this.rangeProvider;\n  };\n  FoldingController.prototype.getFoldingModel = function () {\n    return this.foldingModelPromise;\n  };\n  FoldingController.prototype.onModelContentChanged = function () {\n    var _this = this;\n    if (this.updateScheduler) {\n      if (this.foldingRegionPromise) {\n        this.foldingRegionPromise.cancel();\n        this.foldingRegionPromise = null;\n      }\n      this.foldingModelPromise = this.updateScheduler.trigger(function () {\n        var foldingModel = _this.foldingModel;\n        if (!foldingModel) {\n          // null if editor has been disposed, or folding turned off\n          return null;\n        }\n        var foldingRegionPromise = _this.foldingRegionPromise = createCancelablePromise(function (token) {\n          return _this.getRangeProvider(foldingModel.textModel).compute(token);\n        });\n        return foldingRegionPromise.then(function (foldingRanges) {\n          if (foldingRanges && foldingRegionPromise === _this.foldingRegionPromise) {\n            // new request or cancelled in the meantime?\n            // some cursors might have moved into hidden regions, make sure they are in expanded regions\n            var selections = _this.editor.getSelections();\n            var selectionLineNumbers = selections ? selections.map(function (s) {\n              return s.startLineNumber;\n            }) : [];\n            foldingModel.update(foldingRanges, selectionLineNumbers);\n          }\n          return foldingModel;\n        });\n      }).then(undefined, function (err) {\n        onUnexpectedError(err);\n        return null;\n      });\n    }\n  };\n  FoldingController.prototype.onHiddenRangesChanges = function (hiddenRanges) {\n    if (this.hiddenRangeModel && hiddenRanges.length) {\n      var selections = this.editor.getSelections();\n      if (selections) {\n        if (this.hiddenRangeModel.adjustSelections(selections)) {\n          this.editor.setSelections(selections);\n        }\n      }\n    }\n    this.editor.setHiddenAreas(hiddenRanges);\n  };\n  FoldingController.prototype.onCursorPositionChanged = function () {\n    if (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) {\n      this.cursorChangedScheduler.schedule();\n    }\n  };\n  FoldingController.prototype.revealCursor = function () {\n    var _this = this;\n    var foldingModel = this.getFoldingModel();\n    if (!foldingModel) {\n      return;\n    }\n    foldingModel.then(function (foldingModel) {\n      if (foldingModel) {\n        var selections = _this.editor.getSelections();\n        if (selections && selections.length > 0) {\n          var toToggle = [];\n          var _loop_1 = function _loop_1(selection) {\n            var lineNumber = selection.selectionStartLineNumber;\n            if (_this.hiddenRangeModel && _this.hiddenRangeModel.isHidden(lineNumber)) {\n              toToggle.push.apply(toToggle, foldingModel.getAllRegionsAtLine(lineNumber, function (r) {\n                return r.isCollapsed && lineNumber > r.startLineNumber;\n              }));\n            }\n          };\n          for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\n            var selection = selections_1[_i];\n            _loop_1(selection);\n          }\n          if (toToggle.length) {\n            foldingModel.toggleCollapseState(toToggle);\n            _this.reveal(selections[0].getPosition());\n          }\n        }\n      }\n    }).then(undefined, onUnexpectedError);\n  };\n  FoldingController.prototype.onEditorMouseDown = function (e) {\n    this.mouseDownInfo = null;\n    if (!this.hiddenRangeModel || !e.target || !e.target.range) {\n      return;\n    }\n    if (!e.event.leftButton && !e.event.middleButton) {\n      return;\n    }\n    var range = e.target.range;\n    var iconClicked = false;\n    switch (e.target.type) {\n      case 4 /* GUTTER_LINE_DECORATIONS */:\n        var data = e.target.detail;\n        var offsetLeftInGutter = e.target.element.offsetLeft;\n        var gutterOffsetX = data.offsetX - offsetLeftInGutter;\n        // const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\n        // TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff\n        if (gutterOffsetX < 5) {\n          // the whitespace between the border and the real folding icon border is 5px\n          return;\n        }\n        iconClicked = true;\n        break;\n      case 6 /* CONTENT_TEXT */:\n        {\n          if (this.hiddenRangeModel.hasRanges()) {\n            var model = this.editor.getModel();\n            if (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) {\n              break;\n            }\n          }\n          return;\n        }\n      default:\n        return;\n    }\n    this.mouseDownInfo = {\n      lineNumber: range.startLineNumber,\n      iconClicked: iconClicked\n    };\n  };\n  FoldingController.prototype.onEditorMouseUp = function (e) {\n    var _this = this;\n    var foldingModel = this.getFoldingModel();\n    if (!foldingModel || !this.mouseDownInfo || !e.target) {\n      return;\n    }\n    var lineNumber = this.mouseDownInfo.lineNumber;\n    var iconClicked = this.mouseDownInfo.iconClicked;\n    var range = e.target.range;\n    if (!range || range.startLineNumber !== lineNumber) {\n      return;\n    }\n    if (iconClicked) {\n      if (e.target.type !== 4 /* GUTTER_LINE_DECORATIONS */) {\n        return;\n      }\n    } else {\n      var model = this.editor.getModel();\n      if (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) {\n        return;\n      }\n    }\n    foldingModel.then(function (foldingModel) {\n      if (foldingModel) {\n        var region = foldingModel.getRegionAtLine(lineNumber);\n        if (region && region.startLineNumber === lineNumber) {\n          var isCollapsed = region.isCollapsed;\n          if (iconClicked || isCollapsed) {\n            var toToggle = [];\n            var recursive = e.event.middleButton || e.event.shiftKey;\n            if (recursive) {\n              for (var _i = 0, _a = foldingModel.getRegionsInside(region); _i < _a.length; _i++) {\n                var r = _a[_i];\n                if (r.isCollapsed === isCollapsed) {\n                  toToggle.push(r);\n                }\n              }\n            }\n            // when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.\n            if (isCollapsed || !recursive || toToggle.length === 0) {\n              toToggle.push(region);\n            }\n            foldingModel.toggleCollapseState(toToggle);\n            _this.reveal({\n              lineNumber: lineNumber,\n              column: 1\n            });\n          }\n        }\n      }\n    }).then(undefined, onUnexpectedError);\n  };\n  FoldingController.prototype.reveal = function (position) {\n    this.editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\n  };\n\n  FoldingController.ID = 'editor.contrib.folding';\n  FoldingController = __decorate([__param(1, IContextKeyService)], FoldingController);\n  return FoldingController;\n}(Disposable);\nexport { FoldingController };\nvar FoldingAction = /** @class */function (_super) {\n  __extends(FoldingAction, _super);\n  function FoldingAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FoldingAction.prototype.runEditorCommand = function (accessor, editor, args) {\n    var _this = this;\n    var foldingController = FoldingController.get(editor);\n    if (!foldingController) {\n      return;\n    }\n    var foldingModelPromise = foldingController.getFoldingModel();\n    if (foldingModelPromise) {\n      this.reportTelemetry(accessor, editor);\n      return foldingModelPromise.then(function (foldingModel) {\n        if (foldingModel) {\n          _this.invoke(foldingController, foldingModel, editor, args);\n          var selection = editor.getSelection();\n          if (selection) {\n            foldingController.reveal(selection.getStartPosition());\n          }\n        }\n      });\n    }\n  };\n  FoldingAction.prototype.getSelectedLines = function (editor) {\n    var selections = editor.getSelections();\n    return selections ? selections.map(function (s) {\n      return s.startLineNumber;\n    }) : [];\n  };\n  FoldingAction.prototype.getLineNumbers = function (args, editor) {\n    if (args && args.selectionLines) {\n      return args.selectionLines.map(function (l) {\n        return l + 1;\n      }); // to 0-bases line numbers\n    }\n\n    return this.getSelectedLines(editor);\n  };\n  FoldingAction.prototype.run = function (_accessor, _editor) {};\n  return FoldingAction;\n}(EditorAction);\nfunction foldingArgumentsConstraint(args) {\n  if (!types.isUndefined(args)) {\n    if (!types.isObject(args)) {\n      return false;\n    }\n    var foldingArgs = args;\n    if (!types.isUndefined(foldingArgs.levels) && !types.isNumber(foldingArgs.levels)) {\n      return false;\n    }\n    if (!types.isUndefined(foldingArgs.direction) && !types.isString(foldingArgs.direction)) {\n      return false;\n    }\n    if (!types.isUndefined(foldingArgs.selectionLines) && (!types.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every(types.isNumber))) {\n      return false;\n    }\n  }\n  return true;\n}\nvar UnfoldAction = /** @class */function (_super) {\n  __extends(UnfoldAction, _super);\n  function UnfoldAction() {\n    return _super.call(this, {\n      id: 'editor.unfold',\n      label: nls.localize('unfoldAction.label', \"Unfold\"),\n      alias: 'Unfold',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */\n        },\n\n        weight: 100 /* EditorContrib */\n      },\n\n      description: {\n        description: 'Unfold the content in the editor',\n        args: [{\n          name: 'Unfold editor argument',\n          description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t\\t* 'levels': Number of levels to unfold. If not set, defaults to 1.\\n\\t\\t\\t\\t\\t\\t* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.\\n\\t\\t\\t\\t\\t\\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.\\n\\t\\t\\t\\t\\t\\t\",\n          constraint: foldingArgumentsConstraint,\n          schema: {\n            'type': 'object',\n            'properties': {\n              'levels': {\n                'type': 'number',\n                'default': 1\n              },\n              'direction': {\n                'type': 'string',\n                'enum': ['up', 'down'],\n                'default': 'down'\n              },\n              'selectionLines': {\n                'type': 'array',\n                'items': {\n                  'type': 'number'\n                }\n              }\n            }\n          }\n        }]\n      }\n    }) || this;\n  }\n  UnfoldAction.prototype.invoke = function (_foldingController, foldingModel, editor, args) {\n    var levels = args && args.levels || 1;\n    var lineNumbers = this.getLineNumbers(args, editor);\n    if (args && args.direction === 'up') {\n      setCollapseStateLevelsUp(foldingModel, false, levels, lineNumbers);\n    } else {\n      setCollapseStateLevelsDown(foldingModel, false, levels, lineNumbers);\n    }\n  };\n  return UnfoldAction;\n}(FoldingAction);\nvar UnFoldRecursivelyAction = /** @class */function (_super) {\n  __extends(UnFoldRecursivelyAction, _super);\n  function UnFoldRecursivelyAction() {\n    return _super.call(this, {\n      id: 'editor.unfoldRecursively',\n      label: nls.localize('unFoldRecursivelyAction.label', \"Unfold Recursively\"),\n      alias: 'Unfold Recursively',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  UnFoldRecursivelyAction.prototype.invoke = function (_foldingController, foldingModel, editor, _args) {\n    setCollapseStateLevelsDown(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));\n  };\n  return UnFoldRecursivelyAction;\n}(FoldingAction);\nvar FoldAction = /** @class */function (_super) {\n  __extends(FoldAction, _super);\n  function FoldAction() {\n    return _super.call(this, {\n      id: 'editor.fold',\n      label: nls.localize('foldAction.label', \"Fold\"),\n      alias: 'Fold',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 87 /* US_OPEN_SQUARE_BRACKET */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */\n        },\n\n        weight: 100 /* EditorContrib */\n      },\n\n      description: {\n        description: 'Fold the content in the editor',\n        args: [{\n          name: 'Fold editor argument',\n          description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t\\t\\t* 'levels': Number of levels to fold.\\n\\t\\t\\t\\t\\t\\t\\t* 'direction': If 'up', folds given number of levels up otherwise folds down.\\n\\t\\t\\t\\t\\t\\t\\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.\\n\\t\\t\\t\\t\\t\\t\\tIf no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.\\n\\t\\t\\t\\t\\t\\t\",\n          constraint: foldingArgumentsConstraint,\n          schema: {\n            'type': 'object',\n            'properties': {\n              'levels': {\n                'type': 'number'\n              },\n              'direction': {\n                'type': 'string',\n                'enum': ['up', 'down']\n              },\n              'selectionLines': {\n                'type': 'array',\n                'items': {\n                  'type': 'number'\n                }\n              }\n            }\n          }\n        }]\n      }\n    }) || this;\n  }\n  FoldAction.prototype.invoke = function (_foldingController, foldingModel, editor, args) {\n    var lineNumbers = this.getLineNumbers(args, editor);\n    var levels = args && args.levels;\n    var direction = args && args.direction;\n    if (typeof levels !== 'number' && typeof direction !== 'string') {\n      // fold the region at the location or if already collapsed, the first uncollapsed parent instead.\n      setCollapseStateUp(foldingModel, true, lineNumbers);\n    } else {\n      if (direction === 'up') {\n        setCollapseStateLevelsUp(foldingModel, true, levels || 1, lineNumbers);\n      } else {\n        setCollapseStateLevelsDown(foldingModel, true, levels || 1, lineNumbers);\n      }\n    }\n  };\n  return FoldAction;\n}(FoldingAction);\nvar ToggleFoldAction = /** @class */function (_super) {\n  __extends(ToggleFoldAction, _super);\n  function ToggleFoldAction() {\n    return _super.call(this, {\n      id: 'editor.toggleFold',\n      label: nls.localize('toggleFoldAction.label', \"Toggle Fold\"),\n      alias: 'Toggle Fold',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 42 /* KEY_L */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  ToggleFoldAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\n    var selectedLines = this.getSelectedLines(editor);\n    toggleCollapseState(foldingModel, 1, selectedLines);\n  };\n  return ToggleFoldAction;\n}(FoldingAction);\nvar FoldRecursivelyAction = /** @class */function (_super) {\n  __extends(FoldRecursivelyAction, _super);\n  function FoldRecursivelyAction() {\n    return _super.call(this, {\n      id: 'editor.foldRecursively',\n      label: nls.localize('foldRecursivelyAction.label', \"Fold Recursively\"),\n      alias: 'Fold Recursively',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  FoldRecursivelyAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\n    var selectedLines = this.getSelectedLines(editor);\n    setCollapseStateLevelsDown(foldingModel, true, Number.MAX_VALUE, selectedLines);\n  };\n  return FoldRecursivelyAction;\n}(FoldingAction);\nvar FoldAllBlockCommentsAction = /** @class */function (_super) {\n  __extends(FoldAllBlockCommentsAction, _super);\n  function FoldAllBlockCommentsAction() {\n    return _super.call(this, {\n      id: 'editor.foldAllBlockComments',\n      label: nls.localize('foldAllBlockComments.label', \"Fold All Block Comments\"),\n      alias: 'Fold All Block Comments',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 85 /* US_SLASH */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  FoldAllBlockCommentsAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\n    if (foldingModel.regions.hasTypes()) {\n      setCollapseStateForType(foldingModel, FoldingRangeKind.Comment.value, true);\n    } else {\n      var editorModel = editor.getModel();\n      if (!editorModel) {\n        return;\n      }\n      var comments = LanguageConfigurationRegistry.getComments(editorModel.getLanguageIdentifier().id);\n      if (comments && comments.blockCommentStartToken) {\n        var regExp = new RegExp('^\\\\s*' + escapeRegExpCharacters(comments.blockCommentStartToken));\n        setCollapseStateForMatchingLines(foldingModel, regExp, true);\n      }\n    }\n  };\n  return FoldAllBlockCommentsAction;\n}(FoldingAction);\nvar FoldAllRegionsAction = /** @class */function (_super) {\n  __extends(FoldAllRegionsAction, _super);\n  function FoldAllRegionsAction() {\n    return _super.call(this, {\n      id: 'editor.foldAllMarkerRegions',\n      label: nls.localize('foldAllMarkerRegions.label', \"Fold All Regions\"),\n      alias: 'Fold All Regions',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 29 /* KEY_8 */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  FoldAllRegionsAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\n    if (foldingModel.regions.hasTypes()) {\n      setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, true);\n    } else {\n      var editorModel = editor.getModel();\n      if (!editorModel) {\n        return;\n      }\n      var foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\n      if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\n        var regExp = new RegExp(foldingRules.markers.start);\n        setCollapseStateForMatchingLines(foldingModel, regExp, true);\n      }\n    }\n  };\n  return FoldAllRegionsAction;\n}(FoldingAction);\nvar UnfoldAllRegionsAction = /** @class */function (_super) {\n  __extends(UnfoldAllRegionsAction, _super);\n  function UnfoldAllRegionsAction() {\n    return _super.call(this, {\n      id: 'editor.unfoldAllMarkerRegions',\n      label: nls.localize('unfoldAllMarkerRegions.label', \"Unfold All Regions\"),\n      alias: 'Unfold All Regions',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 30 /* KEY_9 */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  UnfoldAllRegionsAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\n    if (foldingModel.regions.hasTypes()) {\n      setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, false);\n    } else {\n      var editorModel = editor.getModel();\n      if (!editorModel) {\n        return;\n      }\n      var foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\n      if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\n        var regExp = new RegExp(foldingRules.markers.start);\n        setCollapseStateForMatchingLines(foldingModel, regExp, false);\n      }\n    }\n  };\n  return UnfoldAllRegionsAction;\n}(FoldingAction);\nvar FoldAllAction = /** @class */function (_super) {\n  __extends(FoldAllAction, _super);\n  function FoldAllAction() {\n    return _super.call(this, {\n      id: 'editor.foldAll',\n      label: nls.localize('foldAllAction.label', \"Fold All\"),\n      alias: 'Fold All',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 21 /* KEY_0 */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  FoldAllAction.prototype.invoke = function (_foldingController, foldingModel, _editor) {\n    setCollapseStateLevelsDown(foldingModel, true);\n  };\n  return FoldAllAction;\n}(FoldingAction);\nvar UnfoldAllAction = /** @class */function (_super) {\n  __extends(UnfoldAllAction, _super);\n  function UnfoldAllAction() {\n    return _super.call(this, {\n      id: 'editor.unfoldAll',\n      label: nls.localize('unfoldAllAction.label', \"Unfold All\"),\n      alias: 'Unfold All',\n      precondition: CONTEXT_FOLDING_ENABLED,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 40 /* KEY_J */),\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  UnfoldAllAction.prototype.invoke = function (_foldingController, foldingModel, _editor) {\n    setCollapseStateLevelsDown(foldingModel, false);\n  };\n  return UnfoldAllAction;\n}(FoldingAction);\nvar FoldLevelAction = /** @class */function (_super) {\n  __extends(FoldLevelAction, _super);\n  function FoldLevelAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FoldLevelAction.prototype.getFoldingLevel = function () {\n    return parseInt(this.id.substr(FoldLevelAction.ID_PREFIX.length));\n  };\n  FoldLevelAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\n    setCollapseStateAtLevel(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));\n  };\n  FoldLevelAction.ID_PREFIX = 'editor.foldLevel';\n  FoldLevelAction.ID = function (level) {\n    return FoldLevelAction.ID_PREFIX + level;\n  };\n  return FoldLevelAction;\n}(FoldingAction);\nregisterEditorContribution(FoldingController.ID, FoldingController);\nregisterEditorAction(UnfoldAction);\nregisterEditorAction(UnFoldRecursivelyAction);\nregisterEditorAction(FoldAction);\nregisterEditorAction(FoldRecursivelyAction);\nregisterEditorAction(FoldAllAction);\nregisterEditorAction(UnfoldAllAction);\nregisterEditorAction(FoldAllBlockCommentsAction);\nregisterEditorAction(FoldAllRegionsAction);\nregisterEditorAction(UnfoldAllRegionsAction);\nregisterEditorAction(ToggleFoldAction);\nfor (var i = 1; i <= 7; i++) {\n  registerInstantiatedEditorAction(new FoldLevelAction({\n    id: FoldLevelAction.ID(i),\n    label: nls.localize('foldLevelAction.label', \"Fold Level {0}\", i),\n    alias: \"Fold Level \" + i,\n    precondition: CONTEXT_FOLDING_ENABLED,\n    kbOpts: {\n      kbExpr: EditorContextKeys.editorTextFocus,\n      primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 21 /* KEY_0 */ + i),\n      weight: 100 /* EditorContrib */\n    }\n  }));\n}\n\nexport var foldBackgroundBackground = registerColor('editor.foldBackground', {\n  light: transparent(editorSelectionBackground, 0.3),\n  dark: transparent(editorSelectionBackground, 0.3),\n  hc: null\n}, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nregisterThemingParticipant(function (theme, collector) {\n  var foldBackground = theme.getColor(foldBackgroundBackground);\n  if (foldBackground) {\n    collector.addRule(\".monaco-editor .folded-background { background-color: \" + foldBackground + \"; }\");\n  }\n});","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","nls","types","escapeRegExpCharacters","RunOnceScheduler","Delayer","createCancelablePromise","KeyChord","Disposable","DisposableStore","registerEditorAction","registerEditorContribution","EditorAction","registerInstantiatedEditorAction","FoldingModel","setCollapseStateAtLevel","setCollapseStateLevelsDown","setCollapseStateLevelsUp","setCollapseStateForMatchingLines","setCollapseStateForType","toggleCollapseState","setCollapseStateUp","FoldingDecorationProvider","EditorContextKeys","HiddenRangeModel","LanguageConfigurationRegistry","IndentRangeProvider","FoldingRangeProviderRegistry","FoldingRangeKind","SyntaxRangeProvider","ID_SYNTAX_PROVIDER","InitializingRangeProvider","ID_INIT_PROVIDER","onUnexpectedError","RawContextKey","IContextKeyService","registerThemingParticipant","registerColor","editorSelectionBackground","transparent","CONTEXT_FOLDING_ENABLED","FoldingController","_super","editor","contextKeyService","_this","call","localToDispose","_register","options","getOptions","_isEnabled","get","_useFoldingProviders","foldingModel","hiddenRangeModel","rangeProvider","foldingRegionPromise","foldingStateMemento","foldingModelPromise","updateScheduler","cursorChangedScheduler","mouseDownInfo","foldingDecorationProvider","autoHideFoldingControls","showFoldingHighlights","foldingEnabled","bindTo","set","onDidChangeModel","onModelChanged","onDidChangeConfiguration","e","hasChanged","options_1","options_2","onModelContentChanged","options_3","onFoldingStrategyChanged","getContribution","ID","saveViewState","model","getModel","isTooLargeForTokenization","collapsedRegions","isInitialized","getMemento","provider","id","undefined","lineCount","getLineCount","restoreViewState","state","applyMemento","getFoldingModel","then","clear","add","onDidChange","hr","onHiddenRangesChanges","revealCursor","onDidChangeModelLanguageConfiguration","onDidChangeModelContent","onDidChangeCursorPosition","onCursorPositionChanged","onMouseDown","onEditorMouseDown","onMouseUp","onEditorMouseUp","dispose","cancel","getRangeProvider","editorModel","foldingProviders","ordered","textModel","trigger","token","compute","foldingRanges","selections","getSelections","selectionLineNumbers","map","s","startLineNumber","update","err","hiddenRanges","adjustSelections","setSelections","setHiddenAreas","hasRanges","schedule","toToggle","_loop_1","selection","lineNumber","selectionStartLineNumber","isHidden","push","apply","getAllRegionsAtLine","isCollapsed","_i","selections_1","reveal","getPosition","range","event","leftButton","middleButton","iconClicked","type","data","detail","offsetLeftInGutter","element","offsetLeft","gutterOffsetX","offsetX","startColumn","getLineMaxColumn","region","getRegionAtLine","recursive","shiftKey","_a","getRegionsInside","column","position","revealPositionInCenterIfOutsideViewport","FoldingAction","runEditorCommand","accessor","args","foldingController","reportTelemetry","invoke","getSelection","getStartPosition","getSelectedLines","getLineNumbers","selectionLines","l","run","_accessor","_editor","foldingArgumentsConstraint","isUndefined","isObject","foldingArgs","levels","isNumber","direction","isString","isArray","every","UnfoldAction","label","localize","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","mac","weight","description","name","constraint","schema","_foldingController","lineNumbers","UnFoldRecursivelyAction","_args","Number","MAX_VALUE","FoldAction","ToggleFoldAction","selectedLines","FoldRecursivelyAction","FoldAllBlockCommentsAction","regions","hasTypes","Comment","value","comments","getComments","getLanguageIdentifier","blockCommentStartToken","regExp","RegExp","FoldAllRegionsAction","Region","foldingRules","getFoldingRules","markers","start","UnfoldAllRegionsAction","FoldAllAction","UnfoldAllAction","FoldLevelAction","getFoldingLevel","parseInt","substr","ID_PREFIX","level","foldBackgroundBackground","light","dark","hc","theme","collector","foldBackground","getColor","addRule"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/contrib/folding/folding.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './folding.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { RunOnceScheduler, Delayer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\r\nimport { FoldingModel, setCollapseStateAtLevel, setCollapseStateLevelsDown, setCollapseStateLevelsUp, setCollapseStateForMatchingLines, setCollapseStateForType, toggleCollapseState, setCollapseStateUp } from './foldingModel.js';\r\nimport { FoldingDecorationProvider } from './foldingDecorations.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { HiddenRangeModel } from './hiddenRangeModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IndentRangeProvider } from './indentRangeProvider.js';\r\nimport { FoldingRangeProviderRegistry, FoldingRangeKind } from '../../common/modes.js';\r\nimport { SyntaxRangeProvider, ID_SYNTAX_PROVIDER } from './syntaxRangeProvider.js';\r\nimport { InitializingRangeProvider, ID_INIT_PROVIDER } from './intializingRangeProvider.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorSelectionBackground, transparent } from '../../../platform/theme/common/colorRegistry.js';\r\nvar CONTEXT_FOLDING_ENABLED = new RawContextKey('foldingEnabled', false);\r\nvar FoldingController = /** @class */ (function (_super) {\r\n    __extends(FoldingController, _super);\r\n    function FoldingController(editor, contextKeyService) {\r\n        var _this = _super.call(this) || this;\r\n        _this.contextKeyService = contextKeyService;\r\n        _this.localToDispose = _this._register(new DisposableStore());\r\n        _this.editor = editor;\r\n        var options = _this.editor.getOptions();\r\n        _this._isEnabled = options.get(30 /* folding */);\r\n        _this._useFoldingProviders = options.get(31 /* foldingStrategy */) !== 'indentation';\r\n        _this.foldingModel = null;\r\n        _this.hiddenRangeModel = null;\r\n        _this.rangeProvider = null;\r\n        _this.foldingRegionPromise = null;\r\n        _this.foldingStateMemento = null;\r\n        _this.foldingModelPromise = null;\r\n        _this.updateScheduler = null;\r\n        _this.cursorChangedScheduler = null;\r\n        _this.mouseDownInfo = null;\r\n        _this.foldingDecorationProvider = new FoldingDecorationProvider(editor);\r\n        _this.foldingDecorationProvider.autoHideFoldingControls = options.get(84 /* showFoldingControls */) === 'mouseover';\r\n        _this.foldingDecorationProvider.showFoldingHighlights = options.get(32 /* foldingHighlight */);\r\n        _this.foldingEnabled = CONTEXT_FOLDING_ENABLED.bindTo(_this.contextKeyService);\r\n        _this.foldingEnabled.set(_this._isEnabled);\r\n        _this._register(_this.editor.onDidChangeModel(function () { return _this.onModelChanged(); }));\r\n        _this._register(_this.editor.onDidChangeConfiguration(function (e) {\r\n            if (e.hasChanged(30 /* folding */)) {\r\n                var options_1 = _this.editor.getOptions();\r\n                _this._isEnabled = options_1.get(30 /* folding */);\r\n                _this.foldingEnabled.set(_this._isEnabled);\r\n                _this.onModelChanged();\r\n            }\r\n            if (e.hasChanged(84 /* showFoldingControls */) || e.hasChanged(32 /* foldingHighlight */)) {\r\n                var options_2 = _this.editor.getOptions();\r\n                _this.foldingDecorationProvider.autoHideFoldingControls = options_2.get(84 /* showFoldingControls */) === 'mouseover';\r\n                _this.foldingDecorationProvider.showFoldingHighlights = options_2.get(32 /* foldingHighlight */);\r\n                _this.onModelContentChanged();\r\n            }\r\n            if (e.hasChanged(31 /* foldingStrategy */)) {\r\n                var options_3 = _this.editor.getOptions();\r\n                _this._useFoldingProviders = options_3.get(31 /* foldingStrategy */) !== 'indentation';\r\n                _this.onFoldingStrategyChanged();\r\n            }\r\n        }));\r\n        _this.onModelChanged();\r\n        return _this;\r\n    }\r\n    FoldingController.get = function (editor) {\r\n        return editor.getContribution(FoldingController.ID);\r\n    };\r\n    /**\r\n     * Store view state.\r\n     */\r\n    FoldingController.prototype.saveViewState = function () {\r\n        var model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization()) {\r\n            return {};\r\n        }\r\n        if (this.foldingModel) { // disposed ?\r\n            var collapsedRegions = this.foldingModel.isInitialized ? this.foldingModel.getMemento() : this.hiddenRangeModel.getMemento();\r\n            var provider = this.rangeProvider ? this.rangeProvider.id : undefined;\r\n            return { collapsedRegions: collapsedRegions, lineCount: model.getLineCount(), provider: provider };\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * Restore view state.\r\n     */\r\n    FoldingController.prototype.restoreViewState = function (state) {\r\n        var model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) {\r\n            return;\r\n        }\r\n        if (!state || !state.collapsedRegions || state.lineCount !== model.getLineCount()) {\r\n            return;\r\n        }\r\n        if (state.provider === ID_SYNTAX_PROVIDER || state.provider === ID_INIT_PROVIDER) {\r\n            this.foldingStateMemento = state;\r\n        }\r\n        var collapsedRegions = state.collapsedRegions;\r\n        // set the hidden ranges right away, before waiting for the folding model.\r\n        if (this.hiddenRangeModel.applyMemento(collapsedRegions)) {\r\n            var foldingModel = this.getFoldingModel();\r\n            if (foldingModel) {\r\n                foldingModel.then(function (foldingModel) {\r\n                    if (foldingModel) {\r\n                        foldingModel.applyMemento(collapsedRegions);\r\n                    }\r\n                }).then(undefined, onUnexpectedError);\r\n            }\r\n        }\r\n    };\r\n    FoldingController.prototype.onModelChanged = function () {\r\n        var _this = this;\r\n        this.localToDispose.clear();\r\n        var model = this.editor.getModel();\r\n        if (!this._isEnabled || !model || model.isTooLargeForTokenization()) {\r\n            // huge files get no view model, so they cannot support hidden areas\r\n            return;\r\n        }\r\n        this.foldingModel = new FoldingModel(model, this.foldingDecorationProvider);\r\n        this.localToDispose.add(this.foldingModel);\r\n        this.hiddenRangeModel = new HiddenRangeModel(this.foldingModel);\r\n        this.localToDispose.add(this.hiddenRangeModel);\r\n        this.localToDispose.add(this.hiddenRangeModel.onDidChange(function (hr) { return _this.onHiddenRangesChanges(hr); }));\r\n        this.updateScheduler = new Delayer(200);\r\n        this.cursorChangedScheduler = new RunOnceScheduler(function () { return _this.revealCursor(); }, 200);\r\n        this.localToDispose.add(this.cursorChangedScheduler);\r\n        this.localToDispose.add(FoldingRangeProviderRegistry.onDidChange(function () { return _this.onFoldingStrategyChanged(); }));\r\n        this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(function () { return _this.onFoldingStrategyChanged(); })); // covers model language changes as well\r\n        this.localToDispose.add(this.editor.onDidChangeModelContent(function () { return _this.onModelContentChanged(); }));\r\n        this.localToDispose.add(this.editor.onDidChangeCursorPosition(function () { return _this.onCursorPositionChanged(); }));\r\n        this.localToDispose.add(this.editor.onMouseDown(function (e) { return _this.onEditorMouseDown(e); }));\r\n        this.localToDispose.add(this.editor.onMouseUp(function (e) { return _this.onEditorMouseUp(e); }));\r\n        this.localToDispose.add({\r\n            dispose: function () {\r\n                if (_this.foldingRegionPromise) {\r\n                    _this.foldingRegionPromise.cancel();\r\n                    _this.foldingRegionPromise = null;\r\n                }\r\n                if (_this.updateScheduler) {\r\n                    _this.updateScheduler.cancel();\r\n                }\r\n                _this.updateScheduler = null;\r\n                _this.foldingModel = null;\r\n                _this.foldingModelPromise = null;\r\n                _this.hiddenRangeModel = null;\r\n                _this.cursorChangedScheduler = null;\r\n                _this.foldingStateMemento = null;\r\n                if (_this.rangeProvider) {\r\n                    _this.rangeProvider.dispose();\r\n                }\r\n                _this.rangeProvider = null;\r\n            }\r\n        });\r\n        this.onModelContentChanged();\r\n    };\r\n    FoldingController.prototype.onFoldingStrategyChanged = function () {\r\n        if (this.rangeProvider) {\r\n            this.rangeProvider.dispose();\r\n        }\r\n        this.rangeProvider = null;\r\n        this.onModelContentChanged();\r\n    };\r\n    FoldingController.prototype.getRangeProvider = function (editorModel) {\r\n        var _this = this;\r\n        if (this.rangeProvider) {\r\n            return this.rangeProvider;\r\n        }\r\n        this.rangeProvider = new IndentRangeProvider(editorModel); // fallback\r\n        if (this._useFoldingProviders && this.foldingModel) {\r\n            var foldingProviders = FoldingRangeProviderRegistry.ordered(this.foldingModel.textModel);\r\n            if (foldingProviders.length === 0 && this.foldingStateMemento && this.foldingStateMemento.collapsedRegions) {\r\n                var rangeProvider = this.rangeProvider = new InitializingRangeProvider(editorModel, this.foldingStateMemento.collapsedRegions, function () {\r\n                    // if after 30 the InitializingRangeProvider is still not replaced, force a refresh\r\n                    _this.foldingStateMemento = null;\r\n                    _this.onFoldingStrategyChanged();\r\n                }, 30000);\r\n                return rangeProvider; // keep memento in case there are still no foldingProviders on the next request.\r\n            }\r\n            else if (foldingProviders.length > 0) {\r\n                this.rangeProvider = new SyntaxRangeProvider(editorModel, foldingProviders);\r\n            }\r\n        }\r\n        this.foldingStateMemento = null;\r\n        return this.rangeProvider;\r\n    };\r\n    FoldingController.prototype.getFoldingModel = function () {\r\n        return this.foldingModelPromise;\r\n    };\r\n    FoldingController.prototype.onModelContentChanged = function () {\r\n        var _this = this;\r\n        if (this.updateScheduler) {\r\n            if (this.foldingRegionPromise) {\r\n                this.foldingRegionPromise.cancel();\r\n                this.foldingRegionPromise = null;\r\n            }\r\n            this.foldingModelPromise = this.updateScheduler.trigger(function () {\r\n                var foldingModel = _this.foldingModel;\r\n                if (!foldingModel) { // null if editor has been disposed, or folding turned off\r\n                    return null;\r\n                }\r\n                var foldingRegionPromise = _this.foldingRegionPromise = createCancelablePromise(function (token) { return _this.getRangeProvider(foldingModel.textModel).compute(token); });\r\n                return foldingRegionPromise.then(function (foldingRanges) {\r\n                    if (foldingRanges && foldingRegionPromise === _this.foldingRegionPromise) { // new request or cancelled in the meantime?\r\n                        // some cursors might have moved into hidden regions, make sure they are in expanded regions\r\n                        var selections = _this.editor.getSelections();\r\n                        var selectionLineNumbers = selections ? selections.map(function (s) { return s.startLineNumber; }) : [];\r\n                        foldingModel.update(foldingRanges, selectionLineNumbers);\r\n                    }\r\n                    return foldingModel;\r\n                });\r\n            }).then(undefined, function (err) {\r\n                onUnexpectedError(err);\r\n                return null;\r\n            });\r\n        }\r\n    };\r\n    FoldingController.prototype.onHiddenRangesChanges = function (hiddenRanges) {\r\n        if (this.hiddenRangeModel && hiddenRanges.length) {\r\n            var selections = this.editor.getSelections();\r\n            if (selections) {\r\n                if (this.hiddenRangeModel.adjustSelections(selections)) {\r\n                    this.editor.setSelections(selections);\r\n                }\r\n            }\r\n        }\r\n        this.editor.setHiddenAreas(hiddenRanges);\r\n    };\r\n    FoldingController.prototype.onCursorPositionChanged = function () {\r\n        if (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) {\r\n            this.cursorChangedScheduler.schedule();\r\n        }\r\n    };\r\n    FoldingController.prototype.revealCursor = function () {\r\n        var _this = this;\r\n        var foldingModel = this.getFoldingModel();\r\n        if (!foldingModel) {\r\n            return;\r\n        }\r\n        foldingModel.then(function (foldingModel) {\r\n            if (foldingModel) {\r\n                var selections = _this.editor.getSelections();\r\n                if (selections && selections.length > 0) {\r\n                    var toToggle = [];\r\n                    var _loop_1 = function (selection) {\r\n                        var lineNumber = selection.selectionStartLineNumber;\r\n                        if (_this.hiddenRangeModel && _this.hiddenRangeModel.isHidden(lineNumber)) {\r\n                            toToggle.push.apply(toToggle, foldingModel.getAllRegionsAtLine(lineNumber, function (r) { return r.isCollapsed && lineNumber > r.startLineNumber; }));\r\n                        }\r\n                    };\r\n                    for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\r\n                        var selection = selections_1[_i];\r\n                        _loop_1(selection);\r\n                    }\r\n                    if (toToggle.length) {\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        _this.reveal(selections[0].getPosition());\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    };\r\n    FoldingController.prototype.onEditorMouseDown = function (e) {\r\n        this.mouseDownInfo = null;\r\n        if (!this.hiddenRangeModel || !e.target || !e.target.range) {\r\n            return;\r\n        }\r\n        if (!e.event.leftButton && !e.event.middleButton) {\r\n            return;\r\n        }\r\n        var range = e.target.range;\r\n        var iconClicked = false;\r\n        switch (e.target.type) {\r\n            case 4 /* GUTTER_LINE_DECORATIONS */:\r\n                var data = e.target.detail;\r\n                var offsetLeftInGutter = e.target.element.offsetLeft;\r\n                var gutterOffsetX = data.offsetX - offsetLeftInGutter;\r\n                // const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\r\n                // TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff\r\n                if (gutterOffsetX < 5) { // the whitespace between the border and the real folding icon border is 5px\r\n                    return;\r\n                }\r\n                iconClicked = true;\r\n                break;\r\n            case 6 /* CONTENT_TEXT */: {\r\n                if (this.hiddenRangeModel.hasRanges()) {\r\n                    var model = this.editor.getModel();\r\n                    if (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) {\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            default:\r\n                return;\r\n        }\r\n        this.mouseDownInfo = { lineNumber: range.startLineNumber, iconClicked: iconClicked };\r\n    };\r\n    FoldingController.prototype.onEditorMouseUp = function (e) {\r\n        var _this = this;\r\n        var foldingModel = this.getFoldingModel();\r\n        if (!foldingModel || !this.mouseDownInfo || !e.target) {\r\n            return;\r\n        }\r\n        var lineNumber = this.mouseDownInfo.lineNumber;\r\n        var iconClicked = this.mouseDownInfo.iconClicked;\r\n        var range = e.target.range;\r\n        if (!range || range.startLineNumber !== lineNumber) {\r\n            return;\r\n        }\r\n        if (iconClicked) {\r\n            if (e.target.type !== 4 /* GUTTER_LINE_DECORATIONS */) {\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            var model = this.editor.getModel();\r\n            if (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) {\r\n                return;\r\n            }\r\n        }\r\n        foldingModel.then(function (foldingModel) {\r\n            if (foldingModel) {\r\n                var region = foldingModel.getRegionAtLine(lineNumber);\r\n                if (region && region.startLineNumber === lineNumber) {\r\n                    var isCollapsed = region.isCollapsed;\r\n                    if (iconClicked || isCollapsed) {\r\n                        var toToggle = [];\r\n                        var recursive = e.event.middleButton || e.event.shiftKey;\r\n                        if (recursive) {\r\n                            for (var _i = 0, _a = foldingModel.getRegionsInside(region); _i < _a.length; _i++) {\r\n                                var r = _a[_i];\r\n                                if (r.isCollapsed === isCollapsed) {\r\n                                    toToggle.push(r);\r\n                                }\r\n                            }\r\n                        }\r\n                        // when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.\r\n                        if (isCollapsed || !recursive || toToggle.length === 0) {\r\n                            toToggle.push(region);\r\n                        }\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        _this.reveal({ lineNumber: lineNumber, column: 1 });\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    };\r\n    FoldingController.prototype.reveal = function (position) {\r\n        this.editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n    };\r\n    FoldingController.ID = 'editor.contrib.folding';\r\n    FoldingController = __decorate([\r\n        __param(1, IContextKeyService)\r\n    ], FoldingController);\r\n    return FoldingController;\r\n}(Disposable));\r\nexport { FoldingController };\r\nvar FoldingAction = /** @class */ (function (_super) {\r\n    __extends(FoldingAction, _super);\r\n    function FoldingAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FoldingAction.prototype.runEditorCommand = function (accessor, editor, args) {\r\n        var _this = this;\r\n        var foldingController = FoldingController.get(editor);\r\n        if (!foldingController) {\r\n            return;\r\n        }\r\n        var foldingModelPromise = foldingController.getFoldingModel();\r\n        if (foldingModelPromise) {\r\n            this.reportTelemetry(accessor, editor);\r\n            return foldingModelPromise.then(function (foldingModel) {\r\n                if (foldingModel) {\r\n                    _this.invoke(foldingController, foldingModel, editor, args);\r\n                    var selection = editor.getSelection();\r\n                    if (selection) {\r\n                        foldingController.reveal(selection.getStartPosition());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    FoldingAction.prototype.getSelectedLines = function (editor) {\r\n        var selections = editor.getSelections();\r\n        return selections ? selections.map(function (s) { return s.startLineNumber; }) : [];\r\n    };\r\n    FoldingAction.prototype.getLineNumbers = function (args, editor) {\r\n        if (args && args.selectionLines) {\r\n            return args.selectionLines.map(function (l) { return l + 1; }); // to 0-bases line numbers\r\n        }\r\n        return this.getSelectedLines(editor);\r\n    };\r\n    FoldingAction.prototype.run = function (_accessor, _editor) {\r\n    };\r\n    return FoldingAction;\r\n}(EditorAction));\r\nfunction foldingArgumentsConstraint(args) {\r\n    if (!types.isUndefined(args)) {\r\n        if (!types.isObject(args)) {\r\n            return false;\r\n        }\r\n        var foldingArgs = args;\r\n        if (!types.isUndefined(foldingArgs.levels) && !types.isNumber(foldingArgs.levels)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.direction) && !types.isString(foldingArgs.direction)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.selectionLines) && (!types.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every(types.isNumber))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nvar UnfoldAction = /** @class */ (function (_super) {\r\n    __extends(UnfoldAction, _super);\r\n    function UnfoldAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.unfold',\r\n            label: nls.localize('unfoldAction.label', \"Unfold\"),\r\n            alias: 'Unfold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Unfold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Unfold editor argument',\r\n                        description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t\\t* 'levels': Number of levels to unfold. If not set, defaults to 1.\\n\\t\\t\\t\\t\\t\\t* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.\\n\\t\\t\\t\\t\\t\\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.\\n\\t\\t\\t\\t\\t\\t\",\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                    'default': 1\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                    'default': 'down'\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }) || this;\r\n    }\r\n    UnfoldAction.prototype.invoke = function (_foldingController, foldingModel, editor, args) {\r\n        var levels = args && args.levels || 1;\r\n        var lineNumbers = this.getLineNumbers(args, editor);\r\n        if (args && args.direction === 'up') {\r\n            setCollapseStateLevelsUp(foldingModel, false, levels, lineNumbers);\r\n        }\r\n        else {\r\n            setCollapseStateLevelsDown(foldingModel, false, levels, lineNumbers);\r\n        }\r\n    };\r\n    return UnfoldAction;\r\n}(FoldingAction));\r\nvar UnFoldRecursivelyAction = /** @class */ (function (_super) {\r\n    __extends(UnFoldRecursivelyAction, _super);\r\n    function UnFoldRecursivelyAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.unfoldRecursively',\r\n            label: nls.localize('unFoldRecursivelyAction.label', \"Unfold Recursively\"),\r\n            alias: 'Unfold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    UnFoldRecursivelyAction.prototype.invoke = function (_foldingController, foldingModel, editor, _args) {\r\n        setCollapseStateLevelsDown(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));\r\n    };\r\n    return UnFoldRecursivelyAction;\r\n}(FoldingAction));\r\nvar FoldAction = /** @class */ (function (_super) {\r\n    __extends(FoldAction, _super);\r\n    function FoldAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.fold',\r\n            label: nls.localize('foldAction.label', \"Fold\"),\r\n            alias: 'Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Fold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Fold editor argument',\r\n                        description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t\\t\\t* 'levels': Number of levels to fold.\\n\\t\\t\\t\\t\\t\\t\\t* 'direction': If 'up', folds given number of levels up otherwise folds down.\\n\\t\\t\\t\\t\\t\\t\\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.\\n\\t\\t\\t\\t\\t\\t\\tIf no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.\\n\\t\\t\\t\\t\\t\\t\",\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }) || this;\r\n    }\r\n    FoldAction.prototype.invoke = function (_foldingController, foldingModel, editor, args) {\r\n        var lineNumbers = this.getLineNumbers(args, editor);\r\n        var levels = args && args.levels;\r\n        var direction = args && args.direction;\r\n        if (typeof levels !== 'number' && typeof direction !== 'string') {\r\n            // fold the region at the location or if already collapsed, the first uncollapsed parent instead.\r\n            setCollapseStateUp(foldingModel, true, lineNumbers);\r\n        }\r\n        else {\r\n            if (direction === 'up') {\r\n                setCollapseStateLevelsUp(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n            else {\r\n                setCollapseStateLevelsDown(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n        }\r\n    };\r\n    return FoldAction;\r\n}(FoldingAction));\r\nvar ToggleFoldAction = /** @class */ (function (_super) {\r\n    __extends(ToggleFoldAction, _super);\r\n    function ToggleFoldAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.toggleFold',\r\n            label: nls.localize('toggleFoldAction.label', \"Toggle Fold\"),\r\n            alias: 'Toggle Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 42 /* KEY_L */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    ToggleFoldAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\r\n        var selectedLines = this.getSelectedLines(editor);\r\n        toggleCollapseState(foldingModel, 1, selectedLines);\r\n    };\r\n    return ToggleFoldAction;\r\n}(FoldingAction));\r\nvar FoldRecursivelyAction = /** @class */ (function (_super) {\r\n    __extends(FoldRecursivelyAction, _super);\r\n    function FoldRecursivelyAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.foldRecursively',\r\n            label: nls.localize('foldRecursivelyAction.label', \"Fold Recursively\"),\r\n            alias: 'Fold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    FoldRecursivelyAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\r\n        var selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateLevelsDown(foldingModel, true, Number.MAX_VALUE, selectedLines);\r\n    };\r\n    return FoldRecursivelyAction;\r\n}(FoldingAction));\r\nvar FoldAllBlockCommentsAction = /** @class */ (function (_super) {\r\n    __extends(FoldAllBlockCommentsAction, _super);\r\n    function FoldAllBlockCommentsAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.foldAllBlockComments',\r\n            label: nls.localize('foldAllBlockComments.label', \"Fold All Block Comments\"),\r\n            alias: 'Fold All Block Comments',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 85 /* US_SLASH */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    FoldAllBlockCommentsAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Comment.value, true);\r\n        }\r\n        else {\r\n            var editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            var comments = LanguageConfigurationRegistry.getComments(editorModel.getLanguageIdentifier().id);\r\n            if (comments && comments.blockCommentStartToken) {\r\n                var regExp = new RegExp('^\\\\s*' + escapeRegExpCharacters(comments.blockCommentStartToken));\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    };\r\n    return FoldAllBlockCommentsAction;\r\n}(FoldingAction));\r\nvar FoldAllRegionsAction = /** @class */ (function (_super) {\r\n    __extends(FoldAllRegionsAction, _super);\r\n    function FoldAllRegionsAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.foldAllMarkerRegions',\r\n            label: nls.localize('foldAllMarkerRegions.label', \"Fold All Regions\"),\r\n            alias: 'Fold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 29 /* KEY_8 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    FoldAllRegionsAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, true);\r\n        }\r\n        else {\r\n            var editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            var foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                var regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    };\r\n    return FoldAllRegionsAction;\r\n}(FoldingAction));\r\nvar UnfoldAllRegionsAction = /** @class */ (function (_super) {\r\n    __extends(UnfoldAllRegionsAction, _super);\r\n    function UnfoldAllRegionsAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.unfoldAllMarkerRegions',\r\n            label: nls.localize('unfoldAllMarkerRegions.label', \"Unfold All Regions\"),\r\n            alias: 'Unfold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 30 /* KEY_9 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    UnfoldAllRegionsAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, false);\r\n        }\r\n        else {\r\n            var editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            var foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                var regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, false);\r\n            }\r\n        }\r\n    };\r\n    return UnfoldAllRegionsAction;\r\n}(FoldingAction));\r\nvar FoldAllAction = /** @class */ (function (_super) {\r\n    __extends(FoldAllAction, _super);\r\n    function FoldAllAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.foldAll',\r\n            label: nls.localize('foldAllAction.label', \"Fold All\"),\r\n            alias: 'Fold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 21 /* KEY_0 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    FoldAllAction.prototype.invoke = function (_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, true);\r\n    };\r\n    return FoldAllAction;\r\n}(FoldingAction));\r\nvar UnfoldAllAction = /** @class */ (function (_super) {\r\n    __extends(UnfoldAllAction, _super);\r\n    function UnfoldAllAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.unfoldAll',\r\n            label: nls.localize('unfoldAllAction.label', \"Unfold All\"),\r\n            alias: 'Unfold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 40 /* KEY_J */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    UnfoldAllAction.prototype.invoke = function (_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, false);\r\n    };\r\n    return UnfoldAllAction;\r\n}(FoldingAction));\r\nvar FoldLevelAction = /** @class */ (function (_super) {\r\n    __extends(FoldLevelAction, _super);\r\n    function FoldLevelAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FoldLevelAction.prototype.getFoldingLevel = function () {\r\n        return parseInt(this.id.substr(FoldLevelAction.ID_PREFIX.length));\r\n    };\r\n    FoldLevelAction.prototype.invoke = function (_foldingController, foldingModel, editor) {\r\n        setCollapseStateAtLevel(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));\r\n    };\r\n    FoldLevelAction.ID_PREFIX = 'editor.foldLevel';\r\n    FoldLevelAction.ID = function (level) { return FoldLevelAction.ID_PREFIX + level; };\r\n    return FoldLevelAction;\r\n}(FoldingAction));\r\nregisterEditorContribution(FoldingController.ID, FoldingController);\r\nregisterEditorAction(UnfoldAction);\r\nregisterEditorAction(UnFoldRecursivelyAction);\r\nregisterEditorAction(FoldAction);\r\nregisterEditorAction(FoldRecursivelyAction);\r\nregisterEditorAction(FoldAllAction);\r\nregisterEditorAction(UnfoldAllAction);\r\nregisterEditorAction(FoldAllBlockCommentsAction);\r\nregisterEditorAction(FoldAllRegionsAction);\r\nregisterEditorAction(UnfoldAllRegionsAction);\r\nregisterEditorAction(ToggleFoldAction);\r\nfor (var i = 1; i <= 7; i++) {\r\n    registerInstantiatedEditorAction(new FoldLevelAction({\r\n        id: FoldLevelAction.ID(i),\r\n        label: nls.localize('foldLevelAction.label', \"Fold Level {0}\", i),\r\n        alias: \"Fold Level \" + i,\r\n        precondition: CONTEXT_FOLDING_ENABLED,\r\n        kbOpts: {\r\n            kbExpr: EditorContextKeys.editorTextFocus,\r\n            primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | (21 /* KEY_0 */ + i)),\r\n            weight: 100 /* EditorContrib */\r\n        }\r\n    }));\r\n}\r\nexport var foldBackgroundBackground = registerColor('editor.foldBackground', { light: transparent(editorSelectionBackground, 0.3), dark: transparent(editorSelectionBackground, 0.3), hc: null }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var foldBackground = theme.getColor(foldBackgroundBackground);\r\n    if (foldBackground) {\r\n        collector.addRule(\".monaco-editor .folded-background { background-color: \" + foldBackground + \"; }\");\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}