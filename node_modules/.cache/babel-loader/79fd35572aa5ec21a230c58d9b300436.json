{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Configuration } from '../config/configuration.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/core/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { editorLineNumbers } from '../../common/view/editorColorRegistry.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nvar DIFF_LINES_PADDING = 3;\nvar DiffEntry = /** @class */function () {\n  function DiffEntry(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n    this.originalLineStart = originalLineStart;\n    this.originalLineEnd = originalLineEnd;\n    this.modifiedLineStart = modifiedLineStart;\n    this.modifiedLineEnd = modifiedLineEnd;\n  }\n  DiffEntry.prototype.getType = function () {\n    if (this.originalLineStart === 0) {\n      return 1 /* Insert */;\n    }\n\n    if (this.modifiedLineStart === 0) {\n      return 2 /* Delete */;\n    }\n\n    return 0 /* Equal */;\n  };\n\n  return DiffEntry;\n}();\nvar Diff = /** @class */function () {\n  function Diff(entries) {\n    this.entries = entries;\n  }\n  return Diff;\n}();\nvar DiffReview = /** @class */function (_super) {\n  __extends(DiffReview, _super);\n  function DiffReview(diffEditor) {\n    var _this = _super.call(this) || this;\n    _this._width = 0;\n    _this._diffEditor = diffEditor;\n    _this._isVisible = false;\n    _this.shadow = createFastDomNode(document.createElement('div'));\n    _this.shadow.setClassName('diff-review-shadow');\n    _this.actionBarContainer = createFastDomNode(document.createElement('div'));\n    _this.actionBarContainer.setClassName('diff-review-actions');\n    _this._actionBar = _this._register(new ActionBar(_this.actionBarContainer.domNode));\n    _this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review', true, function () {\n      _this.hide();\n      return Promise.resolve(null);\n    }), {\n      label: false,\n      icon: true\n    });\n    _this.domNode = createFastDomNode(document.createElement('div'));\n    _this.domNode.setClassName('diff-review monaco-editor-background');\n    _this._content = createFastDomNode(document.createElement('div'));\n    _this._content.setClassName('diff-review-content');\n    _this.scrollbar = _this._register(new DomScrollableElement(_this._content.domNode, {}));\n    _this.domNode.domNode.appendChild(_this.scrollbar.getDomNode());\n    _this._register(diffEditor.onDidUpdateDiff(function () {\n      if (!_this._isVisible) {\n        return;\n      }\n      _this._diffs = _this._compute();\n      _this._render();\n    }));\n    _this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(function () {\n      if (!_this._isVisible) {\n        return;\n      }\n      _this._render();\n    }));\n    _this._register(diffEditor.getOriginalEditor().onDidFocusEditorWidget(function () {\n      if (_this._isVisible) {\n        _this.hide();\n      }\n    }));\n    _this._register(diffEditor.getModifiedEditor().onDidFocusEditorWidget(function () {\n      if (_this._isVisible) {\n        _this.hide();\n      }\n    }));\n    _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'click', function (e) {\n      e.preventDefault();\n      var row = dom.findParentWithClass(e.target, 'diff-review-row');\n      if (row) {\n        _this._goToRow(row);\n      }\n    }));\n    _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'keydown', function (e) {\n      if (e.equals(18 /* DownArrow */) || e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */) || e.equals(512 /* Alt */ | 18 /* DownArrow */)) {\n        e.preventDefault();\n        _this._goToRow(_this._getNextRow());\n      }\n      if (e.equals(16 /* UpArrow */) || e.equals(2048 /* CtrlCmd */ | 16 /* UpArrow */) || e.equals(512 /* Alt */ | 16 /* UpArrow */)) {\n        e.preventDefault();\n        _this._goToRow(_this._getPrevRow());\n      }\n      if (e.equals(9 /* Escape */) || e.equals(2048 /* CtrlCmd */ | 9 /* Escape */) || e.equals(512 /* Alt */ | 9 /* Escape */) || e.equals(1024 /* Shift */ | 9 /* Escape */)) {\n        e.preventDefault();\n        _this.hide();\n      }\n      if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\n        e.preventDefault();\n        _this.accept();\n      }\n    }));\n    _this._diffs = [];\n    _this._currentDiff = null;\n    return _this;\n  }\n  DiffReview.prototype.prev = function () {\n    var index = 0;\n    if (!this._isVisible) {\n      this._diffs = this._compute();\n    }\n    if (this._isVisible) {\n      var currentIndex = -1;\n      for (var i = 0, len = this._diffs.length; i < len; i++) {\n        if (this._diffs[i] === this._currentDiff) {\n          currentIndex = i;\n          break;\n        }\n      }\n      index = this._diffs.length + currentIndex - 1;\n    } else {\n      index = this._findDiffIndex(this._diffEditor.getPosition());\n    }\n    if (this._diffs.length === 0) {\n      // Nothing to do\n      return;\n    }\n    index = index % this._diffs.length;\n    this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n    this._isVisible = true;\n    this._diffEditor.doLayout();\n    this._render();\n    this._goToRow(this._getNextRow());\n  };\n  DiffReview.prototype.next = function () {\n    var index = 0;\n    if (!this._isVisible) {\n      this._diffs = this._compute();\n    }\n    if (this._isVisible) {\n      var currentIndex = -1;\n      for (var i = 0, len = this._diffs.length; i < len; i++) {\n        if (this._diffs[i] === this._currentDiff) {\n          currentIndex = i;\n          break;\n        }\n      }\n      index = currentIndex + 1;\n    } else {\n      index = this._findDiffIndex(this._diffEditor.getPosition());\n    }\n    if (this._diffs.length === 0) {\n      // Nothing to do\n      return;\n    }\n    index = index % this._diffs.length;\n    this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n    this._isVisible = true;\n    this._diffEditor.doLayout();\n    this._render();\n    this._goToRow(this._getNextRow());\n  };\n  DiffReview.prototype.accept = function () {\n    var jumpToLineNumber = -1;\n    var current = this._getCurrentFocusedRow();\n    if (current) {\n      var lineNumber = parseInt(current.getAttribute('data-line'), 10);\n      if (!isNaN(lineNumber)) {\n        jumpToLineNumber = lineNumber;\n      }\n    }\n    this.hide();\n    if (jumpToLineNumber !== -1) {\n      this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n      this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* Immediate */);\n    }\n  };\n\n  DiffReview.prototype.hide = function () {\n    this._isVisible = false;\n    this._diffEditor.focus();\n    this._diffEditor.doLayout();\n    this._render();\n  };\n  DiffReview.prototype._getPrevRow = function () {\n    var current = this._getCurrentFocusedRow();\n    if (!current) {\n      return this._getFirstRow();\n    }\n    if (current.previousElementSibling) {\n      return current.previousElementSibling;\n    }\n    return current;\n  };\n  DiffReview.prototype._getNextRow = function () {\n    var current = this._getCurrentFocusedRow();\n    if (!current) {\n      return this._getFirstRow();\n    }\n    if (current.nextElementSibling) {\n      return current.nextElementSibling;\n    }\n    return current;\n  };\n  DiffReview.prototype._getFirstRow = function () {\n    return this.domNode.domNode.querySelector('.diff-review-row');\n  };\n  DiffReview.prototype._getCurrentFocusedRow = function () {\n    var result = document.activeElement;\n    if (result && /diff-review-row/.test(result.className)) {\n      return result;\n    }\n    return null;\n  };\n  DiffReview.prototype._goToRow = function (row) {\n    var prev = this._getCurrentFocusedRow();\n    row.tabIndex = 0;\n    row.focus();\n    if (prev && prev !== row) {\n      prev.tabIndex = -1;\n    }\n    this.scrollbar.scanDomNode();\n  };\n  DiffReview.prototype.isVisible = function () {\n    return this._isVisible;\n  };\n  DiffReview.prototype.layout = function (top, width, height) {\n    this._width = width;\n    this.shadow.setTop(top - 6);\n    this.shadow.setWidth(width);\n    this.shadow.setHeight(this._isVisible ? 6 : 0);\n    this.domNode.setTop(top);\n    this.domNode.setWidth(width);\n    this.domNode.setHeight(height);\n    this._content.setHeight(height);\n    this._content.setWidth(width);\n    if (this._isVisible) {\n      this.actionBarContainer.setAttribute('aria-hidden', 'false');\n      this.actionBarContainer.setDisplay('block');\n    } else {\n      this.actionBarContainer.setAttribute('aria-hidden', 'true');\n      this.actionBarContainer.setDisplay('none');\n    }\n  };\n  DiffReview.prototype._compute = function () {\n    var lineChanges = this._diffEditor.getLineChanges();\n    if (!lineChanges || lineChanges.length === 0) {\n      return [];\n    }\n    var originalModel = this._diffEditor.getOriginalEditor().getModel();\n    var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n    if (!originalModel || !modifiedModel) {\n      return [];\n    }\n    return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n  };\n  DiffReview._mergeAdjacent = function (lineChanges, originalLineCount, modifiedLineCount) {\n    if (!lineChanges || lineChanges.length === 0) {\n      return [];\n    }\n    var diffs = [],\n      diffsLength = 0;\n    for (var i = 0, len = lineChanges.length; i < len; i++) {\n      var lineChange = lineChanges[i];\n      var originalStart = lineChange.originalStartLineNumber;\n      var originalEnd = lineChange.originalEndLineNumber;\n      var modifiedStart = lineChange.modifiedStartLineNumber;\n      var modifiedEnd = lineChange.modifiedEndLineNumber;\n      var r_1 = [],\n        rLength_1 = 0;\n      // Emit before anchors\n      {\n        var originalEqualAbove = originalEnd === 0 ? originalStart : originalStart - 1;\n        var modifiedEqualAbove = modifiedEnd === 0 ? modifiedStart : modifiedStart - 1;\n        // Make sure we don't step into the previous diff\n        var minOriginal = 1;\n        var minModified = 1;\n        if (i > 0) {\n          var prevLineChange = lineChanges[i - 1];\n          if (prevLineChange.originalEndLineNumber === 0) {\n            minOriginal = prevLineChange.originalStartLineNumber + 1;\n          } else {\n            minOriginal = prevLineChange.originalEndLineNumber + 1;\n          }\n          if (prevLineChange.modifiedEndLineNumber === 0) {\n            minModified = prevLineChange.modifiedStartLineNumber + 1;\n          } else {\n            minModified = prevLineChange.modifiedEndLineNumber + 1;\n          }\n        }\n        var fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n        var fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n        if (fromOriginal < minOriginal) {\n          var delta = minOriginal - fromOriginal;\n          fromOriginal = fromOriginal + delta;\n          fromModified = fromModified + delta;\n        }\n        if (fromModified < minModified) {\n          var delta = minModified - fromModified;\n          fromOriginal = fromOriginal + delta;\n          fromModified = fromModified + delta;\n        }\n        r_1[rLength_1++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n      }\n      // Emit deleted lines\n      {\n        if (originalEnd !== 0) {\n          r_1[rLength_1++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n        }\n      }\n      // Emit inserted lines\n      {\n        if (modifiedEnd !== 0) {\n          r_1[rLength_1++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n        }\n      }\n      // Emit after anchors\n      {\n        var originalEqualBelow = originalEnd === 0 ? originalStart + 1 : originalEnd + 1;\n        var modifiedEqualBelow = modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1;\n        // Make sure we don't step into the next diff\n        var maxOriginal = originalLineCount;\n        var maxModified = modifiedLineCount;\n        if (i + 1 < len) {\n          var nextLineChange = lineChanges[i + 1];\n          if (nextLineChange.originalEndLineNumber === 0) {\n            maxOriginal = nextLineChange.originalStartLineNumber;\n          } else {\n            maxOriginal = nextLineChange.originalStartLineNumber - 1;\n          }\n          if (nextLineChange.modifiedEndLineNumber === 0) {\n            maxModified = nextLineChange.modifiedStartLineNumber;\n          } else {\n            maxModified = nextLineChange.modifiedStartLineNumber - 1;\n          }\n        }\n        var toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n        var toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n        if (toOriginal > maxOriginal) {\n          var delta = maxOriginal - toOriginal;\n          toOriginal = toOriginal + delta;\n          toModified = toModified + delta;\n        }\n        if (toModified > maxModified) {\n          var delta = maxModified - toModified;\n          toOriginal = toOriginal + delta;\n          toModified = toModified + delta;\n        }\n        r_1[rLength_1++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n      }\n      diffs[diffsLength++] = new Diff(r_1);\n    }\n    // Merge adjacent diffs\n    var curr = diffs[0].entries;\n    var r = [],\n      rLength = 0;\n    for (var i = 1, len = diffs.length; i < len; i++) {\n      var thisDiff = diffs[i].entries;\n      var currLast = curr[curr.length - 1];\n      var thisFirst = thisDiff[0];\n      if (currLast.getType() === 0 /* Equal */ && thisFirst.getType() === 0 /* Equal */ && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n        // We are dealing with equal lines that overlap\n        curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n        curr = curr.concat(thisDiff.slice(1));\n        continue;\n      }\n      r[rLength++] = new Diff(curr);\n      curr = thisDiff;\n    }\n    r[rLength++] = new Diff(curr);\n    return r;\n  };\n  DiffReview.prototype._findDiffIndex = function (pos) {\n    var lineNumber = pos.lineNumber;\n    for (var i = 0, len = this._diffs.length; i < len; i++) {\n      var diff = this._diffs[i].entries;\n      var lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n      if (lineNumber <= lastModifiedLine) {\n        return i;\n      }\n    }\n    return 0;\n  };\n  DiffReview.prototype._render = function () {\n    var originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n    var modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n    var originalModel = this._diffEditor.getOriginalEditor().getModel();\n    var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n    var originalModelOpts = originalModel.getOptions();\n    var modifiedModelOpts = modifiedModel.getOptions();\n    if (!this._isVisible || !originalModel || !modifiedModel) {\n      dom.clearNode(this._content.domNode);\n      this._currentDiff = null;\n      this.scrollbar.scanDomNode();\n      return;\n    }\n    var diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n    if (this._diffs[diffIndex] === this._currentDiff) {\n      return;\n    }\n    this._currentDiff = this._diffs[diffIndex];\n    var diffs = this._diffs[diffIndex].entries;\n    var container = document.createElement('div');\n    container.className = 'diff-review-table';\n    container.setAttribute('role', 'list');\n    Configuration.applyFontInfoSlow(container, modifiedOptions.get(34 /* fontInfo */));\n    var minOriginalLine = 0;\n    var maxOriginalLine = 0;\n    var minModifiedLine = 0;\n    var maxModifiedLine = 0;\n    for (var i = 0, len = diffs.length; i < len; i++) {\n      var diffEntry = diffs[i];\n      var originalLineStart = diffEntry.originalLineStart;\n      var originalLineEnd = diffEntry.originalLineEnd;\n      var modifiedLineStart = diffEntry.modifiedLineStart;\n      var modifiedLineEnd = diffEntry.modifiedLineEnd;\n      if (originalLineStart !== 0 && (minOriginalLine === 0 || originalLineStart < minOriginalLine)) {\n        minOriginalLine = originalLineStart;\n      }\n      if (originalLineEnd !== 0 && (maxOriginalLine === 0 || originalLineEnd > maxOriginalLine)) {\n        maxOriginalLine = originalLineEnd;\n      }\n      if (modifiedLineStart !== 0 && (minModifiedLine === 0 || modifiedLineStart < minModifiedLine)) {\n        minModifiedLine = modifiedLineStart;\n      }\n      if (modifiedLineEnd !== 0 && (maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine)) {\n        maxModifiedLine = modifiedLineEnd;\n      }\n    }\n    var header = document.createElement('div');\n    header.className = 'diff-review-row';\n    var cell = document.createElement('div');\n    cell.className = 'diff-review-cell diff-review-summary';\n    var originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n    var modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n    cell.appendChild(document.createTextNode(diffIndex + 1 + \"/\" + this._diffs.length + \": @@ -\" + minOriginalLine + \",\" + originalChangedLinesCnt + \" +\" + minModifiedLine + \",\" + modifiedChangedLinesCnt + \" @@\"));\n    header.setAttribute('data-line', String(minModifiedLine));\n    var getAriaLines = function getAriaLines(lines) {\n      if (lines === 0) {\n        return nls.localize('no_lines', \"no lines\");\n      } else if (lines === 1) {\n        return nls.localize('one_line', \"1 line\");\n      } else {\n        return nls.localize('more_lines', \"{0} lines\", lines);\n      }\n    };\n    var originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n    var modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n    header.setAttribute('aria-label', nls.localize({\n      key: 'header',\n      comment: ['This is the ARIA label for a git diff header.', 'A git diff header looks like this: @@ -154,12 +159,39 @@.', 'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.', 'Variables 0 and 1 refer to the diff index out of total number of diffs.', 'Variables 2 and 4 will be numbers (a line number).', 'Variables 3 and 5 will be \"no lines\", \"1 line\" or \"X lines\", localized separately.']\n    }, \"Difference {0} of {1}: original {2}, {3}, modified {4}, {5}\", diffIndex + 1, this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n    header.appendChild(cell);\n    // @@ -504,7 +517,7 @@\n    header.setAttribute('role', 'listitem');\n    container.appendChild(header);\n    var modLine = minModifiedLine;\n    for (var i = 0, len = diffs.length; i < len; i++) {\n      var diffEntry = diffs[i];\n      DiffReview._renderSection(container, diffEntry, modLine, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\n      if (diffEntry.modifiedLineStart !== 0) {\n        modLine = diffEntry.modifiedLineEnd;\n      }\n    }\n    dom.clearNode(this._content.domNode);\n    this._content.domNode.appendChild(container);\n    this.scrollbar.scanDomNode();\n  };\n  DiffReview._renderSection = function (dest, diffEntry, modLine, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\n    var type = diffEntry.getType();\n    var rowClassName = 'diff-review-row';\n    var lineNumbersExtraClassName = '';\n    var spacerClassName = 'diff-review-spacer';\n    switch (type) {\n      case 1 /* Insert */:\n        rowClassName = 'diff-review-row line-insert';\n        lineNumbersExtraClassName = ' char-insert';\n        spacerClassName = 'diff-review-spacer insert-sign';\n        break;\n      case 2 /* Delete */:\n        rowClassName = 'diff-review-row line-delete';\n        lineNumbersExtraClassName = ' char-delete';\n        spacerClassName = 'diff-review-spacer delete-sign';\n        break;\n    }\n    var originalLineStart = diffEntry.originalLineStart;\n    var originalLineEnd = diffEntry.originalLineEnd;\n    var modifiedLineStart = diffEntry.modifiedLineStart;\n    var modifiedLineEnd = diffEntry.modifiedLineEnd;\n    var cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n    var originalLayoutInfo = originalOptions.get(107 /* layoutInfo */);\n    var originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n    var modifiedLayoutInfo = modifiedOptions.get(107 /* layoutInfo */);\n    var modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n    for (var i = 0; i <= cnt; i++) {\n      var originalLine = originalLineStart === 0 ? 0 : originalLineStart + i;\n      var modifiedLine = modifiedLineStart === 0 ? 0 : modifiedLineStart + i;\n      var row = document.createElement('div');\n      row.style.minWidth = width + 'px';\n      row.className = rowClassName;\n      row.setAttribute('role', 'listitem');\n      if (modifiedLine !== 0) {\n        modLine = modifiedLine;\n      }\n      row.setAttribute('data-line', String(modLine));\n      var cell = document.createElement('div');\n      cell.className = 'diff-review-cell';\n      row.appendChild(cell);\n      var originalLineNumber = document.createElement('span');\n      originalLineNumber.style.width = originalLineNumbersWidth + 'px';\n      originalLineNumber.style.minWidth = originalLineNumbersWidth + 'px';\n      originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n      if (originalLine !== 0) {\n        originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n      } else {\n        originalLineNumber.innerHTML = '&#160;';\n      }\n      cell.appendChild(originalLineNumber);\n      var modifiedLineNumber = document.createElement('span');\n      modifiedLineNumber.style.width = modifiedLineNumbersWidth + 'px';\n      modifiedLineNumber.style.minWidth = modifiedLineNumbersWidth + 'px';\n      modifiedLineNumber.style.paddingRight = '10px';\n      modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n      if (modifiedLine !== 0) {\n        modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n      } else {\n        modifiedLineNumber.innerHTML = '&#160;';\n      }\n      cell.appendChild(modifiedLineNumber);\n      var spacer = document.createElement('span');\n      spacer.className = spacerClassName;\n      spacer.innerHTML = '&#160;&#160;';\n      cell.appendChild(spacer);\n      var lineContent = void 0;\n      if (modifiedLine !== 0) {\n        cell.insertAdjacentHTML('beforeend', this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine));\n        lineContent = modifiedModel.getLineContent(modifiedLine);\n      } else {\n        cell.insertAdjacentHTML('beforeend', this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine));\n        lineContent = originalModel.getLineContent(originalLine);\n      }\n      if (lineContent.length === 0) {\n        lineContent = nls.localize('blankLine', \"blank\");\n      }\n      var ariaLabel = '';\n      switch (type) {\n        case 0 /* Equal */:\n          ariaLabel = nls.localize('equalLine', \"original {0}, modified {1}: {2}\", originalLine, modifiedLine, lineContent);\n          break;\n        case 1 /* Insert */:\n          ariaLabel = nls.localize('insertLine', \"+ modified {0}: {1}\", modifiedLine, lineContent);\n          break;\n        case 2 /* Delete */:\n          ariaLabel = nls.localize('deleteLine', \"- original {0}: {1}\", originalLine, lineContent);\n          break;\n      }\n      row.setAttribute('aria-label', ariaLabel);\n      dest.appendChild(row);\n    }\n  };\n  DiffReview._renderLine = function (model, options, tabSize, lineNumber) {\n    var lineContent = model.getLineContent(lineNumber);\n    var fontInfo = options.get(34 /* fontInfo */);\n    var defaultMetadata = (0 /* None */ << 11 /* FONT_STYLE_OFFSET */ | 1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */ | 2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */) >>> 0;\n    var tokens = new Uint32Array(2);\n    tokens[0] = lineContent.length;\n    tokens[1] = defaultMetadata;\n    var lineTokens = new LineTokens(tokens, lineContent);\n    var isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n    var containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n    var r = renderViewLine(new RenderLineInput(fontInfo.isMonospace && !options.get(23 /* disableMonospaceOptimizations */), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, options.get(88 /* stopRenderingLineAfter */), options.get(74 /* renderWhitespace */), options.get(69 /* renderControlCharacters */), options.get(35 /* fontLigatures */) !== EditorFontLigatures.OFF, null));\n    return r.html;\n  };\n  return DiffReview;\n}(Disposable);\nexport { DiffReview };\n// theming\nregisterThemingParticipant(function (theme, collector) {\n  var lineNumbers = theme.getColor(editorLineNumbers);\n  if (lineNumbers) {\n    collector.addRule(\".monaco-diff-editor .diff-review-line-number { color: \" + lineNumbers + \"; }\");\n  }\n  var shadow = theme.getColor(scrollbarShadow);\n  if (shadow) {\n    collector.addRule(\".monaco-diff-editor .diff-review-shadow { box-shadow: \" + shadow + \" 0 -6px 6px -6px inset; }\");\n  }\n});\nvar DiffReviewNext = /** @class */function (_super) {\n  __extends(DiffReviewNext, _super);\n  function DiffReviewNext() {\n    return _super.call(this, {\n      id: 'editor.action.diffReview.next',\n      label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n      alias: 'Go to Next Difference',\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      kbOpts: {\n        kbExpr: null,\n        primary: 65 /* F7 */,\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  DiffReviewNext.prototype.run = function (accessor, editor) {\n    var diffEditor = findFocusedDiffEditor(accessor);\n    if (diffEditor) {\n      diffEditor.diffReviewNext();\n    }\n  };\n  return DiffReviewNext;\n}(EditorAction);\nvar DiffReviewPrev = /** @class */function (_super) {\n  __extends(DiffReviewPrev, _super);\n  function DiffReviewPrev() {\n    return _super.call(this, {\n      id: 'editor.action.diffReview.prev',\n      label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n      alias: 'Go to Previous Difference',\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      kbOpts: {\n        kbExpr: null,\n        primary: 1024 /* Shift */ | 65 /* F7 */,\n        weight: 100 /* EditorContrib */\n      }\n    }) || this;\n  }\n  DiffReviewPrev.prototype.run = function (accessor, editor) {\n    var diffEditor = findFocusedDiffEditor(accessor);\n    if (diffEditor) {\n      diffEditor.diffReviewPrev();\n    }\n  };\n  return DiffReviewPrev;\n}(EditorAction);\nfunction findFocusedDiffEditor(accessor) {\n  var codeEditorService = accessor.get(ICodeEditorService);\n  var diffEditors = codeEditorService.listDiffEditors();\n  for (var i = 0, len = diffEditors.length; i < len; i++) {\n    var diffEditor = diffEditors[i];\n    if (diffEditor.hasWidgetFocus()) {\n      return diffEditor;\n    }\n  }\n  return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","dom","createFastDomNode","ActionBar","DomScrollableElement","Action","Disposable","Configuration","EditorAction","registerEditorAction","ICodeEditorService","EditorFontLigatures","LineTokens","Position","editorLineNumbers","RenderLineInput","renderViewLine2","renderViewLine","ViewLineRenderingData","ContextKeyExpr","scrollbarShadow","registerThemingParticipant","DIFF_LINES_PADDING","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","getType","Diff","entries","DiffReview","_super","diffEditor","_this","call","_width","_diffEditor","_isVisible","shadow","document","createElement","setClassName","actionBarContainer","_actionBar","_register","domNode","push","localize","hide","Promise","resolve","label","icon","_content","scrollbar","appendChild","getDomNode","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","onDidChangeCursorPosition","getOriginalEditor","onDidFocusEditorWidget","addStandardDisposableListener","e","preventDefault","row","findParentWithClass","target","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","prev","index","currentIndex","i","len","length","_findDiffIndex","getPosition","setPosition","doLayout","next","jumpToLineNumber","current","_getCurrentFocusedRow","lineNumber","parseInt","getAttribute","isNaN","revealPosition","focus","_getFirstRow","previousElementSibling","nextElementSibling","querySelector","result","activeElement","test","className","tabIndex","scanDomNode","isVisible","layout","top","width","height","setTop","setWidth","setHeight","setAttribute","setDisplay","lineChanges","getLineChanges","originalModel","getModel","modifiedModel","_mergeAdjacent","getLineCount","originalLineCount","modifiedLineCount","diffs","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","r_1","rLength_1","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","r","rLength","thisDiff","currLast","thisFirst","concat","slice","pos","diff","lastModifiedLine","originalOptions","getOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","container","applyFontInfoSlow","get","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","String","getAriaLines","lines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","key","comment","modLine","_renderSection","dest","type","rowClassName","lineNumbersExtraClassName","spacerClassName","cnt","Math","max","originalLayoutInfo","originalLineNumbersWidth","glyphMarginWidth","lineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerHTML","modifiedLineNumber","paddingRight","spacer","lineContent","insertAdjacentHTML","_renderLine","tabSize","getLineContent","ariaLabel","model","options","fontInfo","defaultMetadata","tokens","Uint32Array","lineTokens","isBasicASCII","mightContainNonBasicASCII","containsRTL","mightContainRTL","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","OFF","html","theme","collector","lineNumbers","getColor","addRule","DiffReviewNext","id","alias","precondition","has","kbOpts","kbExpr","primary","weight","run","accessor","editor","findFocusedDiffEditor","diffReviewNext","DiffReviewPrev","diffReviewPrev","codeEditorService","diffEditors","listDiffEditors","hasWidgetFocus"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './media/diffReview.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { editorLineNumbers } from '../../common/view/editorColorRegistry.js';\r\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nvar DIFF_LINES_PADDING = 3;\r\nvar DiffEntry = /** @class */ (function () {\r\n    function DiffEntry(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\r\n        this.originalLineStart = originalLineStart;\r\n        this.originalLineEnd = originalLineEnd;\r\n        this.modifiedLineStart = modifiedLineStart;\r\n        this.modifiedLineEnd = modifiedLineEnd;\r\n    }\r\n    DiffEntry.prototype.getType = function () {\r\n        if (this.originalLineStart === 0) {\r\n            return 1 /* Insert */;\r\n        }\r\n        if (this.modifiedLineStart === 0) {\r\n            return 2 /* Delete */;\r\n        }\r\n        return 0 /* Equal */;\r\n    };\r\n    return DiffEntry;\r\n}());\r\nvar Diff = /** @class */ (function () {\r\n    function Diff(entries) {\r\n        this.entries = entries;\r\n    }\r\n    return Diff;\r\n}());\r\nvar DiffReview = /** @class */ (function (_super) {\r\n    __extends(DiffReview, _super);\r\n    function DiffReview(diffEditor) {\r\n        var _this = _super.call(this) || this;\r\n        _this._width = 0;\r\n        _this._diffEditor = diffEditor;\r\n        _this._isVisible = false;\r\n        _this.shadow = createFastDomNode(document.createElement('div'));\r\n        _this.shadow.setClassName('diff-review-shadow');\r\n        _this.actionBarContainer = createFastDomNode(document.createElement('div'));\r\n        _this.actionBarContainer.setClassName('diff-review-actions');\r\n        _this._actionBar = _this._register(new ActionBar(_this.actionBarContainer.domNode));\r\n        _this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review', true, function () {\r\n            _this.hide();\r\n            return Promise.resolve(null);\r\n        }), { label: false, icon: true });\r\n        _this.domNode = createFastDomNode(document.createElement('div'));\r\n        _this.domNode.setClassName('diff-review monaco-editor-background');\r\n        _this._content = createFastDomNode(document.createElement('div'));\r\n        _this._content.setClassName('diff-review-content');\r\n        _this.scrollbar = _this._register(new DomScrollableElement(_this._content.domNode, {}));\r\n        _this.domNode.domNode.appendChild(_this.scrollbar.getDomNode());\r\n        _this._register(diffEditor.onDidUpdateDiff(function () {\r\n            if (!_this._isVisible) {\r\n                return;\r\n            }\r\n            _this._diffs = _this._compute();\r\n            _this._render();\r\n        }));\r\n        _this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(function () {\r\n            if (!_this._isVisible) {\r\n                return;\r\n            }\r\n            _this._render();\r\n        }));\r\n        _this._register(diffEditor.getOriginalEditor().onDidFocusEditorWidget(function () {\r\n            if (_this._isVisible) {\r\n                _this.hide();\r\n            }\r\n        }));\r\n        _this._register(diffEditor.getModifiedEditor().onDidFocusEditorWidget(function () {\r\n            if (_this._isVisible) {\r\n                _this.hide();\r\n            }\r\n        }));\r\n        _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'click', function (e) {\r\n            e.preventDefault();\r\n            var row = dom.findParentWithClass(e.target, 'diff-review-row');\r\n            if (row) {\r\n                _this._goToRow(row);\r\n            }\r\n        }));\r\n        _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'keydown', function (e) {\r\n            if (e.equals(18 /* DownArrow */)\r\n                || e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)\r\n                || e.equals(512 /* Alt */ | 18 /* DownArrow */)) {\r\n                e.preventDefault();\r\n                _this._goToRow(_this._getNextRow());\r\n            }\r\n            if (e.equals(16 /* UpArrow */)\r\n                || e.equals(2048 /* CtrlCmd */ | 16 /* UpArrow */)\r\n                || e.equals(512 /* Alt */ | 16 /* UpArrow */)) {\r\n                e.preventDefault();\r\n                _this._goToRow(_this._getPrevRow());\r\n            }\r\n            if (e.equals(9 /* Escape */)\r\n                || e.equals(2048 /* CtrlCmd */ | 9 /* Escape */)\r\n                || e.equals(512 /* Alt */ | 9 /* Escape */)\r\n                || e.equals(1024 /* Shift */ | 9 /* Escape */)) {\r\n                e.preventDefault();\r\n                _this.hide();\r\n            }\r\n            if (e.equals(10 /* Space */)\r\n                || e.equals(3 /* Enter */)) {\r\n                e.preventDefault();\r\n                _this.accept();\r\n            }\r\n        }));\r\n        _this._diffs = [];\r\n        _this._currentDiff = null;\r\n        return _this;\r\n    }\r\n    DiffReview.prototype.prev = function () {\r\n        var index = 0;\r\n        if (!this._isVisible) {\r\n            this._diffs = this._compute();\r\n        }\r\n        if (this._isVisible) {\r\n            var currentIndex = -1;\r\n            for (var i = 0, len = this._diffs.length; i < len; i++) {\r\n                if (this._diffs[i] === this._currentDiff) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            index = (this._diffs.length + currentIndex - 1);\r\n        }\r\n        else {\r\n            index = this._findDiffIndex(this._diffEditor.getPosition());\r\n        }\r\n        if (this._diffs.length === 0) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        index = index % this._diffs.length;\r\n        this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\r\n        this._isVisible = true;\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n        this._goToRow(this._getNextRow());\r\n    };\r\n    DiffReview.prototype.next = function () {\r\n        var index = 0;\r\n        if (!this._isVisible) {\r\n            this._diffs = this._compute();\r\n        }\r\n        if (this._isVisible) {\r\n            var currentIndex = -1;\r\n            for (var i = 0, len = this._diffs.length; i < len; i++) {\r\n                if (this._diffs[i] === this._currentDiff) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            index = (currentIndex + 1);\r\n        }\r\n        else {\r\n            index = this._findDiffIndex(this._diffEditor.getPosition());\r\n        }\r\n        if (this._diffs.length === 0) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        index = index % this._diffs.length;\r\n        this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\r\n        this._isVisible = true;\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n        this._goToRow(this._getNextRow());\r\n    };\r\n    DiffReview.prototype.accept = function () {\r\n        var jumpToLineNumber = -1;\r\n        var current = this._getCurrentFocusedRow();\r\n        if (current) {\r\n            var lineNumber = parseInt(current.getAttribute('data-line'), 10);\r\n            if (!isNaN(lineNumber)) {\r\n                jumpToLineNumber = lineNumber;\r\n            }\r\n        }\r\n        this.hide();\r\n        if (jumpToLineNumber !== -1) {\r\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\r\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* Immediate */);\r\n        }\r\n    };\r\n    DiffReview.prototype.hide = function () {\r\n        this._isVisible = false;\r\n        this._diffEditor.focus();\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n    };\r\n    DiffReview.prototype._getPrevRow = function () {\r\n        var current = this._getCurrentFocusedRow();\r\n        if (!current) {\r\n            return this._getFirstRow();\r\n        }\r\n        if (current.previousElementSibling) {\r\n            return current.previousElementSibling;\r\n        }\r\n        return current;\r\n    };\r\n    DiffReview.prototype._getNextRow = function () {\r\n        var current = this._getCurrentFocusedRow();\r\n        if (!current) {\r\n            return this._getFirstRow();\r\n        }\r\n        if (current.nextElementSibling) {\r\n            return current.nextElementSibling;\r\n        }\r\n        return current;\r\n    };\r\n    DiffReview.prototype._getFirstRow = function () {\r\n        return this.domNode.domNode.querySelector('.diff-review-row');\r\n    };\r\n    DiffReview.prototype._getCurrentFocusedRow = function () {\r\n        var result = document.activeElement;\r\n        if (result && /diff-review-row/.test(result.className)) {\r\n            return result;\r\n        }\r\n        return null;\r\n    };\r\n    DiffReview.prototype._goToRow = function (row) {\r\n        var prev = this._getCurrentFocusedRow();\r\n        row.tabIndex = 0;\r\n        row.focus();\r\n        if (prev && prev !== row) {\r\n            prev.tabIndex = -1;\r\n        }\r\n        this.scrollbar.scanDomNode();\r\n    };\r\n    DiffReview.prototype.isVisible = function () {\r\n        return this._isVisible;\r\n    };\r\n    DiffReview.prototype.layout = function (top, width, height) {\r\n        this._width = width;\r\n        this.shadow.setTop(top - 6);\r\n        this.shadow.setWidth(width);\r\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\r\n        this.domNode.setTop(top);\r\n        this.domNode.setWidth(width);\r\n        this.domNode.setHeight(height);\r\n        this._content.setHeight(height);\r\n        this._content.setWidth(width);\r\n        if (this._isVisible) {\r\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\r\n            this.actionBarContainer.setDisplay('block');\r\n        }\r\n        else {\r\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\r\n            this.actionBarContainer.setDisplay('none');\r\n        }\r\n    };\r\n    DiffReview.prototype._compute = function () {\r\n        var lineChanges = this._diffEditor.getLineChanges();\r\n        if (!lineChanges || lineChanges.length === 0) {\r\n            return [];\r\n        }\r\n        var originalModel = this._diffEditor.getOriginalEditor().getModel();\r\n        var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\r\n        if (!originalModel || !modifiedModel) {\r\n            return [];\r\n        }\r\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\r\n    };\r\n    DiffReview._mergeAdjacent = function (lineChanges, originalLineCount, modifiedLineCount) {\r\n        if (!lineChanges || lineChanges.length === 0) {\r\n            return [];\r\n        }\r\n        var diffs = [], diffsLength = 0;\r\n        for (var i = 0, len = lineChanges.length; i < len; i++) {\r\n            var lineChange = lineChanges[i];\r\n            var originalStart = lineChange.originalStartLineNumber;\r\n            var originalEnd = lineChange.originalEndLineNumber;\r\n            var modifiedStart = lineChange.modifiedStartLineNumber;\r\n            var modifiedEnd = lineChange.modifiedEndLineNumber;\r\n            var r_1 = [], rLength_1 = 0;\r\n            // Emit before anchors\r\n            {\r\n                var originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\r\n                var modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\r\n                // Make sure we don't step into the previous diff\r\n                var minOriginal = 1;\r\n                var minModified = 1;\r\n                if (i > 0) {\r\n                    var prevLineChange = lineChanges[i - 1];\r\n                    if (prevLineChange.originalEndLineNumber === 0) {\r\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\r\n                    }\r\n                    else {\r\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\r\n                    }\r\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\r\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\r\n                    }\r\n                    else {\r\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\r\n                    }\r\n                }\r\n                var fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\r\n                var fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\r\n                if (fromOriginal < minOriginal) {\r\n                    var delta = minOriginal - fromOriginal;\r\n                    fromOriginal = fromOriginal + delta;\r\n                    fromModified = fromModified + delta;\r\n                }\r\n                if (fromModified < minModified) {\r\n                    var delta = minModified - fromModified;\r\n                    fromOriginal = fromOriginal + delta;\r\n                    fromModified = fromModified + delta;\r\n                }\r\n                r_1[rLength_1++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\r\n            }\r\n            // Emit deleted lines\r\n            {\r\n                if (originalEnd !== 0) {\r\n                    r_1[rLength_1++] = new DiffEntry(originalStart, originalEnd, 0, 0);\r\n                }\r\n            }\r\n            // Emit inserted lines\r\n            {\r\n                if (modifiedEnd !== 0) {\r\n                    r_1[rLength_1++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\r\n                }\r\n            }\r\n            // Emit after anchors\r\n            {\r\n                var originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\r\n                var modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\r\n                // Make sure we don't step into the next diff\r\n                var maxOriginal = originalLineCount;\r\n                var maxModified = modifiedLineCount;\r\n                if (i + 1 < len) {\r\n                    var nextLineChange = lineChanges[i + 1];\r\n                    if (nextLineChange.originalEndLineNumber === 0) {\r\n                        maxOriginal = nextLineChange.originalStartLineNumber;\r\n                    }\r\n                    else {\r\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\r\n                    }\r\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\r\n                        maxModified = nextLineChange.modifiedStartLineNumber;\r\n                    }\r\n                    else {\r\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\r\n                    }\r\n                }\r\n                var toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\r\n                var toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\r\n                if (toOriginal > maxOriginal) {\r\n                    var delta = maxOriginal - toOriginal;\r\n                    toOriginal = toOriginal + delta;\r\n                    toModified = toModified + delta;\r\n                }\r\n                if (toModified > maxModified) {\r\n                    var delta = maxModified - toModified;\r\n                    toOriginal = toOriginal + delta;\r\n                    toModified = toModified + delta;\r\n                }\r\n                r_1[rLength_1++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\r\n            }\r\n            diffs[diffsLength++] = new Diff(r_1);\r\n        }\r\n        // Merge adjacent diffs\r\n        var curr = diffs[0].entries;\r\n        var r = [], rLength = 0;\r\n        for (var i = 1, len = diffs.length; i < len; i++) {\r\n            var thisDiff = diffs[i].entries;\r\n            var currLast = curr[curr.length - 1];\r\n            var thisFirst = thisDiff[0];\r\n            if (currLast.getType() === 0 /* Equal */\r\n                && thisFirst.getType() === 0 /* Equal */\r\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\r\n                // We are dealing with equal lines that overlap\r\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\r\n                curr = curr.concat(thisDiff.slice(1));\r\n                continue;\r\n            }\r\n            r[rLength++] = new Diff(curr);\r\n            curr = thisDiff;\r\n        }\r\n        r[rLength++] = new Diff(curr);\r\n        return r;\r\n    };\r\n    DiffReview.prototype._findDiffIndex = function (pos) {\r\n        var lineNumber = pos.lineNumber;\r\n        for (var i = 0, len = this._diffs.length; i < len; i++) {\r\n            var diff = this._diffs[i].entries;\r\n            var lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\r\n            if (lineNumber <= lastModifiedLine) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    DiffReview.prototype._render = function () {\r\n        var originalOptions = this._diffEditor.getOriginalEditor().getOptions();\r\n        var modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\r\n        var originalModel = this._diffEditor.getOriginalEditor().getModel();\r\n        var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\r\n        var originalModelOpts = originalModel.getOptions();\r\n        var modifiedModelOpts = modifiedModel.getOptions();\r\n        if (!this._isVisible || !originalModel || !modifiedModel) {\r\n            dom.clearNode(this._content.domNode);\r\n            this._currentDiff = null;\r\n            this.scrollbar.scanDomNode();\r\n            return;\r\n        }\r\n        var diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\r\n        if (this._diffs[diffIndex] === this._currentDiff) {\r\n            return;\r\n        }\r\n        this._currentDiff = this._diffs[diffIndex];\r\n        var diffs = this._diffs[diffIndex].entries;\r\n        var container = document.createElement('div');\r\n        container.className = 'diff-review-table';\r\n        container.setAttribute('role', 'list');\r\n        Configuration.applyFontInfoSlow(container, modifiedOptions.get(34 /* fontInfo */));\r\n        var minOriginalLine = 0;\r\n        var maxOriginalLine = 0;\r\n        var minModifiedLine = 0;\r\n        var maxModifiedLine = 0;\r\n        for (var i = 0, len = diffs.length; i < len; i++) {\r\n            var diffEntry = diffs[i];\r\n            var originalLineStart = diffEntry.originalLineStart;\r\n            var originalLineEnd = diffEntry.originalLineEnd;\r\n            var modifiedLineStart = diffEntry.modifiedLineStart;\r\n            var modifiedLineEnd = diffEntry.modifiedLineEnd;\r\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\r\n                minOriginalLine = originalLineStart;\r\n            }\r\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\r\n                maxOriginalLine = originalLineEnd;\r\n            }\r\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\r\n                minModifiedLine = modifiedLineStart;\r\n            }\r\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\r\n                maxModifiedLine = modifiedLineEnd;\r\n            }\r\n        }\r\n        var header = document.createElement('div');\r\n        header.className = 'diff-review-row';\r\n        var cell = document.createElement('div');\r\n        cell.className = 'diff-review-cell diff-review-summary';\r\n        var originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\r\n        var modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\r\n        cell.appendChild(document.createTextNode(diffIndex + 1 + \"/\" + this._diffs.length + \": @@ -\" + minOriginalLine + \",\" + originalChangedLinesCnt + \" +\" + minModifiedLine + \",\" + modifiedChangedLinesCnt + \" @@\"));\r\n        header.setAttribute('data-line', String(minModifiedLine));\r\n        var getAriaLines = function (lines) {\r\n            if (lines === 0) {\r\n                return nls.localize('no_lines', \"no lines\");\r\n            }\r\n            else if (lines === 1) {\r\n                return nls.localize('one_line', \"1 line\");\r\n            }\r\n            else {\r\n                return nls.localize('more_lines', \"{0} lines\", lines);\r\n            }\r\n        };\r\n        var originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\r\n        var modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\r\n        header.setAttribute('aria-label', nls.localize({\r\n            key: 'header',\r\n            comment: [\r\n                'This is the ARIA label for a git diff header.',\r\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\r\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\r\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\r\n                'Variables 2 and 4 will be numbers (a line number).',\r\n                'Variables 3 and 5 will be \"no lines\", \"1 line\" or \"X lines\", localized separately.'\r\n            ]\r\n        }, \"Difference {0} of {1}: original {2}, {3}, modified {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\r\n        header.appendChild(cell);\r\n        // @@ -504,7 +517,7 @@\r\n        header.setAttribute('role', 'listitem');\r\n        container.appendChild(header);\r\n        var modLine = minModifiedLine;\r\n        for (var i = 0, len = diffs.length; i < len; i++) {\r\n            var diffEntry = diffs[i];\r\n            DiffReview._renderSection(container, diffEntry, modLine, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\r\n            if (diffEntry.modifiedLineStart !== 0) {\r\n                modLine = diffEntry.modifiedLineEnd;\r\n            }\r\n        }\r\n        dom.clearNode(this._content.domNode);\r\n        this._content.domNode.appendChild(container);\r\n        this.scrollbar.scanDomNode();\r\n    };\r\n    DiffReview._renderSection = function (dest, diffEntry, modLine, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\r\n        var type = diffEntry.getType();\r\n        var rowClassName = 'diff-review-row';\r\n        var lineNumbersExtraClassName = '';\r\n        var spacerClassName = 'diff-review-spacer';\r\n        switch (type) {\r\n            case 1 /* Insert */:\r\n                rowClassName = 'diff-review-row line-insert';\r\n                lineNumbersExtraClassName = ' char-insert';\r\n                spacerClassName = 'diff-review-spacer insert-sign';\r\n                break;\r\n            case 2 /* Delete */:\r\n                rowClassName = 'diff-review-row line-delete';\r\n                lineNumbersExtraClassName = ' char-delete';\r\n                spacerClassName = 'diff-review-spacer delete-sign';\r\n                break;\r\n        }\r\n        var originalLineStart = diffEntry.originalLineStart;\r\n        var originalLineEnd = diffEntry.originalLineEnd;\r\n        var modifiedLineStart = diffEntry.modifiedLineStart;\r\n        var modifiedLineEnd = diffEntry.modifiedLineEnd;\r\n        var cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\r\n        var originalLayoutInfo = originalOptions.get(107 /* layoutInfo */);\r\n        var originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\r\n        var modifiedLayoutInfo = modifiedOptions.get(107 /* layoutInfo */);\r\n        var modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\r\n        for (var i = 0; i <= cnt; i++) {\r\n            var originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\r\n            var modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\r\n            var row = document.createElement('div');\r\n            row.style.minWidth = width + 'px';\r\n            row.className = rowClassName;\r\n            row.setAttribute('role', 'listitem');\r\n            if (modifiedLine !== 0) {\r\n                modLine = modifiedLine;\r\n            }\r\n            row.setAttribute('data-line', String(modLine));\r\n            var cell = document.createElement('div');\r\n            cell.className = 'diff-review-cell';\r\n            row.appendChild(cell);\r\n            var originalLineNumber = document.createElement('span');\r\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\r\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\r\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\r\n            if (originalLine !== 0) {\r\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\r\n            }\r\n            else {\r\n                originalLineNumber.innerHTML = '&#160;';\r\n            }\r\n            cell.appendChild(originalLineNumber);\r\n            var modifiedLineNumber = document.createElement('span');\r\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\r\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\r\n            modifiedLineNumber.style.paddingRight = '10px';\r\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\r\n            if (modifiedLine !== 0) {\r\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\r\n            }\r\n            else {\r\n                modifiedLineNumber.innerHTML = '&#160;';\r\n            }\r\n            cell.appendChild(modifiedLineNumber);\r\n            var spacer = document.createElement('span');\r\n            spacer.className = spacerClassName;\r\n            spacer.innerHTML = '&#160;&#160;';\r\n            cell.appendChild(spacer);\r\n            var lineContent = void 0;\r\n            if (modifiedLine !== 0) {\r\n                cell.insertAdjacentHTML('beforeend', this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine));\r\n                lineContent = modifiedModel.getLineContent(modifiedLine);\r\n            }\r\n            else {\r\n                cell.insertAdjacentHTML('beforeend', this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine));\r\n                lineContent = originalModel.getLineContent(originalLine);\r\n            }\r\n            if (lineContent.length === 0) {\r\n                lineContent = nls.localize('blankLine', \"blank\");\r\n            }\r\n            var ariaLabel = '';\r\n            switch (type) {\r\n                case 0 /* Equal */:\r\n                    ariaLabel = nls.localize('equalLine', \"original {0}, modified {1}: {2}\", originalLine, modifiedLine, lineContent);\r\n                    break;\r\n                case 1 /* Insert */:\r\n                    ariaLabel = nls.localize('insertLine', \"+ modified {0}: {1}\", modifiedLine, lineContent);\r\n                    break;\r\n                case 2 /* Delete */:\r\n                    ariaLabel = nls.localize('deleteLine', \"- original {0}: {1}\", originalLine, lineContent);\r\n                    break;\r\n            }\r\n            row.setAttribute('aria-label', ariaLabel);\r\n            dest.appendChild(row);\r\n        }\r\n    };\r\n    DiffReview._renderLine = function (model, options, tabSize, lineNumber) {\r\n        var lineContent = model.getLineContent(lineNumber);\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        var defaultMetadata = ((0 /* None */ << 11 /* FONT_STYLE_OFFSET */)\r\n            | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\r\n            | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n        var tokens = new Uint32Array(2);\r\n        tokens[0] = lineContent.length;\r\n        tokens[1] = defaultMetadata;\r\n        var lineTokens = new LineTokens(tokens, lineContent);\r\n        var isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\r\n        var containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\r\n        var r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(23 /* disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, options.get(88 /* stopRenderingLineAfter */), options.get(74 /* renderWhitespace */), options.get(69 /* renderControlCharacters */), options.get(35 /* fontLigatures */) !== EditorFontLigatures.OFF, null));\r\n        return r.html;\r\n    };\r\n    return DiffReview;\r\n}(Disposable));\r\nexport { DiffReview };\r\n// theming\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var lineNumbers = theme.getColor(editorLineNumbers);\r\n    if (lineNumbers) {\r\n        collector.addRule(\".monaco-diff-editor .diff-review-line-number { color: \" + lineNumbers + \"; }\");\r\n    }\r\n    var shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(\".monaco-diff-editor .diff-review-shadow { box-shadow: \" + shadow + \" 0 -6px 6px -6px inset; }\");\r\n    }\r\n});\r\nvar DiffReviewNext = /** @class */ (function (_super) {\r\n    __extends(DiffReviewNext, _super);\r\n    function DiffReviewNext() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.diffReview.next',\r\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\r\n            alias: 'Go to Next Difference',\r\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DiffReviewNext.prototype.run = function (accessor, editor) {\r\n        var diffEditor = findFocusedDiffEditor(accessor);\r\n        if (diffEditor) {\r\n            diffEditor.diffReviewNext();\r\n        }\r\n    };\r\n    return DiffReviewNext;\r\n}(EditorAction));\r\nvar DiffReviewPrev = /** @class */ (function (_super) {\r\n    __extends(DiffReviewPrev, _super);\r\n    function DiffReviewPrev() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.diffReview.prev',\r\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\r\n            alias: 'Go to Previous Difference',\r\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 1024 /* Shift */ | 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DiffReviewPrev.prototype.run = function (accessor, editor) {\r\n        var diffEditor = findFocusedDiffEditor(accessor);\r\n        if (diffEditor) {\r\n            diffEditor.diffReviewPrev();\r\n        }\r\n    };\r\n    return DiffReviewPrev;\r\n}(EditorAction));\r\nfunction findFocusedDiffEditor(accessor) {\r\n    var codeEditorService = accessor.get(ICodeEditorService);\r\n    var diffEditors = codeEditorService.listDiffEditors();\r\n    for (var i = 0, len = diffEditors.length; i < len; i++) {\r\n        var diffEditor = diffEditors[i];\r\n        if (diffEditor.hasWidgetFocus()) {\r\n            return diffEditor;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nregisterEditorAction(DiffReviewNext);\r\nregisterEditorAction(DiffReviewPrev);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}