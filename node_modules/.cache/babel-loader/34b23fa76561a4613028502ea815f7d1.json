{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Study\\\\ActivityConfig\\\\ActivityConfiguration.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, Modal, Card, Form, Select } from 'antd';\nimport { TreeNode } from '../../../components/uielements/tree';\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\nimport { errorModal, showProgress, hideProgress, dynamicModal, CallServerPost, getProjectRole, PostCallWithZone, successModalCallback, errorModalCallback } from '../../Utility/sharedUtility';\nimport ConfirmWithEsign from '../confirmationWithEsign';\nimport Box from '../../../components/utility/box';\nimport { CSSTransition } from 'react-transition-group';\nimport { Annotation } from './Annotation';\nimport { DefineGeneration } from './Define';\nimport { Transformation } from './Transformation';\nimport moment from 'moment-timezone';\nvar flexDisplay = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"6px 0px 10px 0px\"\n};\nvar thisObj = {};\nvar offProgress = false;\nvar ActivityConfiguration = /*#__PURE__*/function (_Component) {\n  _inherits(ActivityConfiguration, _Component);\n  var _super = _createSuper(ActivityConfiguration);\n  function ActivityConfiguration(props) {\n    var _this;\n    _classCallCheck(this, ActivityConfiguration);\n    _this = _super.call(this, props);\n    _this.initialiseStatus = function () {\n      return {\n        Annot: {\n          text: \"Not yet configured\",\n          id: -1\n        },\n        Trans: {\n          text: \"Not yet configured\",\n          id: -1\n        },\n        Define: {\n          text: \"Not yet configured\",\n          id: -1\n        }\n      };\n    };\n    _this.getGetActivityConfigurationByStudyID = function () {\n      var screen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var thisObj = _assertThisInitialized(_this);\n      var _thisObj$props = thisObj.props,\n        study = _thisObj$props.study,\n        workflowObj = _thisObj$props.workflowObj;\n\n      //for filter the dropdown values of Annotation,Transformation,Define\n      var StudyWorkflow = workflowObj.StudyWorkflow,\n        WorkflowActivityStatusTransition = workflowObj.WorkflowActivityStatusTransition;\n      //Selcted study workflow obj\n      var currentWrkflwOfStudy = StudyWorkflow.find(function (w) {\n        return w.studyID === study.studyID;\n      });\n      //selected study workflowActivityStatusID\n      var currentWorkflowActivityStatusID = currentWrkflwOfStudy && currentWrkflwOfStudy.workflowActivityStatusID;\n      showProgress();\n      CallServerPost('ActivityConfiguration/GetActivityConfigurationByStudyID', {\n        FormName: \"Study\",\n        ActionName: \"Create\",\n        StudyID: study.studyID,\n        ProjectID: _this.props.projectID\n      }).then(function (response) {\n        //Maintain offProgress why because we are calling two controller simultaneously\n        offProgress && hideProgress();\n        offProgress = !offProgress;\n        if (response.status === 1) {\n          var data = response.value;\n          if (data && typeof data === \"object\") {\n            var status = thisObj.initialiseStatus();\n            var annotationWorkFlows, transFormationWorkFlows, defineWorkFlows;\n            //Set the Status of Annotation,transformation and Define\n            (data.ActivityConfigStatusDetailsList || []).map(function (activitie) {\n              switch (activitie.workflowActivityID) {\n                //Annotation\n                case 2:\n                  {\n                    var AnnotWrkFlw = data.annotationStatus;\n                    var AnnotStaus = AnnotWrkFlw && AnnotWrkFlw.find(function (x) {\n                      return x.workflowActivityStatusID === activitie.workflowActivityStatusID;\n                    });\n                    status.Annot = {\n                      text: AnnotStaus && AnnotStaus.displayText,\n                      id: AnnotStaus && AnnotStaus.workflowActivityStatusID && AnnotStaus.workflowActivityStatusID\n                    };\n                    //filter workflow based on current activitie workflowActivityStatusID                   \n                    annotationWorkFlows = WorkflowActivityStatusTransition.filter(function (wrkFlo) {\n                      return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID;\n                    });\n                  }\n                  break;\n                //Transformation\n                case 3:\n                  {\n                    var TransWrkFlw = data.transformationStatus;\n                    var TransStaus = TransWrkFlw && TransWrkFlw.find(function (x) {\n                      return x.workflowActivityStatusID === activitie.workflowActivityStatusID;\n                    });\n                    status.Trans = {\n                      text: TransStaus && TransStaus.displayText,\n                      id: TransStaus && TransStaus.workflowActivityStatusID && TransStaus.workflowActivityStatusID\n                    };\n                    //filter workflow based on current activitie workflowActivityStatusID                       \n                    transFormationWorkFlows = WorkflowActivityStatusTransition.filter(function (wrkFlo) {\n                      return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID;\n                    });\n                  }\n                  break;\n                //Define\n                case 4:\n                  {\n                    var DefineWrkFlw = data.defineStatus;\n                    var DefineStaus = DefineWrkFlw && DefineWrkFlw.find(function (x) {\n                      return x.workflowActivityStatusID === activitie.workflowActivityStatusID;\n                    });\n                    status.Define = {\n                      text: DefineStaus && DefineStaus.displayText,\n                      id: DefineStaus && DefineStaus.workflowActivityStatusID && DefineStaus.workflowActivityStatusID\n                    };\n\n                    //filter workflow based on current activitie workflowActivityStatusID                       \n                    defineWorkFlows = WorkflowActivityStatusTransition.filter(function (wrkFlo) {\n                      return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID;\n                    });\n                  }\n                  break;\n              }\n            });\n\n            //the following line is used only for when save the activity config\n            //have to reset the selected dropdown values\n            thisObj.props.form.resetFields();\n            //end\n\n            thisObj.setState({\n              status: status,\n              screen: \"Home\",\n              updateData: data.ActivityConfigList,\n              defineWorkFlows: defineWorkFlows,\n              annotationWorkFlows: annotationWorkFlows,\n              transFormationWorkFlows: transFormationWorkFlows,\n              ActivityConfigStatusDetailsList: data.ActivityConfigStatusDetailsList\n            });\n          }\n        } else {\n          hideProgress();\n          thisObj.setState({\n            screen: \"Home\",\n            updateData: [],\n            defineWorkFlows: [],\n            annotationWorkFlows: [],\n            transFormationWorkFlows: [],\n            status: thisObj.initialiseStatus(),\n            ActivityConfigStatusDetailsList: []\n          });\n        }\n      });\n    };\n    _this.cancel = function () {\n      var screen = _this.state.screen;\n      switch (screen) {\n        case \"Home\":\n          return _this.props.handleCancel();\n        default:\n          return thisObj.setState({\n            screen: \"Home\"\n          });\n      }\n    };\n    _this.reload = function () {\n      offProgress = true;\n      _this.getGetActivityConfigurationByStudyID(\"Home\");\n    };\n    _this.beforeUpdateTheWorkFlow = function (targetStatusID, Activitie) {\n      //Selcted study workflow obj\n      var _thisObj$props2 = thisObj.props,\n        study = _thisObj$props2.study,\n        workflowObj = _thisObj$props2.workflowObj;\n      var ActivityConfigStatusDetailsList = _this.state.ActivityConfigStatusDetailsList;\n\n      // current workflow of study\n      //Current study workflowActivityID, workflowActivityStatusID\n      //let { StudyWorkflow, WorkflowActivityStatusTransition } = workflowObj;\n\n      //let selctedStudyWorkflow = StudyWorkflow.find(wf => wf.studyID === study.studyID);\n\n      //let { workflowActivityID, workflowActivityStatusID } = selctedStudyWorkflow;\n\n      //Workflow going to change to\n      //Get workflowActivityStatusTransitionID\n      //wrkflo.sourceStatusID means workflowActivityStatusID\n\n      //let changedWorkflowToUpdate = WorkflowActivityStatusTransition.find(wrkflo => wrkflo.targetStatusID === targetStatusID);\n\n      var changedWorkflowToUpdate = Activitie && Activitie.find(function (wrkflo) {\n        return wrkflo.targetStatusID === targetStatusID;\n      });\n      var selectedActivityWorkflow = changedWorkflowToUpdate && ActivityConfigStatusDetailsList.find(function (wf) {\n        return wf.workflowActivityStatusID == changedWorkflowToUpdate.sourceStatusID;\n      });\n      var workflowActivityID = selectedActivityWorkflow.workflowActivityID,\n        workflowActivityStatusID = selectedActivityWorkflow.workflowActivityStatusID;\n      var data = {\n        studyID: study.studyID,\n        projectID: study.projectID,\n        workflowActivityID: workflowActivityID,\n        //targetStatusID means selected Workflow workflowActivityStatusID\n        workflowActivityStatusID: targetStatusID,\n        changeReason: changedWorkflowToUpdate.targetStatusText,\n        workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID\n      };\n      dynamicModal({\n        title: \"Confirmation\",\n        icon: \"exclamation-circle\",\n        msg: \"Do you want to change the status?\",\n        className: \"UserAssignedPop\",\n        onOk: function onOk() {\n          if (changedWorkflowToUpdate.eSignRequired) {\n            showProgress();\n            thisObj.setState({\n              esign: true,\n              workFlowDataToUpdate: data,\n              esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\n            });\n            hideProgress();\n          } else {\n            thisObj.updateWorkFlow(data);\n          }\n        },\n        onCancel: function onCancel() {\n          thisObj.props.form.resetFields();\n        }\n      });\n    };\n    _this.afterEsignVerfied = function () {\n      var workFlowDataToUpdate = thisObj.state.workFlowDataToUpdate;\n      workFlowDataToUpdate[\"eSignVerified\"] = true;\n      thisObj.updateWorkFlow(workFlowDataToUpdate);\n    };\n    _this.esignText = function (WorkFlow) {\n      var text = {\n        AnnotationReviewCompleted: \"I have reviewed this annotated document.\",\n        TransformationReviewCompleted: \"I have reviewed the mapping logic and verified the transformed output.\",\n        DefineGenerationReviewCompleted: \"I have reviewed generated define XML.\",\n        StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\"\n      };\n      return text[WorkFlow];\n    };\n    _this.updateWorkFlow = function (data) {\n      var projectRole = getProjectRole();\n      var zones = moment.tz.guess();\n      var timezone = moment.tz(zones).zoneAbbr();\n      var updatedBy = projectRole.userProfile.userID;\n      data.TimeZone = timezone;\n      data.UpdatedBy = updatedBy;\n      showProgress();\n      PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(function (response) {\n        hideProgress();\n        if (response.status == 1) {\n          thisObj.setState({\n            esign: false\n          });\n          successModalCallback(response.message, function () {\n            thisObj.reload();\n          });\n        } else {\n          thisObj.props.form.resetFields();\n          thisObj.setState({\n            esign: false\n          });\n          errorModalCallback(response.message, function () {\n            thisObj.props.form.resetFields();\n          });\n        }\n      });\n    };\n    _this.cancelEsign = function (studyID) {\n      thisObj.props.form.resetFields();\n      _this.setState({\n        esign: false\n      });\n    };\n    _this.state = {\n      screen: \"\",\n      home: false,\n      esign: false,\n      pdfFiles: [],\n      esignText: \"\",\n      xptLocation: [],\n      selectedStatus: \"\",\n      changeReason: false,\n      defineWorkFlows: [],\n      rawDatasetLocaton: [],\n      workFlowDataToUpdate: [],\n      annotationWorkFlows: [],\n      transFormationWorkFlows: [],\n      defineOutputTypeDropDown: [],\n      activityConfigStatusDetails: [],\n      status: _this.initialiseStatus(),\n      ActivityConfigStatusDetailsList: []\n    };\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(ActivityConfiguration, [{\n    key: \"getDDL\",\n    value: function getDDL() {\n      var thisObj = this;\n      var study = thisObj.props.study;\n      showProgress();\n\n      //console.log(\"Sometimes Values are not coming for options\");\n      //console.log(study.studyID);\n      //console.log(this.props.projectID);\n\n      CallServerPost('ActivityConfiguration/GetValuesForCreateActivityConfiguration', {\n        FormName: \"Study\",\n        ActionName: \"Create\",\n        StudyID: study.studyID,\n        ProjectID: this.props.projectID\n      }).then(function (response) {\n        var _this2 = this;\n        //console.log(response);\n        //Maintain offProgress why because we are calling two controller simultaneously\n        offProgress && hideProgress();\n        offProgress = !offProgress;\n        if (response.status === 1) {\n          var studyData = response.value;\n          var treeLoop = function treeLoop(data, folderOnly) {\n            return data.map(function (item) {\n              if (item.children) {\n                return /*#__PURE__*/React.createElement(TreeNode, {\n                  selectable: folderOnly && item.folder,\n                  key: item.key,\n                  value: item.key,\n                  title: item.title,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 37\n                  }\n                }, treeLoop(item.children, folderOnly));\n              } else {\n                var selectable = true;\n                if (folderOnly && !item.folder) {\n                  selectable = false;\n                }\n                if (item.key !== studyData[\"protocolDoc\"]) {\n                  return /*#__PURE__*/React.createElement(TreeNode, {\n                    selectable: selectable,\n                    key: item.key,\n                    value: item.key,\n                    title: item.title,\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 44\n                    }\n                  });\n                }\n              }\n            });\n          };\n\n          //Annotatoin,TransFormation,Define Dropdown values\n\n          //for Annotation CRFDocument\n          var pdfFiles = treeLoop([studyData[\"DocumentsTree\"].pdfLocation], false);\n\n          //for transformation Output Standardized Dataset Location\n          //for Define Standardized Dataset Location\n          var xptLocation = treeLoop([studyData[\"DocumentsTree\"].xptLocation], true);\n\n          //for Transformation Raw Dataset Location\n          var rawDatasetLocaton = treeLoop([studyData[\"DocumentsTree\"].sas7BdatLocation], true);\n          thisObj.setState({\n            screen: \"Home\",\n            pdfFiles: pdfFiles,\n            xptLocation: xptLocation,\n            rawDatasetLocaton: rawDatasetLocaton,\n            defineOutputTypeDropDown: studyData.defineOutputType\n          });\n        } else {\n          thisObj.setState({\n            screen: \"Home\",\n            pdfFiles: [],\n            xptLocation: [],\n            rawDatasetLocaton: [],\n            defineOutputTypeDropDown: []\n          });\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    }\n\n    //this code to cancel the popup when click cancel\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$state = this.state,\n        home = _this$state.home,\n        esign = _this$state.esign,\n        status = _this$state.status,\n        screen = _this$state.screen,\n        pdfFiles = _this$state.pdfFiles,\n        esignText = _this$state.esignText,\n        updateData = _this$state.updateData,\n        xptLocation = _this$state.xptLocation,\n        changeReason = _this$state.changeReason,\n        defineWorkFlows = _this$state.defineWorkFlows,\n        rawDatasetLocaton = _this$state.rawDatasetLocaton,\n        annotationWorkFlows = _this$state.annotationWorkFlows,\n        transFormationWorkFlows = _this$state.transFormationWorkFlows,\n        defineOutputTypeDropDown = _this$state.defineOutputTypeDropDown;\n      var Annot = status.Annot,\n        Trans = status.Trans,\n        Define = status.Define;\n      var study = this.props.study;\n      var annotationRequired = study.annotationRequired,\n        mappingRequried = study.mappingRequried,\n        defineRequired = study.defineRequired,\n        workflowActivityStatusID = study.workflowActivityStatusID;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var title = this.props.studyName + \" - Activity Configuration \" + (screen !== \"Home\" ? \"- \" + screen : \"\");\n      return /*#__PURE__*/React.createElement(React.Fragment, null, screen !== \"\" && /*#__PURE__*/React.createElement(Modal, {\n        visible: home,\n        title: title,\n        onCancel: this.cancel,\n        maskClosable: false,\n        style: {\n          top: 20,\n          minHeight: 400\n        },\n        centered: true,\n        width: screen === \"Home\" ? 'auto' : \"70%\",\n        footer: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LayoutWrapper, {\n        id: \"treeview_layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }\n      }, screen === \"Home\" && /*#__PURE__*/React.createElement(Box, {\n        style: _objectSpread({\n          minWidth: 700\n        }, flexDisplay),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        style: {\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: '#ECECEC',\n          padding: '50px',\n          height: \"100%\",\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 57\n        }\n      }, annotationRequired && /*#__PURE__*/React.createElement(Col, {\n        span: annotationRequired && mappingRequried && defineRequired ? 8 : 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\",\n          height: \"100%\",\n          width: \"100%\",\n          minHeight: 100,\n          minWidth: 300\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        in: true,\n        timeout: 500,\n        classNames: \"alert\",\n        unmountOnExit: true,\n        appear: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Annotation\",\n        bordered: false,\n        className: \"activityconfigcard\",\n        extra: /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-cog\",\n          \"aria-hidden\": \"true\",\n          onClick: function onClick() {\n            return _this3.setState({\n              screen: \"Annotation\"\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 85\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"activitycardtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 81\n        }\n      }, \"Status : \", Annot.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"activitycarddrop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 81\n        }\n      }, getFieldDecorator(\"AnnotationStatus\", {\n        initialValue: -1\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: \"100%\"\n        },\n        placeholder: \"Select Status\",\n        disabled: !annotationWorkFlows || this.props.study.locked || workflowActivityStatusID === 15 || this.props.isProjectInActive || annotationWorkFlows.length === 0 || updateData && !updateData.some(function (va) {\n          return va.configurationName === \"AnnotationRequired\" && va.configurationValue === \"true\";\n        }),\n        onChange: function onChange(value) {\n          return value !== -1 ? _this3.beforeUpdateTheWorkFlow(value, annotationWorkFlows) : false;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 91\n        }\n      }, /*#__PURE__*/React.createElement(Select.Option, {\n        value: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 93\n        }\n      }, \"--Select--\"), (annotationWorkFlows || []).map(function (status) {\n        return /*#__PURE__*/React.createElement(Select.Option, {\n          title: status.targetStatusText,\n          value: status.targetStatusID,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 104\n          }\n        }, status.targetStatusText);\n      })))))))), mappingRequried && /*#__PURE__*/React.createElement(Col, {\n        span: annotationRequired && mappingRequried && defineRequired ? 8 : 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\",\n          height: \"100%\",\n          width: \"100%\",\n          minHeight: 100,\n          minWidth: 300\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        in: true,\n        timeout: 550,\n        classNames: \"list-transition\",\n        unmountOnExit: true,\n        appear: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Transformation\",\n        bordered: false,\n        className: \"activityconfigcard\",\n        extra: /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-cog\",\n          \"aria-hidden\": \"true\",\n          onClick: function onClick() {\n            return _this3.setState({\n              screen: \"Transformation\"\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 88\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"activitycardtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 81\n        }\n      }, \"Status : \", Trans.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"activitycarddrop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 81\n        }\n      }, getFieldDecorator(\"TransformationStatus\", {\n        initialValue: -1\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: \"100%\"\n        },\n        placeholder: \"Select Status\",\n        disabled: !transFormationWorkFlows || transFormationWorkFlows.length === 0 || this.props.isProjectInActive || this.props.study.locked || workflowActivityStatusID === 15,\n        onChange: function onChange(value) {\n          return value !== -1 ? _this3.beforeUpdateTheWorkFlow(value, transFormationWorkFlows) : false;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 91\n        }\n      }, /*#__PURE__*/React.createElement(Select.Option, {\n        value: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 93\n        }\n      }, \"--Select--\"), (transFormationWorkFlows || []).map(function (status) {\n        return /*#__PURE__*/React.createElement(Select.Option, {\n          title: status.targetStatusText,\n          value: status.targetStatusID,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 108\n          }\n        }, status.targetStatusText);\n      })))))))), defineRequired && /*#__PURE__*/React.createElement(Col, {\n        span: annotationRequired && mappingRequried && defineRequired ? 8 : 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\",\n          height: \"100%\",\n          width: \"100%\",\n          minHeight: 100,\n          minWidth: 300\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        in: true,\n        timeout: 600,\n        classNames: \"alert\",\n        unmountOnExit: true,\n        appear: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Define XML\",\n        bordered: false,\n        className: \"activityconfigcard\",\n        extra: /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-cog\",\n          \"aria-hidden\": \"true\",\n          onClick: function onClick() {\n            return _this3.setState({\n              screen: \"Define XML\"\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 88\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"activitycardtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 81\n        }\n      }, \"Status : \", Define.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"activitycarddrop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 81\n        }\n      }, getFieldDecorator(\"DefineStatus\", {\n        initialValue: -1\n      })( /*#__PURE__*/React.createElement(Select, {\n        style: {\n          width: \"100%\"\n        },\n        placeholder: \"Select Status\",\n        disabled: !defineWorkFlows || defineWorkFlows.length === 0 || this.props.isProjectInActive || this.props.study.locked || workflowActivityStatusID === 15,\n        onChange: function onChange(value) {\n          return value !== -1 ? _this3.beforeUpdateTheWorkFlow(value, defineWorkFlows) : false;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 91\n        }\n      }, /*#__PURE__*/React.createElement(Select.Option, {\n        value: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 93\n        }\n      }, \"--Select--\"), (defineWorkFlows || []).map(function (status) {\n        return /*#__PURE__*/React.createElement(Select.Option, {\n          title: status.targetStatusText,\n          value: status.targetStatusID,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 108\n          }\n        }, status.targetStatusText);\n      })))))))))))))), screen === \"Annotation\" && /*#__PURE__*/React.createElement(Annotation, {\n        study: study,\n        isProjectInActive: this.props.isProjectInActive,\n        pdfFiles: pdfFiles,\n        reload: this.reload,\n        cancel: this.cancel,\n        form: this.props.form,\n        updateData: updateData,\n        workflowActivityStatusID: Annot.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 29\n        }\n      }), screen === \"Transformation\" && /*#__PURE__*/React.createElement(Transformation, {\n        study: study,\n        isProjectInActive: this.props.isProjectInActive,\n        reload: this.reload,\n        cancel: this.cancel,\n        updateData: updateData,\n        form: this.props.form,\n        xptLocation: xptLocation,\n        workflowActivityStatusID: Trans.id,\n        rawDatasetLocaton: rawDatasetLocaton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 29\n        }\n      }), screen === \"Define XML\" && /*#__PURE__*/React.createElement(DefineGeneration, {\n        study: study,\n        isProjectInActive: this.props.isProjectInActive,\n        reload: this.reload,\n        cancel: this.cancel,\n        xptLocation: xptLocation,\n        updateData: updateData,\n        form: this.props.form,\n        defineOutputType: defineOutputTypeDropDown,\n        workflowActivityStatusID: Define.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 29\n        }\n      }))), esign && /*#__PURE__*/React.createElement(ConfirmWithEsign, {\n        visible: esign,\n        studyPage: this,\n        defaultValue: \"\",\n        esignText: esignText,\n        cancelEsign: this.cancelEsign,\n        onSubmit: this.afterEsignVerfied,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 26\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProp, currentState) {\n      var visible = newProp.visible;\n      if (visible && !currentState.home) {\n        thisObj.props = newProp;\n        thisObj.getGetActivityConfigurationByStudyID();\n        thisObj.getDDL();\n        return {\n          home: true\n        };\n      }\n    }\n\n    //Cancel\n  }]);\n  return ActivityConfiguration;\n}(Component);\nvar WrappedApp = Form.create()(ActivityConfiguration);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Col","Row","Modal","Card","Form","Select","TreeNode","LayoutContentWrapper","LayoutWrapper","errorModal","showProgress","hideProgress","dynamicModal","CallServerPost","getProjectRole","PostCallWithZone","successModalCallback","errorModalCallback","ConfirmWithEsign","Box","CSSTransition","Annotation","DefineGeneration","Transformation","moment","flexDisplay","display","flexDirection","padding","thisObj","offProgress","ActivityConfiguration","props","initialiseStatus","Annot","text","id","Trans","Define","getGetActivityConfigurationByStudyID","screen","study","workflowObj","StudyWorkflow","WorkflowActivityStatusTransition","currentWrkflwOfStudy","find","w","studyID","currentWorkflowActivityStatusID","workflowActivityStatusID","FormName","ActionName","StudyID","ProjectID","projectID","then","response","status","data","value","annotationWorkFlows","transFormationWorkFlows","defineWorkFlows","ActivityConfigStatusDetailsList","map","activitie","workflowActivityID","AnnotWrkFlw","annotationStatus","AnnotStaus","x","displayText","filter","wrkFlo","sourceStatusID","TransWrkFlw","transformationStatus","TransStaus","DefineWrkFlw","defineStatus","DefineStaus","form","resetFields","setState","updateData","ActivityConfigList","cancel","state","handleCancel","reload","beforeUpdateTheWorkFlow","targetStatusID","Activitie","changedWorkflowToUpdate","wrkflo","selectedActivityWorkflow","wf","changeReason","targetStatusText","workflowActivityStatusTransitionID","title","icon","msg","className","onOk","eSignRequired","esign","workFlowDataToUpdate","esignText","replace","updateWorkFlow","onCancel","afterEsignVerfied","WorkFlow","AnnotationReviewCompleted","TransformationReviewCompleted","DefineGenerationReviewCompleted","StudyCompleted","projectRole","zones","tz","guess","timezone","zoneAbbr","updatedBy","userProfile","userID","TimeZone","UpdatedBy","message","cancelEsign","home","pdfFiles","xptLocation","selectedStatus","rawDatasetLocaton","defineOutputTypeDropDown","activityConfigStatusDetails","studyData","treeLoop","folderOnly","item","children","folder","key","selectable","pdfLocation","sas7BdatLocation","defineOutputType","catch","error","annotationRequired","mappingRequried","defineRequired","getFieldDecorator","studyName","top","minHeight","minWidth","height","width","background","initialValue","locked","isProjectInActive","length","some","va","configurationName","configurationValue","newProp","currentState","visible","getDDL","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Study/ActivityConfig/ActivityConfiguration.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Col,\r\n    Row,\r\n    Modal,\r\n    Card,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport {\r\n    TreeNode\r\n} from '../../../components/uielements/tree';\r\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper';\r\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\r\nimport {\r\n    errorModal,\r\n    showProgress,\r\n    hideProgress,\r\n    dynamicModal,\r\n    CallServerPost,\r\n    getProjectRole,\r\n    PostCallWithZone,\r\n    successModalCallback,\r\n    errorModalCallback,\r\n} from '../../Utility/sharedUtility';\r\nimport ConfirmWithEsign from '../confirmationWithEsign';\r\nimport Box from '../../../components/utility/box';\r\nimport {\r\n    CSSTransition\r\n} from 'react-transition-group';\r\nimport { Annotation } from './Annotation';\r\nimport { DefineGeneration } from './Define';\r\nimport { Transformation } from './Transformation';\r\nimport moment from 'moment-timezone';\r\n\r\n\r\nconst flexDisplay = { display: \"flex\", flexDirection: \"column\", padding: \"6px 0px 10px 0px\" };\r\nlet thisObj = {};\r\nlet offProgress = false;\r\n\r\nclass ActivityConfiguration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =\r\n        {\r\n            screen: \"\",\r\n            home: false,\r\n            esign: false,\r\n            pdfFiles: [],\r\n            esignText: \"\",\r\n            xptLocation: [],\r\n            selectedStatus: \"\",\r\n            changeReason: false,\r\n            defineWorkFlows: [],\r\n            rawDatasetLocaton: [],\r\n            workFlowDataToUpdate: [],\r\n            annotationWorkFlows: [],\r\n            transFormationWorkFlows: [],\r\n            defineOutputTypeDropDown: [],\r\n            activityConfigStatusDetails: [],\r\n            status: this.initialiseStatus(),\r\n            ActivityConfigStatusDetailsList: [],\r\n        };\r\n        thisObj = this;\r\n\r\n    }\r\n\r\n    initialiseStatus = () => {\r\n        return {\r\n            Annot: { text: \"Not yet configured\", id: -1 },\r\n            Trans: { text: \"Not yet configured\", id: -1 },\r\n            Define: { text: \"Not yet configured\", id: -1 },\r\n        }\r\n    }\r\n    //getGetActivityConfigurationByStudyID\r\n    getGetActivityConfigurationByStudyID = (screen = \"\") => {\r\n        const thisObj = this;\r\n        let { study, workflowObj } = thisObj.props;\r\n\r\n        //for filter the dropdown values of Annotation,Transformation,Define\r\n        let { StudyWorkflow, WorkflowActivityStatusTransition } = workflowObj;\r\n        //Selcted study workflow obj\r\n        let currentWrkflwOfStudy = StudyWorkflow.find(w => w.studyID === study.studyID);\r\n        //selected study workflowActivityStatusID\r\n        let currentWorkflowActivityStatusID = currentWrkflwOfStudy && currentWrkflwOfStudy.workflowActivityStatusID;\r\n\r\n        showProgress();\r\n\r\n        CallServerPost('ActivityConfiguration/GetActivityConfigurationByStudyID',\r\n            {\r\n                FormName: \"Study\",\r\n                ActionName: \"Create\",\r\n                StudyID: study.studyID,\r\n                ProjectID: this.props.projectID\r\n            }).then(function (response) {\r\n                //Maintain offProgress why because we are calling two controller simultaneously\r\n                offProgress && hideProgress();\r\n                offProgress = !offProgress;\r\n\r\n                if (response.status === 1)\r\n                {\r\n                    let data = response.value;\r\n                    if (data && typeof data === \"object\") {\r\n                        let status = thisObj.initialiseStatus();\r\n                        let annotationWorkFlows, transFormationWorkFlows, defineWorkFlows;\r\n                        //Set the Status of Annotation,transformation and Define\r\n                        (data.ActivityConfigStatusDetailsList || []).map(activitie => {\r\n                            switch (activitie.workflowActivityID) {\r\n                                //Annotation\r\n                                case 2:\r\n                                    {\r\n                                        let AnnotWrkFlw = data.annotationStatus;\r\n\r\n                                        let AnnotStaus = AnnotWrkFlw && AnnotWrkFlw.find(x => x.workflowActivityStatusID === activitie.workflowActivityStatusID);\r\n\r\n                                        status.Annot =\r\n                                        {\r\n                                            text: AnnotStaus && AnnotStaus.displayText,\r\n                                            id: AnnotStaus && AnnotStaus.workflowActivityStatusID && AnnotStaus.workflowActivityStatusID\r\n                                        }\r\n                                        //filter workflow based on current activitie workflowActivityStatusID                   \r\n                                        annotationWorkFlows = WorkflowActivityStatusTransition.filter(wrkFlo => {\r\n                                            return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID\r\n                                        });\r\n\r\n                                    }\r\n                                    break;\r\n                                //Transformation\r\n                                case 3:\r\n                                    {\r\n                                        let TransWrkFlw = data.transformationStatus;\r\n                                        let TransStaus = TransWrkFlw && TransWrkFlw.find(x => x.workflowActivityStatusID === activitie.workflowActivityStatusID);\r\n                                        status.Trans =\r\n                                        {\r\n                                            text: TransStaus && TransStaus.displayText,\r\n                                            id: TransStaus && TransStaus.workflowActivityStatusID && TransStaus.workflowActivityStatusID\r\n                                        }\r\n                                        //filter workflow based on current activitie workflowActivityStatusID                       \r\n                                        transFormationWorkFlows = WorkflowActivityStatusTransition.filter(wrkFlo => {\r\n                                            return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                                //Define\r\n                                case 4:\r\n                                    {\r\n                                        let DefineWrkFlw = data.defineStatus;\r\n                                        let DefineStaus = DefineWrkFlw && DefineWrkFlw.find(x => x.workflowActivityStatusID === activitie.workflowActivityStatusID);\r\n                                        status.Define =\r\n                                        {\r\n                                            text: DefineStaus && DefineStaus.displayText,\r\n                                            id: DefineStaus && DefineStaus.workflowActivityStatusID && DefineStaus.workflowActivityStatusID\r\n                                        }\r\n\r\n                                        //filter workflow based on current activitie workflowActivityStatusID                       \r\n                                        defineWorkFlows = WorkflowActivityStatusTransition.filter(wrkFlo => {\r\n                                            return wrkFlo.sourceStatusID === activitie.workflowActivityStatusID\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n                        });\r\n\r\n                        //the following line is used only for when save the activity config\r\n                        //have to reset the selected dropdown values\r\n                           thisObj.props.form.resetFields(); \r\n                        //end\r\n\r\n                        thisObj.setState({\r\n                            status,\r\n                            screen: \"Home\",\r\n                            updateData: data.ActivityConfigList,\r\n                            defineWorkFlows: defineWorkFlows,\r\n                            annotationWorkFlows: annotationWorkFlows,\r\n                            transFormationWorkFlows: transFormationWorkFlows,\r\n                            ActivityConfigStatusDetailsList: data.ActivityConfigStatusDetailsList,\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    hideProgress();\r\n                    thisObj.setState({\r\n                        screen: \"Home\",\r\n                        updateData: [],\r\n                        defineWorkFlows: [],\r\n                        annotationWorkFlows: [],\r\n                        transFormationWorkFlows: [],\r\n                        status: thisObj.initialiseStatus(),\r\n                        ActivityConfigStatusDetailsList: [],\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    getDDL() {\r\n        const thisObj = this;\r\n        let { study } = thisObj.props;\r\n        showProgress();\r\n\r\n        //console.log(\"Sometimes Values are not coming for options\");\r\n        //console.log(study.studyID);\r\n        //console.log(this.props.projectID);\r\n\r\n        CallServerPost('ActivityConfiguration/GetValuesForCreateActivityConfiguration', {\r\n            FormName: \"Study\",\r\n            ActionName: \"Create\",\r\n            StudyID: study.studyID,\r\n            ProjectID: this.props.projectID\r\n        }).then(\r\n            function (response) {\r\n                //console.log(response);\r\n                //Maintain offProgress why because we are calling two controller simultaneously\r\n                offProgress && hideProgress();\r\n                offProgress = !offProgress;\r\n\r\n                if (response.status === 1) {\r\n                    const studyData = response.value;\r\n                    const treeLoop = (data, folderOnly) =>\r\n                        data.map(item => {\r\n                            if (item.children) {\r\n                                return (\r\n                                    <TreeNode selectable={folderOnly && item.folder} key={item.key} value={item.key} title={item.title}>\r\n                                        {treeLoop(item.children, folderOnly)}\r\n                                    </TreeNode>\r\n                                );\r\n                            }\r\n                            else {\r\n                                var selectable = true;\r\n                                if (folderOnly && !item.folder) {\r\n                                    selectable = false;\r\n                                }\r\n                                if (item.key !== studyData[\"protocolDoc\"]) {\r\n                                    return <TreeNode selectable={selectable} key={item.key} value={item.key} title={item.title} />;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n\r\n                    //Annotatoin,TransFormation,Define Dropdown values\r\n\r\n                    //for Annotation CRFDocument\r\n                    const pdfFiles = treeLoop([studyData[\"DocumentsTree\"].pdfLocation], false);\r\n\r\n                    //for transformation Output Standardized Dataset Location\r\n                    //for Define Standardized Dataset Location\r\n                    const xptLocation = treeLoop([studyData[\"DocumentsTree\"].xptLocation], true);\r\n\r\n                    //for Transformation Raw Dataset Location\r\n                    const rawDatasetLocaton = treeLoop([studyData[\"DocumentsTree\"].sas7BdatLocation], true);\r\n\r\n                    thisObj.setState(\r\n                        {\r\n                            screen: \"Home\",\r\n                            pdfFiles: pdfFiles,\r\n                            xptLocation: xptLocation,\r\n                            rawDatasetLocaton: rawDatasetLocaton,\r\n                            defineOutputTypeDropDown: studyData.defineOutputType,\r\n                        });\r\n                }\r\n                else {\r\n                    thisObj.setState(\r\n                        {\r\n                            screen: \"Home\",\r\n                            pdfFiles: [],\r\n                            xptLocation: [],\r\n                            rawDatasetLocaton: [],\r\n                            defineOutputTypeDropDown: [],\r\n                        });\r\n                }\r\n            }).catch(error => error);\r\n    }\r\n\r\n    //this code to cancel the popup when click cancel\r\n    static getDerivedStateFromProps(newProp, currentState) {\r\n        let { visible } = newProp;\r\n\r\n        if (visible && !currentState.home) {\r\n            thisObj.props = newProp;\r\n            thisObj.getGetActivityConfigurationByStudyID();\r\n            thisObj.getDDL();\r\n            return {\r\n                home: true\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //Cancel\r\n    cancel = () => {\r\n        let { screen } = this.state;\r\n        switch (screen) {\r\n            case \"Home\":\r\n                return this.props.handleCancel();\r\n            default:\r\n                return thisObj.setState({ screen: \"Home\" });\r\n        }\r\n    }\r\n\r\n    //reload \r\n    //this will used by Annotation, Transformation and Define when succesfully saved\r\n    reload = () => {\r\n        offProgress = true;\r\n       this.getGetActivityConfigurationByStudyID(\"Home\")\r\n    }\r\n\r\n\r\n\r\n\r\n    //workflow Start\r\n    //Before update\r\n    beforeUpdateTheWorkFlow = (targetStatusID, Activitie) => {\r\n\r\n        //Selcted study workflow obj\r\n        let { study, workflowObj } = thisObj.props;\r\n\r\n        let { ActivityConfigStatusDetailsList } = this.state;\r\n\r\n        // current workflow of study\r\n        //Current study workflowActivityID, workflowActivityStatusID\r\n        //let { StudyWorkflow, WorkflowActivityStatusTransition } = workflowObj;\r\n\r\n        //let selctedStudyWorkflow = StudyWorkflow.find(wf => wf.studyID === study.studyID);\r\n\r\n        //let { workflowActivityID, workflowActivityStatusID } = selctedStudyWorkflow;\r\n\r\n        //Workflow going to change to\r\n        //Get workflowActivityStatusTransitionID\r\n        //wrkflo.sourceStatusID means workflowActivityStatusID\r\n\r\n        //let changedWorkflowToUpdate = WorkflowActivityStatusTransition.find(wrkflo => wrkflo.targetStatusID === targetStatusID);\r\n\r\n        let changedWorkflowToUpdate = Activitie && Activitie.find(wrkflo => wrkflo.targetStatusID === targetStatusID);\r\n        let selectedActivityWorkflow = changedWorkflowToUpdate && ActivityConfigStatusDetailsList.find(wf => wf.workflowActivityStatusID == changedWorkflowToUpdate.sourceStatusID);\r\n        let { workflowActivityID, workflowActivityStatusID } = selectedActivityWorkflow;\r\n\r\n        let data =\r\n        {\r\n            studyID: study.studyID,\r\n            projectID: study.projectID,\r\n            workflowActivityID: workflowActivityID,\r\n            //targetStatusID means selected Workflow workflowActivityStatusID\r\n            workflowActivityStatusID: targetStatusID,\r\n            changeReason: changedWorkflowToUpdate.targetStatusText,\r\n            workflowActivityStatusTransitionID: changedWorkflowToUpdate.workflowActivityStatusTransitionID\r\n        }\r\n        dynamicModal({\r\n            title: \"Confirmation\",\r\n            icon: \"exclamation-circle\",\r\n            msg: \"Do you want to change the status?\",\r\n            className: \"UserAssignedPop\",\r\n\r\n            onOk: () => {\r\n                if (changedWorkflowToUpdate.eSignRequired) {\r\n                    showProgress();\r\n                    thisObj.setState({\r\n                        esign: true,\r\n                        workFlowDataToUpdate: data,\r\n                        esignText: thisObj.esignText(changedWorkflowToUpdate.targetStatusText.replace(/\\s/g, ''))\r\n                    });\r\n                    hideProgress();\r\n                }\r\n                else {\r\n                    thisObj.updateWorkFlow(data);\r\n                }\r\n            },\r\n            onCancel: () => {\r\n                thisObj.props.form.resetFields();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //After Esifn verify\r\n    afterEsignVerfied = () => {\r\n        let { workFlowDataToUpdate } = thisObj.state;\r\n        workFlowDataToUpdate[\"eSignVerified\"] = true;\r\n        thisObj.updateWorkFlow(workFlowDataToUpdate);\r\n    }\r\n\r\n    //Get Manual Esign text\r\n    esignText = (WorkFlow) => {\r\n        let text =\r\n        {\r\n            AnnotationReviewCompleted: \"I have reviewed this annotated document.\",\r\n            TransformationReviewCompleted: \"I have reviewed the mapping logic and verified the transformed output.\",\r\n            DefineGenerationReviewCompleted: \"I have reviewed generated define XML.\",\r\n            StudyCompleted: \"all the information that are present in the study is reviewed and completed without any errors.\",\r\n        }\r\n\r\n        return text[WorkFlow];\r\n    }\r\n\r\n\r\n    //Final\r\n    updateWorkFlow = (data) => {\r\n\r\n        const projectRole = getProjectRole();\r\n        const zones = moment.tz.guess();\r\n        const timezone = moment.tz(zones).zoneAbbr();\r\n        let updatedBy = projectRole.userProfile.userID;\r\n        data.TimeZone = timezone;\r\n        data.UpdatedBy = updatedBy;\r\n\r\n        showProgress();\r\n        PostCallWithZone(\"StudyWorkflow/UpdateWFAStatus\", data).then(\r\n            function (response) {\r\n                hideProgress();\r\n                if (response.status == 1) {\r\n\r\n                    thisObj.setState({ esign: false });\r\n                    successModalCallback(response.message, () => { thisObj.reload() });\r\n                }\r\n                else {\r\n                    thisObj.props.form.resetFields();\r\n                    thisObj.setState({ esign: false });\r\n                    errorModalCallback(response.message, () => {\r\n                        thisObj.props.form.resetFields();\r\n                });\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    cancelEsign = (studyID) => {\r\n        thisObj.props.form.resetFields();\r\n        this.setState({ esign: false });\r\n    }\r\n    render() {\r\n        let {\r\n            home,\r\n            esign,\r\n            status,\r\n            screen,\r\n            pdfFiles,\r\n            esignText,\r\n            updateData,\r\n            xptLocation,\r\n            changeReason,\r\n            defineWorkFlows,\r\n            rawDatasetLocaton,\r\n            annotationWorkFlows,\r\n            transFormationWorkFlows,\r\n            defineOutputTypeDropDown,\r\n        } = this.state;\r\n\r\n        let { Annot, Trans, Define } = status;\r\n        let { study } = this.props;\r\n\r\n        let { annotationRequired, mappingRequried, defineRequired, workflowActivityStatusID} = study;\r\n\r\n        let { getFieldDecorator } = this.props.form;\r\n\r\n        let title = this.props.studyName + \" - Activity Configuration \" + (screen !== \"Home\" ? (\"- \" + screen) : \"\");\r\n\r\n        return (<>\r\n            { screen !== \"\" &&\r\n                <Modal\r\n                    visible={home}\r\n                    title={title}\r\n                    onCancel={this.cancel}\r\n                    maskClosable={false}\r\n                    style={{ top: 20, minHeight: 400 }}\r\n                    centered\r\n                    width={screen === \"Home\" ? 'auto' : \"70%\"}\r\n                    footer={null}\r\n                >\r\n                    <LayoutWrapper id=\"treeview_layout\" >\r\n\r\n                        {screen === \"Home\" &&\r\n\r\n                            <Box style={{ minWidth: 700, ...flexDisplay }}>\r\n                                {\r\n                                    <Row style={{ display: \"flex\", flexDirection: \"column\", height: '100%' }}>\r\n                                        <Col style={{ height: \"100%\" }}>\r\n                                            <LayoutContentWrapper style={{ height: \"100%\", width: \"100%\" }} >\r\n                                                {\r\n                                                    <div style={{ background: '#ECECEC', padding: '50px', height: \"100%\", width: '100%' }}>\r\n                                                        <Row gutter={16}>\r\n                                                            {\r\n                                                                annotationRequired &&\r\n                                                                <Col span={(annotationRequired && mappingRequried && defineRequired) ? 8 : 12}>\r\n                                                                    <div style={{ display: \"inline-block\", height: \"100%\", width: \"100%\", minHeight: 100, minWidth: 300 }} >\r\n                                                                        <CSSTransition\r\n                                                                            in={true}\r\n                                                                            timeout={500}\r\n                                                                            classNames=\"alert\"\r\n                                                                            unmountOnExit\r\n                                                                            appear\r\n                                                                        >\r\n                                                                            <Card\r\n                                                                                title=\"Annotation\"\r\n                                                                                bordered={false}\r\n                                                                                className={\"activityconfigcard\"}\r\n                                                                                extra={\r\n                                                                                    <i\r\n                                                                                        className=\"fa fa-cog\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        onClick={() => this.setState({ screen: \"Annotation\" })}\r\n                                                                                    >\r\n                                                                                    </i>}\r\n                                                                            >\r\n                                                                                <div className={\"activitycardtext\"}>\r\n                                                                                    Status : {Annot.text}\r\n                                                                                </div>\r\n                                                                                <div className={\"activitycarddrop\"}>\r\n                                                                                    {\r\n                                                                                        getFieldDecorator(\"AnnotationStatus\", {\r\n                                                                                            initialValue: -1\r\n                                                                                        }\r\n                                                                                        )(<Select\r\n                                                                                            style={{ width: \"100%\" }}\r\n                                                                                            placeholder=\"Select Status\"\r\n                                                                                            disabled={\r\n                                                                                                !annotationWorkFlows ||\r\n                                                                                                this.props.study.locked ||\r\n                                                                                                workflowActivityStatusID === 15 ||\r\n                                                                                                this.props.isProjectInActive ||\r\n                                                                                                annotationWorkFlows.length === 0 ||\r\n                                                                                                (updateData &&\r\n                                                                                                 !updateData.some(va => va.configurationName === \"AnnotationRequired\" &&\r\n                                                                                                va.configurationValue === \"true\"))\r\n                                                                                                }\r\n                                                                                            onChange={(value) => {\r\n                                                                                                return value !== -1 ?\r\n                                                                                                    this.beforeUpdateTheWorkFlow(value, annotationWorkFlows) :\r\n                                                                                                    false\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <Select.Option\r\n\r\n                                                                                                value={-1}\r\n                                                                                            >\r\n                                                                                                --Select--\r\n                                                                                            </Select.Option>\r\n                                                                                            {(annotationWorkFlows || []).map((status) => {\r\n                                                                                                return <Select.Option\r\n                                                                                                    title={status.targetStatusText}\r\n                                                                                                    value={status.targetStatusID}\r\n                                                                                                >\r\n                                                                                                    {status.targetStatusText}\r\n                                                                                                </Select.Option>\r\n                                                                                            })\r\n                                                                                            }\r\n                                                                                        </Select>)}\r\n                                                                                </div>\r\n                                                                            </Card>\r\n                                                                        </CSSTransition>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            {\r\n                                                                mappingRequried &&\r\n                                                                <Col span={(annotationRequired && mappingRequried && defineRequired) ? 8 : 12}>\r\n                                                                    <div style={{ display: \"inline-block\", height: \"100%\", width: \"100%\", minHeight: 100, minWidth: 300 }} >\r\n                                                                        <CSSTransition\r\n                                                                            in={true}\r\n                                                                            timeout={550}\r\n                                                                            classNames=\"list-transition\"\r\n                                                                            unmountOnExit\r\n                                                                            appear\r\n                                                                        >\r\n                                                                            <Card\r\n                                                                                title=\"Transformation\"\r\n                                                                                bordered={false}\r\n                                                                                className={\"activityconfigcard\"}\r\n                                                                                extra={<i\r\n                                                                                    className=\"fa fa-cog\"\r\n                                                                                    aria-hidden=\"true\"\r\n                                                                                    onClick={() => this.setState({ screen: \"Transformation\" })}\r\n                                                                                ></i>}\r\n                                                                            >\r\n                                                                                <div className={\"activitycardtext\"}>\r\n                                                                                    Status : {Trans.text}\r\n                                                                                </div>\r\n                                                                                <div className={\"activitycarddrop\"}>\r\n                                                                                    {\r\n                                                                                        getFieldDecorator(\"TransformationStatus\", {\r\n                                                                                            initialValue: -1\r\n                                                                                        }\r\n                                                                                        )(<Select\r\n                                                                                            style={{ width: \"100%\" }}\r\n                                                                                            placeholder=\"Select Status\"\r\n                                                                                            disabled={!transFormationWorkFlows ||\r\n                                                                                                transFormationWorkFlows.length === 0 ||\r\n                                                                                                this.props.isProjectInActive ||\r\n                                                                                                this.props.study.locked ||\r\n                                                                                                workflowActivityStatusID === 15\r\n                                                                                            }\r\n                                                                                            onChange={(value) => {\r\n                                                                                                return value !== -1 ?\r\n                                                                                                    this.beforeUpdateTheWorkFlow(value, transFormationWorkFlows) : false\r\n                                                                                            }\r\n                                                                                            }>\r\n                                                                                            <Select.Option\r\n\r\n                                                                                                value={-1}\r\n                                                                                            >\r\n                                                                                                --Select--\r\n                                                                                          </Select.Option>\r\n                                                                                            {\r\n                                                                                                (transFormationWorkFlows || []).map((status) => {\r\n                                                                                                    return <Select.Option\r\n                                                                                                        title={status.targetStatusText}\r\n                                                                                                        value={status.targetStatusID}\r\n                                                                                                    >\r\n                                                                                                        {status.targetStatusText}\r\n                                                                                                    </Select.Option>\r\n                                                                                                })\r\n                                                                                            }\r\n                                                                                        </Select>)}\r\n                                                                                </div>\r\n                                                                            </Card>\r\n                                                                        </CSSTransition>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            {\r\n                                                                defineRequired &&\r\n                                                                <Col span={(annotationRequired && mappingRequried && defineRequired) ? 8 : 12}>\r\n                                                                    <div style={{ display: \"inline-block\", height: \"100%\", width: \"100%\", minHeight: 100, minWidth: 300 }} >\r\n                                                                        <CSSTransition\r\n                                                                            in={true}\r\n                                                                            timeout={600}\r\n                                                                            classNames=\"alert\"\r\n                                                                            unmountOnExit\r\n                                                                            appear\r\n                                                                        >\r\n                                                                            <Card\r\n                                                                                title=\"Define XML\"\r\n                                                                                bordered={false}\r\n                                                                                className={\"activityconfigcard\"}\r\n                                                                                extra={<i\r\n                                                                                    className=\"fa fa-cog\"\r\n                                                                                    aria-hidden=\"true\"\r\n                                                                                    onClick={() => this.setState({ screen: \"Define XML\" })}\r\n                                                                                >\r\n                                                                                </i>}>\r\n                                                                                <div className={\"activitycardtext\"}>\r\n                                                                                    Status : {Define.text}\r\n                                                                                </div>\r\n                                                                                <div className={\"activitycarddrop\"}>\r\n                                                                                    {\r\n                                                                                        getFieldDecorator(\"DefineStatus\", {\r\n                                                                                            initialValue: -1\r\n                                                                                        }\r\n                                                                                        )(<Select\r\n                                                                                            style={{ width: \"100%\" }}\r\n                                                                                            placeholder=\"Select Status\"\r\n                                                                                            disabled={\r\n                                                                                                !defineWorkFlows ||\r\n                                                                                                defineWorkFlows.length === 0 ||\r\n                                                                                                this.props.isProjectInActive ||\r\n                                                                                                this.props.study.locked ||\r\n                                                                                                workflowActivityStatusID === 15 \r\n}\r\n                                                                                            onChange={(value) => {\r\n                                                                                                return value !== -1 ?\r\n                                                                                                    this.beforeUpdateTheWorkFlow(value, defineWorkFlows) : false\r\n                                                                                            }\r\n                                                                                            }>\r\n                                                                                            <Select.Option\r\n                                                                                                value={-1}\r\n                                                                                            >\r\n                                                                                                --Select--\r\n                                                                                             </Select.Option>\r\n                                                                                            {\r\n                                                                                                (defineWorkFlows || []).map((status) => {\r\n                                                                                                    return <Select.Option\r\n                                                                                                        title={status.targetStatusText}\r\n                                                                                                        value={status.targetStatusID}\r\n                                                                                                    >\r\n                                                                                                        {status.targetStatusText}\r\n                                                                                                    </Select.Option>\r\n                                                                                                })\r\n                                                                                            }\r\n                                                                                        </Select>)}\r\n                                                                                </div>\r\n                                                                            </Card>\r\n                                                                        </CSSTransition>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            }\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                }\r\n                                            </LayoutContentWrapper>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                            </Box>\r\n                        }\r\n                        {\r\n                            screen === \"Annotation\" &&\r\n\r\n                            <Annotation\r\n                                study={study}\r\n                                isProjectInActive={this.props.isProjectInActive}\r\n                                pdfFiles={pdfFiles}\r\n                                reload={this.reload}\r\n                                cancel={this.cancel}\r\n                                form={this.props.form}\r\n                                updateData={updateData}\r\n                                workflowActivityStatusID={Annot.id}\r\n                            />\r\n                        }\r\n                        {\r\n                            screen === \"Transformation\" &&\r\n                            <Transformation\r\n                                study={study}\r\n                                isProjectInActive={this.props.isProjectInActive}\r\n                                reload={this.reload}\r\n                                cancel={this.cancel}\r\n                                updateData={updateData}\r\n                                form={this.props.form}\r\n                                xptLocation={xptLocation}\r\n                                workflowActivityStatusID={Trans.id}\r\n                                rawDatasetLocaton={rawDatasetLocaton}\r\n                            />\r\n                        }\r\n                        {\r\n                            screen === \"Define XML\" &&\r\n                            <DefineGeneration\r\n                                study={study}\r\n                                isProjectInActive={this.props.isProjectInActive}\r\n                                reload={this.reload}\r\n                                cancel={this.cancel}\r\n                                xptLocation={xptLocation}\r\n                                updateData={updateData}\r\n                                form={this.props.form}\r\n                                defineOutputType={defineOutputTypeDropDown}\r\n                                workflowActivityStatusID={Define.id}\r\n\r\n                            />\r\n                        }\r\n                    </LayoutWrapper>\r\n                </Modal>\r\n            }\r\n            {\r\n                esign && <ConfirmWithEsign\r\n                    visible={esign}\r\n                    studyPage={this}\r\n                    defaultValue={\"\"}\r\n                    esignText={esignText}\r\n                    cancelEsign={this.cancelEsign}\r\n                    onSubmit={this.afterEsignVerfied}\r\n                />\r\n            }\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedApp = Form.create()(ActivityConfiguration);\r\n\r\nexport default WrappedApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}