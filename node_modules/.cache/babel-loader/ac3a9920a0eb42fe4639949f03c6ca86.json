{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nexport var FIN = {\n  done: true,\n  value: undefined\n};\nexport var Iterator;\n(function (Iterator) {\n  var _empty = {\n    next: function next() {\n      return FIN;\n    }\n  };\n  function empty() {\n    return _empty;\n  }\n  Iterator.empty = empty;\n  function single(value) {\n    var done = false;\n    return {\n      next: function next() {\n        if (done) {\n          return FIN;\n        }\n        done = true;\n        return {\n          done: false,\n          value: value\n        };\n      }\n    };\n  }\n  Iterator.single = single;\n  function fromArray(array, index, length) {\n    if (index === void 0) {\n      index = 0;\n    }\n    if (length === void 0) {\n      length = array.length;\n    }\n    return {\n      next: function next() {\n        if (index >= length) {\n          return FIN;\n        }\n        return {\n          done: false,\n          value: array[index++]\n        };\n      }\n    };\n  }\n  Iterator.fromArray = fromArray;\n  function fromNativeIterator(it) {\n    return {\n      next: function next() {\n        var result = it.next();\n        if (result.done) {\n          return FIN;\n        }\n        return {\n          done: false,\n          value: result.value\n        };\n      }\n    };\n  }\n  Iterator.fromNativeIterator = fromNativeIterator;\n  function from(elements) {\n    if (!elements) {\n      return Iterator.empty();\n    } else if (Array.isArray(elements)) {\n      return Iterator.fromArray(elements);\n    } else {\n      return elements;\n    }\n  }\n  Iterator.from = from;\n  function map(iterator, fn) {\n    return {\n      next: function next() {\n        var element = iterator.next();\n        if (element.done) {\n          return FIN;\n        } else {\n          return {\n            done: false,\n            value: fn(element.value)\n          };\n        }\n      }\n    };\n  }\n  Iterator.map = map;\n  function filter(iterator, fn) {\n    return {\n      next: function next() {\n        while (true) {\n          var element = iterator.next();\n          if (element.done) {\n            return FIN;\n          }\n          if (fn(element.value)) {\n            return {\n              done: false,\n              value: element.value\n            };\n          }\n        }\n      }\n    };\n  }\n  Iterator.filter = filter;\n  function forEach(iterator, fn) {\n    for (var next = iterator.next(); !next.done; next = iterator.next()) {\n      fn(next.value);\n    }\n  }\n  Iterator.forEach = forEach;\n  function collect(iterator, atMost) {\n    if (atMost === void 0) {\n      atMost = Number.POSITIVE_INFINITY;\n    }\n    var result = [];\n    if (atMost === 0) {\n      return result;\n    }\n    var i = 0;\n    for (var next = iterator.next(); !next.done; next = iterator.next()) {\n      result.push(next.value);\n      if (++i >= atMost) {\n        break;\n      }\n    }\n    return result;\n  }\n  Iterator.collect = collect;\n  function concat() {\n    var iterators = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      iterators[_i] = arguments[_i];\n    }\n    var i = 0;\n    return {\n      next: function next() {\n        if (i >= iterators.length) {\n          return FIN;\n        }\n        var iterator = iterators[i];\n        var result = iterator.next();\n        if (result.done) {\n          i++;\n          return this.next();\n        }\n        return result;\n      }\n    };\n  }\n  Iterator.concat = concat;\n  function chain(iterator) {\n    return new ChainableIterator(iterator);\n  }\n  Iterator.chain = chain;\n})(Iterator || (Iterator = {}));\nvar ChainableIterator = /** @class */function () {\n  function ChainableIterator(it) {\n    this.it = it;\n  }\n  ChainableIterator.prototype.next = function () {\n    return this.it.next();\n  };\n  return ChainableIterator;\n}();\nexport { ChainableIterator };\nexport function getSequenceIterator(arg) {\n  if (Array.isArray(arg)) {\n    return Iterator.fromArray(arg);\n  } else if (!arg) {\n    return Iterator.empty();\n  } else {\n    return arg;\n  }\n}\nvar ArrayIterator = /** @class */function () {\n  function ArrayIterator(items, start, end, index) {\n    if (start === void 0) {\n      start = 0;\n    }\n    if (end === void 0) {\n      end = items.length;\n    }\n    if (index === void 0) {\n      index = start - 1;\n    }\n    this.items = items;\n    this.start = start;\n    this.end = end;\n    this.index = index;\n  }\n  ArrayIterator.prototype.first = function () {\n    this.index = this.start;\n    return this.current();\n  };\n  ArrayIterator.prototype.next = function () {\n    this.index = Math.min(this.index + 1, this.end);\n    return this.current();\n  };\n  ArrayIterator.prototype.current = function () {\n    if (this.index === this.start - 1 || this.index === this.end) {\n      return null;\n    }\n    return this.items[this.index];\n  };\n  return ArrayIterator;\n}();\nexport { ArrayIterator };\nvar ArrayNavigator = /** @class */function (_super) {\n  __extends(ArrayNavigator, _super);\n  function ArrayNavigator(items, start, end, index) {\n    if (start === void 0) {\n      start = 0;\n    }\n    if (end === void 0) {\n      end = items.length;\n    }\n    if (index === void 0) {\n      index = start - 1;\n    }\n    return _super.call(this, items, start, end, index) || this;\n  }\n  ArrayNavigator.prototype.current = function () {\n    return _super.prototype.current.call(this);\n  };\n  ArrayNavigator.prototype.previous = function () {\n    this.index = Math.max(this.index - 1, this.start - 1);\n    return this.current();\n  };\n  ArrayNavigator.prototype.first = function () {\n    this.index = this.start;\n    return this.current();\n  };\n  ArrayNavigator.prototype.last = function () {\n    this.index = this.end - 1;\n    return this.current();\n  };\n  ArrayNavigator.prototype.parent = function () {\n    return null;\n  };\n  return ArrayNavigator;\n}(ArrayIterator);\nexport { ArrayNavigator };\nvar MappedIterator = /** @class */function () {\n  function MappedIterator(iterator, fn) {\n    this.iterator = iterator;\n    this.fn = fn;\n    // noop\n  }\n\n  MappedIterator.prototype.next = function () {\n    return this.fn(this.iterator.next());\n  };\n  return MappedIterator;\n}();\nexport { MappedIterator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","FIN","done","value","undefined","Iterator","_empty","next","empty","single","fromArray","array","index","length","fromNativeIterator","it","result","from","elements","isArray","map","iterator","fn","element","filter","forEach","collect","atMost","Number","POSITIVE_INFINITY","i","push","concat","iterators","_i","arguments","chain","ChainableIterator","getSequenceIterator","arg","ArrayIterator","items","start","end","first","current","Math","min","ArrayNavigator","_super","call","previous","max","last","parent","MappedIterator"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/base/common/iterator.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexport var FIN = { done: true, value: undefined };\r\nexport var Iterator;\r\n(function (Iterator) {\r\n    var _empty = {\r\n        next: function () {\r\n            return FIN;\r\n        }\r\n    };\r\n    function empty() {\r\n        return _empty;\r\n    }\r\n    Iterator.empty = empty;\r\n    function single(value) {\r\n        var done = false;\r\n        return {\r\n            next: function () {\r\n                if (done) {\r\n                    return FIN;\r\n                }\r\n                done = true;\r\n                return { done: false, value: value };\r\n            }\r\n        };\r\n    }\r\n    Iterator.single = single;\r\n    function fromArray(array, index, length) {\r\n        if (index === void 0) { index = 0; }\r\n        if (length === void 0) { length = array.length; }\r\n        return {\r\n            next: function () {\r\n                if (index >= length) {\r\n                    return FIN;\r\n                }\r\n                return { done: false, value: array[index++] };\r\n            }\r\n        };\r\n    }\r\n    Iterator.fromArray = fromArray;\r\n    function fromNativeIterator(it) {\r\n        return {\r\n            next: function () {\r\n                var result = it.next();\r\n                if (result.done) {\r\n                    return FIN;\r\n                }\r\n                return { done: false, value: result.value };\r\n            }\r\n        };\r\n    }\r\n    Iterator.fromNativeIterator = fromNativeIterator;\r\n    function from(elements) {\r\n        if (!elements) {\r\n            return Iterator.empty();\r\n        }\r\n        else if (Array.isArray(elements)) {\r\n            return Iterator.fromArray(elements);\r\n        }\r\n        else {\r\n            return elements;\r\n        }\r\n    }\r\n    Iterator.from = from;\r\n    function map(iterator, fn) {\r\n        return {\r\n            next: function () {\r\n                var element = iterator.next();\r\n                if (element.done) {\r\n                    return FIN;\r\n                }\r\n                else {\r\n                    return { done: false, value: fn(element.value) };\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Iterator.map = map;\r\n    function filter(iterator, fn) {\r\n        return {\r\n            next: function () {\r\n                while (true) {\r\n                    var element = iterator.next();\r\n                    if (element.done) {\r\n                        return FIN;\r\n                    }\r\n                    if (fn(element.value)) {\r\n                        return { done: false, value: element.value };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Iterator.filter = filter;\r\n    function forEach(iterator, fn) {\r\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\r\n            fn(next.value);\r\n        }\r\n    }\r\n    Iterator.forEach = forEach;\r\n    function collect(iterator, atMost) {\r\n        if (atMost === void 0) { atMost = Number.POSITIVE_INFINITY; }\r\n        var result = [];\r\n        if (atMost === 0) {\r\n            return result;\r\n        }\r\n        var i = 0;\r\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\r\n            result.push(next.value);\r\n            if (++i >= atMost) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    Iterator.collect = collect;\r\n    function concat() {\r\n        var iterators = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            iterators[_i] = arguments[_i];\r\n        }\r\n        var i = 0;\r\n        return {\r\n            next: function () {\r\n                if (i >= iterators.length) {\r\n                    return FIN;\r\n                }\r\n                var iterator = iterators[i];\r\n                var result = iterator.next();\r\n                if (result.done) {\r\n                    i++;\r\n                    return this.next();\r\n                }\r\n                return result;\r\n            }\r\n        };\r\n    }\r\n    Iterator.concat = concat;\r\n    function chain(iterator) {\r\n        return new ChainableIterator(iterator);\r\n    }\r\n    Iterator.chain = chain;\r\n})(Iterator || (Iterator = {}));\r\nvar ChainableIterator = /** @class */ (function () {\r\n    function ChainableIterator(it) {\r\n        this.it = it;\r\n    }\r\n    ChainableIterator.prototype.next = function () { return this.it.next(); };\r\n    return ChainableIterator;\r\n}());\r\nexport { ChainableIterator };\r\nexport function getSequenceIterator(arg) {\r\n    if (Array.isArray(arg)) {\r\n        return Iterator.fromArray(arg);\r\n    }\r\n    else if (!arg) {\r\n        return Iterator.empty();\r\n    }\r\n    else {\r\n        return arg;\r\n    }\r\n}\r\nvar ArrayIterator = /** @class */ (function () {\r\n    function ArrayIterator(items, start, end, index) {\r\n        if (start === void 0) { start = 0; }\r\n        if (end === void 0) { end = items.length; }\r\n        if (index === void 0) { index = start - 1; }\r\n        this.items = items;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.index = index;\r\n    }\r\n    ArrayIterator.prototype.first = function () {\r\n        this.index = this.start;\r\n        return this.current();\r\n    };\r\n    ArrayIterator.prototype.next = function () {\r\n        this.index = Math.min(this.index + 1, this.end);\r\n        return this.current();\r\n    };\r\n    ArrayIterator.prototype.current = function () {\r\n        if (this.index === this.start - 1 || this.index === this.end) {\r\n            return null;\r\n        }\r\n        return this.items[this.index];\r\n    };\r\n    return ArrayIterator;\r\n}());\r\nexport { ArrayIterator };\r\nvar ArrayNavigator = /** @class */ (function (_super) {\r\n    __extends(ArrayNavigator, _super);\r\n    function ArrayNavigator(items, start, end, index) {\r\n        if (start === void 0) { start = 0; }\r\n        if (end === void 0) { end = items.length; }\r\n        if (index === void 0) { index = start - 1; }\r\n        return _super.call(this, items, start, end, index) || this;\r\n    }\r\n    ArrayNavigator.prototype.current = function () {\r\n        return _super.prototype.current.call(this);\r\n    };\r\n    ArrayNavigator.prototype.previous = function () {\r\n        this.index = Math.max(this.index - 1, this.start - 1);\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.first = function () {\r\n        this.index = this.start;\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.last = function () {\r\n        this.index = this.end - 1;\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.parent = function () {\r\n        return null;\r\n    };\r\n    return ArrayNavigator;\r\n}(ArrayIterator));\r\nexport { ArrayNavigator };\r\nvar MappedIterator = /** @class */ (function () {\r\n    function MappedIterator(iterator, fn) {\r\n        this.iterator = iterator;\r\n        this.fn = fn;\r\n        // noop\r\n    }\r\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\r\n    return MappedIterator;\r\n}());\r\nexport { MappedIterator };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}