{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorActiveIndentGuides, editorIndentGuides } from '../../../common/view/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nvar IndentGuidesOverlay = /** @class */function (_super) {\n  __extends(IndentGuidesOverlay, _super);\n  function IndentGuidesOverlay(context) {\n    var _this = _super.call(this) || this;\n    _this._context = context;\n    _this._primaryLineNumber = 0;\n    var options = _this._context.configuration.options;\n    var wrappingInfo = options.get(108 /* wrappingInfo */);\n    var fontInfo = options.get(34 /* fontInfo */);\n    _this._lineHeight = options.get(49 /* lineHeight */);\n    _this._spaceWidth = fontInfo.spaceWidth;\n    _this._enabled = options.get(70 /* renderIndentGuides */);\n    _this._activeIndentEnabled = options.get(43 /* highlightActiveIndentGuide */);\n    _this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth;\n    _this._renderResult = null;\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  IndentGuidesOverlay.prototype.dispose = function () {\n    this._context.removeEventHandler(this);\n    this._renderResult = null;\n    _super.prototype.dispose.call(this);\n  };\n  // --- begin event handlers\n  IndentGuidesOverlay.prototype.onConfigurationChanged = function (e) {\n    var options = this._context.configuration.options;\n    var wrappingInfo = options.get(108 /* wrappingInfo */);\n    var fontInfo = options.get(34 /* fontInfo */);\n    this._lineHeight = options.get(49 /* lineHeight */);\n    this._spaceWidth = fontInfo.spaceWidth;\n    this._enabled = options.get(70 /* renderIndentGuides */);\n    this._activeIndentEnabled = options.get(43 /* highlightActiveIndentGuide */);\n    this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth;\n    return true;\n  };\n  IndentGuidesOverlay.prototype.onCursorStateChanged = function (e) {\n    var selection = e.selections[0];\n    var newPrimaryLineNumber = selection.isEmpty() ? selection.positionLineNumber : 0;\n    if (this._primaryLineNumber !== newPrimaryLineNumber) {\n      this._primaryLineNumber = newPrimaryLineNumber;\n      return true;\n    }\n    return false;\n  };\n  IndentGuidesOverlay.prototype.onDecorationsChanged = function (e) {\n    // true for inline decorations\n    return true;\n  };\n  IndentGuidesOverlay.prototype.onFlushed = function (e) {\n    return true;\n  };\n  IndentGuidesOverlay.prototype.onLinesChanged = function (e) {\n    return true;\n  };\n  IndentGuidesOverlay.prototype.onLinesDeleted = function (e) {\n    return true;\n  };\n  IndentGuidesOverlay.prototype.onLinesInserted = function (e) {\n    return true;\n  };\n  IndentGuidesOverlay.prototype.onScrollChanged = function (e) {\n    return e.scrollTopChanged; // || e.scrollWidthChanged;\n  };\n\n  IndentGuidesOverlay.prototype.onZonesChanged = function (e) {\n    return true;\n  };\n  IndentGuidesOverlay.prototype.onLanguageConfigurationChanged = function (e) {\n    return true;\n  };\n  // --- end event handlers\n  IndentGuidesOverlay.prototype.prepareRender = function (ctx) {\n    if (!this._enabled) {\n      this._renderResult = null;\n      return;\n    }\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    var indentSize = this._context.model.getOptions().indentSize;\n    var indentWidth = indentSize * this._spaceWidth;\n    var scrollWidth = ctx.scrollWidth;\n    var lineHeight = this._lineHeight;\n    var indents = this._context.model.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber);\n    var activeIndentStartLineNumber = 0;\n    var activeIndentEndLineNumber = 0;\n    var activeIndentLevel = 0;\n    if (this._activeIndentEnabled && this._primaryLineNumber) {\n      var activeIndentInfo = this._context.model.getActiveIndentGuide(this._primaryLineNumber, visibleStartLineNumber, visibleEndLineNumber);\n      activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n      activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n      activeIndentLevel = activeIndentInfo.indent;\n    }\n    var output = [];\n    for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      var containsActiveIndentGuide = activeIndentStartLineNumber <= lineNumber && lineNumber <= activeIndentEndLineNumber;\n      var lineIndex = lineNumber - visibleStartLineNumber;\n      var indent = indents[lineIndex];\n      var result = '';\n      if (indent >= 1) {\n        var leftMostVisiblePosition = ctx.visibleRangeForPosition(new Position(lineNumber, 1));\n        var left = leftMostVisiblePosition ? leftMostVisiblePosition.left : 0;\n        for (var i = 1; i <= indent; i++) {\n          var className = containsActiveIndentGuide && i === activeIndentLevel ? 'cigra' : 'cigr';\n          result += \"<div class=\\\"\" + className + \"\\\" style=\\\"left:\" + left + \"px;height:\" + lineHeight + \"px;width:\" + indentWidth + \"px\\\"></div>\";\n          left += indentWidth;\n          if (left > scrollWidth || this._maxIndentLeft > 0 && left > this._maxIndentLeft) {\n            break;\n          }\n        }\n      }\n      output[lineIndex] = result;\n    }\n    this._renderResult = output;\n  };\n  IndentGuidesOverlay.prototype.render = function (startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n    var lineIndex = lineNumber - startLineNumber;\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n    return this._renderResult[lineIndex];\n  };\n  return IndentGuidesOverlay;\n}(DynamicViewOverlay);\nexport { IndentGuidesOverlay };\nregisterThemingParticipant(function (theme, collector) {\n  var editorIndentGuidesColor = theme.getColor(editorIndentGuides);\n  if (editorIndentGuidesColor) {\n    collector.addRule(\".monaco-editor .lines-content .cigr { box-shadow: 1px 0 0 0 \" + editorIndentGuidesColor + \" inset; }\");\n  }\n  var editorActiveIndentGuidesColor = theme.getColor(editorActiveIndentGuides) || editorIndentGuidesColor;\n  if (editorActiveIndentGuidesColor) {\n    collector.addRule(\".monaco-editor .lines-content .cigra { box-shadow: 1px 0 0 0 \" + editorActiveIndentGuidesColor + \" inset; }\");\n  }\n});","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","DynamicViewOverlay","Position","editorActiveIndentGuides","editorIndentGuides","registerThemingParticipant","IndentGuidesOverlay","_super","context","_this","call","_context","_primaryLineNumber","options","configuration","wrappingInfo","get","fontInfo","_lineHeight","_spaceWidth","spaceWidth","_enabled","_activeIndentEnabled","_maxIndentLeft","wrappingColumn","typicalHalfwidthCharacterWidth","_renderResult","addEventHandler","dispose","removeEventHandler","onConfigurationChanged","e","onCursorStateChanged","selection","selections","newPrimaryLineNumber","isEmpty","positionLineNumber","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","onLanguageConfigurationChanged","prepareRender","ctx","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","indentSize","model","getOptions","indentWidth","scrollWidth","lineHeight","indents","getLinesIndentGuides","activeIndentStartLineNumber","activeIndentEndLineNumber","activeIndentLevel","activeIndentInfo","getActiveIndentGuide","indent","output","lineNumber","containsActiveIndentGuide","lineIndex","result","leftMostVisiblePosition","visibleRangeForPosition","left","i","className","render","length","theme","collector","editorIndentGuidesColor","getColor","addRule","editorActiveIndentGuidesColor"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './indentGuides.css';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { editorActiveIndentGuides, editorIndentGuides } from '../../../common/view/editorColorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nvar IndentGuidesOverlay = /** @class */ (function (_super) {\r\n    __extends(IndentGuidesOverlay, _super);\r\n    function IndentGuidesOverlay(context) {\r\n        var _this = _super.call(this) || this;\r\n        _this._context = context;\r\n        _this._primaryLineNumber = 0;\r\n        var options = _this._context.configuration.options;\r\n        var wrappingInfo = options.get(108 /* wrappingInfo */);\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        _this._lineHeight = options.get(49 /* lineHeight */);\r\n        _this._spaceWidth = fontInfo.spaceWidth;\r\n        _this._enabled = options.get(70 /* renderIndentGuides */);\r\n        _this._activeIndentEnabled = options.get(43 /* highlightActiveIndentGuide */);\r\n        _this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\r\n        _this._renderResult = null;\r\n        _this._context.addEventHandler(_this);\r\n        return _this;\r\n    }\r\n    IndentGuidesOverlay.prototype.dispose = function () {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    // --- begin event handlers\r\n    IndentGuidesOverlay.prototype.onConfigurationChanged = function (e) {\r\n        var options = this._context.configuration.options;\r\n        var wrappingInfo = options.get(108 /* wrappingInfo */);\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        this._lineHeight = options.get(49 /* lineHeight */);\r\n        this._spaceWidth = fontInfo.spaceWidth;\r\n        this._enabled = options.get(70 /* renderIndentGuides */);\r\n        this._activeIndentEnabled = options.get(43 /* highlightActiveIndentGuide */);\r\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\r\n        return true;\r\n    };\r\n    IndentGuidesOverlay.prototype.onCursorStateChanged = function (e) {\r\n        var selection = e.selections[0];\r\n        var newPrimaryLineNumber = selection.isEmpty() ? selection.positionLineNumber : 0;\r\n        if (this._primaryLineNumber !== newPrimaryLineNumber) {\r\n            this._primaryLineNumber = newPrimaryLineNumber;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    IndentGuidesOverlay.prototype.onDecorationsChanged = function (e) {\r\n        // true for inline decorations\r\n        return true;\r\n    };\r\n    IndentGuidesOverlay.prototype.onFlushed = function (e) {\r\n        return true;\r\n    };\r\n    IndentGuidesOverlay.prototype.onLinesChanged = function (e) {\r\n        return true;\r\n    };\r\n    IndentGuidesOverlay.prototype.onLinesDeleted = function (e) {\r\n        return true;\r\n    };\r\n    IndentGuidesOverlay.prototype.onLinesInserted = function (e) {\r\n        return true;\r\n    };\r\n    IndentGuidesOverlay.prototype.onScrollChanged = function (e) {\r\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\r\n    };\r\n    IndentGuidesOverlay.prototype.onZonesChanged = function (e) {\r\n        return true;\r\n    };\r\n    IndentGuidesOverlay.prototype.onLanguageConfigurationChanged = function (e) {\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    IndentGuidesOverlay.prototype.prepareRender = function (ctx) {\r\n        if (!this._enabled) {\r\n            this._renderResult = null;\r\n            return;\r\n        }\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        var indentSize = this._context.model.getOptions().indentSize;\r\n        var indentWidth = indentSize * this._spaceWidth;\r\n        var scrollWidth = ctx.scrollWidth;\r\n        var lineHeight = this._lineHeight;\r\n        var indents = this._context.model.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber);\r\n        var activeIndentStartLineNumber = 0;\r\n        var activeIndentEndLineNumber = 0;\r\n        var activeIndentLevel = 0;\r\n        if (this._activeIndentEnabled && this._primaryLineNumber) {\r\n            var activeIndentInfo = this._context.model.getActiveIndentGuide(this._primaryLineNumber, visibleStartLineNumber, visibleEndLineNumber);\r\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\r\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\r\n            activeIndentLevel = activeIndentInfo.indent;\r\n        }\r\n        var output = [];\r\n        for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            var containsActiveIndentGuide = (activeIndentStartLineNumber <= lineNumber && lineNumber <= activeIndentEndLineNumber);\r\n            var lineIndex = lineNumber - visibleStartLineNumber;\r\n            var indent = indents[lineIndex];\r\n            var result = '';\r\n            if (indent >= 1) {\r\n                var leftMostVisiblePosition = ctx.visibleRangeForPosition(new Position(lineNumber, 1));\r\n                var left = leftMostVisiblePosition ? leftMostVisiblePosition.left : 0;\r\n                for (var i = 1; i <= indent; i++) {\r\n                    var className = (containsActiveIndentGuide && i === activeIndentLevel ? 'cigra' : 'cigr');\r\n                    result += \"<div class=\\\"\" + className + \"\\\" style=\\\"left:\" + left + \"px;height:\" + lineHeight + \"px;width:\" + indentWidth + \"px\\\"></div>\";\r\n                    left += indentWidth;\r\n                    if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            output[lineIndex] = result;\r\n        }\r\n        this._renderResult = output;\r\n    };\r\n    IndentGuidesOverlay.prototype.render = function (startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        var lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineIndex];\r\n    };\r\n    return IndentGuidesOverlay;\r\n}(DynamicViewOverlay));\r\nexport { IndentGuidesOverlay };\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var editorIndentGuidesColor = theme.getColor(editorIndentGuides);\r\n    if (editorIndentGuidesColor) {\r\n        collector.addRule(\".monaco-editor .lines-content .cigr { box-shadow: 1px 0 0 0 \" + editorIndentGuidesColor + \" inset; }\");\r\n    }\r\n    var editorActiveIndentGuidesColor = theme.getColor(editorActiveIndentGuides) || editorIndentGuidesColor;\r\n    if (editorActiveIndentGuidesColor) {\r\n        collector.addRule(\".monaco-editor .lines-content .cigra { box-shadow: 1px 0 0 0 \" + editorActiveIndentGuidesColor + \" inset; }\");\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}