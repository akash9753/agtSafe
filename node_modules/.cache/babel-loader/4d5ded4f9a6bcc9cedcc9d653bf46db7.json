{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\Study\\\\StudyConfig\\\\domainConfig.js\";\nimport React, { Component } from 'react';\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper';\nimport { Tree, Breadcrumb, Input, Row, Col, Button, message, Modal } from 'antd';\nimport { showProgress, hideProgress, CallServerPost, errorModal, successModalCallback, PostCallWithZone } from '../../Utility/sharedUtility';\nimport StdDomainList from '../../Standards/cDISCDataStdDomainList.js';\nimport CustomVariableList from './customVariableList';\nimport DomainClassList from './customDomainClassList';\nimport CustomDomainList from './customDomainList';\nvar TreeNode = Tree.TreeNode;\nvar Search = Input.Search;\nvar tabStyle = {\n  width: \"100%\"\n};\nvar rowStyle = {\n  height: \"calc(100vh - 138px)\",\n  paddingBottom: \"10px\"\n};\nvar DomainConfig = /*#__PURE__*/function (_Component) {\n  _inherits(DomainConfig, _Component);\n  var _super = _createSuper(DomainConfig);\n  function DomainConfig() {\n    var _this;\n    _classCallCheck(this, DomainConfig);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      expandedKeys: [\"AllKey\"],\n      autoExpandParent: true,\n      checkedKeys: [],\n      selectedKeys: [],\n      domainTreeData: [],\n      searchValue: '',\n      dataList: [],\n      originalKeys: [],\n      variableList: [],\n      currentTreeNodeObject: null,\n      selectedNode: \"\"\n    };\n    _this.getList = function (props) {\n      Modal.destroyAll();\n      showProgress();\n      var thisObj = _assertThisInitialized(_this);\n      CallServerPost('DomainConfig/GetByStudy', {\n        StudyID: _this.props.study.studyID\n      }).then(function (response) {\n        if (response.status == 1) {\n          var resObj = response.value;\n          var checkedKeysArr = [];\n          var dataListArr = [];\n          var tObj = resObj[\"stdspec\"].domainClassList.map(function (inObj) {\n            dataListArr.push({\n              title: inObj.domainClassName,\n              key: inObj.cdiscDataStdDomainClassID.toString()\n            });\n            return {\n              title: inObj.domainClassName,\n              key: inObj.cdiscDataStdDomainClassID.toString() + \"class\",\n              type: \"class\",\n              children: resObj[\"stdspec\"].domainList.filter(function (fObj) {\n                return fObj.cdiscDataStdDomainClassID == inObj.cdiscDataStdDomainClassID;\n              }).map(function (domaininObj) {\n                dataListArr.push({\n                  title: domaininObj.domain + \" - \" + domaininObj.domainDescription,\n                  key: domaininObj.cdiscDataStdDomainMetadataID.toString()\n                });\n                return {\n                  title: domaininObj.domain + \" - \" + domaininObj.domainDescription,\n                  key: domaininObj.cdiscDataStdDomainMetadataID.toString() + \"domain\",\n                  type: \"domain\",\n                  children: resObj[\"stdspec\"].variableList.filter(function (fObj) {\n                    return fObj.cdiscDataStdDomainMetadataID == domaininObj.cdiscDataStdDomainMetadataID;\n                  }).map(function (varinObj) {\n                    dataListArr.push({\n                      title: varinObj.variableName + \" - \" + varinObj.variableLabel,\n                      key: varinObj.cdiscDataStdDomainMetadataID.toString() + \"_\" + varinObj.cdiscDataStdVariableMetadataID.toString()\n                    });\n                    return {\n                      title: varinObj.variableName + \" - \" + varinObj.variableLabel,\n                      key: inObj.cdiscDataStdDomainClassID.toString() + \"_\" + varinObj.cdiscDataStdDomainMetadataID.toString() + \"_\" + varinObj.cdiscDataStdVariableMetadataID.toString(),\n                      type: \"variable\"\n                    };\n                  })\n                };\n              })\n            };\n          });\n          resObj[\"domainconfig\"].map(function (df) {\n            checkedKeysArr.push(df.cdiscDataStdDomainClassID.toString() + \"_\" + df.cdiscDataStdDomainMetadataID.toString() + \"_\" + df.cdiscDataStdVariableMetadataID.toString());\n          });\n          thisObj.setState({\n            domainTreeData: tObj,\n            checkedKeys: checkedKeysArr,\n            dataList: dataListArr,\n            originalKeys: checkedKeysArr,\n            variableList: resObj[\"domainconfig\"]\n          });\n        } else {}\n        hideProgress();\n      }).catch(function (error) {\n        hideProgress();\n      });\n    };\n    _this.onSearchChange = function (e) {\n      var value = e.target.value;\n      var _this$state = _this.state,\n        domainTreeData = _this$state.domainTreeData,\n        dataList = _this$state.dataList,\n        expandedKeys = _this$state.expandedKeys;\n      if (value.length < 2) {\n        _this.setState({\n          expandedKeys: expandedKeys,\n          searchValue: \"\",\n          autoExpandParent: false\n        });\n      } else {\n        var _expandedKeys = dataList.map(function (item) {\n          if (item.title.indexOf(value) > -1) {\n            return _this.getParentKey(item.key, domainTreeData);\n          }\n          return null;\n        }).filter(function (item, i, self) {\n          return item && self.indexOf(item) === i;\n        });\n        _this.setState({\n          expandedKeys: _expandedKeys,\n          searchValue: value,\n          autoExpandParent: true\n        });\n      }\n    };\n    _this.checkAvailability = function () {\n      var studyObj = JSON.parse(sessionStorage.getItem(\"studyDetails\"));\n      return JSON.parse(sessionStorage.getItem(\"project\")).projectStatus === 5 && studyObj.workflowActivityStatusID !== 15 && studyObj.locked == false;\n    };\n    _this.onCheck = function (checkedKeys, affectedKey) {\n      if (affectedKey && typeof affectedKey === \"object\") {\n        var node = affectedKey.node,\n          checked = affectedKey.checked;\n        var _ref = node ? node : {},\n          props = _ref.props;\n        var eventKey = props.eventKey;\n        if (!checked) {\n          var thisObj = _assertThisInitialized(_this);\n          var values = {\n            \"affectedKey\": eventKey,\n            \"StudyID\": _this.props.study.studyID,\n            \"ProjectID\": _this.props.study.projectID,\n            \"ChangeReason\": \"Domain Treedata unchecked\"\n          };\n          showProgress();\n          PostCallWithZone(\"DomainConfig/CheckforMappingOperations\", values).then(function (responseData) {\n            hideProgress();\n            if (responseData.status == 0) {\n              errorModal(responseData.message);\n              thisObj.setState(function (st) {\n                return {\n                  checkedKeys: st.checkedKeys\n                };\n              });\n            } else {\n              _this.setState({\n                checkedKeys: checkedKeys\n              });\n            }\n          });\n        } else {\n          _this.setState({\n            checkedKeys: checkedKeys\n          });\n        }\n      }\n    };\n    return _this;\n  }\n  _createClass(DomainConfig, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state2 = this.state,\n        searchValue = _this$state2.searchValue,\n        domainTreeData = _this$state2.domainTreeData,\n        expandedKeys = _this$state2.expandedKeys,\n        selectedNode = _this$state2.selectedNode;\n      var renderTreeNodes = function renderTreeNodes(data) {\n        return data.map(function (item) {\n          if (item !== undefined) {\n            var index = item.title.indexOf(searchValue);\n            var beforeStr = item.title.substr(0, index);\n            var afterStr = item.title.substr(index + searchValue.length);\n            var isSearch = searchValue.length >= 2;\n            if (!isSearch || expandedKeys.indexOf(item.key) > -1 || !item.children && index > -1) {\n              var title = index > -1 ? /*#__PURE__*/React.createElement(\"span\", {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 33\n                }\n              }, beforeStr, /*#__PURE__*/React.createElement(\"span\", {\n                style: {\n                  color: '#f50'\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }\n              }, searchValue), afterStr) : /*#__PURE__*/React.createElement(\"span\", {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 33\n                }\n              }, item.title);\n              if (item.children) {\n                return /*#__PURE__*/React.createElement(TreeNode, {\n                  type: item.key.indexOf(\"domain\") >= 0 ? \"domain\" : \"class\",\n                  key: item.key,\n                  title: title,\n                  dataRef: {\n                    key: item.key,\n                    title: item.title\n                  },\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 33\n                  }\n                }, renderTreeNodes(item.children));\n              }\n              return /*#__PURE__*/React.createElement(TreeNode, {\n                type: \"variable\",\n                key: item.key,\n                title: title,\n                dataRef: {\n                  key: item.key,\n                  title: item.title\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 32\n                }\n              });\n            }\n          }\n        });\n      };\n      return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n        className: \"NoPaddingBottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: tabStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: rowStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        style: {\n          height: \"100%\",\n          padding: \"5px\",\n          border: \"1px solid\",\n          borderColor: \"#e5e5e5\"\n        },\n        span: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Search, {\n        style: {\n          marginBottom: 8,\n          width: \"100%\"\n        },\n        placeholder: \"Search\",\n        onChange: this.onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Tree, {\n        style: {\n          height: \"100%\",\n          overflow: \"auto\"\n        },\n        checkable: this.checkAvailability(),\n        onExpand: this.onExpand,\n        expandedKeys: this.state.expandedKeys,\n        autoExpandParent: this.state.autoExpandParent,\n        onCheck: this.onCheck,\n        checkedKeys: this.state.checkedKeys,\n        onSelect: this.onTreeNodeSelect,\n        selectedKeys: this.state.selectedKeys,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TreeNode, {\n        key: \"AllKey\",\n        title: this.props.study.standardText + \" \" + this.props.study.standardVersionText,\n        type: \"root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 33\n        }\n      }, renderTreeNodes(domainTreeData)))), /*#__PURE__*/React.createElement(Col, {\n        span: 18,\n        style: {\n          height: \"100%\",\n          padding: \"5px\",\n          border: \"1px solid\",\n          borderColor: \"#e5e5e5\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n  return DomainConfig;\n}(Component);\nexport { DomainConfig as default };","map":{"version":3,"names":["React","Component","LayoutContentWrapper","Tree","Breadcrumb","Input","Row","Col","Button","message","Modal","showProgress","hideProgress","CallServerPost","errorModal","successModalCallback","PostCallWithZone","StdDomainList","CustomVariableList","DomainClassList","CustomDomainList","TreeNode","Search","tabStyle","width","rowStyle","height","paddingBottom","DomainConfig","state","expandedKeys","autoExpandParent","checkedKeys","selectedKeys","domainTreeData","searchValue","dataList","originalKeys","variableList","currentTreeNodeObject","selectedNode","getList","props","destroyAll","thisObj","StudyID","study","studyID","then","response","status","resObj","value","checkedKeysArr","dataListArr","tObj","domainClassList","map","inObj","push","title","domainClassName","key","cdiscDataStdDomainClassID","toString","type","children","domainList","filter","fObj","domaininObj","domain","domainDescription","cdiscDataStdDomainMetadataID","varinObj","variableName","variableLabel","cdiscDataStdVariableMetadataID","df","setState","catch","error","onSearchChange","e","target","length","item","indexOf","getParentKey","i","self","checkAvailability","studyObj","JSON","parse","sessionStorage","getItem","projectStatus","workflowActivityStatusID","locked","onCheck","affectedKey","node","checked","eventKey","values","projectID","responseData","st","renderTreeNodes","data","undefined","index","beforeStr","substr","afterStr","isSearch","color","padding","border","borderColor","marginBottom","overflow","onExpand","onTreeNodeSelect","standardText","standardVersionText"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/Study/StudyConfig/domainConfig.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper';\r\nimport { Tree, Breadcrumb, Input, Row, Col, Button, message, Modal } from 'antd';\r\nimport {\r\n    showProgress,\r\n    hideProgress,\r\n    CallServerPost,\r\n    errorModal,\r\n    successModalCallback,\r\n    PostCallWithZone\r\n} from '../../Utility/sharedUtility';\r\nimport StdDomainList from '../../Standards/cDISCDataStdDomainList.js';\r\nimport CustomVariableList from './customVariableList';\r\nimport DomainClassList from './customDomainClassList';\r\nimport CustomDomainList from './customDomainList';\r\nconst { TreeNode } = Tree;\r\nconst { Search } = Input;\r\n\r\nconst tabStyle = { width: \"100%\" };\r\nconst rowStyle = { height: \"calc(100vh - 138px)\", paddingBottom: \"10px\" };\r\n\r\nexport default class DomainConfig extends Component {\r\n    state = {\r\n        expandedKeys: [\"AllKey\"],\r\n        autoExpandParent: true,\r\n        checkedKeys: [],\r\n        selectedKeys: [],\r\n        domainTreeData: [],\r\n        searchValue: '',\r\n        dataList: [],\r\n        originalKeys: [],\r\n        variableList: [],\r\n        currentTreeNodeObject: null,\r\n        selectedNode: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getList();\r\n    }\r\n\r\n    getList = (props) => {\r\n        Modal.destroyAll()\r\n        showProgress();\r\n        const thisObj = this;\r\n        CallServerPost('DomainConfig/GetByStudy',\r\n            {\r\n                StudyID: this.props.study.studyID\r\n            })\r\n            .then(function (response) {\r\n                if (response.status == 1) {\r\n                    const resObj = response.value;\r\n                    let checkedKeysArr = [];\r\n                    const dataListArr = [];\r\n                    const tObj = resObj[\"stdspec\"].domainClassList.map(inObj => {\r\n                        dataListArr.push({ title: inObj.domainClassName, key: inObj.cdiscDataStdDomainClassID.toString() });\r\n                        return {\r\n                            title: inObj.domainClassName,\r\n                            key: inObj.cdiscDataStdDomainClassID.toString() + \"class\",\r\n                            type: \"class\",\r\n                            children: resObj[\"stdspec\"].domainList.filter(fObj => fObj.cdiscDataStdDomainClassID == inObj.cdiscDataStdDomainClassID).map(domaininObj => {\r\n                                dataListArr.push({ title: domaininObj.domain + \" - \" + domaininObj.domainDescription, key: domaininObj.cdiscDataStdDomainMetadataID.toString() });\r\n                                return {\r\n                                    title: domaininObj.domain + \" - \" + domaininObj.domainDescription,\r\n                                    key: domaininObj.cdiscDataStdDomainMetadataID.toString() + \"domain\",\r\n                                    type: \"domain\",\r\n                                    children: resObj[\"stdspec\"].variableList.filter(fObj => fObj.cdiscDataStdDomainMetadataID == domaininObj.cdiscDataStdDomainMetadataID).map(varinObj => {\r\n                                        dataListArr.push({\r\n                                            title: varinObj.variableName + \" - \" + varinObj.variableLabel,\r\n                                            key: varinObj.cdiscDataStdDomainMetadataID.toString() + \"_\" + varinObj.cdiscDataStdVariableMetadataID.toString()\r\n                                        });\r\n                                        return {\r\n                                            title: varinObj.variableName + \" - \" + varinObj.variableLabel,\r\n                                            key: inObj.cdiscDataStdDomainClassID.toString() + \"_\" + varinObj.cdiscDataStdDomainMetadataID.toString() + \"_\" + varinObj.cdiscDataStdVariableMetadataID.toString(),\r\n                                            type: \"variable\"\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                    })\r\n\r\n                    resObj[\"domainconfig\"].map(df => {\r\n                        checkedKeysArr.push(df.cdiscDataStdDomainClassID.toString() + \"_\" + df.cdiscDataStdDomainMetadataID.toString() + \"_\" +\r\n                            df.cdiscDataStdVariableMetadataID.toString());\r\n                    });\r\n\r\n                    thisObj.setState({\r\n                        domainTreeData: tObj,\r\n                        checkedKeys: checkedKeysArr,\r\n                        dataList: dataListArr,\r\n                        originalKeys: checkedKeysArr,\r\n                        variableList: resObj[\"domainconfig\"]\r\n                    });\r\n                } else {\r\n                \r\n}\r\n                hideProgress();\r\n            }).catch(error => {\r\n                hideProgress();\r\n            });\r\n    }\r\n\r\n    onSearchChange = e => {\r\n        const { value } = e.target;\r\n        const { domainTreeData, dataList, expandedKeys } = this.state;\r\n        if (value.length < 2) {\r\n            this.setState({\r\n                expandedKeys,\r\n                searchValue: \"\",\r\n                autoExpandParent: false,\r\n            });\r\n        } else {\r\n            const expandedKeys = dataList\r\n                .map(item => {\r\n                    if (item.title.indexOf(value) > -1) {\r\n                        return this.getParentKey(item.key, domainTreeData);\r\n                    }\r\n                    return null;\r\n                })\r\n                .filter((item, i, self) => item && self.indexOf(item) === i);\r\n            this.setState({\r\n                expandedKeys,\r\n                searchValue: value,\r\n                autoExpandParent: true,\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    checkAvailability = () => {\r\n        const studyObj = JSON.parse(sessionStorage.getItem(\"studyDetails\"));\r\n        return (JSON.parse(sessionStorage.getItem(\"project\")).projectStatus === 5\r\n            && studyObj.workflowActivityStatusID !== 15\r\n            && studyObj.locked == false);\r\n    }\r\n\r\n    onCheck = (checkedKeys, affectedKey) => {\r\n        if (affectedKey && typeof affectedKey === \"object\") {\r\n            let { node, checked } = affectedKey;\r\n            let { props } = node ? node : {};\r\n            let { eventKey } = props;\r\n            if (!checked) {\r\n                const thisObj = this;\r\n                const values = {\r\n                    \"affectedKey\": eventKey,\r\n                    \"StudyID\": this.props.study.studyID,\r\n                    \"ProjectID\": this.props.study.projectID,\r\n                    \"ChangeReason\": \"Domain Treedata unchecked\"\r\n                };\r\n                showProgress();\r\n                PostCallWithZone(\"DomainConfig/CheckforMappingOperations\", values).then(responseData => {\r\n                    hideProgress();\r\n                    if (responseData.status == 0) {\r\n                        errorModal(responseData.message);\r\n                        thisObj.setState(st => {\r\n                            return ({ checkedKeys: st.checkedKeys });\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({ checkedKeys });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.setState({ checkedKeys });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { searchValue, domainTreeData, expandedKeys, selectedNode } = this.state;\r\n        const renderTreeNodes = data =>\r\n            data.map(item => {\r\n                if (item !== undefined) {\r\n                    const index = item.title.indexOf(searchValue);\r\n                    const beforeStr = item.title.substr(0, index);\r\n                    const afterStr = item.title.substr(index + searchValue.length);\r\n                    const isSearch = searchValue.length >= 2;\r\n                    if (!isSearch || expandedKeys.indexOf(item.key) > -1 || (!item.children && index > -1)) {\r\n                        const title =\r\n                            index > -1 ? (\r\n                                <span>\r\n                                    {beforeStr}\r\n                                    <span style={{ color: '#f50' }}>{searchValue}</span>\r\n                                    {afterStr}\r\n                                </span>\r\n                            ) : (\r\n                                <span>{item.title}</span>\r\n                            );\r\n                        if (item.children) {\r\n                            return (\r\n                                <TreeNode type={item.key.indexOf(\"domain\") >= 0 ? \"domain\" : \"class\"} key={item.key} title={title} dataRef={{ key: item.key, title: item.title }}>\r\n                                    {renderTreeNodes(item.children)}\r\n                                </TreeNode>\r\n                            );\r\n                        }\r\n                        return <TreeNode type={\"variable\"} key={item.key} title={title} dataRef={{ key: item.key, title: item.title }} />;\r\n                    }\r\n                }\r\n            });\r\n        return (\r\n            <LayoutContentWrapper className=\"NoPaddingBottom\">\r\n                <div style={tabStyle}>\r\n                    <Row style={rowStyle}>\r\n                        <Col style={{ height: \"100%\", padding: \"5px\", border: \"1px solid\", borderColor:\"#e5e5e5\" }} span={6}> {/* Domain Config TreeView */}\r\n                            <Search style={{\r\n                                marginBottom: 8,\r\n                                width: \"100%\"\r\n                            }}\r\n                                placeholder=\"Search\"\r\n                                onChange={this.onSearchChange}\r\n                            />\r\n                            <Tree\r\n                                style={{ height: \"100%\", overflow: \"auto\" }}\r\n                                checkable={this.checkAvailability()}\r\n                                onExpand={this.onExpand}\r\n                                expandedKeys={this.state.expandedKeys}\r\n                                autoExpandParent={this.state.autoExpandParent}\r\n                                onCheck={this.onCheck}\r\n                                checkedKeys={this.state.checkedKeys}\r\n                                onSelect={this.onTreeNodeSelect}\r\n                                selectedKeys={this.state.selectedKeys}\r\n                            >\r\n                                <TreeNode\r\n                                    key={\"AllKey\"}\r\n                                    title={this.props.study.standardText + \" \" + this.props.study.standardVersionText}\r\n                                    type={\"root\"}\r\n                                >\r\n                                    {renderTreeNodes(domainTreeData)}\r\n                                </TreeNode>\r\n\r\n                            </Tree>\r\n                        </Col>\r\n                        <Col span={18} style={{ height: \"100%\", padding: \"5px\", border: \"1px solid\", borderColor: \"#e5e5e5\" }}>{/* Custom Domain Variables */}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </LayoutContentWrapper>\r\n            )\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}