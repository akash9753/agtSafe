{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\agat project\\\\CLientapp\\\\src\\\\containers\\\\DefineOptimize\\\\CodeList\\\\Create.js\";\nimport React, { Component } from 'react';\nimport { Button, Select, Layout, Form, Breadcrumb, Icon, Spin, Tooltip } from 'antd';\nimport LayoutContent from '../../../components/utility/layoutContent';\nimport { CallServerPost, PostCallWithZone, errorModal, successModal, successModalCallback, PostCallWithZoneForDomainCreate, showProgress, hideProgress } from '../../Utility/sharedUtility';\nimport SingleForm from '../../Utility/defineBotForm';\nimport Confirmation from '../confirmation';\nimport { DefineContext } from '../context';\nvar thisObj;\nvar AddCodeList = /*#__PURE__*/function (_Component) {\n  _inherits(AddCodeList, _Component);\n  var _super = _createSuper(AddCodeList);\n  function AddCodeList(props) {\n    var _this;\n    _classCallCheck(this, AddCodeList);\n    _this = _super.call(this, props);\n    _this.getFormFieldList = function () {\n      var node = thisObj.context.node;\n      showProgress();\n      CallServerPost('CodeList/GetCodeListFormData', {\n        FormName: \"CodeList\",\n        ActionName: \"Create\",\n        ID: 0,\n        studyID: JSON.parse(sessionStorage.studyDetails).studyID,\n        StandardName: sessionStorage.standard\n      }).then(function (response) {\n        var result = response.value;\n        if (response.status == 0) {\n          hideProgress();\n          errorModal(response.message);\n          thisObj.props.backToList();\n        } else {\n          thisObj.setState({\n            responseData: {\n              formData: result.formData_codelist,\n              selectOptions: result.selectOptions\n            }\n          });\n\n          //if selected node type is codelist means no need to call and get data from controller\n          if (node.type != \"Codelist\" && node.type == \"CodeListGroupDetails\") {\n            var temp = result.selectOptions.codelistname;\n            var codelist = (temp || []).find(function (x) {\n              return x.keyValue === node.nodeKey;\n            });\n            thisObj.GetCodeListGroupData(codelist.keyValue, {\n              formData: result.formData_codelist,\n              selectOptions: result.selectOptions\n            });\n          } else {\n            hideProgress();\n          }\n        }\n      }).catch(function (error) {\n        hideProgress();\n      });\n    };\n    _this.GetCodeListGroupData = function (key, responseData) {\n      key = key === null ? -1 : key;\n      showProgress();\n      CallServerPost('CodeList/GetCodeListGroupData', {\n        FormName: \"CodeList\",\n        ActionName: \"Create\",\n        ID: key,\n        studyID: JSON.parse(sessionStorage.studyDetails).studyID,\n        StandardName: sessionStorage.standard\n      }).then(function (response) {\n        hideProgress();\n        if (response.status == 1) {\n          if (responseData != undefined) {\n            thisObj.props.form.setFieldsValue({\n              \"CodeListName\": key\n            });\n          }\n          if (response.value) {\n            var CodeList = responseData.formData;\n\n            // if CodeListType === \"CodeListItem\" ? enable Translated Text(Decoded Value) else disable \n\n            if (response.value[\"CodeListType\"] === \"CodeListItem\" && CodeList.find(function (x) {\n              return x.attributeName === \"TranslatedText\";\n            })) {\n              if (responseData.formData.find(function (x) {\n                return x.attributeName === \"TranslatedText\";\n              })) {\n                responseData.formData.find(function (x) {\n                  return x.attributeName === \"TranslatedText\";\n                }).editable = true;\n                responseData.formData.find(function (x) {\n                  return x.attributeName === \"TranslatedText\";\n                }).inputRequirementID = 8;\n                responseData.formData.find(function (x) {\n                  return x.attributeName === \"TranslatedText\";\n                }).inputRequirementText = \"Mandatory\";\n              }\n            } else if (CodeList.find(function (x) {\n              return x.attributeName === \"TranslatedText\";\n            })) {\n              if (responseData.formData.find(function (x) {\n                return x.attributeName === \"TranslatedText\";\n              })) {\n                responseData.formData.find(function (x) {\n                  return x.attributeName === \"TranslatedText\";\n                }).editable = false;\n                responseData.formData.find(function (x) {\n                  return x.attributeName === \"TranslatedText\";\n                }).inputRequirementID = 9;\n                responseData.formData.find(function (x) {\n                  return x.attributeName === \"TranslatedText\";\n                }).inputRequirementText = \"Optional\";\n              }\n            }\n            thisObj.props.form.setFieldsValue(response.value);\n          }\n        }\n\n        //    hideProgress();\n      }).catch(function (error) {\n        hideProgress();\n      });\n    };\n    _this.Cancel = function () {\n      thisObj.setState({\n        readOnly: true,\n        loading: true,\n        display: \"flex\"\n      });\n      thisObj.props.refresh(thisObj.props.directClick);\n    };\n    _this.ConfirmationCancel = function (e) {\n      thisObj.props.form.resetFields([\"Change Reason\"]);\n      thisObj.setState({\n        confirmation: false\n      });\n    };\n    _this.handleValidate = function (e) {\n      e.preventDefault();\n      var thisObj = _assertThisInitialized(_this);\n      var elementID = 0;\n      thisObj.props.form.validateFields(function (err, values) {\n        if (!err) {\n          if (thisObj.props.action == \"Update\") {\n            thisObj.setState({\n              confirmation: true,\n              validValues: values\n            });\n          } else {\n            thisObj.handleUpdate(values);\n          }\n        }\n      });\n    };\n    _this.handleUpdate = function (data) {\n      var thisObj = _assertThisInitialized(_this);\n      var validValues = thisObj.props.action == \"Update\" ? thisObj.state.validValues : data;\n      //thisObj.setState({popupLoading: true});\n      _this.setState({\n        popupLoading: true\n      });\n      thisObj.state.responseData.formData.forEach(function (key, index) {\n        var fieldName = key[\"displayName\"].replace(/ /g, \"\");\n        if (key[\"defaultValue\"] == \"\" || key[\"defaultValue\"] == null) {\n          if (validValues[fieldName] != \"\" && validValues[fieldName] != null) {\n            key[\"changed\"] = true;\n          }\n        } else if (validValues[fieldName] != key[\"defaultValue\"]) {\n          key[\"changed\"] = true;\n        }\n        key[\"defineVersionID\"] = JSON.parse(sessionStorage.studyDetails).defineOutputType;\n        key[\"studyID\"] = JSON.parse(sessionStorage.studyDetails).studyID;\n        key[\"defaultValue\"] = validValues[fieldName] != null && validValues[fieldName] != \"\" ? validValues[fieldName].toString() : validValues[fieldName];\n        key[\"timeZone\"] = \"IST\";\n        if (thisObj.props.action == \"Update\") {\n          key[\"changeReason\"] = data;\n        } else {\n          if (fieldName == \"CodeListName\") {\n            key.id = validValues[fieldName];\n          }\n        }\n        key[\"updatedBy\"] = JSON.parse(sessionStorage.userProfile).userID;\n      });\n      var url = thisObj.props.action == \"Update\" ? \"CodeList/UpdateCodeListData\" : \"CodeList/CreateCodeListData\";\n      showProgress();\n      PostCallWithZoneForDomainCreate(url, thisObj.state.responseData.formData).then(function (response) {\n        hideProgress();\n        var responseData = response;\n        if (responseData.status == 0) {\n          errorModal(responseData.message);\n        } else {\n          thisObj.setState({\n            popupLoading: false,\n            confirmation: false\n          });\n          successModalCallback(responseData.message, function () {\n            thisObj.props.treeref();\n            thisObj.props.refresh();\n          });\n        }\n      }).catch(function (error) {\n        return error;\n      });\n    };\n    _this.handleReadOnlyToSave = function () {\n      thisObj.setState({\n        readOnly: false\n      });\n    };\n    _this.handleSaveToReadOnly = function () {\n      thisObj.props.form.resetFields();\n      thisObj.setState({\n        readOnly: true,\n        show: false,\n        loading: true,\n        display: \"flex\",\n        responseData: {\n          formData: {}\n        }\n      });\n      thisObj.getFormFieldList(thisObj.props);\n    };\n    _this.state = {\n      loading: true,\n      //current page field list\n      responseData: {\n        formData: {}\n      },\n      validValues: [],\n      confirmation: false,\n      readOnly: true\n    };\n    thisObj = _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(AddCodeList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      thisObj.getFormFieldList();\n    }\n    //fn to get the list\n  }, {\n    key: \"render\",\n    value: function render() {\n      var responseData = this.state.responseData;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var defineActivityWorkflowStatus = this.props.defineActivityWorkflowStatus;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, Object.keys(responseData.formData).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ion-clipboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 37\n        }\n      }, \" Codelist\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 33\n        }\n      }, \"Add\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          overflow: \"auto\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(SingleForm, {\n        defineActivityWorkflowStatus: defineActivityWorkflowStatus,\n        property: this,\n        props: this,\n        responseData: responseData,\n        getFieldDecorator: getFieldDecorator,\n        handleSubmit: this.handleValidate,\n        handleCancel: this.props.backToList,\n        isStudyLock: this.props.isStudyLock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 37\n        }\n      }))));\n    }\n  }]);\n  return AddCodeList;\n}(Component);\nAddCodeList.contextType = DefineContext;\nvar WrappedApp = Form.create()(AddCodeList);\nexport default WrappedApp;","map":{"version":3,"names":["React","Component","Button","Select","Layout","Form","Breadcrumb","Icon","Spin","Tooltip","LayoutContent","CallServerPost","PostCallWithZone","errorModal","successModal","successModalCallback","PostCallWithZoneForDomainCreate","showProgress","hideProgress","SingleForm","Confirmation","DefineContext","thisObj","AddCodeList","props","getFormFieldList","node","context","FormName","ActionName","ID","studyID","JSON","parse","sessionStorage","studyDetails","StandardName","standard","then","response","result","value","status","message","backToList","setState","responseData","formData","formData_codelist","selectOptions","type","temp","codelistname","codelist","find","x","keyValue","nodeKey","GetCodeListGroupData","catch","error","key","undefined","form","setFieldsValue","CodeList","attributeName","editable","inputRequirementID","inputRequirementText","Cancel","readOnly","loading","display","refresh","directClick","ConfirmationCancel","e","resetFields","confirmation","handleValidate","preventDefault","elementID","validateFields","err","values","action","validValues","handleUpdate","data","state","popupLoading","forEach","index","fieldName","replace","defineOutputType","toString","id","userProfile","userID","url","treeref","handleReadOnlyToSave","handleSaveToReadOnly","show","getFieldDecorator","defineActivityWorkflowStatus","height","width","Object","keys","length","flexDirection","overflow","isStudyLock","contextType","WrappedApp","create"],"sources":["C:/Users/akash/Desktop/agat project/CLientapp/src/containers/DefineOptimize/CodeList/Create.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Select, Layout, Form, Breadcrumb, Icon, Spin, Tooltip } from 'antd';\r\nimport LayoutContent from '../../../components/utility/layoutContent';\r\nimport { CallServerPost, PostCallWithZone, errorModal, successModal, successModalCallback, PostCallWithZoneForDomainCreate, showProgress, hideProgress } from '../../Utility/sharedUtility';\r\nimport SingleForm from '../../Utility/defineBotForm';\r\nimport Confirmation from '../confirmation';\r\nimport { DefineContext } from '../context';\r\n\r\n\r\n\r\nvar thisObj;\r\n\r\n\r\nclass AddCodeList extends Component\r\n{\r\n    static contextType = DefineContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            loading: true,\r\n            //current page field list\r\n            responseData: {\r\n                formData: {},\r\n            },\r\n\r\n            validValues: [],\r\n\r\n            confirmation: false,\r\n            readOnly: true\r\n\r\n        }\r\n\r\n        thisObj = this;\r\n\r\n       \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        thisObj.getFormFieldList();\r\n    }\r\n    //fn to get the list\r\n    getFormFieldList = () =>\r\n    {\r\n         let { node } = thisObj.context;\r\n       \r\n\r\n        showProgress();\r\n        CallServerPost('CodeList/GetCodeListFormData',\r\n            {\r\n                FormName: \"CodeList\",\r\n                ActionName: \"Create\",\r\n                ID: 0,\r\n                studyID: JSON.parse(sessionStorage.studyDetails).studyID,\r\n                StandardName: sessionStorage.standard\r\n            }).then(\r\n                function (response) {\r\n\r\n                    var result = response.value;\r\n                    if (response.status == 0)\r\n                    {\r\n                        hideProgress();\r\n                        errorModal(response.message);\r\n                        thisObj.props.backToList();\r\n                    }\r\n                    else\r\n                    {\r\n                        thisObj.setState({\r\n                            responseData: { formData: result.formData_codelist, selectOptions: result.selectOptions }\r\n                        });\r\n\r\n                        //if selected node type is codelist means no need to call and get data from controller\r\n                        if (node.type != \"Codelist\" && node.type == \"CodeListGroupDetails\")\r\n                        {\r\n                            let temp = result.selectOptions.codelistname;\r\n\r\n                            let codelist = (temp || []).find(x => x.keyValue === node.nodeKey);\r\n                            thisObj.GetCodeListGroupData(codelist.keyValue, ({ formData: result.formData_codelist, selectOptions: result.selectOptions }));\r\n                        }\r\n                        else\r\n                        {\r\n                           \r\n                            hideProgress();\r\n                        }\r\n                        \r\n                    }\r\n                }).catch(error => {\r\n\r\n                    hideProgress()\r\n                });\r\n    }\r\n\r\n    //fn for GetCodeListGroupData\r\n    GetCodeListGroupData = (key, responseData) =>\r\n    {\r\n        key = (key === null) ? -1 : key;\r\n\r\n        showProgress();\r\n        CallServerPost('CodeList/GetCodeListGroupData',\r\n            {\r\n                FormName: \"CodeList\",\r\n                ActionName: \"Create\",\r\n                ID: key,\r\n                studyID: JSON.parse(sessionStorage.studyDetails).studyID,\r\n                StandardName: sessionStorage.standard\r\n            }).then(\r\n                function (response)\r\n                {\r\n                    hideProgress();\r\n\r\n\r\n                    if (response.status == 1)\r\n                    {\r\n                        if (responseData != undefined)\r\n                        {\r\n                           \r\n                            thisObj.props.form.setFieldsValue({ \"CodeListName\": key });\r\n                        }\r\n\r\n                        if (response.value)\r\n                        {\r\n\r\n                            let CodeList = responseData.formData;\r\n\r\n                            // if CodeListType === \"CodeListItem\" ? enable Translated Text(Decoded Value) else disable \r\n\r\n                            if (response.value[\"CodeListType\"] === \"CodeListItem\" &&\r\n                                CodeList.find(x => x.attributeName === \"TranslatedText\"))\r\n                            {\r\n                                if (responseData.formData.find(x => x.attributeName === \"TranslatedText\"))\r\n                                {\r\n                                    responseData.formData.find(x => x.attributeName === \"TranslatedText\").editable = true;\r\n                                    responseData.formData.find(x => x.attributeName === \"TranslatedText\").inputRequirementID = 8;\r\n                                    responseData.formData.find(x => x.attributeName === \"TranslatedText\").inputRequirementText = \"Mandatory\";\r\n                                }\r\n\r\n                            }\r\n                            else if (CodeList.find(x => x.attributeName === \"TranslatedText\"))\r\n                            {\r\n                               \r\n                                if (responseData.formData.find(x => x.attributeName === \"TranslatedText\"))\r\n                                {\r\n                                    responseData.formData.find(x => x.attributeName === \"TranslatedText\").editable = false;\r\n                                    responseData.formData.find(x => x.attributeName === \"TranslatedText\").inputRequirementID = 9;\r\n                                    responseData.formData.find(x => x.attributeName === \"TranslatedText\").inputRequirementText = \"Optional\";\r\n                                }\r\n                            }\r\n                            thisObj.props.form.setFieldsValue(response.value);\r\n                           \r\n                        }\r\n                    }\r\n                    \r\n                    //    hideProgress();\r\n                }).catch(error => {\r\n                    hideProgress();\r\n                });\r\n        \r\n    }\r\n\r\n    //fn for Domain Cancel\r\n    Cancel = () => {\r\n        thisObj.setState({ readOnly: true, loading: true, display: \"flex\" });\r\n        thisObj.props.refresh(thisObj.props.directClick);\r\n    }\r\n\r\n    //Cancel confirmation popup\r\n    ConfirmationCancel = (e) => {\r\n        thisObj.props.form.resetFields([\"Change Reason\"])\r\n        thisObj.setState({ confirmation: false })\r\n    }\r\n\r\n    //Validate the current page fields\r\n    handleValidate = (e) => {\r\n        e.preventDefault();\r\n        const thisObj = this;\r\n        var elementID = 0;\r\n        thisObj.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                if (thisObj.props.action == \"Update\") {\r\n                    thisObj.setState({ confirmation: true, validValues: values })\r\n                }\r\n                else {\r\n                    thisObj.handleUpdate(values);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //fn for Domain Create\r\n    handleUpdate = (data) => {\r\n\r\n\r\n        const thisObj = this;\r\n\r\n        var validValues = (thisObj.props.action == \"Update\") ? thisObj.state.validValues : data;\r\n        //thisObj.setState({popupLoading: true});\r\n        this.setState({ popupLoading: true })\r\n\r\n        thisObj.state.responseData.formData.forEach(function (key, index) {\r\n            const fieldName = key[\"displayName\"].replace(/ /g, \"\");\r\n\r\n\r\n            if (key[\"defaultValue\"] == \"\" || key[\"defaultValue\"] == null) {\r\n                if (validValues[fieldName] != \"\" && validValues[fieldName] != null) {\r\n                    key[\"changed\"] = true;\r\n                }\r\n            }\r\n            else if (validValues[fieldName] != key[\"defaultValue\"]) {\r\n                key[\"changed\"] = true;\r\n            }\r\n\r\n\r\n            key[\"defineVersionID\"] = JSON.parse(sessionStorage.studyDetails).defineOutputType;\r\n            key[\"studyID\"] = JSON.parse(sessionStorage.studyDetails).studyID;\r\n            key[\"defaultValue\"] = (validValues[fieldName] != null && validValues[fieldName] != \"\") ? validValues[fieldName].toString() : validValues[fieldName];\r\n            key[\"timeZone\"] = \"IST\";\r\n            if (thisObj.props.action == \"Update\") {\r\n                key[\"changeReason\"] = data;\r\n            } else {\r\n                if (fieldName == \"CodeListName\") {\r\n                    key.id = validValues[fieldName];\r\n                }\r\n            }\r\n            key[\"updatedBy\"] = JSON.parse(sessionStorage.userProfile).userID;\r\n        })\r\n\r\n        var url = (thisObj.props.action == \"Update\") ? \"CodeList/UpdateCodeListData\" : \"CodeList/CreateCodeListData\";\r\n        showProgress();\r\n\r\n        PostCallWithZoneForDomainCreate(url, thisObj.state.responseData.formData).then(\r\n            function (response)\r\n            {\r\n                hideProgress();\r\n                const responseData = response;\r\n                if (responseData.status == 0) {\r\n                    errorModal(responseData.message);\r\n                }\r\n                else {\r\n                    thisObj.setState({ popupLoading: false, confirmation: false });\r\n                    successModalCallback(responseData.message, () => { thisObj.props.treeref(); thisObj.props.refresh(); });\r\n                }\r\n            }).catch(error => error);\r\n\r\n    }\r\n\r\n    handleReadOnlyToSave = () => {\r\n        thisObj.setState({ readOnly: false });\r\n    }\r\n    handleSaveToReadOnly = () => {\r\n\r\n        thisObj.props.form.resetFields();\r\n        thisObj.setState({ readOnly: true, show: false, loading: true, display: \"flex\", responseData: { formData: {} } });\r\n        thisObj.getFormFieldList(thisObj.props);\r\n\r\n    }\r\n    render() {\r\n        var { responseData } = this.state;\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { defineActivityWorkflowStatus } = this.props;\r\n\r\n\r\n\r\n        return (\r\n            <div style={{ height: \"100%\", width: \"100%\" }}>\r\n                {\r\n                    (Object.keys(responseData.formData).length > 0) && (\r\n                        <div style={{ height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>\r\n                                    <i className=\"ion-clipboard\" />\r\n                                    <span> Codelist</span>\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item>{\"Add\"}\r\n                                    \r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <div style={{ overflow: \"auto\", height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                {\r\n                                    <SingleForm\r\n                                        defineActivityWorkflowStatus={defineActivityWorkflowStatus}\r\n                                        property={this} props={this} responseData={responseData}\r\n                                        getFieldDecorator={getFieldDecorator}\r\n                                        handleSubmit={this.handleValidate}\r\n                                        handleCancel={this.props.backToList} isStudyLock={this.props.isStudyLock} />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst WrappedApp = Form.create()(AddCodeList);\r\nexport default WrappedApp;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}